Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    CLASE
    CONJUNTOS
    FUNCION
    FUTURE
    IGUAL
    INPUT
    LISTA
    NOT
    NS
    NUEVO
    STR
    VECTOR

Grammar

Rule 0     S' -> instrucciones
Rule 1     instrucciones -> asignacion
Rule 2     instrucciones -> impresion
Rule 3     instrucciones -> operacion_aritmetica
Rule 4     instrucciones -> conjuntos
Rule 5     instrucciones -> vector
Rule 6     instrucciones -> mapa
Rule 7     instrucciones -> if
Rule 8     instrucciones -> do
Rule 9     instrucciones -> if_do
Rule 10    instrucciones -> when
Rule 11    instrucciones -> defn
Rule 12    instrucciones -> defn_with_return
Rule 13    instrucciones -> operacionesLogicas
Rule 14    instrucciones -> sentenciaLoopRecur
Rule 15    instrucciones -> cond_
Rule 16    instrucciones -> cond_else
Rule 17    instrucciones -> doseq
Rule 18    instrucciones -> case_expression
Rule 19    instrucciones -> lista
Rule 20    instrucciones -> sentencia_booleana
Rule 21    instrucciones -> function
Rule 22    instrucciones -> dotimes
Rule 23    instrucciones -> ciclo
Rule 24    instrucciones -> valor
Rule 25    dato -> STRING
Rule 26    dato -> CHAR
Rule 27    dato -> ENTERO
Rule 28    dato -> FLOTANTE
Rule 29    dato -> BOOLEAN
Rule 30    dato -> VARIABLE
Rule 31    valor -> ENTERO
Rule 32    valor -> FLOTANTE
Rule 33    valor -> BOOLEAN
Rule 34    operador_comparadores -> COMPARA_IGUAL
Rule 35    operador_comparadores -> MENORQUE
Rule 36    operador_comparadores -> MAYORQUE
Rule 37    operador_comparadores -> MAYORIGUALQUE
Rule 38    operador_comparadores -> MENORIGUALQUE
Rule 39    operador_comparadores -> DIFERENTE
Rule 40    operador_aritmetico -> MAS
Rule 41    operador_aritmetico -> MENOS
Rule 42    operador_aritmetico -> PRODUCTO
Rule 43    operador_aritmetico -> DIVISION
Rule 44    asignacion -> LPAREN DEFICION VARIABLE dato RPAREN
Rule 45    asignacion -> LPAREN LET LCOR VARIABLE dato RCOR RPAREN
Rule 46    sentencia_booleana -> LPAREN operador_comparadores dato dato RPAREN
Rule 47    linecondition -> sentencia_booleana impresion
Rule 48    cond_ -> LPAREN COND linecondition linecondition RPAREN
Rule 49    cond_else -> LPAREN COND linecondition linecondition DOSPUNTOS ELSE impresion RPAREN
Rule 50    case -> dato impresion
Rule 51    case -> dato STRING
Rule 52    case -> dato impresion case
Rule 53    case -> dato STRING case
Rule 54    case_expression -> LPAREN CASE dato case impresion RPAREN
Rule 55    case_expression -> LPAREN CASE dato case DOSPUNTOS ELSE STRING RPAREN
Rule 56    argumentos_lista -> dato
Rule 57    argumentos_lista -> dato argumentos_lista
Rule 58    lista -> LPAREN LIST argumentos_lista RPAREN
Rule 59    description -> STRING
Rule 60    increase -> INCREASE LCOR dato RCOR
Rule 61    argumments -> LCOR argumentos_lista RCOR
Rule 62    body -> instrucciones
Rule 63    recur -> LPAREN RECUR LPAREN INC dato RPAREN RPAREN
Rule 64    internos -> description
Rule 65    internos -> argumments
Rule 66    internos -> body
Rule 67    internos -> increase
Rule 68    internos -> argumments body
Rule 69    internos -> description argumments body
Rule 70    function -> LPAREN DEFFUNCION VARIABLE internos RPAREN
Rule 71    function -> LPAREN DEFFUNCION internos if dato RPAREN
Rule 72    impresion -> LPAREN IMPRIMIR dato RPAREN
Rule 73    vector -> LCOR argumentos_lista RCOR
Rule 74    mapa -> MAPA
Rule 75    if -> IF sentencia_booleana
Rule 76    if -> IF sentencia_booleana recur
Rule 77    if -> LPAREN IF instrucciones body RPAREN
Rule 78    do -> LPAREN DO instrucciones RPAREN
Rule 79    if_do -> LPAREN if do RPAREN
Rule 80    when -> LPAREN WHEN sentencia_booleana body RPAREN
Rule 81    ciclo -> LCOR VARIABLE ENTERO RCOR
Rule 82    dotimes -> LPAREN DOTIMES ciclo body RPAREN
Rule 83    operacionesLogicas -> LPAREN if recur VARIABLE RPAREN RPAREN
Rule 84    operacion_aritmetica -> LPAREN operador_aritmetico dato dato RPAREN
Rule 85    doseq_args -> LCOR dato LPAREN RANGE dato RPAREN RCOR
Rule 86    doseq_args -> LCOR dato conjuntos RCOR
Rule 87    doseq_args -> LCOR dato vector dato vector RCOR
Rule 88    doseq_args -> LCOR vector conjuntos RCOR
Rule 89    doseq_prn -> PRN LPAREN dato RPAREN
Rule 90    doseq_prn -> PRN dato dato
Rule 91    doseq_prn -> PRN dato dato dato
Rule 92    doseq_prn -> PRN operacion_aritmetica
Rule 93    doseq -> LPAREN DOSEQ doseq_args impresion RPAREN
Rule 94    doseq -> LPAREN DOSEQ doseq_args LPAREN doseq_prn RPAREN RPAREN
Rule 95    defn -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN
Rule 96    defn -> LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN
Rule 97    defn_with_return -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN defn_return
Rule 98    defn_with_return -> LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN defn_return
Rule 99    expresionDefnElse -> CASE VARIABLE expresionCase DOSPUNTOS ELSE STRING
Rule 100   defn_return -> LPAREN dato dato RPAREN
Rule 101   expresionCase -> dato STRING
Rule 102   conjuntos -> NUMERAL L_LLAVE expresionConjuntoEnteros R_LLAVE
Rule 103   conjuntos -> NUMERAL L_LLAVE expresionConjuntoDouble R_LLAVE
Rule 104   conjuntos -> NUMERAL L_LLAVE expresionConjuntoString R_LLAVE
Rule 105   sentenciaLoopRecur -> LPAREN LOOP argumments LPAREN if dato RPAREN RPAREN
Rule 106   expresionConjuntoEnteros -> ENTERO
Rule 107   expresionConjuntoEnteros -> ENTERO expresionConjuntoEnteros
Rule 108   expresionConjuntoDouble -> FLOTANTE
Rule 109   expresionConjuntoDouble -> FLOTANTE expresionConjuntoDouble
Rule 110   expresionConjuntoString -> STRING
Rule 111   expresionConjuntoString -> STRING expresionConjuntoString

Terminals, with rules where they appear

BOOLEAN              : 29 33
CASE                 : 54 55 99
CHAR                 : 26
CLASE                : 
COMPARA_IGUAL        : 34
COND                 : 48 49
CONJUNTOS            : 
DEFFUNCION           : 70 71 95 96 97 98
DEFICION             : 44
DIFERENTE            : 39
DIVISION             : 43
DO                   : 78
DOSEQ                : 93 94
DOSPUNTOS            : 49 55 99
DOTIMES              : 82
ELSE                 : 49 55 99
ENTERO               : 27 31 81 106 107
FLOTANTE             : 28 32 108 109
FUNCION              : 
FUTURE               : 
IF                   : 75 76 77
IGUAL                : 
IMPRIMIR             : 72
INC                  : 63
INCREASE             : 60 96 98
INPUT                : 
LCOR                 : 45 60 61 73 81 85 86 87 88 95 96 97 98
LET                  : 45
LIST                 : 58
LISTA                : 
LOOP                 : 105
LPAREN               : 44 45 46 48 49 54 55 58 63 63 70 71 72 77 78 79 80 82 83 84 85 89 93 94 94 95 95 96 97 97 98 100 105 105
L_LLAVE              : 102 103 104
MAPA                 : 74
MAS                  : 40
MAYORIGUALQUE        : 37
MAYORQUE             : 36
MENORIGUALQUE        : 38
MENORQUE             : 35
MENOS                : 41
NOT                  : 
NS                   : 
NUEVO                : 
NUMERAL              : 102 103 104
PRN                  : 89 90 91 92
PRODUCTO             : 42
RANGE                : 85
RCOR                 : 45 60 61 73 81 85 86 87 88 95 96 97 98
RECUR                : 63
RPAREN               : 44 45 46 48 49 54 55 58 63 63 70 71 72 77 78 79 80 82 83 83 84 85 89 93 94 94 95 95 96 97 97 98 100 105 105
R_LLAVE              : 102 103 104
STR                  : 
STRING               : 25 51 53 55 59 99 101 110 111
VARIABLE             : 30 44 45 70 81 83 95 95 96 97 97 98 99
VECTOR               : 
WHEN                 : 80
error                : 

Nonterminals, with rules where they appear

argumentos_lista     : 57 58 61 73
argumments           : 65 68 69 105
asignacion           : 1
body                 : 66 68 69 77 80 82
case                 : 52 53 54 55
case_expression      : 18
ciclo                : 23 82
cond_                : 15
cond_else            : 16
conjuntos            : 4 86 88
dato                 : 44 45 46 46 50 51 52 53 54 55 56 57 60 63 71 72 84 84 85 85 86 87 87 89 90 90 91 91 91 100 100 101 105
defn                 : 11
defn_return          : 97 98
defn_with_return     : 12
description          : 64 69
do                   : 8 79
doseq                : 17
doseq_args           : 93 94
doseq_prn            : 94
dotimes              : 22
expresionCase        : 99
expresionConjuntoDouble : 103 109
expresionConjuntoEnteros : 102 107
expresionConjuntoString : 104 111
expresionDefnElse    : 95 97
function             : 21
if                   : 7 71 79 83 105
if_do                : 9
impresion            : 2 47 49 50 52 54 93
increase             : 67
instrucciones        : 62 77 78 0
internos             : 70 71
linecondition        : 48 48 49 49
lista                : 19
mapa                 : 6
operacion_aritmetica : 3 92
operacionesLogicas   : 13 96 98
operador_aritmetico  : 84
operador_comparadores : 46
recur                : 76 83
sentenciaLoopRecur   : 14
sentencia_booleana   : 20 47 75 76 80
valor                : 24
vector               : 5 87 87 88
when                 : 10

Parsing method: LALR

state 0

    (0) S' -> . instrucciones
    (1) instrucciones -> . asignacion
    (2) instrucciones -> . impresion
    (3) instrucciones -> . operacion_aritmetica
    (4) instrucciones -> . conjuntos
    (5) instrucciones -> . vector
    (6) instrucciones -> . mapa
    (7) instrucciones -> . if
    (8) instrucciones -> . do
    (9) instrucciones -> . if_do
    (10) instrucciones -> . when
    (11) instrucciones -> . defn
    (12) instrucciones -> . defn_with_return
    (13) instrucciones -> . operacionesLogicas
    (14) instrucciones -> . sentenciaLoopRecur
    (15) instrucciones -> . cond_
    (16) instrucciones -> . cond_else
    (17) instrucciones -> . doseq
    (18) instrucciones -> . case_expression
    (19) instrucciones -> . lista
    (20) instrucciones -> . sentencia_booleana
    (21) instrucciones -> . function
    (22) instrucciones -> . dotimes
    (23) instrucciones -> . ciclo
    (24) instrucciones -> . valor
    (44) asignacion -> . LPAREN DEFICION VARIABLE dato RPAREN
    (45) asignacion -> . LPAREN LET LCOR VARIABLE dato RCOR RPAREN
    (72) impresion -> . LPAREN IMPRIMIR dato RPAREN
    (84) operacion_aritmetica -> . LPAREN operador_aritmetico dato dato RPAREN
    (102) conjuntos -> . NUMERAL L_LLAVE expresionConjuntoEnteros R_LLAVE
    (103) conjuntos -> . NUMERAL L_LLAVE expresionConjuntoDouble R_LLAVE
    (104) conjuntos -> . NUMERAL L_LLAVE expresionConjuntoString R_LLAVE
    (73) vector -> . LCOR argumentos_lista RCOR
    (74) mapa -> . MAPA
    (75) if -> . IF sentencia_booleana
    (76) if -> . IF sentencia_booleana recur
    (77) if -> . LPAREN IF instrucciones body RPAREN
    (78) do -> . LPAREN DO instrucciones RPAREN
    (79) if_do -> . LPAREN if do RPAREN
    (80) when -> . LPAREN WHEN sentencia_booleana body RPAREN
    (95) defn -> . LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN
    (96) defn -> . LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN
    (97) defn_with_return -> . LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN defn_return
    (98) defn_with_return -> . LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN defn_return
    (83) operacionesLogicas -> . LPAREN if recur VARIABLE RPAREN RPAREN
    (105) sentenciaLoopRecur -> . LPAREN LOOP argumments LPAREN if dato RPAREN RPAREN
    (48) cond_ -> . LPAREN COND linecondition linecondition RPAREN
    (49) cond_else -> . LPAREN COND linecondition linecondition DOSPUNTOS ELSE impresion RPAREN
    (93) doseq -> . LPAREN DOSEQ doseq_args impresion RPAREN
    (94) doseq -> . LPAREN DOSEQ doseq_args LPAREN doseq_prn RPAREN RPAREN
    (54) case_expression -> . LPAREN CASE dato case impresion RPAREN
    (55) case_expression -> . LPAREN CASE dato case DOSPUNTOS ELSE STRING RPAREN
    (58) lista -> . LPAREN LIST argumentos_lista RPAREN
    (46) sentencia_booleana -> . LPAREN operador_comparadores dato dato RPAREN
    (70) function -> . LPAREN DEFFUNCION VARIABLE internos RPAREN
    (71) function -> . LPAREN DEFFUNCION internos if dato RPAREN
    (82) dotimes -> . LPAREN DOTIMES ciclo body RPAREN
    (81) ciclo -> . LCOR VARIABLE ENTERO RCOR
    (31) valor -> . ENTERO
    (32) valor -> . FLOTANTE
    (33) valor -> . BOOLEAN

    LPAREN          shift and go to state 26
    NUMERAL         shift and go to state 28
    LCOR            shift and go to state 27
    MAPA            shift and go to state 29
    IF              shift and go to state 30
    ENTERO          shift and go to state 31
    FLOTANTE        shift and go to state 32
    BOOLEAN         shift and go to state 33

    instrucciones                  shift and go to state 1
    asignacion                     shift and go to state 2
    impresion                      shift and go to state 3
    operacion_aritmetica           shift and go to state 4
    conjuntos                      shift and go to state 5
    vector                         shift and go to state 6
    mapa                           shift and go to state 7
    if                             shift and go to state 8
    do                             shift and go to state 9
    if_do                          shift and go to state 10
    when                           shift and go to state 11
    defn                           shift and go to state 12
    defn_with_return               shift and go to state 13
    operacionesLogicas             shift and go to state 14
    sentenciaLoopRecur             shift and go to state 15
    cond_                          shift and go to state 16
    cond_else                      shift and go to state 17
    doseq                          shift and go to state 18
    case_expression                shift and go to state 19
    lista                          shift and go to state 20
    sentencia_booleana             shift and go to state 21
    function                       shift and go to state 22
    dotimes                        shift and go to state 23
    ciclo                          shift and go to state 24
    valor                          shift and go to state 25

state 1

    (0) S' -> instrucciones .



state 2

    (1) instrucciones -> asignacion .

    $end            reduce using rule 1 (instrucciones -> asignacion .)
    LPAREN          reduce using rule 1 (instrucciones -> asignacion .)
    NUMERAL         reduce using rule 1 (instrucciones -> asignacion .)
    LCOR            reduce using rule 1 (instrucciones -> asignacion .)
    MAPA            reduce using rule 1 (instrucciones -> asignacion .)
    IF              reduce using rule 1 (instrucciones -> asignacion .)
    ENTERO          reduce using rule 1 (instrucciones -> asignacion .)
    FLOTANTE        reduce using rule 1 (instrucciones -> asignacion .)
    BOOLEAN         reduce using rule 1 (instrucciones -> asignacion .)
    RPAREN          reduce using rule 1 (instrucciones -> asignacion .)


state 3

    (2) instrucciones -> impresion .

    $end            reduce using rule 2 (instrucciones -> impresion .)
    LPAREN          reduce using rule 2 (instrucciones -> impresion .)
    NUMERAL         reduce using rule 2 (instrucciones -> impresion .)
    LCOR            reduce using rule 2 (instrucciones -> impresion .)
    MAPA            reduce using rule 2 (instrucciones -> impresion .)
    IF              reduce using rule 2 (instrucciones -> impresion .)
    ENTERO          reduce using rule 2 (instrucciones -> impresion .)
    FLOTANTE        reduce using rule 2 (instrucciones -> impresion .)
    BOOLEAN         reduce using rule 2 (instrucciones -> impresion .)
    RPAREN          reduce using rule 2 (instrucciones -> impresion .)


state 4

    (3) instrucciones -> operacion_aritmetica .

    $end            reduce using rule 3 (instrucciones -> operacion_aritmetica .)
    LPAREN          reduce using rule 3 (instrucciones -> operacion_aritmetica .)
    NUMERAL         reduce using rule 3 (instrucciones -> operacion_aritmetica .)
    LCOR            reduce using rule 3 (instrucciones -> operacion_aritmetica .)
    MAPA            reduce using rule 3 (instrucciones -> operacion_aritmetica .)
    IF              reduce using rule 3 (instrucciones -> operacion_aritmetica .)
    ENTERO          reduce using rule 3 (instrucciones -> operacion_aritmetica .)
    FLOTANTE        reduce using rule 3 (instrucciones -> operacion_aritmetica .)
    BOOLEAN         reduce using rule 3 (instrucciones -> operacion_aritmetica .)
    RPAREN          reduce using rule 3 (instrucciones -> operacion_aritmetica .)


state 5

    (4) instrucciones -> conjuntos .

    $end            reduce using rule 4 (instrucciones -> conjuntos .)
    LPAREN          reduce using rule 4 (instrucciones -> conjuntos .)
    NUMERAL         reduce using rule 4 (instrucciones -> conjuntos .)
    LCOR            reduce using rule 4 (instrucciones -> conjuntos .)
    MAPA            reduce using rule 4 (instrucciones -> conjuntos .)
    IF              reduce using rule 4 (instrucciones -> conjuntos .)
    ENTERO          reduce using rule 4 (instrucciones -> conjuntos .)
    FLOTANTE        reduce using rule 4 (instrucciones -> conjuntos .)
    BOOLEAN         reduce using rule 4 (instrucciones -> conjuntos .)
    RPAREN          reduce using rule 4 (instrucciones -> conjuntos .)


state 6

    (5) instrucciones -> vector .

    $end            reduce using rule 5 (instrucciones -> vector .)
    LPAREN          reduce using rule 5 (instrucciones -> vector .)
    NUMERAL         reduce using rule 5 (instrucciones -> vector .)
    LCOR            reduce using rule 5 (instrucciones -> vector .)
    MAPA            reduce using rule 5 (instrucciones -> vector .)
    IF              reduce using rule 5 (instrucciones -> vector .)
    ENTERO          reduce using rule 5 (instrucciones -> vector .)
    FLOTANTE        reduce using rule 5 (instrucciones -> vector .)
    BOOLEAN         reduce using rule 5 (instrucciones -> vector .)
    RPAREN          reduce using rule 5 (instrucciones -> vector .)


state 7

    (6) instrucciones -> mapa .

    $end            reduce using rule 6 (instrucciones -> mapa .)
    LPAREN          reduce using rule 6 (instrucciones -> mapa .)
    NUMERAL         reduce using rule 6 (instrucciones -> mapa .)
    LCOR            reduce using rule 6 (instrucciones -> mapa .)
    MAPA            reduce using rule 6 (instrucciones -> mapa .)
    IF              reduce using rule 6 (instrucciones -> mapa .)
    ENTERO          reduce using rule 6 (instrucciones -> mapa .)
    FLOTANTE        reduce using rule 6 (instrucciones -> mapa .)
    BOOLEAN         reduce using rule 6 (instrucciones -> mapa .)
    RPAREN          reduce using rule 6 (instrucciones -> mapa .)


state 8

    (7) instrucciones -> if .

    $end            reduce using rule 7 (instrucciones -> if .)
    LPAREN          reduce using rule 7 (instrucciones -> if .)
    NUMERAL         reduce using rule 7 (instrucciones -> if .)
    LCOR            reduce using rule 7 (instrucciones -> if .)
    MAPA            reduce using rule 7 (instrucciones -> if .)
    IF              reduce using rule 7 (instrucciones -> if .)
    ENTERO          reduce using rule 7 (instrucciones -> if .)
    FLOTANTE        reduce using rule 7 (instrucciones -> if .)
    BOOLEAN         reduce using rule 7 (instrucciones -> if .)
    RPAREN          reduce using rule 7 (instrucciones -> if .)


state 9

    (8) instrucciones -> do .

    $end            reduce using rule 8 (instrucciones -> do .)
    LPAREN          reduce using rule 8 (instrucciones -> do .)
    NUMERAL         reduce using rule 8 (instrucciones -> do .)
    LCOR            reduce using rule 8 (instrucciones -> do .)
    MAPA            reduce using rule 8 (instrucciones -> do .)
    IF              reduce using rule 8 (instrucciones -> do .)
    ENTERO          reduce using rule 8 (instrucciones -> do .)
    FLOTANTE        reduce using rule 8 (instrucciones -> do .)
    BOOLEAN         reduce using rule 8 (instrucciones -> do .)
    RPAREN          reduce using rule 8 (instrucciones -> do .)


state 10

    (9) instrucciones -> if_do .

    $end            reduce using rule 9 (instrucciones -> if_do .)
    LPAREN          reduce using rule 9 (instrucciones -> if_do .)
    NUMERAL         reduce using rule 9 (instrucciones -> if_do .)
    LCOR            reduce using rule 9 (instrucciones -> if_do .)
    MAPA            reduce using rule 9 (instrucciones -> if_do .)
    IF              reduce using rule 9 (instrucciones -> if_do .)
    ENTERO          reduce using rule 9 (instrucciones -> if_do .)
    FLOTANTE        reduce using rule 9 (instrucciones -> if_do .)
    BOOLEAN         reduce using rule 9 (instrucciones -> if_do .)
    RPAREN          reduce using rule 9 (instrucciones -> if_do .)


state 11

    (10) instrucciones -> when .

    $end            reduce using rule 10 (instrucciones -> when .)
    LPAREN          reduce using rule 10 (instrucciones -> when .)
    NUMERAL         reduce using rule 10 (instrucciones -> when .)
    LCOR            reduce using rule 10 (instrucciones -> when .)
    MAPA            reduce using rule 10 (instrucciones -> when .)
    IF              reduce using rule 10 (instrucciones -> when .)
    ENTERO          reduce using rule 10 (instrucciones -> when .)
    FLOTANTE        reduce using rule 10 (instrucciones -> when .)
    BOOLEAN         reduce using rule 10 (instrucciones -> when .)
    RPAREN          reduce using rule 10 (instrucciones -> when .)


state 12

    (11) instrucciones -> defn .

    $end            reduce using rule 11 (instrucciones -> defn .)
    LPAREN          reduce using rule 11 (instrucciones -> defn .)
    NUMERAL         reduce using rule 11 (instrucciones -> defn .)
    LCOR            reduce using rule 11 (instrucciones -> defn .)
    MAPA            reduce using rule 11 (instrucciones -> defn .)
    IF              reduce using rule 11 (instrucciones -> defn .)
    ENTERO          reduce using rule 11 (instrucciones -> defn .)
    FLOTANTE        reduce using rule 11 (instrucciones -> defn .)
    BOOLEAN         reduce using rule 11 (instrucciones -> defn .)
    RPAREN          reduce using rule 11 (instrucciones -> defn .)


state 13

    (12) instrucciones -> defn_with_return .

    $end            reduce using rule 12 (instrucciones -> defn_with_return .)
    LPAREN          reduce using rule 12 (instrucciones -> defn_with_return .)
    NUMERAL         reduce using rule 12 (instrucciones -> defn_with_return .)
    LCOR            reduce using rule 12 (instrucciones -> defn_with_return .)
    MAPA            reduce using rule 12 (instrucciones -> defn_with_return .)
    IF              reduce using rule 12 (instrucciones -> defn_with_return .)
    ENTERO          reduce using rule 12 (instrucciones -> defn_with_return .)
    FLOTANTE        reduce using rule 12 (instrucciones -> defn_with_return .)
    BOOLEAN         reduce using rule 12 (instrucciones -> defn_with_return .)
    RPAREN          reduce using rule 12 (instrucciones -> defn_with_return .)


state 14

    (13) instrucciones -> operacionesLogicas .

    $end            reduce using rule 13 (instrucciones -> operacionesLogicas .)
    LPAREN          reduce using rule 13 (instrucciones -> operacionesLogicas .)
    NUMERAL         reduce using rule 13 (instrucciones -> operacionesLogicas .)
    LCOR            reduce using rule 13 (instrucciones -> operacionesLogicas .)
    MAPA            reduce using rule 13 (instrucciones -> operacionesLogicas .)
    IF              reduce using rule 13 (instrucciones -> operacionesLogicas .)
    ENTERO          reduce using rule 13 (instrucciones -> operacionesLogicas .)
    FLOTANTE        reduce using rule 13 (instrucciones -> operacionesLogicas .)
    BOOLEAN         reduce using rule 13 (instrucciones -> operacionesLogicas .)
    RPAREN          reduce using rule 13 (instrucciones -> operacionesLogicas .)


state 15

    (14) instrucciones -> sentenciaLoopRecur .

    $end            reduce using rule 14 (instrucciones -> sentenciaLoopRecur .)
    LPAREN          reduce using rule 14 (instrucciones -> sentenciaLoopRecur .)
    NUMERAL         reduce using rule 14 (instrucciones -> sentenciaLoopRecur .)
    LCOR            reduce using rule 14 (instrucciones -> sentenciaLoopRecur .)
    MAPA            reduce using rule 14 (instrucciones -> sentenciaLoopRecur .)
    IF              reduce using rule 14 (instrucciones -> sentenciaLoopRecur .)
    ENTERO          reduce using rule 14 (instrucciones -> sentenciaLoopRecur .)
    FLOTANTE        reduce using rule 14 (instrucciones -> sentenciaLoopRecur .)
    BOOLEAN         reduce using rule 14 (instrucciones -> sentenciaLoopRecur .)
    RPAREN          reduce using rule 14 (instrucciones -> sentenciaLoopRecur .)


state 16

    (15) instrucciones -> cond_ .

    $end            reduce using rule 15 (instrucciones -> cond_ .)
    LPAREN          reduce using rule 15 (instrucciones -> cond_ .)
    NUMERAL         reduce using rule 15 (instrucciones -> cond_ .)
    LCOR            reduce using rule 15 (instrucciones -> cond_ .)
    MAPA            reduce using rule 15 (instrucciones -> cond_ .)
    IF              reduce using rule 15 (instrucciones -> cond_ .)
    ENTERO          reduce using rule 15 (instrucciones -> cond_ .)
    FLOTANTE        reduce using rule 15 (instrucciones -> cond_ .)
    BOOLEAN         reduce using rule 15 (instrucciones -> cond_ .)
    RPAREN          reduce using rule 15 (instrucciones -> cond_ .)


state 17

    (16) instrucciones -> cond_else .

    $end            reduce using rule 16 (instrucciones -> cond_else .)
    LPAREN          reduce using rule 16 (instrucciones -> cond_else .)
    NUMERAL         reduce using rule 16 (instrucciones -> cond_else .)
    LCOR            reduce using rule 16 (instrucciones -> cond_else .)
    MAPA            reduce using rule 16 (instrucciones -> cond_else .)
    IF              reduce using rule 16 (instrucciones -> cond_else .)
    ENTERO          reduce using rule 16 (instrucciones -> cond_else .)
    FLOTANTE        reduce using rule 16 (instrucciones -> cond_else .)
    BOOLEAN         reduce using rule 16 (instrucciones -> cond_else .)
    RPAREN          reduce using rule 16 (instrucciones -> cond_else .)


state 18

    (17) instrucciones -> doseq .

    $end            reduce using rule 17 (instrucciones -> doseq .)
    LPAREN          reduce using rule 17 (instrucciones -> doseq .)
    NUMERAL         reduce using rule 17 (instrucciones -> doseq .)
    LCOR            reduce using rule 17 (instrucciones -> doseq .)
    MAPA            reduce using rule 17 (instrucciones -> doseq .)
    IF              reduce using rule 17 (instrucciones -> doseq .)
    ENTERO          reduce using rule 17 (instrucciones -> doseq .)
    FLOTANTE        reduce using rule 17 (instrucciones -> doseq .)
    BOOLEAN         reduce using rule 17 (instrucciones -> doseq .)
    RPAREN          reduce using rule 17 (instrucciones -> doseq .)


state 19

    (18) instrucciones -> case_expression .

    $end            reduce using rule 18 (instrucciones -> case_expression .)
    LPAREN          reduce using rule 18 (instrucciones -> case_expression .)
    NUMERAL         reduce using rule 18 (instrucciones -> case_expression .)
    LCOR            reduce using rule 18 (instrucciones -> case_expression .)
    MAPA            reduce using rule 18 (instrucciones -> case_expression .)
    IF              reduce using rule 18 (instrucciones -> case_expression .)
    ENTERO          reduce using rule 18 (instrucciones -> case_expression .)
    FLOTANTE        reduce using rule 18 (instrucciones -> case_expression .)
    BOOLEAN         reduce using rule 18 (instrucciones -> case_expression .)
    RPAREN          reduce using rule 18 (instrucciones -> case_expression .)


state 20

    (19) instrucciones -> lista .

    $end            reduce using rule 19 (instrucciones -> lista .)
    LPAREN          reduce using rule 19 (instrucciones -> lista .)
    NUMERAL         reduce using rule 19 (instrucciones -> lista .)
    LCOR            reduce using rule 19 (instrucciones -> lista .)
    MAPA            reduce using rule 19 (instrucciones -> lista .)
    IF              reduce using rule 19 (instrucciones -> lista .)
    ENTERO          reduce using rule 19 (instrucciones -> lista .)
    FLOTANTE        reduce using rule 19 (instrucciones -> lista .)
    BOOLEAN         reduce using rule 19 (instrucciones -> lista .)
    RPAREN          reduce using rule 19 (instrucciones -> lista .)


state 21

    (20) instrucciones -> sentencia_booleana .

    $end            reduce using rule 20 (instrucciones -> sentencia_booleana .)
    RPAREN          reduce using rule 20 (instrucciones -> sentencia_booleana .)
    IF              reduce using rule 20 (instrucciones -> sentencia_booleana .)
    LPAREN          reduce using rule 20 (instrucciones -> sentencia_booleana .)
    NUMERAL         reduce using rule 20 (instrucciones -> sentencia_booleana .)
    LCOR            reduce using rule 20 (instrucciones -> sentencia_booleana .)
    MAPA            reduce using rule 20 (instrucciones -> sentencia_booleana .)
    ENTERO          reduce using rule 20 (instrucciones -> sentencia_booleana .)
    FLOTANTE        reduce using rule 20 (instrucciones -> sentencia_booleana .)
    BOOLEAN         reduce using rule 20 (instrucciones -> sentencia_booleana .)


state 22

    (21) instrucciones -> function .

    $end            reduce using rule 21 (instrucciones -> function .)
    LPAREN          reduce using rule 21 (instrucciones -> function .)
    NUMERAL         reduce using rule 21 (instrucciones -> function .)
    LCOR            reduce using rule 21 (instrucciones -> function .)
    MAPA            reduce using rule 21 (instrucciones -> function .)
    IF              reduce using rule 21 (instrucciones -> function .)
    ENTERO          reduce using rule 21 (instrucciones -> function .)
    FLOTANTE        reduce using rule 21 (instrucciones -> function .)
    BOOLEAN         reduce using rule 21 (instrucciones -> function .)
    RPAREN          reduce using rule 21 (instrucciones -> function .)


state 23

    (22) instrucciones -> dotimes .

    $end            reduce using rule 22 (instrucciones -> dotimes .)
    LPAREN          reduce using rule 22 (instrucciones -> dotimes .)
    NUMERAL         reduce using rule 22 (instrucciones -> dotimes .)
    LCOR            reduce using rule 22 (instrucciones -> dotimes .)
    MAPA            reduce using rule 22 (instrucciones -> dotimes .)
    IF              reduce using rule 22 (instrucciones -> dotimes .)
    ENTERO          reduce using rule 22 (instrucciones -> dotimes .)
    FLOTANTE        reduce using rule 22 (instrucciones -> dotimes .)
    BOOLEAN         reduce using rule 22 (instrucciones -> dotimes .)
    RPAREN          reduce using rule 22 (instrucciones -> dotimes .)


state 24

    (23) instrucciones -> ciclo .

    $end            reduce using rule 23 (instrucciones -> ciclo .)
    LPAREN          reduce using rule 23 (instrucciones -> ciclo .)
    NUMERAL         reduce using rule 23 (instrucciones -> ciclo .)
    LCOR            reduce using rule 23 (instrucciones -> ciclo .)
    MAPA            reduce using rule 23 (instrucciones -> ciclo .)
    IF              reduce using rule 23 (instrucciones -> ciclo .)
    ENTERO          reduce using rule 23 (instrucciones -> ciclo .)
    FLOTANTE        reduce using rule 23 (instrucciones -> ciclo .)
    BOOLEAN         reduce using rule 23 (instrucciones -> ciclo .)
    RPAREN          reduce using rule 23 (instrucciones -> ciclo .)


state 25

    (24) instrucciones -> valor .

    $end            reduce using rule 24 (instrucciones -> valor .)
    LPAREN          reduce using rule 24 (instrucciones -> valor .)
    NUMERAL         reduce using rule 24 (instrucciones -> valor .)
    LCOR            reduce using rule 24 (instrucciones -> valor .)
    MAPA            reduce using rule 24 (instrucciones -> valor .)
    IF              reduce using rule 24 (instrucciones -> valor .)
    ENTERO          reduce using rule 24 (instrucciones -> valor .)
    FLOTANTE        reduce using rule 24 (instrucciones -> valor .)
    BOOLEAN         reduce using rule 24 (instrucciones -> valor .)
    RPAREN          reduce using rule 24 (instrucciones -> valor .)


state 26

    (44) asignacion -> LPAREN . DEFICION VARIABLE dato RPAREN
    (45) asignacion -> LPAREN . LET LCOR VARIABLE dato RCOR RPAREN
    (72) impresion -> LPAREN . IMPRIMIR dato RPAREN
    (84) operacion_aritmetica -> LPAREN . operador_aritmetico dato dato RPAREN
    (77) if -> LPAREN . IF instrucciones body RPAREN
    (78) do -> LPAREN . DO instrucciones RPAREN
    (79) if_do -> LPAREN . if do RPAREN
    (80) when -> LPAREN . WHEN sentencia_booleana body RPAREN
    (95) defn -> LPAREN . DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN
    (96) defn -> LPAREN . DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN
    (97) defn_with_return -> LPAREN . DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN defn_return
    (98) defn_with_return -> LPAREN . DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN defn_return
    (83) operacionesLogicas -> LPAREN . if recur VARIABLE RPAREN RPAREN
    (105) sentenciaLoopRecur -> LPAREN . LOOP argumments LPAREN if dato RPAREN RPAREN
    (48) cond_ -> LPAREN . COND linecondition linecondition RPAREN
    (49) cond_else -> LPAREN . COND linecondition linecondition DOSPUNTOS ELSE impresion RPAREN
    (93) doseq -> LPAREN . DOSEQ doseq_args impresion RPAREN
    (94) doseq -> LPAREN . DOSEQ doseq_args LPAREN doseq_prn RPAREN RPAREN
    (54) case_expression -> LPAREN . CASE dato case impresion RPAREN
    (55) case_expression -> LPAREN . CASE dato case DOSPUNTOS ELSE STRING RPAREN
    (58) lista -> LPAREN . LIST argumentos_lista RPAREN
    (46) sentencia_booleana -> LPAREN . operador_comparadores dato dato RPAREN
    (70) function -> LPAREN . DEFFUNCION VARIABLE internos RPAREN
    (71) function -> LPAREN . DEFFUNCION internos if dato RPAREN
    (82) dotimes -> LPAREN . DOTIMES ciclo body RPAREN
    (40) operador_aritmetico -> . MAS
    (41) operador_aritmetico -> . MENOS
    (42) operador_aritmetico -> . PRODUCTO
    (43) operador_aritmetico -> . DIVISION
    (75) if -> . IF sentencia_booleana
    (76) if -> . IF sentencia_booleana recur
    (77) if -> . LPAREN IF instrucciones body RPAREN
    (34) operador_comparadores -> . COMPARA_IGUAL
    (35) operador_comparadores -> . MENORQUE
    (36) operador_comparadores -> . MAYORQUE
    (37) operador_comparadores -> . MAYORIGUALQUE
    (38) operador_comparadores -> . MENORIGUALQUE
    (39) operador_comparadores -> . DIFERENTE

    DEFICION        shift and go to state 35
    LET             shift and go to state 36
    IMPRIMIR        shift and go to state 37
    IF              shift and go to state 39
    DO              shift and go to state 40
    WHEN            shift and go to state 42
    DEFFUNCION      shift and go to state 43
    LOOP            shift and go to state 44
    COND            shift and go to state 45
    DOSEQ           shift and go to state 46
    CASE            shift and go to state 47
    LIST            shift and go to state 48
    DOTIMES         shift and go to state 50
    MAS             shift and go to state 51
    MENOS           shift and go to state 52
    PRODUCTO        shift and go to state 53
    DIVISION        shift and go to state 54
    LPAREN          shift and go to state 34
    COMPARA_IGUAL   shift and go to state 55
    MENORQUE        shift and go to state 56
    MAYORQUE        shift and go to state 57
    MAYORIGUALQUE   shift and go to state 58
    MENORIGUALQUE   shift and go to state 59
    DIFERENTE       shift and go to state 60

    operador_aritmetico            shift and go to state 38
    if                             shift and go to state 41
    operador_comparadores          shift and go to state 49

state 27

    (73) vector -> LCOR . argumentos_lista RCOR
    (81) ciclo -> LCOR . VARIABLE ENTERO RCOR
    (56) argumentos_lista -> . dato
    (57) argumentos_lista -> . dato argumentos_lista
    (25) dato -> . STRING
    (26) dato -> . CHAR
    (27) dato -> . ENTERO
    (28) dato -> . FLOTANTE
    (29) dato -> . BOOLEAN
    (30) dato -> . VARIABLE

    VARIABLE        shift and go to state 62
    STRING          shift and go to state 65
    CHAR            shift and go to state 66
    ENTERO          shift and go to state 63
    FLOTANTE        shift and go to state 67
    BOOLEAN         shift and go to state 68

    argumentos_lista               shift and go to state 61
    dato                           shift and go to state 64

state 28

    (102) conjuntos -> NUMERAL . L_LLAVE expresionConjuntoEnteros R_LLAVE
    (103) conjuntos -> NUMERAL . L_LLAVE expresionConjuntoDouble R_LLAVE
    (104) conjuntos -> NUMERAL . L_LLAVE expresionConjuntoString R_LLAVE

    L_LLAVE         shift and go to state 69


state 29

    (74) mapa -> MAPA .

    $end            reduce using rule 74 (mapa -> MAPA .)
    LPAREN          reduce using rule 74 (mapa -> MAPA .)
    NUMERAL         reduce using rule 74 (mapa -> MAPA .)
    LCOR            reduce using rule 74 (mapa -> MAPA .)
    MAPA            reduce using rule 74 (mapa -> MAPA .)
    IF              reduce using rule 74 (mapa -> MAPA .)
    ENTERO          reduce using rule 74 (mapa -> MAPA .)
    FLOTANTE        reduce using rule 74 (mapa -> MAPA .)
    BOOLEAN         reduce using rule 74 (mapa -> MAPA .)
    RPAREN          reduce using rule 74 (mapa -> MAPA .)


state 30

    (75) if -> IF . sentencia_booleana
    (76) if -> IF . sentencia_booleana recur
    (46) sentencia_booleana -> . LPAREN operador_comparadores dato dato RPAREN

    LPAREN          shift and go to state 71

    sentencia_booleana             shift and go to state 70

state 31

    (31) valor -> ENTERO .

    $end            reduce using rule 31 (valor -> ENTERO .)
    LPAREN          reduce using rule 31 (valor -> ENTERO .)
    NUMERAL         reduce using rule 31 (valor -> ENTERO .)
    LCOR            reduce using rule 31 (valor -> ENTERO .)
    MAPA            reduce using rule 31 (valor -> ENTERO .)
    IF              reduce using rule 31 (valor -> ENTERO .)
    ENTERO          reduce using rule 31 (valor -> ENTERO .)
    FLOTANTE        reduce using rule 31 (valor -> ENTERO .)
    BOOLEAN         reduce using rule 31 (valor -> ENTERO .)
    RPAREN          reduce using rule 31 (valor -> ENTERO .)


state 32

    (32) valor -> FLOTANTE .

    $end            reduce using rule 32 (valor -> FLOTANTE .)
    LPAREN          reduce using rule 32 (valor -> FLOTANTE .)
    NUMERAL         reduce using rule 32 (valor -> FLOTANTE .)
    LCOR            reduce using rule 32 (valor -> FLOTANTE .)
    MAPA            reduce using rule 32 (valor -> FLOTANTE .)
    IF              reduce using rule 32 (valor -> FLOTANTE .)
    ENTERO          reduce using rule 32 (valor -> FLOTANTE .)
    FLOTANTE        reduce using rule 32 (valor -> FLOTANTE .)
    BOOLEAN         reduce using rule 32 (valor -> FLOTANTE .)
    RPAREN          reduce using rule 32 (valor -> FLOTANTE .)


state 33

    (33) valor -> BOOLEAN .

    $end            reduce using rule 33 (valor -> BOOLEAN .)
    LPAREN          reduce using rule 33 (valor -> BOOLEAN .)
    NUMERAL         reduce using rule 33 (valor -> BOOLEAN .)
    LCOR            reduce using rule 33 (valor -> BOOLEAN .)
    MAPA            reduce using rule 33 (valor -> BOOLEAN .)
    IF              reduce using rule 33 (valor -> BOOLEAN .)
    ENTERO          reduce using rule 33 (valor -> BOOLEAN .)
    FLOTANTE        reduce using rule 33 (valor -> BOOLEAN .)
    BOOLEAN         reduce using rule 33 (valor -> BOOLEAN .)
    RPAREN          reduce using rule 33 (valor -> BOOLEAN .)


state 34

    (77) if -> LPAREN . IF instrucciones body RPAREN

    IF              shift and go to state 72


state 35

    (44) asignacion -> LPAREN DEFICION . VARIABLE dato RPAREN

    VARIABLE        shift and go to state 73


state 36

    (45) asignacion -> LPAREN LET . LCOR VARIABLE dato RCOR RPAREN

    LCOR            shift and go to state 74


state 37

    (72) impresion -> LPAREN IMPRIMIR . dato RPAREN
    (25) dato -> . STRING
    (26) dato -> . CHAR
    (27) dato -> . ENTERO
    (28) dato -> . FLOTANTE
    (29) dato -> . BOOLEAN
    (30) dato -> . VARIABLE

    STRING          shift and go to state 65
    CHAR            shift and go to state 66
    ENTERO          shift and go to state 63
    FLOTANTE        shift and go to state 67
    BOOLEAN         shift and go to state 68
    VARIABLE        shift and go to state 76

    dato                           shift and go to state 75

state 38

    (84) operacion_aritmetica -> LPAREN operador_aritmetico . dato dato RPAREN
    (25) dato -> . STRING
    (26) dato -> . CHAR
    (27) dato -> . ENTERO
    (28) dato -> . FLOTANTE
    (29) dato -> . BOOLEAN
    (30) dato -> . VARIABLE

    STRING          shift and go to state 65
    CHAR            shift and go to state 66
    ENTERO          shift and go to state 63
    FLOTANTE        shift and go to state 67
    BOOLEAN         shift and go to state 68
    VARIABLE        shift and go to state 76

    dato                           shift and go to state 77

state 39

    (77) if -> LPAREN IF . instrucciones body RPAREN
    (75) if -> IF . sentencia_booleana
    (76) if -> IF . sentencia_booleana recur
    (1) instrucciones -> . asignacion
    (2) instrucciones -> . impresion
    (3) instrucciones -> . operacion_aritmetica
    (4) instrucciones -> . conjuntos
    (5) instrucciones -> . vector
    (6) instrucciones -> . mapa
    (7) instrucciones -> . if
    (8) instrucciones -> . do
    (9) instrucciones -> . if_do
    (10) instrucciones -> . when
    (11) instrucciones -> . defn
    (12) instrucciones -> . defn_with_return
    (13) instrucciones -> . operacionesLogicas
    (14) instrucciones -> . sentenciaLoopRecur
    (15) instrucciones -> . cond_
    (16) instrucciones -> . cond_else
    (17) instrucciones -> . doseq
    (18) instrucciones -> . case_expression
    (19) instrucciones -> . lista
    (20) instrucciones -> . sentencia_booleana
    (21) instrucciones -> . function
    (22) instrucciones -> . dotimes
    (23) instrucciones -> . ciclo
    (24) instrucciones -> . valor
    (46) sentencia_booleana -> . LPAREN operador_comparadores dato dato RPAREN
    (44) asignacion -> . LPAREN DEFICION VARIABLE dato RPAREN
    (45) asignacion -> . LPAREN LET LCOR VARIABLE dato RCOR RPAREN
    (72) impresion -> . LPAREN IMPRIMIR dato RPAREN
    (84) operacion_aritmetica -> . LPAREN operador_aritmetico dato dato RPAREN
    (102) conjuntos -> . NUMERAL L_LLAVE expresionConjuntoEnteros R_LLAVE
    (103) conjuntos -> . NUMERAL L_LLAVE expresionConjuntoDouble R_LLAVE
    (104) conjuntos -> . NUMERAL L_LLAVE expresionConjuntoString R_LLAVE
    (73) vector -> . LCOR argumentos_lista RCOR
    (74) mapa -> . MAPA
    (75) if -> . IF sentencia_booleana
    (76) if -> . IF sentencia_booleana recur
    (77) if -> . LPAREN IF instrucciones body RPAREN
    (78) do -> . LPAREN DO instrucciones RPAREN
    (79) if_do -> . LPAREN if do RPAREN
    (80) when -> . LPAREN WHEN sentencia_booleana body RPAREN
    (95) defn -> . LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN
    (96) defn -> . LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN
    (97) defn_with_return -> . LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN defn_return
    (98) defn_with_return -> . LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN defn_return
    (83) operacionesLogicas -> . LPAREN if recur VARIABLE RPAREN RPAREN
    (105) sentenciaLoopRecur -> . LPAREN LOOP argumments LPAREN if dato RPAREN RPAREN
    (48) cond_ -> . LPAREN COND linecondition linecondition RPAREN
    (49) cond_else -> . LPAREN COND linecondition linecondition DOSPUNTOS ELSE impresion RPAREN
    (93) doseq -> . LPAREN DOSEQ doseq_args impresion RPAREN
    (94) doseq -> . LPAREN DOSEQ doseq_args LPAREN doseq_prn RPAREN RPAREN
    (54) case_expression -> . LPAREN CASE dato case impresion RPAREN
    (55) case_expression -> . LPAREN CASE dato case DOSPUNTOS ELSE STRING RPAREN
    (58) lista -> . LPAREN LIST argumentos_lista RPAREN
    (70) function -> . LPAREN DEFFUNCION VARIABLE internos RPAREN
    (71) function -> . LPAREN DEFFUNCION internos if dato RPAREN
    (82) dotimes -> . LPAREN DOTIMES ciclo body RPAREN
    (81) ciclo -> . LCOR VARIABLE ENTERO RCOR
    (31) valor -> . ENTERO
    (32) valor -> . FLOTANTE
    (33) valor -> . BOOLEAN

    LPAREN          shift and go to state 78
    NUMERAL         shift and go to state 28
    LCOR            shift and go to state 27
    MAPA            shift and go to state 29
    IF              shift and go to state 30
    ENTERO          shift and go to state 31
    FLOTANTE        shift and go to state 32
    BOOLEAN         shift and go to state 33

    instrucciones                  shift and go to state 79
    sentencia_booleana             shift and go to state 80
    asignacion                     shift and go to state 2
    impresion                      shift and go to state 3
    operacion_aritmetica           shift and go to state 4
    conjuntos                      shift and go to state 5
    vector                         shift and go to state 6
    mapa                           shift and go to state 7
    if                             shift and go to state 8
    do                             shift and go to state 9
    if_do                          shift and go to state 10
    when                           shift and go to state 11
    defn                           shift and go to state 12
    defn_with_return               shift and go to state 13
    operacionesLogicas             shift and go to state 14
    sentenciaLoopRecur             shift and go to state 15
    cond_                          shift and go to state 16
    cond_else                      shift and go to state 17
    doseq                          shift and go to state 18
    case_expression                shift and go to state 19
    lista                          shift and go to state 20
    function                       shift and go to state 22
    dotimes                        shift and go to state 23
    ciclo                          shift and go to state 24
    valor                          shift and go to state 25

state 40

    (78) do -> LPAREN DO . instrucciones RPAREN
    (1) instrucciones -> . asignacion
    (2) instrucciones -> . impresion
    (3) instrucciones -> . operacion_aritmetica
    (4) instrucciones -> . conjuntos
    (5) instrucciones -> . vector
    (6) instrucciones -> . mapa
    (7) instrucciones -> . if
    (8) instrucciones -> . do
    (9) instrucciones -> . if_do
    (10) instrucciones -> . when
    (11) instrucciones -> . defn
    (12) instrucciones -> . defn_with_return
    (13) instrucciones -> . operacionesLogicas
    (14) instrucciones -> . sentenciaLoopRecur
    (15) instrucciones -> . cond_
    (16) instrucciones -> . cond_else
    (17) instrucciones -> . doseq
    (18) instrucciones -> . case_expression
    (19) instrucciones -> . lista
    (20) instrucciones -> . sentencia_booleana
    (21) instrucciones -> . function
    (22) instrucciones -> . dotimes
    (23) instrucciones -> . ciclo
    (24) instrucciones -> . valor
    (44) asignacion -> . LPAREN DEFICION VARIABLE dato RPAREN
    (45) asignacion -> . LPAREN LET LCOR VARIABLE dato RCOR RPAREN
    (72) impresion -> . LPAREN IMPRIMIR dato RPAREN
    (84) operacion_aritmetica -> . LPAREN operador_aritmetico dato dato RPAREN
    (102) conjuntos -> . NUMERAL L_LLAVE expresionConjuntoEnteros R_LLAVE
    (103) conjuntos -> . NUMERAL L_LLAVE expresionConjuntoDouble R_LLAVE
    (104) conjuntos -> . NUMERAL L_LLAVE expresionConjuntoString R_LLAVE
    (73) vector -> . LCOR argumentos_lista RCOR
    (74) mapa -> . MAPA
    (75) if -> . IF sentencia_booleana
    (76) if -> . IF sentencia_booleana recur
    (77) if -> . LPAREN IF instrucciones body RPAREN
    (78) do -> . LPAREN DO instrucciones RPAREN
    (79) if_do -> . LPAREN if do RPAREN
    (80) when -> . LPAREN WHEN sentencia_booleana body RPAREN
    (95) defn -> . LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN
    (96) defn -> . LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN
    (97) defn_with_return -> . LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN defn_return
    (98) defn_with_return -> . LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN defn_return
    (83) operacionesLogicas -> . LPAREN if recur VARIABLE RPAREN RPAREN
    (105) sentenciaLoopRecur -> . LPAREN LOOP argumments LPAREN if dato RPAREN RPAREN
    (48) cond_ -> . LPAREN COND linecondition linecondition RPAREN
    (49) cond_else -> . LPAREN COND linecondition linecondition DOSPUNTOS ELSE impresion RPAREN
    (93) doseq -> . LPAREN DOSEQ doseq_args impresion RPAREN
    (94) doseq -> . LPAREN DOSEQ doseq_args LPAREN doseq_prn RPAREN RPAREN
    (54) case_expression -> . LPAREN CASE dato case impresion RPAREN
    (55) case_expression -> . LPAREN CASE dato case DOSPUNTOS ELSE STRING RPAREN
    (58) lista -> . LPAREN LIST argumentos_lista RPAREN
    (46) sentencia_booleana -> . LPAREN operador_comparadores dato dato RPAREN
    (70) function -> . LPAREN DEFFUNCION VARIABLE internos RPAREN
    (71) function -> . LPAREN DEFFUNCION internos if dato RPAREN
    (82) dotimes -> . LPAREN DOTIMES ciclo body RPAREN
    (81) ciclo -> . LCOR VARIABLE ENTERO RCOR
    (31) valor -> . ENTERO
    (32) valor -> . FLOTANTE
    (33) valor -> . BOOLEAN

    LPAREN          shift and go to state 26
    NUMERAL         shift and go to state 28
    LCOR            shift and go to state 27
    MAPA            shift and go to state 29
    IF              shift and go to state 30
    ENTERO          shift and go to state 31
    FLOTANTE        shift and go to state 32
    BOOLEAN         shift and go to state 33

    instrucciones                  shift and go to state 81
    asignacion                     shift and go to state 2
    impresion                      shift and go to state 3
    operacion_aritmetica           shift and go to state 4
    conjuntos                      shift and go to state 5
    vector                         shift and go to state 6
    mapa                           shift and go to state 7
    if                             shift and go to state 8
    do                             shift and go to state 9
    if_do                          shift and go to state 10
    when                           shift and go to state 11
    defn                           shift and go to state 12
    defn_with_return               shift and go to state 13
    operacionesLogicas             shift and go to state 14
    sentenciaLoopRecur             shift and go to state 15
    cond_                          shift and go to state 16
    cond_else                      shift and go to state 17
    doseq                          shift and go to state 18
    case_expression                shift and go to state 19
    lista                          shift and go to state 20
    sentencia_booleana             shift and go to state 21
    function                       shift and go to state 22
    dotimes                        shift and go to state 23
    ciclo                          shift and go to state 24
    valor                          shift and go to state 25

state 41

    (79) if_do -> LPAREN if . do RPAREN
    (83) operacionesLogicas -> LPAREN if . recur VARIABLE RPAREN RPAREN
    (78) do -> . LPAREN DO instrucciones RPAREN
    (63) recur -> . LPAREN RECUR LPAREN INC dato RPAREN RPAREN

    LPAREN          shift and go to state 82

    do                             shift and go to state 83
    recur                          shift and go to state 84

state 42

    (80) when -> LPAREN WHEN . sentencia_booleana body RPAREN
    (46) sentencia_booleana -> . LPAREN operador_comparadores dato dato RPAREN

    LPAREN          shift and go to state 71

    sentencia_booleana             shift and go to state 85

state 43

    (95) defn -> LPAREN DEFFUNCION . VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN
    (96) defn -> LPAREN DEFFUNCION . INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN
    (97) defn_with_return -> LPAREN DEFFUNCION . VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN defn_return
    (98) defn_with_return -> LPAREN DEFFUNCION . INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN defn_return
    (70) function -> LPAREN DEFFUNCION . VARIABLE internos RPAREN
    (71) function -> LPAREN DEFFUNCION . internos if dato RPAREN
    (64) internos -> . description
    (65) internos -> . argumments
    (66) internos -> . body
    (67) internos -> . increase
    (68) internos -> . argumments body
    (69) internos -> . description argumments body
    (59) description -> . STRING
    (61) argumments -> . LCOR argumentos_lista RCOR
    (62) body -> . instrucciones
    (60) increase -> . INCREASE LCOR dato RCOR
    (1) instrucciones -> . asignacion
    (2) instrucciones -> . impresion
    (3) instrucciones -> . operacion_aritmetica
    (4) instrucciones -> . conjuntos
    (5) instrucciones -> . vector
    (6) instrucciones -> . mapa
    (7) instrucciones -> . if
    (8) instrucciones -> . do
    (9) instrucciones -> . if_do
    (10) instrucciones -> . when
    (11) instrucciones -> . defn
    (12) instrucciones -> . defn_with_return
    (13) instrucciones -> . operacionesLogicas
    (14) instrucciones -> . sentenciaLoopRecur
    (15) instrucciones -> . cond_
    (16) instrucciones -> . cond_else
    (17) instrucciones -> . doseq
    (18) instrucciones -> . case_expression
    (19) instrucciones -> . lista
    (20) instrucciones -> . sentencia_booleana
    (21) instrucciones -> . function
    (22) instrucciones -> . dotimes
    (23) instrucciones -> . ciclo
    (24) instrucciones -> . valor
    (44) asignacion -> . LPAREN DEFICION VARIABLE dato RPAREN
    (45) asignacion -> . LPAREN LET LCOR VARIABLE dato RCOR RPAREN
    (72) impresion -> . LPAREN IMPRIMIR dato RPAREN
    (84) operacion_aritmetica -> . LPAREN operador_aritmetico dato dato RPAREN
    (102) conjuntos -> . NUMERAL L_LLAVE expresionConjuntoEnteros R_LLAVE
    (103) conjuntos -> . NUMERAL L_LLAVE expresionConjuntoDouble R_LLAVE
    (104) conjuntos -> . NUMERAL L_LLAVE expresionConjuntoString R_LLAVE
    (73) vector -> . LCOR argumentos_lista RCOR
    (74) mapa -> . MAPA
    (75) if -> . IF sentencia_booleana
    (76) if -> . IF sentencia_booleana recur
    (77) if -> . LPAREN IF instrucciones body RPAREN
    (78) do -> . LPAREN DO instrucciones RPAREN
    (79) if_do -> . LPAREN if do RPAREN
    (80) when -> . LPAREN WHEN sentencia_booleana body RPAREN
    (95) defn -> . LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN
    (96) defn -> . LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN
    (97) defn_with_return -> . LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN defn_return
    (98) defn_with_return -> . LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN defn_return
    (83) operacionesLogicas -> . LPAREN if recur VARIABLE RPAREN RPAREN
    (105) sentenciaLoopRecur -> . LPAREN LOOP argumments LPAREN if dato RPAREN RPAREN
    (48) cond_ -> . LPAREN COND linecondition linecondition RPAREN
    (49) cond_else -> . LPAREN COND linecondition linecondition DOSPUNTOS ELSE impresion RPAREN
    (93) doseq -> . LPAREN DOSEQ doseq_args impresion RPAREN
    (94) doseq -> . LPAREN DOSEQ doseq_args LPAREN doseq_prn RPAREN RPAREN
    (54) case_expression -> . LPAREN CASE dato case impresion RPAREN
    (55) case_expression -> . LPAREN CASE dato case DOSPUNTOS ELSE STRING RPAREN
    (58) lista -> . LPAREN LIST argumentos_lista RPAREN
    (46) sentencia_booleana -> . LPAREN operador_comparadores dato dato RPAREN
    (70) function -> . LPAREN DEFFUNCION VARIABLE internos RPAREN
    (71) function -> . LPAREN DEFFUNCION internos if dato RPAREN
    (82) dotimes -> . LPAREN DOTIMES ciclo body RPAREN
    (81) ciclo -> . LCOR VARIABLE ENTERO RCOR
    (31) valor -> . ENTERO
    (32) valor -> . FLOTANTE
    (33) valor -> . BOOLEAN

    VARIABLE        shift and go to state 86
    INCREASE        shift and go to state 88
    STRING          shift and go to state 94
    LCOR            shift and go to state 87
    LPAREN          shift and go to state 26
    NUMERAL         shift and go to state 28
    MAPA            shift and go to state 29
    IF              shift and go to state 30
    ENTERO          shift and go to state 31
    FLOTANTE        shift and go to state 32
    BOOLEAN         shift and go to state 33

    operacionesLogicas             shift and go to state 14
    internos                       shift and go to state 89
    if                             shift and go to state 8
    description                    shift and go to state 90
    argumments                     shift and go to state 91
    body                           shift and go to state 92
    increase                       shift and go to state 93
    instrucciones                  shift and go to state 95
    asignacion                     shift and go to state 2
    impresion                      shift and go to state 3
    operacion_aritmetica           shift and go to state 4
    conjuntos                      shift and go to state 5
    vector                         shift and go to state 6
    mapa                           shift and go to state 7
    do                             shift and go to state 9
    if_do                          shift and go to state 10
    when                           shift and go to state 11
    defn                           shift and go to state 12
    defn_with_return               shift and go to state 13
    sentenciaLoopRecur             shift and go to state 15
    cond_                          shift and go to state 16
    cond_else                      shift and go to state 17
    doseq                          shift and go to state 18
    case_expression                shift and go to state 19
    lista                          shift and go to state 20
    sentencia_booleana             shift and go to state 21
    function                       shift and go to state 22
    dotimes                        shift and go to state 23
    ciclo                          shift and go to state 24
    valor                          shift and go to state 25

state 44

    (105) sentenciaLoopRecur -> LPAREN LOOP . argumments LPAREN if dato RPAREN RPAREN
    (61) argumments -> . LCOR argumentos_lista RCOR

    LCOR            shift and go to state 97

    argumments                     shift and go to state 96

state 45

    (48) cond_ -> LPAREN COND . linecondition linecondition RPAREN
    (49) cond_else -> LPAREN COND . linecondition linecondition DOSPUNTOS ELSE impresion RPAREN
    (47) linecondition -> . sentencia_booleana impresion
    (46) sentencia_booleana -> . LPAREN operador_comparadores dato dato RPAREN

    LPAREN          shift and go to state 71

    linecondition                  shift and go to state 98
    sentencia_booleana             shift and go to state 99

state 46

    (93) doseq -> LPAREN DOSEQ . doseq_args impresion RPAREN
    (94) doseq -> LPAREN DOSEQ . doseq_args LPAREN doseq_prn RPAREN RPAREN
    (85) doseq_args -> . LCOR dato LPAREN RANGE dato RPAREN RCOR
    (86) doseq_args -> . LCOR dato conjuntos RCOR
    (87) doseq_args -> . LCOR dato vector dato vector RCOR
    (88) doseq_args -> . LCOR vector conjuntos RCOR

    LCOR            shift and go to state 101

    doseq_args                     shift and go to state 100

state 47

    (54) case_expression -> LPAREN CASE . dato case impresion RPAREN
    (55) case_expression -> LPAREN CASE . dato case DOSPUNTOS ELSE STRING RPAREN
    (25) dato -> . STRING
    (26) dato -> . CHAR
    (27) dato -> . ENTERO
    (28) dato -> . FLOTANTE
    (29) dato -> . BOOLEAN
    (30) dato -> . VARIABLE

    STRING          shift and go to state 65
    CHAR            shift and go to state 66
    ENTERO          shift and go to state 63
    FLOTANTE        shift and go to state 67
    BOOLEAN         shift and go to state 68
    VARIABLE        shift and go to state 76

    dato                           shift and go to state 102

state 48

    (58) lista -> LPAREN LIST . argumentos_lista RPAREN
    (56) argumentos_lista -> . dato
    (57) argumentos_lista -> . dato argumentos_lista
    (25) dato -> . STRING
    (26) dato -> . CHAR
    (27) dato -> . ENTERO
    (28) dato -> . FLOTANTE
    (29) dato -> . BOOLEAN
    (30) dato -> . VARIABLE

    STRING          shift and go to state 65
    CHAR            shift and go to state 66
    ENTERO          shift and go to state 63
    FLOTANTE        shift and go to state 67
    BOOLEAN         shift and go to state 68
    VARIABLE        shift and go to state 76

    argumentos_lista               shift and go to state 103
    dato                           shift and go to state 64

state 49

    (46) sentencia_booleana -> LPAREN operador_comparadores . dato dato RPAREN
    (25) dato -> . STRING
    (26) dato -> . CHAR
    (27) dato -> . ENTERO
    (28) dato -> . FLOTANTE
    (29) dato -> . BOOLEAN
    (30) dato -> . VARIABLE

    STRING          shift and go to state 65
    CHAR            shift and go to state 66
    ENTERO          shift and go to state 63
    FLOTANTE        shift and go to state 67
    BOOLEAN         shift and go to state 68
    VARIABLE        shift and go to state 76

    dato                           shift and go to state 104

state 50

    (82) dotimes -> LPAREN DOTIMES . ciclo body RPAREN
    (81) ciclo -> . LCOR VARIABLE ENTERO RCOR

    LCOR            shift and go to state 106

    ciclo                          shift and go to state 105

state 51

    (40) operador_aritmetico -> MAS .

    STRING          reduce using rule 40 (operador_aritmetico -> MAS .)
    CHAR            reduce using rule 40 (operador_aritmetico -> MAS .)
    ENTERO          reduce using rule 40 (operador_aritmetico -> MAS .)
    FLOTANTE        reduce using rule 40 (operador_aritmetico -> MAS .)
    BOOLEAN         reduce using rule 40 (operador_aritmetico -> MAS .)
    VARIABLE        reduce using rule 40 (operador_aritmetico -> MAS .)


state 52

    (41) operador_aritmetico -> MENOS .

    STRING          reduce using rule 41 (operador_aritmetico -> MENOS .)
    CHAR            reduce using rule 41 (operador_aritmetico -> MENOS .)
    ENTERO          reduce using rule 41 (operador_aritmetico -> MENOS .)
    FLOTANTE        reduce using rule 41 (operador_aritmetico -> MENOS .)
    BOOLEAN         reduce using rule 41 (operador_aritmetico -> MENOS .)
    VARIABLE        reduce using rule 41 (operador_aritmetico -> MENOS .)


state 53

    (42) operador_aritmetico -> PRODUCTO .

    STRING          reduce using rule 42 (operador_aritmetico -> PRODUCTO .)
    CHAR            reduce using rule 42 (operador_aritmetico -> PRODUCTO .)
    ENTERO          reduce using rule 42 (operador_aritmetico -> PRODUCTO .)
    FLOTANTE        reduce using rule 42 (operador_aritmetico -> PRODUCTO .)
    BOOLEAN         reduce using rule 42 (operador_aritmetico -> PRODUCTO .)
    VARIABLE        reduce using rule 42 (operador_aritmetico -> PRODUCTO .)


state 54

    (43) operador_aritmetico -> DIVISION .

    STRING          reduce using rule 43 (operador_aritmetico -> DIVISION .)
    CHAR            reduce using rule 43 (operador_aritmetico -> DIVISION .)
    ENTERO          reduce using rule 43 (operador_aritmetico -> DIVISION .)
    FLOTANTE        reduce using rule 43 (operador_aritmetico -> DIVISION .)
    BOOLEAN         reduce using rule 43 (operador_aritmetico -> DIVISION .)
    VARIABLE        reduce using rule 43 (operador_aritmetico -> DIVISION .)


state 55

    (34) operador_comparadores -> COMPARA_IGUAL .

    STRING          reduce using rule 34 (operador_comparadores -> COMPARA_IGUAL .)
    CHAR            reduce using rule 34 (operador_comparadores -> COMPARA_IGUAL .)
    ENTERO          reduce using rule 34 (operador_comparadores -> COMPARA_IGUAL .)
    FLOTANTE        reduce using rule 34 (operador_comparadores -> COMPARA_IGUAL .)
    BOOLEAN         reduce using rule 34 (operador_comparadores -> COMPARA_IGUAL .)
    VARIABLE        reduce using rule 34 (operador_comparadores -> COMPARA_IGUAL .)


state 56

    (35) operador_comparadores -> MENORQUE .

    STRING          reduce using rule 35 (operador_comparadores -> MENORQUE .)
    CHAR            reduce using rule 35 (operador_comparadores -> MENORQUE .)
    ENTERO          reduce using rule 35 (operador_comparadores -> MENORQUE .)
    FLOTANTE        reduce using rule 35 (operador_comparadores -> MENORQUE .)
    BOOLEAN         reduce using rule 35 (operador_comparadores -> MENORQUE .)
    VARIABLE        reduce using rule 35 (operador_comparadores -> MENORQUE .)


state 57

    (36) operador_comparadores -> MAYORQUE .

    STRING          reduce using rule 36 (operador_comparadores -> MAYORQUE .)
    CHAR            reduce using rule 36 (operador_comparadores -> MAYORQUE .)
    ENTERO          reduce using rule 36 (operador_comparadores -> MAYORQUE .)
    FLOTANTE        reduce using rule 36 (operador_comparadores -> MAYORQUE .)
    BOOLEAN         reduce using rule 36 (operador_comparadores -> MAYORQUE .)
    VARIABLE        reduce using rule 36 (operador_comparadores -> MAYORQUE .)


state 58

    (37) operador_comparadores -> MAYORIGUALQUE .

    STRING          reduce using rule 37 (operador_comparadores -> MAYORIGUALQUE .)
    CHAR            reduce using rule 37 (operador_comparadores -> MAYORIGUALQUE .)
    ENTERO          reduce using rule 37 (operador_comparadores -> MAYORIGUALQUE .)
    FLOTANTE        reduce using rule 37 (operador_comparadores -> MAYORIGUALQUE .)
    BOOLEAN         reduce using rule 37 (operador_comparadores -> MAYORIGUALQUE .)
    VARIABLE        reduce using rule 37 (operador_comparadores -> MAYORIGUALQUE .)


state 59

    (38) operador_comparadores -> MENORIGUALQUE .

    STRING          reduce using rule 38 (operador_comparadores -> MENORIGUALQUE .)
    CHAR            reduce using rule 38 (operador_comparadores -> MENORIGUALQUE .)
    ENTERO          reduce using rule 38 (operador_comparadores -> MENORIGUALQUE .)
    FLOTANTE        reduce using rule 38 (operador_comparadores -> MENORIGUALQUE .)
    BOOLEAN         reduce using rule 38 (operador_comparadores -> MENORIGUALQUE .)
    VARIABLE        reduce using rule 38 (operador_comparadores -> MENORIGUALQUE .)


state 60

    (39) operador_comparadores -> DIFERENTE .

    STRING          reduce using rule 39 (operador_comparadores -> DIFERENTE .)
    CHAR            reduce using rule 39 (operador_comparadores -> DIFERENTE .)
    ENTERO          reduce using rule 39 (operador_comparadores -> DIFERENTE .)
    FLOTANTE        reduce using rule 39 (operador_comparadores -> DIFERENTE .)
    BOOLEAN         reduce using rule 39 (operador_comparadores -> DIFERENTE .)
    VARIABLE        reduce using rule 39 (operador_comparadores -> DIFERENTE .)


state 61

    (73) vector -> LCOR argumentos_lista . RCOR

    RCOR            shift and go to state 107


state 62

    (81) ciclo -> LCOR VARIABLE . ENTERO RCOR
    (30) dato -> VARIABLE .

  ! shift/reduce conflict for ENTERO resolved as shift
    ENTERO          shift and go to state 108
    STRING          reduce using rule 30 (dato -> VARIABLE .)
    CHAR            reduce using rule 30 (dato -> VARIABLE .)
    FLOTANTE        reduce using rule 30 (dato -> VARIABLE .)
    BOOLEAN         reduce using rule 30 (dato -> VARIABLE .)
    VARIABLE        reduce using rule 30 (dato -> VARIABLE .)
    RCOR            reduce using rule 30 (dato -> VARIABLE .)

  ! ENTERO          [ reduce using rule 30 (dato -> VARIABLE .) ]


state 63

    (27) dato -> ENTERO .

    STRING          reduce using rule 27 (dato -> ENTERO .)
    CHAR            reduce using rule 27 (dato -> ENTERO .)
    ENTERO          reduce using rule 27 (dato -> ENTERO .)
    FLOTANTE        reduce using rule 27 (dato -> ENTERO .)
    BOOLEAN         reduce using rule 27 (dato -> ENTERO .)
    VARIABLE        reduce using rule 27 (dato -> ENTERO .)
    RCOR            reduce using rule 27 (dato -> ENTERO .)
    RPAREN          reduce using rule 27 (dato -> ENTERO .)
    LPAREN          reduce using rule 27 (dato -> ENTERO .)
    NUMERAL         reduce using rule 27 (dato -> ENTERO .)
    LCOR            reduce using rule 27 (dato -> ENTERO .)


state 64

    (56) argumentos_lista -> dato .
    (57) argumentos_lista -> dato . argumentos_lista
    (56) argumentos_lista -> . dato
    (57) argumentos_lista -> . dato argumentos_lista
    (25) dato -> . STRING
    (26) dato -> . CHAR
    (27) dato -> . ENTERO
    (28) dato -> . FLOTANTE
    (29) dato -> . BOOLEAN
    (30) dato -> . VARIABLE

    RCOR            reduce using rule 56 (argumentos_lista -> dato .)
    RPAREN          reduce using rule 56 (argumentos_lista -> dato .)
    STRING          shift and go to state 65
    CHAR            shift and go to state 66
    ENTERO          shift and go to state 63
    FLOTANTE        shift and go to state 67
    BOOLEAN         shift and go to state 68
    VARIABLE        shift and go to state 76

    dato                           shift and go to state 64
    argumentos_lista               shift and go to state 109

state 65

    (25) dato -> STRING .

    STRING          reduce using rule 25 (dato -> STRING .)
    CHAR            reduce using rule 25 (dato -> STRING .)
    ENTERO          reduce using rule 25 (dato -> STRING .)
    FLOTANTE        reduce using rule 25 (dato -> STRING .)
    BOOLEAN         reduce using rule 25 (dato -> STRING .)
    VARIABLE        reduce using rule 25 (dato -> STRING .)
    RCOR            reduce using rule 25 (dato -> STRING .)
    RPAREN          reduce using rule 25 (dato -> STRING .)
    LPAREN          reduce using rule 25 (dato -> STRING .)
    NUMERAL         reduce using rule 25 (dato -> STRING .)
    LCOR            reduce using rule 25 (dato -> STRING .)


state 66

    (26) dato -> CHAR .

    STRING          reduce using rule 26 (dato -> CHAR .)
    CHAR            reduce using rule 26 (dato -> CHAR .)
    ENTERO          reduce using rule 26 (dato -> CHAR .)
    FLOTANTE        reduce using rule 26 (dato -> CHAR .)
    BOOLEAN         reduce using rule 26 (dato -> CHAR .)
    VARIABLE        reduce using rule 26 (dato -> CHAR .)
    RCOR            reduce using rule 26 (dato -> CHAR .)
    RPAREN          reduce using rule 26 (dato -> CHAR .)
    LPAREN          reduce using rule 26 (dato -> CHAR .)
    NUMERAL         reduce using rule 26 (dato -> CHAR .)
    LCOR            reduce using rule 26 (dato -> CHAR .)


state 67

    (28) dato -> FLOTANTE .

    STRING          reduce using rule 28 (dato -> FLOTANTE .)
    CHAR            reduce using rule 28 (dato -> FLOTANTE .)
    ENTERO          reduce using rule 28 (dato -> FLOTANTE .)
    FLOTANTE        reduce using rule 28 (dato -> FLOTANTE .)
    BOOLEAN         reduce using rule 28 (dato -> FLOTANTE .)
    VARIABLE        reduce using rule 28 (dato -> FLOTANTE .)
    RCOR            reduce using rule 28 (dato -> FLOTANTE .)
    RPAREN          reduce using rule 28 (dato -> FLOTANTE .)
    LPAREN          reduce using rule 28 (dato -> FLOTANTE .)
    NUMERAL         reduce using rule 28 (dato -> FLOTANTE .)
    LCOR            reduce using rule 28 (dato -> FLOTANTE .)


state 68

    (29) dato -> BOOLEAN .

    STRING          reduce using rule 29 (dato -> BOOLEAN .)
    CHAR            reduce using rule 29 (dato -> BOOLEAN .)
    ENTERO          reduce using rule 29 (dato -> BOOLEAN .)
    FLOTANTE        reduce using rule 29 (dato -> BOOLEAN .)
    BOOLEAN         reduce using rule 29 (dato -> BOOLEAN .)
    VARIABLE        reduce using rule 29 (dato -> BOOLEAN .)
    RCOR            reduce using rule 29 (dato -> BOOLEAN .)
    RPAREN          reduce using rule 29 (dato -> BOOLEAN .)
    LPAREN          reduce using rule 29 (dato -> BOOLEAN .)
    NUMERAL         reduce using rule 29 (dato -> BOOLEAN .)
    LCOR            reduce using rule 29 (dato -> BOOLEAN .)


state 69

    (102) conjuntos -> NUMERAL L_LLAVE . expresionConjuntoEnteros R_LLAVE
    (103) conjuntos -> NUMERAL L_LLAVE . expresionConjuntoDouble R_LLAVE
    (104) conjuntos -> NUMERAL L_LLAVE . expresionConjuntoString R_LLAVE
    (106) expresionConjuntoEnteros -> . ENTERO
    (107) expresionConjuntoEnteros -> . ENTERO expresionConjuntoEnteros
    (108) expresionConjuntoDouble -> . FLOTANTE
    (109) expresionConjuntoDouble -> . FLOTANTE expresionConjuntoDouble
    (110) expresionConjuntoString -> . STRING
    (111) expresionConjuntoString -> . STRING expresionConjuntoString

    ENTERO          shift and go to state 113
    FLOTANTE        shift and go to state 114
    STRING          shift and go to state 115

    expresionConjuntoEnteros       shift and go to state 110
    expresionConjuntoDouble        shift and go to state 111
    expresionConjuntoString        shift and go to state 112

state 70

    (75) if -> IF sentencia_booleana .
    (76) if -> IF sentencia_booleana . recur
    (63) recur -> . LPAREN RECUR LPAREN INC dato RPAREN RPAREN

  ! shift/reduce conflict for LPAREN resolved as shift
    $end            reduce using rule 75 (if -> IF sentencia_booleana .)
    NUMERAL         reduce using rule 75 (if -> IF sentencia_booleana .)
    LCOR            reduce using rule 75 (if -> IF sentencia_booleana .)
    MAPA            reduce using rule 75 (if -> IF sentencia_booleana .)
    IF              reduce using rule 75 (if -> IF sentencia_booleana .)
    ENTERO          reduce using rule 75 (if -> IF sentencia_booleana .)
    FLOTANTE        reduce using rule 75 (if -> IF sentencia_booleana .)
    BOOLEAN         reduce using rule 75 (if -> IF sentencia_booleana .)
    RPAREN          reduce using rule 75 (if -> IF sentencia_booleana .)
    STRING          reduce using rule 75 (if -> IF sentencia_booleana .)
    CHAR            reduce using rule 75 (if -> IF sentencia_booleana .)
    VARIABLE        reduce using rule 75 (if -> IF sentencia_booleana .)
    LPAREN          shift and go to state 117

  ! LPAREN          [ reduce using rule 75 (if -> IF sentencia_booleana .) ]

    recur                          shift and go to state 116

state 71

    (46) sentencia_booleana -> LPAREN . operador_comparadores dato dato RPAREN
    (34) operador_comparadores -> . COMPARA_IGUAL
    (35) operador_comparadores -> . MENORQUE
    (36) operador_comparadores -> . MAYORQUE
    (37) operador_comparadores -> . MAYORIGUALQUE
    (38) operador_comparadores -> . MENORIGUALQUE
    (39) operador_comparadores -> . DIFERENTE

    COMPARA_IGUAL   shift and go to state 55
    MENORQUE        shift and go to state 56
    MAYORQUE        shift and go to state 57
    MAYORIGUALQUE   shift and go to state 58
    MENORIGUALQUE   shift and go to state 59
    DIFERENTE       shift and go to state 60

    operador_comparadores          shift and go to state 49

state 72

    (77) if -> LPAREN IF . instrucciones body RPAREN
    (1) instrucciones -> . asignacion
    (2) instrucciones -> . impresion
    (3) instrucciones -> . operacion_aritmetica
    (4) instrucciones -> . conjuntos
    (5) instrucciones -> . vector
    (6) instrucciones -> . mapa
    (7) instrucciones -> . if
    (8) instrucciones -> . do
    (9) instrucciones -> . if_do
    (10) instrucciones -> . when
    (11) instrucciones -> . defn
    (12) instrucciones -> . defn_with_return
    (13) instrucciones -> . operacionesLogicas
    (14) instrucciones -> . sentenciaLoopRecur
    (15) instrucciones -> . cond_
    (16) instrucciones -> . cond_else
    (17) instrucciones -> . doseq
    (18) instrucciones -> . case_expression
    (19) instrucciones -> . lista
    (20) instrucciones -> . sentencia_booleana
    (21) instrucciones -> . function
    (22) instrucciones -> . dotimes
    (23) instrucciones -> . ciclo
    (24) instrucciones -> . valor
    (44) asignacion -> . LPAREN DEFICION VARIABLE dato RPAREN
    (45) asignacion -> . LPAREN LET LCOR VARIABLE dato RCOR RPAREN
    (72) impresion -> . LPAREN IMPRIMIR dato RPAREN
    (84) operacion_aritmetica -> . LPAREN operador_aritmetico dato dato RPAREN
    (102) conjuntos -> . NUMERAL L_LLAVE expresionConjuntoEnteros R_LLAVE
    (103) conjuntos -> . NUMERAL L_LLAVE expresionConjuntoDouble R_LLAVE
    (104) conjuntos -> . NUMERAL L_LLAVE expresionConjuntoString R_LLAVE
    (73) vector -> . LCOR argumentos_lista RCOR
    (74) mapa -> . MAPA
    (75) if -> . IF sentencia_booleana
    (76) if -> . IF sentencia_booleana recur
    (77) if -> . LPAREN IF instrucciones body RPAREN
    (78) do -> . LPAREN DO instrucciones RPAREN
    (79) if_do -> . LPAREN if do RPAREN
    (80) when -> . LPAREN WHEN sentencia_booleana body RPAREN
    (95) defn -> . LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN
    (96) defn -> . LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN
    (97) defn_with_return -> . LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN defn_return
    (98) defn_with_return -> . LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN defn_return
    (83) operacionesLogicas -> . LPAREN if recur VARIABLE RPAREN RPAREN
    (105) sentenciaLoopRecur -> . LPAREN LOOP argumments LPAREN if dato RPAREN RPAREN
    (48) cond_ -> . LPAREN COND linecondition linecondition RPAREN
    (49) cond_else -> . LPAREN COND linecondition linecondition DOSPUNTOS ELSE impresion RPAREN
    (93) doseq -> . LPAREN DOSEQ doseq_args impresion RPAREN
    (94) doseq -> . LPAREN DOSEQ doseq_args LPAREN doseq_prn RPAREN RPAREN
    (54) case_expression -> . LPAREN CASE dato case impresion RPAREN
    (55) case_expression -> . LPAREN CASE dato case DOSPUNTOS ELSE STRING RPAREN
    (58) lista -> . LPAREN LIST argumentos_lista RPAREN
    (46) sentencia_booleana -> . LPAREN operador_comparadores dato dato RPAREN
    (70) function -> . LPAREN DEFFUNCION VARIABLE internos RPAREN
    (71) function -> . LPAREN DEFFUNCION internos if dato RPAREN
    (82) dotimes -> . LPAREN DOTIMES ciclo body RPAREN
    (81) ciclo -> . LCOR VARIABLE ENTERO RCOR
    (31) valor -> . ENTERO
    (32) valor -> . FLOTANTE
    (33) valor -> . BOOLEAN

    LPAREN          shift and go to state 26
    NUMERAL         shift and go to state 28
    LCOR            shift and go to state 27
    MAPA            shift and go to state 29
    IF              shift and go to state 30
    ENTERO          shift and go to state 31
    FLOTANTE        shift and go to state 32
    BOOLEAN         shift and go to state 33

    instrucciones                  shift and go to state 79
    asignacion                     shift and go to state 2
    impresion                      shift and go to state 3
    operacion_aritmetica           shift and go to state 4
    conjuntos                      shift and go to state 5
    vector                         shift and go to state 6
    mapa                           shift and go to state 7
    if                             shift and go to state 8
    do                             shift and go to state 9
    if_do                          shift and go to state 10
    when                           shift and go to state 11
    defn                           shift and go to state 12
    defn_with_return               shift and go to state 13
    operacionesLogicas             shift and go to state 14
    sentenciaLoopRecur             shift and go to state 15
    cond_                          shift and go to state 16
    cond_else                      shift and go to state 17
    doseq                          shift and go to state 18
    case_expression                shift and go to state 19
    lista                          shift and go to state 20
    sentencia_booleana             shift and go to state 21
    function                       shift and go to state 22
    dotimes                        shift and go to state 23
    ciclo                          shift and go to state 24
    valor                          shift and go to state 25

state 73

    (44) asignacion -> LPAREN DEFICION VARIABLE . dato RPAREN
    (25) dato -> . STRING
    (26) dato -> . CHAR
    (27) dato -> . ENTERO
    (28) dato -> . FLOTANTE
    (29) dato -> . BOOLEAN
    (30) dato -> . VARIABLE

    STRING          shift and go to state 65
    CHAR            shift and go to state 66
    ENTERO          shift and go to state 63
    FLOTANTE        shift and go to state 67
    BOOLEAN         shift and go to state 68
    VARIABLE        shift and go to state 76

    dato                           shift and go to state 118

state 74

    (45) asignacion -> LPAREN LET LCOR . VARIABLE dato RCOR RPAREN

    VARIABLE        shift and go to state 119


state 75

    (72) impresion -> LPAREN IMPRIMIR dato . RPAREN

    RPAREN          shift and go to state 120


state 76

    (30) dato -> VARIABLE .

    RPAREN          reduce using rule 30 (dato -> VARIABLE .)
    STRING          reduce using rule 30 (dato -> VARIABLE .)
    CHAR            reduce using rule 30 (dato -> VARIABLE .)
    ENTERO          reduce using rule 30 (dato -> VARIABLE .)
    FLOTANTE        reduce using rule 30 (dato -> VARIABLE .)
    BOOLEAN         reduce using rule 30 (dato -> VARIABLE .)
    VARIABLE        reduce using rule 30 (dato -> VARIABLE .)
    RCOR            reduce using rule 30 (dato -> VARIABLE .)
    LPAREN          reduce using rule 30 (dato -> VARIABLE .)
    NUMERAL         reduce using rule 30 (dato -> VARIABLE .)
    LCOR            reduce using rule 30 (dato -> VARIABLE .)


state 77

    (84) operacion_aritmetica -> LPAREN operador_aritmetico dato . dato RPAREN
    (25) dato -> . STRING
    (26) dato -> . CHAR
    (27) dato -> . ENTERO
    (28) dato -> . FLOTANTE
    (29) dato -> . BOOLEAN
    (30) dato -> . VARIABLE

    STRING          shift and go to state 65
    CHAR            shift and go to state 66
    ENTERO          shift and go to state 63
    FLOTANTE        shift and go to state 67
    BOOLEAN         shift and go to state 68
    VARIABLE        shift and go to state 76

    dato                           shift and go to state 121

state 78

    (46) sentencia_booleana -> LPAREN . operador_comparadores dato dato RPAREN
    (44) asignacion -> LPAREN . DEFICION VARIABLE dato RPAREN
    (45) asignacion -> LPAREN . LET LCOR VARIABLE dato RCOR RPAREN
    (72) impresion -> LPAREN . IMPRIMIR dato RPAREN
    (84) operacion_aritmetica -> LPAREN . operador_aritmetico dato dato RPAREN
    (77) if -> LPAREN . IF instrucciones body RPAREN
    (78) do -> LPAREN . DO instrucciones RPAREN
    (79) if_do -> LPAREN . if do RPAREN
    (80) when -> LPAREN . WHEN sentencia_booleana body RPAREN
    (95) defn -> LPAREN . DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN
    (96) defn -> LPAREN . DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN
    (97) defn_with_return -> LPAREN . DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN defn_return
    (98) defn_with_return -> LPAREN . DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN defn_return
    (83) operacionesLogicas -> LPAREN . if recur VARIABLE RPAREN RPAREN
    (105) sentenciaLoopRecur -> LPAREN . LOOP argumments LPAREN if dato RPAREN RPAREN
    (48) cond_ -> LPAREN . COND linecondition linecondition RPAREN
    (49) cond_else -> LPAREN . COND linecondition linecondition DOSPUNTOS ELSE impresion RPAREN
    (93) doseq -> LPAREN . DOSEQ doseq_args impresion RPAREN
    (94) doseq -> LPAREN . DOSEQ doseq_args LPAREN doseq_prn RPAREN RPAREN
    (54) case_expression -> LPAREN . CASE dato case impresion RPAREN
    (55) case_expression -> LPAREN . CASE dato case DOSPUNTOS ELSE STRING RPAREN
    (58) lista -> LPAREN . LIST argumentos_lista RPAREN
    (70) function -> LPAREN . DEFFUNCION VARIABLE internos RPAREN
    (71) function -> LPAREN . DEFFUNCION internos if dato RPAREN
    (82) dotimes -> LPAREN . DOTIMES ciclo body RPAREN
    (34) operador_comparadores -> . COMPARA_IGUAL
    (35) operador_comparadores -> . MENORQUE
    (36) operador_comparadores -> . MAYORQUE
    (37) operador_comparadores -> . MAYORIGUALQUE
    (38) operador_comparadores -> . MENORIGUALQUE
    (39) operador_comparadores -> . DIFERENTE
    (40) operador_aritmetico -> . MAS
    (41) operador_aritmetico -> . MENOS
    (42) operador_aritmetico -> . PRODUCTO
    (43) operador_aritmetico -> . DIVISION
    (75) if -> . IF sentencia_booleana
    (76) if -> . IF sentencia_booleana recur
    (77) if -> . LPAREN IF instrucciones body RPAREN

    DEFICION        shift and go to state 35
    LET             shift and go to state 36
    IMPRIMIR        shift and go to state 37
    IF              shift and go to state 39
    DO              shift and go to state 40
    WHEN            shift and go to state 42
    DEFFUNCION      shift and go to state 43
    LOOP            shift and go to state 44
    COND            shift and go to state 45
    DOSEQ           shift and go to state 46
    CASE            shift and go to state 47
    LIST            shift and go to state 48
    DOTIMES         shift and go to state 50
    COMPARA_IGUAL   shift and go to state 55
    MENORQUE        shift and go to state 56
    MAYORQUE        shift and go to state 57
    MAYORIGUALQUE   shift and go to state 58
    MENORIGUALQUE   shift and go to state 59
    DIFERENTE       shift and go to state 60
    MAS             shift and go to state 51
    MENOS           shift and go to state 52
    PRODUCTO        shift and go to state 53
    DIVISION        shift and go to state 54
    LPAREN          shift and go to state 34

    operador_comparadores          shift and go to state 49
    operador_aritmetico            shift and go to state 38
    if                             shift and go to state 41

state 79

    (77) if -> LPAREN IF instrucciones . body RPAREN
    (62) body -> . instrucciones
    (1) instrucciones -> . asignacion
    (2) instrucciones -> . impresion
    (3) instrucciones -> . operacion_aritmetica
    (4) instrucciones -> . conjuntos
    (5) instrucciones -> . vector
    (6) instrucciones -> . mapa
    (7) instrucciones -> . if
    (8) instrucciones -> . do
    (9) instrucciones -> . if_do
    (10) instrucciones -> . when
    (11) instrucciones -> . defn
    (12) instrucciones -> . defn_with_return
    (13) instrucciones -> . operacionesLogicas
    (14) instrucciones -> . sentenciaLoopRecur
    (15) instrucciones -> . cond_
    (16) instrucciones -> . cond_else
    (17) instrucciones -> . doseq
    (18) instrucciones -> . case_expression
    (19) instrucciones -> . lista
    (20) instrucciones -> . sentencia_booleana
    (21) instrucciones -> . function
    (22) instrucciones -> . dotimes
    (23) instrucciones -> . ciclo
    (24) instrucciones -> . valor
    (44) asignacion -> . LPAREN DEFICION VARIABLE dato RPAREN
    (45) asignacion -> . LPAREN LET LCOR VARIABLE dato RCOR RPAREN
    (72) impresion -> . LPAREN IMPRIMIR dato RPAREN
    (84) operacion_aritmetica -> . LPAREN operador_aritmetico dato dato RPAREN
    (102) conjuntos -> . NUMERAL L_LLAVE expresionConjuntoEnteros R_LLAVE
    (103) conjuntos -> . NUMERAL L_LLAVE expresionConjuntoDouble R_LLAVE
    (104) conjuntos -> . NUMERAL L_LLAVE expresionConjuntoString R_LLAVE
    (73) vector -> . LCOR argumentos_lista RCOR
    (74) mapa -> . MAPA
    (75) if -> . IF sentencia_booleana
    (76) if -> . IF sentencia_booleana recur
    (77) if -> . LPAREN IF instrucciones body RPAREN
    (78) do -> . LPAREN DO instrucciones RPAREN
    (79) if_do -> . LPAREN if do RPAREN
    (80) when -> . LPAREN WHEN sentencia_booleana body RPAREN
    (95) defn -> . LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN
    (96) defn -> . LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN
    (97) defn_with_return -> . LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN defn_return
    (98) defn_with_return -> . LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN defn_return
    (83) operacionesLogicas -> . LPAREN if recur VARIABLE RPAREN RPAREN
    (105) sentenciaLoopRecur -> . LPAREN LOOP argumments LPAREN if dato RPAREN RPAREN
    (48) cond_ -> . LPAREN COND linecondition linecondition RPAREN
    (49) cond_else -> . LPAREN COND linecondition linecondition DOSPUNTOS ELSE impresion RPAREN
    (93) doseq -> . LPAREN DOSEQ doseq_args impresion RPAREN
    (94) doseq -> . LPAREN DOSEQ doseq_args LPAREN doseq_prn RPAREN RPAREN
    (54) case_expression -> . LPAREN CASE dato case impresion RPAREN
    (55) case_expression -> . LPAREN CASE dato case DOSPUNTOS ELSE STRING RPAREN
    (58) lista -> . LPAREN LIST argumentos_lista RPAREN
    (46) sentencia_booleana -> . LPAREN operador_comparadores dato dato RPAREN
    (70) function -> . LPAREN DEFFUNCION VARIABLE internos RPAREN
    (71) function -> . LPAREN DEFFUNCION internos if dato RPAREN
    (82) dotimes -> . LPAREN DOTIMES ciclo body RPAREN
    (81) ciclo -> . LCOR VARIABLE ENTERO RCOR
    (31) valor -> . ENTERO
    (32) valor -> . FLOTANTE
    (33) valor -> . BOOLEAN

    LPAREN          shift and go to state 26
    NUMERAL         shift and go to state 28
    LCOR            shift and go to state 27
    MAPA            shift and go to state 29
    IF              shift and go to state 30
    ENTERO          shift and go to state 31
    FLOTANTE        shift and go to state 32
    BOOLEAN         shift and go to state 33

    instrucciones                  shift and go to state 95
    body                           shift and go to state 122
    asignacion                     shift and go to state 2
    impresion                      shift and go to state 3
    operacion_aritmetica           shift and go to state 4
    conjuntos                      shift and go to state 5
    vector                         shift and go to state 6
    mapa                           shift and go to state 7
    if                             shift and go to state 8
    do                             shift and go to state 9
    if_do                          shift and go to state 10
    when                           shift and go to state 11
    defn                           shift and go to state 12
    defn_with_return               shift and go to state 13
    operacionesLogicas             shift and go to state 14
    sentenciaLoopRecur             shift and go to state 15
    cond_                          shift and go to state 16
    cond_else                      shift and go to state 17
    doseq                          shift and go to state 18
    case_expression                shift and go to state 19
    lista                          shift and go to state 20
    sentencia_booleana             shift and go to state 21
    function                       shift and go to state 22
    dotimes                        shift and go to state 23
    ciclo                          shift and go to state 24
    valor                          shift and go to state 25

state 80

    (75) if -> IF sentencia_booleana .
    (76) if -> IF sentencia_booleana . recur
    (20) instrucciones -> sentencia_booleana .
    (63) recur -> . LPAREN RECUR LPAREN INC dato RPAREN RPAREN

  ! reduce/reduce conflict for LPAREN resolved using rule 20 (instrucciones -> sentencia_booleana .)
  ! shift/reduce conflict for LPAREN resolved as shift
    NUMERAL         reduce using rule 20 (instrucciones -> sentencia_booleana .)
    LCOR            reduce using rule 20 (instrucciones -> sentencia_booleana .)
    MAPA            reduce using rule 20 (instrucciones -> sentencia_booleana .)
    IF              reduce using rule 20 (instrucciones -> sentencia_booleana .)
    ENTERO          reduce using rule 20 (instrucciones -> sentencia_booleana .)
    FLOTANTE        reduce using rule 20 (instrucciones -> sentencia_booleana .)
    BOOLEAN         reduce using rule 20 (instrucciones -> sentencia_booleana .)
    LPAREN          shift and go to state 117

  ! LPAREN          [ reduce using rule 75 (if -> IF sentencia_booleana .) ]
  ! LPAREN          [ reduce using rule 20 (instrucciones -> sentencia_booleana .) ]

    recur                          shift and go to state 116

state 81

    (78) do -> LPAREN DO instrucciones . RPAREN

    RPAREN          shift and go to state 123


state 82

    (78) do -> LPAREN . DO instrucciones RPAREN
    (63) recur -> LPAREN . RECUR LPAREN INC dato RPAREN RPAREN

    DO              shift and go to state 40
    RECUR           shift and go to state 124


state 83

    (79) if_do -> LPAREN if do . RPAREN

    RPAREN          shift and go to state 125


state 84

    (83) operacionesLogicas -> LPAREN if recur . VARIABLE RPAREN RPAREN

    VARIABLE        shift and go to state 126


state 85

    (80) when -> LPAREN WHEN sentencia_booleana . body RPAREN
    (62) body -> . instrucciones
    (1) instrucciones -> . asignacion
    (2) instrucciones -> . impresion
    (3) instrucciones -> . operacion_aritmetica
    (4) instrucciones -> . conjuntos
    (5) instrucciones -> . vector
    (6) instrucciones -> . mapa
    (7) instrucciones -> . if
    (8) instrucciones -> . do
    (9) instrucciones -> . if_do
    (10) instrucciones -> . when
    (11) instrucciones -> . defn
    (12) instrucciones -> . defn_with_return
    (13) instrucciones -> . operacionesLogicas
    (14) instrucciones -> . sentenciaLoopRecur
    (15) instrucciones -> . cond_
    (16) instrucciones -> . cond_else
    (17) instrucciones -> . doseq
    (18) instrucciones -> . case_expression
    (19) instrucciones -> . lista
    (20) instrucciones -> . sentencia_booleana
    (21) instrucciones -> . function
    (22) instrucciones -> . dotimes
    (23) instrucciones -> . ciclo
    (24) instrucciones -> . valor
    (44) asignacion -> . LPAREN DEFICION VARIABLE dato RPAREN
    (45) asignacion -> . LPAREN LET LCOR VARIABLE dato RCOR RPAREN
    (72) impresion -> . LPAREN IMPRIMIR dato RPAREN
    (84) operacion_aritmetica -> . LPAREN operador_aritmetico dato dato RPAREN
    (102) conjuntos -> . NUMERAL L_LLAVE expresionConjuntoEnteros R_LLAVE
    (103) conjuntos -> . NUMERAL L_LLAVE expresionConjuntoDouble R_LLAVE
    (104) conjuntos -> . NUMERAL L_LLAVE expresionConjuntoString R_LLAVE
    (73) vector -> . LCOR argumentos_lista RCOR
    (74) mapa -> . MAPA
    (75) if -> . IF sentencia_booleana
    (76) if -> . IF sentencia_booleana recur
    (77) if -> . LPAREN IF instrucciones body RPAREN
    (78) do -> . LPAREN DO instrucciones RPAREN
    (79) if_do -> . LPAREN if do RPAREN
    (80) when -> . LPAREN WHEN sentencia_booleana body RPAREN
    (95) defn -> . LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN
    (96) defn -> . LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN
    (97) defn_with_return -> . LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN defn_return
    (98) defn_with_return -> . LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN defn_return
    (83) operacionesLogicas -> . LPAREN if recur VARIABLE RPAREN RPAREN
    (105) sentenciaLoopRecur -> . LPAREN LOOP argumments LPAREN if dato RPAREN RPAREN
    (48) cond_ -> . LPAREN COND linecondition linecondition RPAREN
    (49) cond_else -> . LPAREN COND linecondition linecondition DOSPUNTOS ELSE impresion RPAREN
    (93) doseq -> . LPAREN DOSEQ doseq_args impresion RPAREN
    (94) doseq -> . LPAREN DOSEQ doseq_args LPAREN doseq_prn RPAREN RPAREN
    (54) case_expression -> . LPAREN CASE dato case impresion RPAREN
    (55) case_expression -> . LPAREN CASE dato case DOSPUNTOS ELSE STRING RPAREN
    (58) lista -> . LPAREN LIST argumentos_lista RPAREN
    (46) sentencia_booleana -> . LPAREN operador_comparadores dato dato RPAREN
    (70) function -> . LPAREN DEFFUNCION VARIABLE internos RPAREN
    (71) function -> . LPAREN DEFFUNCION internos if dato RPAREN
    (82) dotimes -> . LPAREN DOTIMES ciclo body RPAREN
    (81) ciclo -> . LCOR VARIABLE ENTERO RCOR
    (31) valor -> . ENTERO
    (32) valor -> . FLOTANTE
    (33) valor -> . BOOLEAN

    LPAREN          shift and go to state 26
    NUMERAL         shift and go to state 28
    LCOR            shift and go to state 27
    MAPA            shift and go to state 29
    IF              shift and go to state 30
    ENTERO          shift and go to state 31
    FLOTANTE        shift and go to state 32
    BOOLEAN         shift and go to state 33

    sentencia_booleana             shift and go to state 21
    body                           shift and go to state 127
    instrucciones                  shift and go to state 95
    asignacion                     shift and go to state 2
    impresion                      shift and go to state 3
    operacion_aritmetica           shift and go to state 4
    conjuntos                      shift and go to state 5
    vector                         shift and go to state 6
    mapa                           shift and go to state 7
    if                             shift and go to state 8
    do                             shift and go to state 9
    if_do                          shift and go to state 10
    when                           shift and go to state 11
    defn                           shift and go to state 12
    defn_with_return               shift and go to state 13
    operacionesLogicas             shift and go to state 14
    sentenciaLoopRecur             shift and go to state 15
    cond_                          shift and go to state 16
    cond_else                      shift and go to state 17
    doseq                          shift and go to state 18
    case_expression                shift and go to state 19
    lista                          shift and go to state 20
    function                       shift and go to state 22
    dotimes                        shift and go to state 23
    ciclo                          shift and go to state 24
    valor                          shift and go to state 25

state 86

    (95) defn -> LPAREN DEFFUNCION VARIABLE . LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN
    (97) defn_with_return -> LPAREN DEFFUNCION VARIABLE . LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN defn_return
    (70) function -> LPAREN DEFFUNCION VARIABLE . internos RPAREN
    (64) internos -> . description
    (65) internos -> . argumments
    (66) internos -> . body
    (67) internos -> . increase
    (68) internos -> . argumments body
    (69) internos -> . description argumments body
    (59) description -> . STRING
    (61) argumments -> . LCOR argumentos_lista RCOR
    (62) body -> . instrucciones
    (60) increase -> . INCREASE LCOR dato RCOR
    (1) instrucciones -> . asignacion
    (2) instrucciones -> . impresion
    (3) instrucciones -> . operacion_aritmetica
    (4) instrucciones -> . conjuntos
    (5) instrucciones -> . vector
    (6) instrucciones -> . mapa
    (7) instrucciones -> . if
    (8) instrucciones -> . do
    (9) instrucciones -> . if_do
    (10) instrucciones -> . when
    (11) instrucciones -> . defn
    (12) instrucciones -> . defn_with_return
    (13) instrucciones -> . operacionesLogicas
    (14) instrucciones -> . sentenciaLoopRecur
    (15) instrucciones -> . cond_
    (16) instrucciones -> . cond_else
    (17) instrucciones -> . doseq
    (18) instrucciones -> . case_expression
    (19) instrucciones -> . lista
    (20) instrucciones -> . sentencia_booleana
    (21) instrucciones -> . function
    (22) instrucciones -> . dotimes
    (23) instrucciones -> . ciclo
    (24) instrucciones -> . valor
    (44) asignacion -> . LPAREN DEFICION VARIABLE dato RPAREN
    (45) asignacion -> . LPAREN LET LCOR VARIABLE dato RCOR RPAREN
    (72) impresion -> . LPAREN IMPRIMIR dato RPAREN
    (84) operacion_aritmetica -> . LPAREN operador_aritmetico dato dato RPAREN
    (102) conjuntos -> . NUMERAL L_LLAVE expresionConjuntoEnteros R_LLAVE
    (103) conjuntos -> . NUMERAL L_LLAVE expresionConjuntoDouble R_LLAVE
    (104) conjuntos -> . NUMERAL L_LLAVE expresionConjuntoString R_LLAVE
    (73) vector -> . LCOR argumentos_lista RCOR
    (74) mapa -> . MAPA
    (75) if -> . IF sentencia_booleana
    (76) if -> . IF sentencia_booleana recur
    (77) if -> . LPAREN IF instrucciones body RPAREN
    (78) do -> . LPAREN DO instrucciones RPAREN
    (79) if_do -> . LPAREN if do RPAREN
    (80) when -> . LPAREN WHEN sentencia_booleana body RPAREN
    (95) defn -> . LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN
    (96) defn -> . LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN
    (97) defn_with_return -> . LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN defn_return
    (98) defn_with_return -> . LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN defn_return
    (83) operacionesLogicas -> . LPAREN if recur VARIABLE RPAREN RPAREN
    (105) sentenciaLoopRecur -> . LPAREN LOOP argumments LPAREN if dato RPAREN RPAREN
    (48) cond_ -> . LPAREN COND linecondition linecondition RPAREN
    (49) cond_else -> . LPAREN COND linecondition linecondition DOSPUNTOS ELSE impresion RPAREN
    (93) doseq -> . LPAREN DOSEQ doseq_args impresion RPAREN
    (94) doseq -> . LPAREN DOSEQ doseq_args LPAREN doseq_prn RPAREN RPAREN
    (54) case_expression -> . LPAREN CASE dato case impresion RPAREN
    (55) case_expression -> . LPAREN CASE dato case DOSPUNTOS ELSE STRING RPAREN
    (58) lista -> . LPAREN LIST argumentos_lista RPAREN
    (46) sentencia_booleana -> . LPAREN operador_comparadores dato dato RPAREN
    (70) function -> . LPAREN DEFFUNCION VARIABLE internos RPAREN
    (71) function -> . LPAREN DEFFUNCION internos if dato RPAREN
    (82) dotimes -> . LPAREN DOTIMES ciclo body RPAREN
    (81) ciclo -> . LCOR VARIABLE ENTERO RCOR
    (31) valor -> . ENTERO
    (32) valor -> . FLOTANTE
    (33) valor -> . BOOLEAN

    LCOR            shift and go to state 128
    STRING          shift and go to state 94
    INCREASE        shift and go to state 130
    LPAREN          shift and go to state 26
    NUMERAL         shift and go to state 28
    MAPA            shift and go to state 29
    IF              shift and go to state 30
    ENTERO          shift and go to state 31
    FLOTANTE        shift and go to state 32
    BOOLEAN         shift and go to state 33

    internos                       shift and go to state 129
    description                    shift and go to state 90
    argumments                     shift and go to state 91
    body                           shift and go to state 92
    increase                       shift and go to state 93
    instrucciones                  shift and go to state 95
    asignacion                     shift and go to state 2
    impresion                      shift and go to state 3
    operacion_aritmetica           shift and go to state 4
    conjuntos                      shift and go to state 5
    vector                         shift and go to state 6
    mapa                           shift and go to state 7
    if                             shift and go to state 8
    do                             shift and go to state 9
    if_do                          shift and go to state 10
    when                           shift and go to state 11
    defn                           shift and go to state 12
    defn_with_return               shift and go to state 13
    operacionesLogicas             shift and go to state 14
    sentenciaLoopRecur             shift and go to state 15
    cond_                          shift and go to state 16
    cond_else                      shift and go to state 17
    doseq                          shift and go to state 18
    case_expression                shift and go to state 19
    lista                          shift and go to state 20
    sentencia_booleana             shift and go to state 21
    function                       shift and go to state 22
    dotimes                        shift and go to state 23
    ciclo                          shift and go to state 24
    valor                          shift and go to state 25

state 87

    (61) argumments -> LCOR . argumentos_lista RCOR
    (73) vector -> LCOR . argumentos_lista RCOR
    (81) ciclo -> LCOR . VARIABLE ENTERO RCOR
    (56) argumentos_lista -> . dato
    (57) argumentos_lista -> . dato argumentos_lista
    (25) dato -> . STRING
    (26) dato -> . CHAR
    (27) dato -> . ENTERO
    (28) dato -> . FLOTANTE
    (29) dato -> . BOOLEAN
    (30) dato -> . VARIABLE

    VARIABLE        shift and go to state 62
    STRING          shift and go to state 65
    CHAR            shift and go to state 66
    ENTERO          shift and go to state 63
    FLOTANTE        shift and go to state 67
    BOOLEAN         shift and go to state 68

    argumentos_lista               shift and go to state 131
    dato                           shift and go to state 64

state 88

    (96) defn -> LPAREN DEFFUNCION INCREASE . LCOR VARIABLE RCOR operacionesLogicas RPAREN
    (98) defn_with_return -> LPAREN DEFFUNCION INCREASE . LCOR VARIABLE RCOR operacionesLogicas RPAREN defn_return
    (60) increase -> INCREASE . LCOR dato RCOR

    LCOR            shift and go to state 132


state 89

    (71) function -> LPAREN DEFFUNCION internos . if dato RPAREN
    (75) if -> . IF sentencia_booleana
    (76) if -> . IF sentencia_booleana recur
    (77) if -> . LPAREN IF instrucciones body RPAREN

    IF              shift and go to state 30
    LPAREN          shift and go to state 34

    if                             shift and go to state 133

state 90

    (64) internos -> description .
    (69) internos -> description . argumments body
    (61) argumments -> . LCOR argumentos_lista RCOR

    IF              reduce using rule 64 (internos -> description .)
    LPAREN          reduce using rule 64 (internos -> description .)
    RPAREN          reduce using rule 64 (internos -> description .)
    LCOR            shift and go to state 97

    argumments                     shift and go to state 134

state 91

    (65) internos -> argumments .
    (68) internos -> argumments . body
    (62) body -> . instrucciones
    (1) instrucciones -> . asignacion
    (2) instrucciones -> . impresion
    (3) instrucciones -> . operacion_aritmetica
    (4) instrucciones -> . conjuntos
    (5) instrucciones -> . vector
    (6) instrucciones -> . mapa
    (7) instrucciones -> . if
    (8) instrucciones -> . do
    (9) instrucciones -> . if_do
    (10) instrucciones -> . when
    (11) instrucciones -> . defn
    (12) instrucciones -> . defn_with_return
    (13) instrucciones -> . operacionesLogicas
    (14) instrucciones -> . sentenciaLoopRecur
    (15) instrucciones -> . cond_
    (16) instrucciones -> . cond_else
    (17) instrucciones -> . doseq
    (18) instrucciones -> . case_expression
    (19) instrucciones -> . lista
    (20) instrucciones -> . sentencia_booleana
    (21) instrucciones -> . function
    (22) instrucciones -> . dotimes
    (23) instrucciones -> . ciclo
    (24) instrucciones -> . valor
    (44) asignacion -> . LPAREN DEFICION VARIABLE dato RPAREN
    (45) asignacion -> . LPAREN LET LCOR VARIABLE dato RCOR RPAREN
    (72) impresion -> . LPAREN IMPRIMIR dato RPAREN
    (84) operacion_aritmetica -> . LPAREN operador_aritmetico dato dato RPAREN
    (102) conjuntos -> . NUMERAL L_LLAVE expresionConjuntoEnteros R_LLAVE
    (103) conjuntos -> . NUMERAL L_LLAVE expresionConjuntoDouble R_LLAVE
    (104) conjuntos -> . NUMERAL L_LLAVE expresionConjuntoString R_LLAVE
    (73) vector -> . LCOR argumentos_lista RCOR
    (74) mapa -> . MAPA
    (75) if -> . IF sentencia_booleana
    (76) if -> . IF sentencia_booleana recur
    (77) if -> . LPAREN IF instrucciones body RPAREN
    (78) do -> . LPAREN DO instrucciones RPAREN
    (79) if_do -> . LPAREN if do RPAREN
    (80) when -> . LPAREN WHEN sentencia_booleana body RPAREN
    (95) defn -> . LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN
    (96) defn -> . LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN
    (97) defn_with_return -> . LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN defn_return
    (98) defn_with_return -> . LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN defn_return
    (83) operacionesLogicas -> . LPAREN if recur VARIABLE RPAREN RPAREN
    (105) sentenciaLoopRecur -> . LPAREN LOOP argumments LPAREN if dato RPAREN RPAREN
    (48) cond_ -> . LPAREN COND linecondition linecondition RPAREN
    (49) cond_else -> . LPAREN COND linecondition linecondition DOSPUNTOS ELSE impresion RPAREN
    (93) doseq -> . LPAREN DOSEQ doseq_args impresion RPAREN
    (94) doseq -> . LPAREN DOSEQ doseq_args LPAREN doseq_prn RPAREN RPAREN
    (54) case_expression -> . LPAREN CASE dato case impresion RPAREN
    (55) case_expression -> . LPAREN CASE dato case DOSPUNTOS ELSE STRING RPAREN
    (58) lista -> . LPAREN LIST argumentos_lista RPAREN
    (46) sentencia_booleana -> . LPAREN operador_comparadores dato dato RPAREN
    (70) function -> . LPAREN DEFFUNCION VARIABLE internos RPAREN
    (71) function -> . LPAREN DEFFUNCION internos if dato RPAREN
    (82) dotimes -> . LPAREN DOTIMES ciclo body RPAREN
    (81) ciclo -> . LCOR VARIABLE ENTERO RCOR
    (31) valor -> . ENTERO
    (32) valor -> . FLOTANTE
    (33) valor -> . BOOLEAN

  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for IF resolved as shift
    RPAREN          reduce using rule 65 (internos -> argumments .)
    LPAREN          shift and go to state 26
    NUMERAL         shift and go to state 28
    LCOR            shift and go to state 27
    MAPA            shift and go to state 29
    IF              shift and go to state 30
    ENTERO          shift and go to state 31
    FLOTANTE        shift and go to state 32
    BOOLEAN         shift and go to state 33

  ! IF              [ reduce using rule 65 (internos -> argumments .) ]
  ! LPAREN          [ reduce using rule 65 (internos -> argumments .) ]

    body                           shift and go to state 135
    instrucciones                  shift and go to state 95
    asignacion                     shift and go to state 2
    impresion                      shift and go to state 3
    operacion_aritmetica           shift and go to state 4
    conjuntos                      shift and go to state 5
    vector                         shift and go to state 6
    mapa                           shift and go to state 7
    if                             shift and go to state 8
    do                             shift and go to state 9
    if_do                          shift and go to state 10
    when                           shift and go to state 11
    defn                           shift and go to state 12
    defn_with_return               shift and go to state 13
    operacionesLogicas             shift and go to state 14
    sentenciaLoopRecur             shift and go to state 15
    cond_                          shift and go to state 16
    cond_else                      shift and go to state 17
    doseq                          shift and go to state 18
    case_expression                shift and go to state 19
    lista                          shift and go to state 20
    sentencia_booleana             shift and go to state 21
    function                       shift and go to state 22
    dotimes                        shift and go to state 23
    ciclo                          shift and go to state 24
    valor                          shift and go to state 25

state 92

    (66) internos -> body .

    IF              reduce using rule 66 (internos -> body .)
    LPAREN          reduce using rule 66 (internos -> body .)
    RPAREN          reduce using rule 66 (internos -> body .)


state 93

    (67) internos -> increase .

    IF              reduce using rule 67 (internos -> increase .)
    LPAREN          reduce using rule 67 (internos -> increase .)
    RPAREN          reduce using rule 67 (internos -> increase .)


state 94

    (59) description -> STRING .

    LCOR            reduce using rule 59 (description -> STRING .)
    IF              reduce using rule 59 (description -> STRING .)
    LPAREN          reduce using rule 59 (description -> STRING .)
    RPAREN          reduce using rule 59 (description -> STRING .)


state 95

    (62) body -> instrucciones .

    IF              reduce using rule 62 (body -> instrucciones .)
    LPAREN          reduce using rule 62 (body -> instrucciones .)
    RPAREN          reduce using rule 62 (body -> instrucciones .)


state 96

    (105) sentenciaLoopRecur -> LPAREN LOOP argumments . LPAREN if dato RPAREN RPAREN

    LPAREN          shift and go to state 136


state 97

    (61) argumments -> LCOR . argumentos_lista RCOR
    (56) argumentos_lista -> . dato
    (57) argumentos_lista -> . dato argumentos_lista
    (25) dato -> . STRING
    (26) dato -> . CHAR
    (27) dato -> . ENTERO
    (28) dato -> . FLOTANTE
    (29) dato -> . BOOLEAN
    (30) dato -> . VARIABLE

    STRING          shift and go to state 65
    CHAR            shift and go to state 66
    ENTERO          shift and go to state 63
    FLOTANTE        shift and go to state 67
    BOOLEAN         shift and go to state 68
    VARIABLE        shift and go to state 76

    argumentos_lista               shift and go to state 137
    dato                           shift and go to state 64

state 98

    (48) cond_ -> LPAREN COND linecondition . linecondition RPAREN
    (49) cond_else -> LPAREN COND linecondition . linecondition DOSPUNTOS ELSE impresion RPAREN
    (47) linecondition -> . sentencia_booleana impresion
    (46) sentencia_booleana -> . LPAREN operador_comparadores dato dato RPAREN

    LPAREN          shift and go to state 71

    linecondition                  shift and go to state 138
    sentencia_booleana             shift and go to state 99

state 99

    (47) linecondition -> sentencia_booleana . impresion
    (72) impresion -> . LPAREN IMPRIMIR dato RPAREN

    LPAREN          shift and go to state 140

    impresion                      shift and go to state 139

state 100

    (93) doseq -> LPAREN DOSEQ doseq_args . impresion RPAREN
    (94) doseq -> LPAREN DOSEQ doseq_args . LPAREN doseq_prn RPAREN RPAREN
    (72) impresion -> . LPAREN IMPRIMIR dato RPAREN

    LPAREN          shift and go to state 141

    impresion                      shift and go to state 142

state 101

    (85) doseq_args -> LCOR . dato LPAREN RANGE dato RPAREN RCOR
    (86) doseq_args -> LCOR . dato conjuntos RCOR
    (87) doseq_args -> LCOR . dato vector dato vector RCOR
    (88) doseq_args -> LCOR . vector conjuntos RCOR
    (25) dato -> . STRING
    (26) dato -> . CHAR
    (27) dato -> . ENTERO
    (28) dato -> . FLOTANTE
    (29) dato -> . BOOLEAN
    (30) dato -> . VARIABLE
    (73) vector -> . LCOR argumentos_lista RCOR

    STRING          shift and go to state 65
    CHAR            shift and go to state 66
    ENTERO          shift and go to state 63
    FLOTANTE        shift and go to state 67
    BOOLEAN         shift and go to state 68
    VARIABLE        shift and go to state 76
    LCOR            shift and go to state 143

    dato                           shift and go to state 144
    vector                         shift and go to state 145

state 102

    (54) case_expression -> LPAREN CASE dato . case impresion RPAREN
    (55) case_expression -> LPAREN CASE dato . case DOSPUNTOS ELSE STRING RPAREN
    (50) case -> . dato impresion
    (51) case -> . dato STRING
    (52) case -> . dato impresion case
    (53) case -> . dato STRING case
    (25) dato -> . STRING
    (26) dato -> . CHAR
    (27) dato -> . ENTERO
    (28) dato -> . FLOTANTE
    (29) dato -> . BOOLEAN
    (30) dato -> . VARIABLE

    STRING          shift and go to state 65
    CHAR            shift and go to state 66
    ENTERO          shift and go to state 63
    FLOTANTE        shift and go to state 67
    BOOLEAN         shift and go to state 68
    VARIABLE        shift and go to state 76

    dato                           shift and go to state 146
    case                           shift and go to state 147

state 103

    (58) lista -> LPAREN LIST argumentos_lista . RPAREN

    RPAREN          shift and go to state 148


state 104

    (46) sentencia_booleana -> LPAREN operador_comparadores dato . dato RPAREN
    (25) dato -> . STRING
    (26) dato -> . CHAR
    (27) dato -> . ENTERO
    (28) dato -> . FLOTANTE
    (29) dato -> . BOOLEAN
    (30) dato -> . VARIABLE

    STRING          shift and go to state 65
    CHAR            shift and go to state 66
    ENTERO          shift and go to state 63
    FLOTANTE        shift and go to state 67
    BOOLEAN         shift and go to state 68
    VARIABLE        shift and go to state 76

    dato                           shift and go to state 149

state 105

    (82) dotimes -> LPAREN DOTIMES ciclo . body RPAREN
    (62) body -> . instrucciones
    (1) instrucciones -> . asignacion
    (2) instrucciones -> . impresion
    (3) instrucciones -> . operacion_aritmetica
    (4) instrucciones -> . conjuntos
    (5) instrucciones -> . vector
    (6) instrucciones -> . mapa
    (7) instrucciones -> . if
    (8) instrucciones -> . do
    (9) instrucciones -> . if_do
    (10) instrucciones -> . when
    (11) instrucciones -> . defn
    (12) instrucciones -> . defn_with_return
    (13) instrucciones -> . operacionesLogicas
    (14) instrucciones -> . sentenciaLoopRecur
    (15) instrucciones -> . cond_
    (16) instrucciones -> . cond_else
    (17) instrucciones -> . doseq
    (18) instrucciones -> . case_expression
    (19) instrucciones -> . lista
    (20) instrucciones -> . sentencia_booleana
    (21) instrucciones -> . function
    (22) instrucciones -> . dotimes
    (23) instrucciones -> . ciclo
    (24) instrucciones -> . valor
    (44) asignacion -> . LPAREN DEFICION VARIABLE dato RPAREN
    (45) asignacion -> . LPAREN LET LCOR VARIABLE dato RCOR RPAREN
    (72) impresion -> . LPAREN IMPRIMIR dato RPAREN
    (84) operacion_aritmetica -> . LPAREN operador_aritmetico dato dato RPAREN
    (102) conjuntos -> . NUMERAL L_LLAVE expresionConjuntoEnteros R_LLAVE
    (103) conjuntos -> . NUMERAL L_LLAVE expresionConjuntoDouble R_LLAVE
    (104) conjuntos -> . NUMERAL L_LLAVE expresionConjuntoString R_LLAVE
    (73) vector -> . LCOR argumentos_lista RCOR
    (74) mapa -> . MAPA
    (75) if -> . IF sentencia_booleana
    (76) if -> . IF sentencia_booleana recur
    (77) if -> . LPAREN IF instrucciones body RPAREN
    (78) do -> . LPAREN DO instrucciones RPAREN
    (79) if_do -> . LPAREN if do RPAREN
    (80) when -> . LPAREN WHEN sentencia_booleana body RPAREN
    (95) defn -> . LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN
    (96) defn -> . LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN
    (97) defn_with_return -> . LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN defn_return
    (98) defn_with_return -> . LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN defn_return
    (83) operacionesLogicas -> . LPAREN if recur VARIABLE RPAREN RPAREN
    (105) sentenciaLoopRecur -> . LPAREN LOOP argumments LPAREN if dato RPAREN RPAREN
    (48) cond_ -> . LPAREN COND linecondition linecondition RPAREN
    (49) cond_else -> . LPAREN COND linecondition linecondition DOSPUNTOS ELSE impresion RPAREN
    (93) doseq -> . LPAREN DOSEQ doseq_args impresion RPAREN
    (94) doseq -> . LPAREN DOSEQ doseq_args LPAREN doseq_prn RPAREN RPAREN
    (54) case_expression -> . LPAREN CASE dato case impresion RPAREN
    (55) case_expression -> . LPAREN CASE dato case DOSPUNTOS ELSE STRING RPAREN
    (58) lista -> . LPAREN LIST argumentos_lista RPAREN
    (46) sentencia_booleana -> . LPAREN operador_comparadores dato dato RPAREN
    (70) function -> . LPAREN DEFFUNCION VARIABLE internos RPAREN
    (71) function -> . LPAREN DEFFUNCION internos if dato RPAREN
    (82) dotimes -> . LPAREN DOTIMES ciclo body RPAREN
    (81) ciclo -> . LCOR VARIABLE ENTERO RCOR
    (31) valor -> . ENTERO
    (32) valor -> . FLOTANTE
    (33) valor -> . BOOLEAN

    LPAREN          shift and go to state 26
    NUMERAL         shift and go to state 28
    LCOR            shift and go to state 27
    MAPA            shift and go to state 29
    IF              shift and go to state 30
    ENTERO          shift and go to state 31
    FLOTANTE        shift and go to state 32
    BOOLEAN         shift and go to state 33

    ciclo                          shift and go to state 24
    body                           shift and go to state 150
    instrucciones                  shift and go to state 95
    asignacion                     shift and go to state 2
    impresion                      shift and go to state 3
    operacion_aritmetica           shift and go to state 4
    conjuntos                      shift and go to state 5
    vector                         shift and go to state 6
    mapa                           shift and go to state 7
    if                             shift and go to state 8
    do                             shift and go to state 9
    if_do                          shift and go to state 10
    when                           shift and go to state 11
    defn                           shift and go to state 12
    defn_with_return               shift and go to state 13
    operacionesLogicas             shift and go to state 14
    sentenciaLoopRecur             shift and go to state 15
    cond_                          shift and go to state 16
    cond_else                      shift and go to state 17
    doseq                          shift and go to state 18
    case_expression                shift and go to state 19
    lista                          shift and go to state 20
    sentencia_booleana             shift and go to state 21
    function                       shift and go to state 22
    dotimes                        shift and go to state 23
    valor                          shift and go to state 25

state 106

    (81) ciclo -> LCOR . VARIABLE ENTERO RCOR

    VARIABLE        shift and go to state 151


state 107

    (73) vector -> LCOR argumentos_lista RCOR .

    $end            reduce using rule 73 (vector -> LCOR argumentos_lista RCOR .)
    LPAREN          reduce using rule 73 (vector -> LCOR argumentos_lista RCOR .)
    NUMERAL         reduce using rule 73 (vector -> LCOR argumentos_lista RCOR .)
    LCOR            reduce using rule 73 (vector -> LCOR argumentos_lista RCOR .)
    MAPA            reduce using rule 73 (vector -> LCOR argumentos_lista RCOR .)
    IF              reduce using rule 73 (vector -> LCOR argumentos_lista RCOR .)
    ENTERO          reduce using rule 73 (vector -> LCOR argumentos_lista RCOR .)
    FLOTANTE        reduce using rule 73 (vector -> LCOR argumentos_lista RCOR .)
    BOOLEAN         reduce using rule 73 (vector -> LCOR argumentos_lista RCOR .)
    RPAREN          reduce using rule 73 (vector -> LCOR argumentos_lista RCOR .)
    STRING          reduce using rule 73 (vector -> LCOR argumentos_lista RCOR .)
    CHAR            reduce using rule 73 (vector -> LCOR argumentos_lista RCOR .)
    VARIABLE        reduce using rule 73 (vector -> LCOR argumentos_lista RCOR .)
    RCOR            reduce using rule 73 (vector -> LCOR argumentos_lista RCOR .)


state 108

    (81) ciclo -> LCOR VARIABLE ENTERO . RCOR

    RCOR            shift and go to state 152


state 109

    (57) argumentos_lista -> dato argumentos_lista .

    RCOR            reduce using rule 57 (argumentos_lista -> dato argumentos_lista .)
    RPAREN          reduce using rule 57 (argumentos_lista -> dato argumentos_lista .)


state 110

    (102) conjuntos -> NUMERAL L_LLAVE expresionConjuntoEnteros . R_LLAVE

    R_LLAVE         shift and go to state 153


state 111

    (103) conjuntos -> NUMERAL L_LLAVE expresionConjuntoDouble . R_LLAVE

    R_LLAVE         shift and go to state 154


state 112

    (104) conjuntos -> NUMERAL L_LLAVE expresionConjuntoString . R_LLAVE

    R_LLAVE         shift and go to state 155


state 113

    (106) expresionConjuntoEnteros -> ENTERO .
    (107) expresionConjuntoEnteros -> ENTERO . expresionConjuntoEnteros
    (106) expresionConjuntoEnteros -> . ENTERO
    (107) expresionConjuntoEnteros -> . ENTERO expresionConjuntoEnteros

    R_LLAVE         reduce using rule 106 (expresionConjuntoEnteros -> ENTERO .)
    ENTERO          shift and go to state 113

    expresionConjuntoEnteros       shift and go to state 156

state 114

    (108) expresionConjuntoDouble -> FLOTANTE .
    (109) expresionConjuntoDouble -> FLOTANTE . expresionConjuntoDouble
    (108) expresionConjuntoDouble -> . FLOTANTE
    (109) expresionConjuntoDouble -> . FLOTANTE expresionConjuntoDouble

    R_LLAVE         reduce using rule 108 (expresionConjuntoDouble -> FLOTANTE .)
    FLOTANTE        shift and go to state 114

    expresionConjuntoDouble        shift and go to state 157

state 115

    (110) expresionConjuntoString -> STRING .
    (111) expresionConjuntoString -> STRING . expresionConjuntoString
    (110) expresionConjuntoString -> . STRING
    (111) expresionConjuntoString -> . STRING expresionConjuntoString

    R_LLAVE         reduce using rule 110 (expresionConjuntoString -> STRING .)
    STRING          shift and go to state 115

    expresionConjuntoString        shift and go to state 158

state 116

    (76) if -> IF sentencia_booleana recur .

    $end            reduce using rule 76 (if -> IF sentencia_booleana recur .)
    LPAREN          reduce using rule 76 (if -> IF sentencia_booleana recur .)
    NUMERAL         reduce using rule 76 (if -> IF sentencia_booleana recur .)
    LCOR            reduce using rule 76 (if -> IF sentencia_booleana recur .)
    MAPA            reduce using rule 76 (if -> IF sentencia_booleana recur .)
    IF              reduce using rule 76 (if -> IF sentencia_booleana recur .)
    ENTERO          reduce using rule 76 (if -> IF sentencia_booleana recur .)
    FLOTANTE        reduce using rule 76 (if -> IF sentencia_booleana recur .)
    BOOLEAN         reduce using rule 76 (if -> IF sentencia_booleana recur .)
    RPAREN          reduce using rule 76 (if -> IF sentencia_booleana recur .)
    STRING          reduce using rule 76 (if -> IF sentencia_booleana recur .)
    CHAR            reduce using rule 76 (if -> IF sentencia_booleana recur .)
    VARIABLE        reduce using rule 76 (if -> IF sentencia_booleana recur .)


state 117

    (63) recur -> LPAREN . RECUR LPAREN INC dato RPAREN RPAREN

    RECUR           shift and go to state 124


state 118

    (44) asignacion -> LPAREN DEFICION VARIABLE dato . RPAREN

    RPAREN          shift and go to state 159


state 119

    (45) asignacion -> LPAREN LET LCOR VARIABLE . dato RCOR RPAREN
    (25) dato -> . STRING
    (26) dato -> . CHAR
    (27) dato -> . ENTERO
    (28) dato -> . FLOTANTE
    (29) dato -> . BOOLEAN
    (30) dato -> . VARIABLE

    STRING          shift and go to state 65
    CHAR            shift and go to state 66
    ENTERO          shift and go to state 63
    FLOTANTE        shift and go to state 67
    BOOLEAN         shift and go to state 68
    VARIABLE        shift and go to state 76

    dato                           shift and go to state 160

state 120

    (72) impresion -> LPAREN IMPRIMIR dato RPAREN .

    $end            reduce using rule 72 (impresion -> LPAREN IMPRIMIR dato RPAREN .)
    LPAREN          reduce using rule 72 (impresion -> LPAREN IMPRIMIR dato RPAREN .)
    NUMERAL         reduce using rule 72 (impresion -> LPAREN IMPRIMIR dato RPAREN .)
    LCOR            reduce using rule 72 (impresion -> LPAREN IMPRIMIR dato RPAREN .)
    MAPA            reduce using rule 72 (impresion -> LPAREN IMPRIMIR dato RPAREN .)
    IF              reduce using rule 72 (impresion -> LPAREN IMPRIMIR dato RPAREN .)
    ENTERO          reduce using rule 72 (impresion -> LPAREN IMPRIMIR dato RPAREN .)
    FLOTANTE        reduce using rule 72 (impresion -> LPAREN IMPRIMIR dato RPAREN .)
    BOOLEAN         reduce using rule 72 (impresion -> LPAREN IMPRIMIR dato RPAREN .)
    RPAREN          reduce using rule 72 (impresion -> LPAREN IMPRIMIR dato RPAREN .)
    DOSPUNTOS       reduce using rule 72 (impresion -> LPAREN IMPRIMIR dato RPAREN .)
    STRING          reduce using rule 72 (impresion -> LPAREN IMPRIMIR dato RPAREN .)
    CHAR            reduce using rule 72 (impresion -> LPAREN IMPRIMIR dato RPAREN .)
    VARIABLE        reduce using rule 72 (impresion -> LPAREN IMPRIMIR dato RPAREN .)


state 121

    (84) operacion_aritmetica -> LPAREN operador_aritmetico dato dato . RPAREN

    RPAREN          shift and go to state 161


state 122

    (77) if -> LPAREN IF instrucciones body . RPAREN

    RPAREN          shift and go to state 162


state 123

    (78) do -> LPAREN DO instrucciones RPAREN .

    $end            reduce using rule 78 (do -> LPAREN DO instrucciones RPAREN .)
    LPAREN          reduce using rule 78 (do -> LPAREN DO instrucciones RPAREN .)
    NUMERAL         reduce using rule 78 (do -> LPAREN DO instrucciones RPAREN .)
    LCOR            reduce using rule 78 (do -> LPAREN DO instrucciones RPAREN .)
    MAPA            reduce using rule 78 (do -> LPAREN DO instrucciones RPAREN .)
    IF              reduce using rule 78 (do -> LPAREN DO instrucciones RPAREN .)
    ENTERO          reduce using rule 78 (do -> LPAREN DO instrucciones RPAREN .)
    FLOTANTE        reduce using rule 78 (do -> LPAREN DO instrucciones RPAREN .)
    BOOLEAN         reduce using rule 78 (do -> LPAREN DO instrucciones RPAREN .)
    RPAREN          reduce using rule 78 (do -> LPAREN DO instrucciones RPAREN .)


state 124

    (63) recur -> LPAREN RECUR . LPAREN INC dato RPAREN RPAREN

    LPAREN          shift and go to state 163


state 125

    (79) if_do -> LPAREN if do RPAREN .

    $end            reduce using rule 79 (if_do -> LPAREN if do RPAREN .)
    LPAREN          reduce using rule 79 (if_do -> LPAREN if do RPAREN .)
    NUMERAL         reduce using rule 79 (if_do -> LPAREN if do RPAREN .)
    LCOR            reduce using rule 79 (if_do -> LPAREN if do RPAREN .)
    MAPA            reduce using rule 79 (if_do -> LPAREN if do RPAREN .)
    IF              reduce using rule 79 (if_do -> LPAREN if do RPAREN .)
    ENTERO          reduce using rule 79 (if_do -> LPAREN if do RPAREN .)
    FLOTANTE        reduce using rule 79 (if_do -> LPAREN if do RPAREN .)
    BOOLEAN         reduce using rule 79 (if_do -> LPAREN if do RPAREN .)
    RPAREN          reduce using rule 79 (if_do -> LPAREN if do RPAREN .)


state 126

    (83) operacionesLogicas -> LPAREN if recur VARIABLE . RPAREN RPAREN

    RPAREN          shift and go to state 164


state 127

    (80) when -> LPAREN WHEN sentencia_booleana body . RPAREN

    RPAREN          shift and go to state 165


state 128

    (95) defn -> LPAREN DEFFUNCION VARIABLE LCOR . VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN
    (97) defn_with_return -> LPAREN DEFFUNCION VARIABLE LCOR . VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN defn_return
    (61) argumments -> LCOR . argumentos_lista RCOR
    (73) vector -> LCOR . argumentos_lista RCOR
    (81) ciclo -> LCOR . VARIABLE ENTERO RCOR
    (56) argumentos_lista -> . dato
    (57) argumentos_lista -> . dato argumentos_lista
    (25) dato -> . STRING
    (26) dato -> . CHAR
    (27) dato -> . ENTERO
    (28) dato -> . FLOTANTE
    (29) dato -> . BOOLEAN
    (30) dato -> . VARIABLE

    VARIABLE        shift and go to state 166
    STRING          shift and go to state 65
    CHAR            shift and go to state 66
    ENTERO          shift and go to state 63
    FLOTANTE        shift and go to state 67
    BOOLEAN         shift and go to state 68

    argumentos_lista               shift and go to state 131
    dato                           shift and go to state 64

state 129

    (70) function -> LPAREN DEFFUNCION VARIABLE internos . RPAREN

    RPAREN          shift and go to state 167


state 130

    (60) increase -> INCREASE . LCOR dato RCOR

    LCOR            shift and go to state 168


state 131

    (61) argumments -> LCOR argumentos_lista . RCOR
    (73) vector -> LCOR argumentos_lista . RCOR

    RCOR            shift and go to state 169


state 132

    (96) defn -> LPAREN DEFFUNCION INCREASE LCOR . VARIABLE RCOR operacionesLogicas RPAREN
    (98) defn_with_return -> LPAREN DEFFUNCION INCREASE LCOR . VARIABLE RCOR operacionesLogicas RPAREN defn_return
    (60) increase -> INCREASE LCOR . dato RCOR
    (25) dato -> . STRING
    (26) dato -> . CHAR
    (27) dato -> . ENTERO
    (28) dato -> . FLOTANTE
    (29) dato -> . BOOLEAN
    (30) dato -> . VARIABLE

    VARIABLE        shift and go to state 170
    STRING          shift and go to state 65
    CHAR            shift and go to state 66
    ENTERO          shift and go to state 63
    FLOTANTE        shift and go to state 67
    BOOLEAN         shift and go to state 68

    dato                           shift and go to state 171

state 133

    (71) function -> LPAREN DEFFUNCION internos if . dato RPAREN
    (25) dato -> . STRING
    (26) dato -> . CHAR
    (27) dato -> . ENTERO
    (28) dato -> . FLOTANTE
    (29) dato -> . BOOLEAN
    (30) dato -> . VARIABLE

    STRING          shift and go to state 65
    CHAR            shift and go to state 66
    ENTERO          shift and go to state 63
    FLOTANTE        shift and go to state 67
    BOOLEAN         shift and go to state 68
    VARIABLE        shift and go to state 76

    dato                           shift and go to state 172

state 134

    (69) internos -> description argumments . body
    (62) body -> . instrucciones
    (1) instrucciones -> . asignacion
    (2) instrucciones -> . impresion
    (3) instrucciones -> . operacion_aritmetica
    (4) instrucciones -> . conjuntos
    (5) instrucciones -> . vector
    (6) instrucciones -> . mapa
    (7) instrucciones -> . if
    (8) instrucciones -> . do
    (9) instrucciones -> . if_do
    (10) instrucciones -> . when
    (11) instrucciones -> . defn
    (12) instrucciones -> . defn_with_return
    (13) instrucciones -> . operacionesLogicas
    (14) instrucciones -> . sentenciaLoopRecur
    (15) instrucciones -> . cond_
    (16) instrucciones -> . cond_else
    (17) instrucciones -> . doseq
    (18) instrucciones -> . case_expression
    (19) instrucciones -> . lista
    (20) instrucciones -> . sentencia_booleana
    (21) instrucciones -> . function
    (22) instrucciones -> . dotimes
    (23) instrucciones -> . ciclo
    (24) instrucciones -> . valor
    (44) asignacion -> . LPAREN DEFICION VARIABLE dato RPAREN
    (45) asignacion -> . LPAREN LET LCOR VARIABLE dato RCOR RPAREN
    (72) impresion -> . LPAREN IMPRIMIR dato RPAREN
    (84) operacion_aritmetica -> . LPAREN operador_aritmetico dato dato RPAREN
    (102) conjuntos -> . NUMERAL L_LLAVE expresionConjuntoEnteros R_LLAVE
    (103) conjuntos -> . NUMERAL L_LLAVE expresionConjuntoDouble R_LLAVE
    (104) conjuntos -> . NUMERAL L_LLAVE expresionConjuntoString R_LLAVE
    (73) vector -> . LCOR argumentos_lista RCOR
    (74) mapa -> . MAPA
    (75) if -> . IF sentencia_booleana
    (76) if -> . IF sentencia_booleana recur
    (77) if -> . LPAREN IF instrucciones body RPAREN
    (78) do -> . LPAREN DO instrucciones RPAREN
    (79) if_do -> . LPAREN if do RPAREN
    (80) when -> . LPAREN WHEN sentencia_booleana body RPAREN
    (95) defn -> . LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN
    (96) defn -> . LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN
    (97) defn_with_return -> . LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN defn_return
    (98) defn_with_return -> . LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN defn_return
    (83) operacionesLogicas -> . LPAREN if recur VARIABLE RPAREN RPAREN
    (105) sentenciaLoopRecur -> . LPAREN LOOP argumments LPAREN if dato RPAREN RPAREN
    (48) cond_ -> . LPAREN COND linecondition linecondition RPAREN
    (49) cond_else -> . LPAREN COND linecondition linecondition DOSPUNTOS ELSE impresion RPAREN
    (93) doseq -> . LPAREN DOSEQ doseq_args impresion RPAREN
    (94) doseq -> . LPAREN DOSEQ doseq_args LPAREN doseq_prn RPAREN RPAREN
    (54) case_expression -> . LPAREN CASE dato case impresion RPAREN
    (55) case_expression -> . LPAREN CASE dato case DOSPUNTOS ELSE STRING RPAREN
    (58) lista -> . LPAREN LIST argumentos_lista RPAREN
    (46) sentencia_booleana -> . LPAREN operador_comparadores dato dato RPAREN
    (70) function -> . LPAREN DEFFUNCION VARIABLE internos RPAREN
    (71) function -> . LPAREN DEFFUNCION internos if dato RPAREN
    (82) dotimes -> . LPAREN DOTIMES ciclo body RPAREN
    (81) ciclo -> . LCOR VARIABLE ENTERO RCOR
    (31) valor -> . ENTERO
    (32) valor -> . FLOTANTE
    (33) valor -> . BOOLEAN

    LPAREN          shift and go to state 26
    NUMERAL         shift and go to state 28
    LCOR            shift and go to state 27
    MAPA            shift and go to state 29
    IF              shift and go to state 30
    ENTERO          shift and go to state 31
    FLOTANTE        shift and go to state 32
    BOOLEAN         shift and go to state 33

    body                           shift and go to state 173
    instrucciones                  shift and go to state 95
    asignacion                     shift and go to state 2
    impresion                      shift and go to state 3
    operacion_aritmetica           shift and go to state 4
    conjuntos                      shift and go to state 5
    vector                         shift and go to state 6
    mapa                           shift and go to state 7
    if                             shift and go to state 8
    do                             shift and go to state 9
    if_do                          shift and go to state 10
    when                           shift and go to state 11
    defn                           shift and go to state 12
    defn_with_return               shift and go to state 13
    operacionesLogicas             shift and go to state 14
    sentenciaLoopRecur             shift and go to state 15
    cond_                          shift and go to state 16
    cond_else                      shift and go to state 17
    doseq                          shift and go to state 18
    case_expression                shift and go to state 19
    lista                          shift and go to state 20
    sentencia_booleana             shift and go to state 21
    function                       shift and go to state 22
    dotimes                        shift and go to state 23
    ciclo                          shift and go to state 24
    valor                          shift and go to state 25

state 135

    (68) internos -> argumments body .

    IF              reduce using rule 68 (internos -> argumments body .)
    LPAREN          reduce using rule 68 (internos -> argumments body .)
    RPAREN          reduce using rule 68 (internos -> argumments body .)


state 136

    (105) sentenciaLoopRecur -> LPAREN LOOP argumments LPAREN . if dato RPAREN RPAREN
    (75) if -> . IF sentencia_booleana
    (76) if -> . IF sentencia_booleana recur
    (77) if -> . LPAREN IF instrucciones body RPAREN

    IF              shift and go to state 30
    LPAREN          shift and go to state 34

    if                             shift and go to state 174

state 137

    (61) argumments -> LCOR argumentos_lista . RCOR

    RCOR            shift and go to state 175


state 138

    (48) cond_ -> LPAREN COND linecondition linecondition . RPAREN
    (49) cond_else -> LPAREN COND linecondition linecondition . DOSPUNTOS ELSE impresion RPAREN

    RPAREN          shift and go to state 176
    DOSPUNTOS       shift and go to state 177


state 139

    (47) linecondition -> sentencia_booleana impresion .

    LPAREN          reduce using rule 47 (linecondition -> sentencia_booleana impresion .)
    RPAREN          reduce using rule 47 (linecondition -> sentencia_booleana impresion .)
    DOSPUNTOS       reduce using rule 47 (linecondition -> sentencia_booleana impresion .)


state 140

    (72) impresion -> LPAREN . IMPRIMIR dato RPAREN

    IMPRIMIR        shift and go to state 37


state 141

    (94) doseq -> LPAREN DOSEQ doseq_args LPAREN . doseq_prn RPAREN RPAREN
    (72) impresion -> LPAREN . IMPRIMIR dato RPAREN
    (89) doseq_prn -> . PRN LPAREN dato RPAREN
    (90) doseq_prn -> . PRN dato dato
    (91) doseq_prn -> . PRN dato dato dato
    (92) doseq_prn -> . PRN operacion_aritmetica

    IMPRIMIR        shift and go to state 37
    PRN             shift and go to state 179

    doseq_prn                      shift and go to state 178

state 142

    (93) doseq -> LPAREN DOSEQ doseq_args impresion . RPAREN

    RPAREN          shift and go to state 180


state 143

    (73) vector -> LCOR . argumentos_lista RCOR
    (56) argumentos_lista -> . dato
    (57) argumentos_lista -> . dato argumentos_lista
    (25) dato -> . STRING
    (26) dato -> . CHAR
    (27) dato -> . ENTERO
    (28) dato -> . FLOTANTE
    (29) dato -> . BOOLEAN
    (30) dato -> . VARIABLE

    STRING          shift and go to state 65
    CHAR            shift and go to state 66
    ENTERO          shift and go to state 63
    FLOTANTE        shift and go to state 67
    BOOLEAN         shift and go to state 68
    VARIABLE        shift and go to state 76

    argumentos_lista               shift and go to state 61
    dato                           shift and go to state 64

state 144

    (85) doseq_args -> LCOR dato . LPAREN RANGE dato RPAREN RCOR
    (86) doseq_args -> LCOR dato . conjuntos RCOR
    (87) doseq_args -> LCOR dato . vector dato vector RCOR
    (102) conjuntos -> . NUMERAL L_LLAVE expresionConjuntoEnteros R_LLAVE
    (103) conjuntos -> . NUMERAL L_LLAVE expresionConjuntoDouble R_LLAVE
    (104) conjuntos -> . NUMERAL L_LLAVE expresionConjuntoString R_LLAVE
    (73) vector -> . LCOR argumentos_lista RCOR

    LPAREN          shift and go to state 181
    NUMERAL         shift and go to state 28
    LCOR            shift and go to state 143

    conjuntos                      shift and go to state 182
    vector                         shift and go to state 183

state 145

    (88) doseq_args -> LCOR vector . conjuntos RCOR
    (102) conjuntos -> . NUMERAL L_LLAVE expresionConjuntoEnteros R_LLAVE
    (103) conjuntos -> . NUMERAL L_LLAVE expresionConjuntoDouble R_LLAVE
    (104) conjuntos -> . NUMERAL L_LLAVE expresionConjuntoString R_LLAVE

    NUMERAL         shift and go to state 28

    conjuntos                      shift and go to state 184

state 146

    (50) case -> dato . impresion
    (51) case -> dato . STRING
    (52) case -> dato . impresion case
    (53) case -> dato . STRING case
    (72) impresion -> . LPAREN IMPRIMIR dato RPAREN

    STRING          shift and go to state 186
    LPAREN          shift and go to state 140

    impresion                      shift and go to state 185

state 147

    (54) case_expression -> LPAREN CASE dato case . impresion RPAREN
    (55) case_expression -> LPAREN CASE dato case . DOSPUNTOS ELSE STRING RPAREN
    (72) impresion -> . LPAREN IMPRIMIR dato RPAREN

    DOSPUNTOS       shift and go to state 188
    LPAREN          shift and go to state 140

    impresion                      shift and go to state 187

state 148

    (58) lista -> LPAREN LIST argumentos_lista RPAREN .

    $end            reduce using rule 58 (lista -> LPAREN LIST argumentos_lista RPAREN .)
    LPAREN          reduce using rule 58 (lista -> LPAREN LIST argumentos_lista RPAREN .)
    NUMERAL         reduce using rule 58 (lista -> LPAREN LIST argumentos_lista RPAREN .)
    LCOR            reduce using rule 58 (lista -> LPAREN LIST argumentos_lista RPAREN .)
    MAPA            reduce using rule 58 (lista -> LPAREN LIST argumentos_lista RPAREN .)
    IF              reduce using rule 58 (lista -> LPAREN LIST argumentos_lista RPAREN .)
    ENTERO          reduce using rule 58 (lista -> LPAREN LIST argumentos_lista RPAREN .)
    FLOTANTE        reduce using rule 58 (lista -> LPAREN LIST argumentos_lista RPAREN .)
    BOOLEAN         reduce using rule 58 (lista -> LPAREN LIST argumentos_lista RPAREN .)
    RPAREN          reduce using rule 58 (lista -> LPAREN LIST argumentos_lista RPAREN .)


state 149

    (46) sentencia_booleana -> LPAREN operador_comparadores dato dato . RPAREN

    RPAREN          shift and go to state 189


state 150

    (82) dotimes -> LPAREN DOTIMES ciclo body . RPAREN

    RPAREN          shift and go to state 190


state 151

    (81) ciclo -> LCOR VARIABLE . ENTERO RCOR

    ENTERO          shift and go to state 108


state 152

    (81) ciclo -> LCOR VARIABLE ENTERO RCOR .

    $end            reduce using rule 81 (ciclo -> LCOR VARIABLE ENTERO RCOR .)
    LPAREN          reduce using rule 81 (ciclo -> LCOR VARIABLE ENTERO RCOR .)
    NUMERAL         reduce using rule 81 (ciclo -> LCOR VARIABLE ENTERO RCOR .)
    LCOR            reduce using rule 81 (ciclo -> LCOR VARIABLE ENTERO RCOR .)
    MAPA            reduce using rule 81 (ciclo -> LCOR VARIABLE ENTERO RCOR .)
    IF              reduce using rule 81 (ciclo -> LCOR VARIABLE ENTERO RCOR .)
    ENTERO          reduce using rule 81 (ciclo -> LCOR VARIABLE ENTERO RCOR .)
    FLOTANTE        reduce using rule 81 (ciclo -> LCOR VARIABLE ENTERO RCOR .)
    BOOLEAN         reduce using rule 81 (ciclo -> LCOR VARIABLE ENTERO RCOR .)
    RPAREN          reduce using rule 81 (ciclo -> LCOR VARIABLE ENTERO RCOR .)


state 153

    (102) conjuntos -> NUMERAL L_LLAVE expresionConjuntoEnteros R_LLAVE .

    $end            reduce using rule 102 (conjuntos -> NUMERAL L_LLAVE expresionConjuntoEnteros R_LLAVE .)
    LPAREN          reduce using rule 102 (conjuntos -> NUMERAL L_LLAVE expresionConjuntoEnteros R_LLAVE .)
    NUMERAL         reduce using rule 102 (conjuntos -> NUMERAL L_LLAVE expresionConjuntoEnteros R_LLAVE .)
    LCOR            reduce using rule 102 (conjuntos -> NUMERAL L_LLAVE expresionConjuntoEnteros R_LLAVE .)
    MAPA            reduce using rule 102 (conjuntos -> NUMERAL L_LLAVE expresionConjuntoEnteros R_LLAVE .)
    IF              reduce using rule 102 (conjuntos -> NUMERAL L_LLAVE expresionConjuntoEnteros R_LLAVE .)
    ENTERO          reduce using rule 102 (conjuntos -> NUMERAL L_LLAVE expresionConjuntoEnteros R_LLAVE .)
    FLOTANTE        reduce using rule 102 (conjuntos -> NUMERAL L_LLAVE expresionConjuntoEnteros R_LLAVE .)
    BOOLEAN         reduce using rule 102 (conjuntos -> NUMERAL L_LLAVE expresionConjuntoEnteros R_LLAVE .)
    RPAREN          reduce using rule 102 (conjuntos -> NUMERAL L_LLAVE expresionConjuntoEnteros R_LLAVE .)
    RCOR            reduce using rule 102 (conjuntos -> NUMERAL L_LLAVE expresionConjuntoEnteros R_LLAVE .)


state 154

    (103) conjuntos -> NUMERAL L_LLAVE expresionConjuntoDouble R_LLAVE .

    $end            reduce using rule 103 (conjuntos -> NUMERAL L_LLAVE expresionConjuntoDouble R_LLAVE .)
    LPAREN          reduce using rule 103 (conjuntos -> NUMERAL L_LLAVE expresionConjuntoDouble R_LLAVE .)
    NUMERAL         reduce using rule 103 (conjuntos -> NUMERAL L_LLAVE expresionConjuntoDouble R_LLAVE .)
    LCOR            reduce using rule 103 (conjuntos -> NUMERAL L_LLAVE expresionConjuntoDouble R_LLAVE .)
    MAPA            reduce using rule 103 (conjuntos -> NUMERAL L_LLAVE expresionConjuntoDouble R_LLAVE .)
    IF              reduce using rule 103 (conjuntos -> NUMERAL L_LLAVE expresionConjuntoDouble R_LLAVE .)
    ENTERO          reduce using rule 103 (conjuntos -> NUMERAL L_LLAVE expresionConjuntoDouble R_LLAVE .)
    FLOTANTE        reduce using rule 103 (conjuntos -> NUMERAL L_LLAVE expresionConjuntoDouble R_LLAVE .)
    BOOLEAN         reduce using rule 103 (conjuntos -> NUMERAL L_LLAVE expresionConjuntoDouble R_LLAVE .)
    RPAREN          reduce using rule 103 (conjuntos -> NUMERAL L_LLAVE expresionConjuntoDouble R_LLAVE .)
    RCOR            reduce using rule 103 (conjuntos -> NUMERAL L_LLAVE expresionConjuntoDouble R_LLAVE .)


state 155

    (104) conjuntos -> NUMERAL L_LLAVE expresionConjuntoString R_LLAVE .

    $end            reduce using rule 104 (conjuntos -> NUMERAL L_LLAVE expresionConjuntoString R_LLAVE .)
    LPAREN          reduce using rule 104 (conjuntos -> NUMERAL L_LLAVE expresionConjuntoString R_LLAVE .)
    NUMERAL         reduce using rule 104 (conjuntos -> NUMERAL L_LLAVE expresionConjuntoString R_LLAVE .)
    LCOR            reduce using rule 104 (conjuntos -> NUMERAL L_LLAVE expresionConjuntoString R_LLAVE .)
    MAPA            reduce using rule 104 (conjuntos -> NUMERAL L_LLAVE expresionConjuntoString R_LLAVE .)
    IF              reduce using rule 104 (conjuntos -> NUMERAL L_LLAVE expresionConjuntoString R_LLAVE .)
    ENTERO          reduce using rule 104 (conjuntos -> NUMERAL L_LLAVE expresionConjuntoString R_LLAVE .)
    FLOTANTE        reduce using rule 104 (conjuntos -> NUMERAL L_LLAVE expresionConjuntoString R_LLAVE .)
    BOOLEAN         reduce using rule 104 (conjuntos -> NUMERAL L_LLAVE expresionConjuntoString R_LLAVE .)
    RPAREN          reduce using rule 104 (conjuntos -> NUMERAL L_LLAVE expresionConjuntoString R_LLAVE .)
    RCOR            reduce using rule 104 (conjuntos -> NUMERAL L_LLAVE expresionConjuntoString R_LLAVE .)


state 156

    (107) expresionConjuntoEnteros -> ENTERO expresionConjuntoEnteros .

    R_LLAVE         reduce using rule 107 (expresionConjuntoEnteros -> ENTERO expresionConjuntoEnteros .)


state 157

    (109) expresionConjuntoDouble -> FLOTANTE expresionConjuntoDouble .

    R_LLAVE         reduce using rule 109 (expresionConjuntoDouble -> FLOTANTE expresionConjuntoDouble .)


state 158

    (111) expresionConjuntoString -> STRING expresionConjuntoString .

    R_LLAVE         reduce using rule 111 (expresionConjuntoString -> STRING expresionConjuntoString .)


state 159

    (44) asignacion -> LPAREN DEFICION VARIABLE dato RPAREN .

    $end            reduce using rule 44 (asignacion -> LPAREN DEFICION VARIABLE dato RPAREN .)
    LPAREN          reduce using rule 44 (asignacion -> LPAREN DEFICION VARIABLE dato RPAREN .)
    NUMERAL         reduce using rule 44 (asignacion -> LPAREN DEFICION VARIABLE dato RPAREN .)
    LCOR            reduce using rule 44 (asignacion -> LPAREN DEFICION VARIABLE dato RPAREN .)
    MAPA            reduce using rule 44 (asignacion -> LPAREN DEFICION VARIABLE dato RPAREN .)
    IF              reduce using rule 44 (asignacion -> LPAREN DEFICION VARIABLE dato RPAREN .)
    ENTERO          reduce using rule 44 (asignacion -> LPAREN DEFICION VARIABLE dato RPAREN .)
    FLOTANTE        reduce using rule 44 (asignacion -> LPAREN DEFICION VARIABLE dato RPAREN .)
    BOOLEAN         reduce using rule 44 (asignacion -> LPAREN DEFICION VARIABLE dato RPAREN .)
    RPAREN          reduce using rule 44 (asignacion -> LPAREN DEFICION VARIABLE dato RPAREN .)


state 160

    (45) asignacion -> LPAREN LET LCOR VARIABLE dato . RCOR RPAREN

    RCOR            shift and go to state 191


state 161

    (84) operacion_aritmetica -> LPAREN operador_aritmetico dato dato RPAREN .

    $end            reduce using rule 84 (operacion_aritmetica -> LPAREN operador_aritmetico dato dato RPAREN .)
    LPAREN          reduce using rule 84 (operacion_aritmetica -> LPAREN operador_aritmetico dato dato RPAREN .)
    NUMERAL         reduce using rule 84 (operacion_aritmetica -> LPAREN operador_aritmetico dato dato RPAREN .)
    LCOR            reduce using rule 84 (operacion_aritmetica -> LPAREN operador_aritmetico dato dato RPAREN .)
    MAPA            reduce using rule 84 (operacion_aritmetica -> LPAREN operador_aritmetico dato dato RPAREN .)
    IF              reduce using rule 84 (operacion_aritmetica -> LPAREN operador_aritmetico dato dato RPAREN .)
    ENTERO          reduce using rule 84 (operacion_aritmetica -> LPAREN operador_aritmetico dato dato RPAREN .)
    FLOTANTE        reduce using rule 84 (operacion_aritmetica -> LPAREN operador_aritmetico dato dato RPAREN .)
    BOOLEAN         reduce using rule 84 (operacion_aritmetica -> LPAREN operador_aritmetico dato dato RPAREN .)
    RPAREN          reduce using rule 84 (operacion_aritmetica -> LPAREN operador_aritmetico dato dato RPAREN .)


state 162

    (77) if -> LPAREN IF instrucciones body RPAREN .

    $end            reduce using rule 77 (if -> LPAREN IF instrucciones body RPAREN .)
    LPAREN          reduce using rule 77 (if -> LPAREN IF instrucciones body RPAREN .)
    NUMERAL         reduce using rule 77 (if -> LPAREN IF instrucciones body RPAREN .)
    LCOR            reduce using rule 77 (if -> LPAREN IF instrucciones body RPAREN .)
    MAPA            reduce using rule 77 (if -> LPAREN IF instrucciones body RPAREN .)
    IF              reduce using rule 77 (if -> LPAREN IF instrucciones body RPAREN .)
    ENTERO          reduce using rule 77 (if -> LPAREN IF instrucciones body RPAREN .)
    FLOTANTE        reduce using rule 77 (if -> LPAREN IF instrucciones body RPAREN .)
    BOOLEAN         reduce using rule 77 (if -> LPAREN IF instrucciones body RPAREN .)
    RPAREN          reduce using rule 77 (if -> LPAREN IF instrucciones body RPAREN .)
    STRING          reduce using rule 77 (if -> LPAREN IF instrucciones body RPAREN .)
    CHAR            reduce using rule 77 (if -> LPAREN IF instrucciones body RPAREN .)
    VARIABLE        reduce using rule 77 (if -> LPAREN IF instrucciones body RPAREN .)


state 163

    (63) recur -> LPAREN RECUR LPAREN . INC dato RPAREN RPAREN

    INC             shift and go to state 192


state 164

    (83) operacionesLogicas -> LPAREN if recur VARIABLE RPAREN . RPAREN

    RPAREN          shift and go to state 193


state 165

    (80) when -> LPAREN WHEN sentencia_booleana body RPAREN .

    $end            reduce using rule 80 (when -> LPAREN WHEN sentencia_booleana body RPAREN .)
    LPAREN          reduce using rule 80 (when -> LPAREN WHEN sentencia_booleana body RPAREN .)
    NUMERAL         reduce using rule 80 (when -> LPAREN WHEN sentencia_booleana body RPAREN .)
    LCOR            reduce using rule 80 (when -> LPAREN WHEN sentencia_booleana body RPAREN .)
    MAPA            reduce using rule 80 (when -> LPAREN WHEN sentencia_booleana body RPAREN .)
    IF              reduce using rule 80 (when -> LPAREN WHEN sentencia_booleana body RPAREN .)
    ENTERO          reduce using rule 80 (when -> LPAREN WHEN sentencia_booleana body RPAREN .)
    FLOTANTE        reduce using rule 80 (when -> LPAREN WHEN sentencia_booleana body RPAREN .)
    BOOLEAN         reduce using rule 80 (when -> LPAREN WHEN sentencia_booleana body RPAREN .)
    RPAREN          reduce using rule 80 (when -> LPAREN WHEN sentencia_booleana body RPAREN .)


state 166

    (95) defn -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE . RCOR LPAREN expresionDefnElse RPAREN RPAREN
    (97) defn_with_return -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE . RCOR LPAREN expresionDefnElse RPAREN RPAREN defn_return
    (81) ciclo -> LCOR VARIABLE . ENTERO RCOR
    (30) dato -> VARIABLE .

  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for RCOR resolved as shift
    RCOR            shift and go to state 194
    ENTERO          shift and go to state 108
    STRING          reduce using rule 30 (dato -> VARIABLE .)
    CHAR            reduce using rule 30 (dato -> VARIABLE .)
    FLOTANTE        reduce using rule 30 (dato -> VARIABLE .)
    BOOLEAN         reduce using rule 30 (dato -> VARIABLE .)
    VARIABLE        reduce using rule 30 (dato -> VARIABLE .)

  ! ENTERO          [ reduce using rule 30 (dato -> VARIABLE .) ]
  ! RCOR            [ reduce using rule 30 (dato -> VARIABLE .) ]


state 167

    (70) function -> LPAREN DEFFUNCION VARIABLE internos RPAREN .

    $end            reduce using rule 70 (function -> LPAREN DEFFUNCION VARIABLE internos RPAREN .)
    LPAREN          reduce using rule 70 (function -> LPAREN DEFFUNCION VARIABLE internos RPAREN .)
    NUMERAL         reduce using rule 70 (function -> LPAREN DEFFUNCION VARIABLE internos RPAREN .)
    LCOR            reduce using rule 70 (function -> LPAREN DEFFUNCION VARIABLE internos RPAREN .)
    MAPA            reduce using rule 70 (function -> LPAREN DEFFUNCION VARIABLE internos RPAREN .)
    IF              reduce using rule 70 (function -> LPAREN DEFFUNCION VARIABLE internos RPAREN .)
    ENTERO          reduce using rule 70 (function -> LPAREN DEFFUNCION VARIABLE internos RPAREN .)
    FLOTANTE        reduce using rule 70 (function -> LPAREN DEFFUNCION VARIABLE internos RPAREN .)
    BOOLEAN         reduce using rule 70 (function -> LPAREN DEFFUNCION VARIABLE internos RPAREN .)
    RPAREN          reduce using rule 70 (function -> LPAREN DEFFUNCION VARIABLE internos RPAREN .)


state 168

    (60) increase -> INCREASE LCOR . dato RCOR
    (25) dato -> . STRING
    (26) dato -> . CHAR
    (27) dato -> . ENTERO
    (28) dato -> . FLOTANTE
    (29) dato -> . BOOLEAN
    (30) dato -> . VARIABLE

    STRING          shift and go to state 65
    CHAR            shift and go to state 66
    ENTERO          shift and go to state 63
    FLOTANTE        shift and go to state 67
    BOOLEAN         shift and go to state 68
    VARIABLE        shift and go to state 76

    dato                           shift and go to state 171

state 169

    (61) argumments -> LCOR argumentos_lista RCOR .
    (73) vector -> LCOR argumentos_lista RCOR .

  ! reduce/reduce conflict for IF resolved using rule 61 (argumments -> LCOR argumentos_lista RCOR .)
  ! reduce/reduce conflict for LPAREN resolved using rule 61 (argumments -> LCOR argumentos_lista RCOR .)
  ! reduce/reduce conflict for RPAREN resolved using rule 61 (argumments -> LCOR argumentos_lista RCOR .)
    LPAREN          reduce using rule 61 (argumments -> LCOR argumentos_lista RCOR .)
    NUMERAL         reduce using rule 61 (argumments -> LCOR argumentos_lista RCOR .)
    LCOR            reduce using rule 61 (argumments -> LCOR argumentos_lista RCOR .)
    MAPA            reduce using rule 61 (argumments -> LCOR argumentos_lista RCOR .)
    IF              reduce using rule 61 (argumments -> LCOR argumentos_lista RCOR .)
    ENTERO          reduce using rule 61 (argumments -> LCOR argumentos_lista RCOR .)
    FLOTANTE        reduce using rule 61 (argumments -> LCOR argumentos_lista RCOR .)
    BOOLEAN         reduce using rule 61 (argumments -> LCOR argumentos_lista RCOR .)
    RPAREN          reduce using rule 61 (argumments -> LCOR argumentos_lista RCOR .)

  ! IF              [ reduce using rule 73 (vector -> LCOR argumentos_lista RCOR .) ]
  ! LPAREN          [ reduce using rule 73 (vector -> LCOR argumentos_lista RCOR .) ]
  ! RPAREN          [ reduce using rule 73 (vector -> LCOR argumentos_lista RCOR .) ]


state 170

    (96) defn -> LPAREN DEFFUNCION INCREASE LCOR VARIABLE . RCOR operacionesLogicas RPAREN
    (98) defn_with_return -> LPAREN DEFFUNCION INCREASE LCOR VARIABLE . RCOR operacionesLogicas RPAREN defn_return
    (30) dato -> VARIABLE .

  ! shift/reduce conflict for RCOR resolved as shift
    RCOR            shift and go to state 195

  ! RCOR            [ reduce using rule 30 (dato -> VARIABLE .) ]


state 171

    (60) increase -> INCREASE LCOR dato . RCOR

    RCOR            shift and go to state 196


state 172

    (71) function -> LPAREN DEFFUNCION internos if dato . RPAREN

    RPAREN          shift and go to state 197


state 173

    (69) internos -> description argumments body .

    IF              reduce using rule 69 (internos -> description argumments body .)
    LPAREN          reduce using rule 69 (internos -> description argumments body .)
    RPAREN          reduce using rule 69 (internos -> description argumments body .)


state 174

    (105) sentenciaLoopRecur -> LPAREN LOOP argumments LPAREN if . dato RPAREN RPAREN
    (25) dato -> . STRING
    (26) dato -> . CHAR
    (27) dato -> . ENTERO
    (28) dato -> . FLOTANTE
    (29) dato -> . BOOLEAN
    (30) dato -> . VARIABLE

    STRING          shift and go to state 65
    CHAR            shift and go to state 66
    ENTERO          shift and go to state 63
    FLOTANTE        shift and go to state 67
    BOOLEAN         shift and go to state 68
    VARIABLE        shift and go to state 76

    dato                           shift and go to state 198

state 175

    (61) argumments -> LCOR argumentos_lista RCOR .

    LPAREN          reduce using rule 61 (argumments -> LCOR argumentos_lista RCOR .)
    NUMERAL         reduce using rule 61 (argumments -> LCOR argumentos_lista RCOR .)
    LCOR            reduce using rule 61 (argumments -> LCOR argumentos_lista RCOR .)
    MAPA            reduce using rule 61 (argumments -> LCOR argumentos_lista RCOR .)
    IF              reduce using rule 61 (argumments -> LCOR argumentos_lista RCOR .)
    ENTERO          reduce using rule 61 (argumments -> LCOR argumentos_lista RCOR .)
    FLOTANTE        reduce using rule 61 (argumments -> LCOR argumentos_lista RCOR .)
    BOOLEAN         reduce using rule 61 (argumments -> LCOR argumentos_lista RCOR .)


state 176

    (48) cond_ -> LPAREN COND linecondition linecondition RPAREN .

    $end            reduce using rule 48 (cond_ -> LPAREN COND linecondition linecondition RPAREN .)
    LPAREN          reduce using rule 48 (cond_ -> LPAREN COND linecondition linecondition RPAREN .)
    NUMERAL         reduce using rule 48 (cond_ -> LPAREN COND linecondition linecondition RPAREN .)
    LCOR            reduce using rule 48 (cond_ -> LPAREN COND linecondition linecondition RPAREN .)
    MAPA            reduce using rule 48 (cond_ -> LPAREN COND linecondition linecondition RPAREN .)
    IF              reduce using rule 48 (cond_ -> LPAREN COND linecondition linecondition RPAREN .)
    ENTERO          reduce using rule 48 (cond_ -> LPAREN COND linecondition linecondition RPAREN .)
    FLOTANTE        reduce using rule 48 (cond_ -> LPAREN COND linecondition linecondition RPAREN .)
    BOOLEAN         reduce using rule 48 (cond_ -> LPAREN COND linecondition linecondition RPAREN .)
    RPAREN          reduce using rule 48 (cond_ -> LPAREN COND linecondition linecondition RPAREN .)


state 177

    (49) cond_else -> LPAREN COND linecondition linecondition DOSPUNTOS . ELSE impresion RPAREN

    ELSE            shift and go to state 199


state 178

    (94) doseq -> LPAREN DOSEQ doseq_args LPAREN doseq_prn . RPAREN RPAREN

    RPAREN          shift and go to state 200


state 179

    (89) doseq_prn -> PRN . LPAREN dato RPAREN
    (90) doseq_prn -> PRN . dato dato
    (91) doseq_prn -> PRN . dato dato dato
    (92) doseq_prn -> PRN . operacion_aritmetica
    (25) dato -> . STRING
    (26) dato -> . CHAR
    (27) dato -> . ENTERO
    (28) dato -> . FLOTANTE
    (29) dato -> . BOOLEAN
    (30) dato -> . VARIABLE
    (84) operacion_aritmetica -> . LPAREN operador_aritmetico dato dato RPAREN

    LPAREN          shift and go to state 201
    STRING          shift and go to state 65
    CHAR            shift and go to state 66
    ENTERO          shift and go to state 63
    FLOTANTE        shift and go to state 67
    BOOLEAN         shift and go to state 68
    VARIABLE        shift and go to state 76

    dato                           shift and go to state 202
    operacion_aritmetica           shift and go to state 203

state 180

    (93) doseq -> LPAREN DOSEQ doseq_args impresion RPAREN .

    $end            reduce using rule 93 (doseq -> LPAREN DOSEQ doseq_args impresion RPAREN .)
    LPAREN          reduce using rule 93 (doseq -> LPAREN DOSEQ doseq_args impresion RPAREN .)
    NUMERAL         reduce using rule 93 (doseq -> LPAREN DOSEQ doseq_args impresion RPAREN .)
    LCOR            reduce using rule 93 (doseq -> LPAREN DOSEQ doseq_args impresion RPAREN .)
    MAPA            reduce using rule 93 (doseq -> LPAREN DOSEQ doseq_args impresion RPAREN .)
    IF              reduce using rule 93 (doseq -> LPAREN DOSEQ doseq_args impresion RPAREN .)
    ENTERO          reduce using rule 93 (doseq -> LPAREN DOSEQ doseq_args impresion RPAREN .)
    FLOTANTE        reduce using rule 93 (doseq -> LPAREN DOSEQ doseq_args impresion RPAREN .)
    BOOLEAN         reduce using rule 93 (doseq -> LPAREN DOSEQ doseq_args impresion RPAREN .)
    RPAREN          reduce using rule 93 (doseq -> LPAREN DOSEQ doseq_args impresion RPAREN .)


state 181

    (85) doseq_args -> LCOR dato LPAREN . RANGE dato RPAREN RCOR

    RANGE           shift and go to state 204


state 182

    (86) doseq_args -> LCOR dato conjuntos . RCOR

    RCOR            shift and go to state 205


state 183

    (87) doseq_args -> LCOR dato vector . dato vector RCOR
    (25) dato -> . STRING
    (26) dato -> . CHAR
    (27) dato -> . ENTERO
    (28) dato -> . FLOTANTE
    (29) dato -> . BOOLEAN
    (30) dato -> . VARIABLE

    STRING          shift and go to state 65
    CHAR            shift and go to state 66
    ENTERO          shift and go to state 63
    FLOTANTE        shift and go to state 67
    BOOLEAN         shift and go to state 68
    VARIABLE        shift and go to state 76

    dato                           shift and go to state 206

state 184

    (88) doseq_args -> LCOR vector conjuntos . RCOR

    RCOR            shift and go to state 207


state 185

    (50) case -> dato impresion .
    (52) case -> dato impresion . case
    (50) case -> . dato impresion
    (51) case -> . dato STRING
    (52) case -> . dato impresion case
    (53) case -> . dato STRING case
    (25) dato -> . STRING
    (26) dato -> . CHAR
    (27) dato -> . ENTERO
    (28) dato -> . FLOTANTE
    (29) dato -> . BOOLEAN
    (30) dato -> . VARIABLE

    DOSPUNTOS       reduce using rule 50 (case -> dato impresion .)
    LPAREN          reduce using rule 50 (case -> dato impresion .)
    STRING          shift and go to state 65
    CHAR            shift and go to state 66
    ENTERO          shift and go to state 63
    FLOTANTE        shift and go to state 67
    BOOLEAN         shift and go to state 68
    VARIABLE        shift and go to state 76

    dato                           shift and go to state 146
    case                           shift and go to state 208

state 186

    (51) case -> dato STRING .
    (53) case -> dato STRING . case
    (50) case -> . dato impresion
    (51) case -> . dato STRING
    (52) case -> . dato impresion case
    (53) case -> . dato STRING case
    (25) dato -> . STRING
    (26) dato -> . CHAR
    (27) dato -> . ENTERO
    (28) dato -> . FLOTANTE
    (29) dato -> . BOOLEAN
    (30) dato -> . VARIABLE

    DOSPUNTOS       reduce using rule 51 (case -> dato STRING .)
    LPAREN          reduce using rule 51 (case -> dato STRING .)
    STRING          shift and go to state 65
    CHAR            shift and go to state 66
    ENTERO          shift and go to state 63
    FLOTANTE        shift and go to state 67
    BOOLEAN         shift and go to state 68
    VARIABLE        shift and go to state 76

    dato                           shift and go to state 146
    case                           shift and go to state 209

state 187

    (54) case_expression -> LPAREN CASE dato case impresion . RPAREN

    RPAREN          shift and go to state 210


state 188

    (55) case_expression -> LPAREN CASE dato case DOSPUNTOS . ELSE STRING RPAREN

    ELSE            shift and go to state 211


state 189

    (46) sentencia_booleana -> LPAREN operador_comparadores dato dato RPAREN .

    $end            reduce using rule 46 (sentencia_booleana -> LPAREN operador_comparadores dato dato RPAREN .)
    LPAREN          reduce using rule 46 (sentencia_booleana -> LPAREN operador_comparadores dato dato RPAREN .)
    NUMERAL         reduce using rule 46 (sentencia_booleana -> LPAREN operador_comparadores dato dato RPAREN .)
    LCOR            reduce using rule 46 (sentencia_booleana -> LPAREN operador_comparadores dato dato RPAREN .)
    MAPA            reduce using rule 46 (sentencia_booleana -> LPAREN operador_comparadores dato dato RPAREN .)
    IF              reduce using rule 46 (sentencia_booleana -> LPAREN operador_comparadores dato dato RPAREN .)
    ENTERO          reduce using rule 46 (sentencia_booleana -> LPAREN operador_comparadores dato dato RPAREN .)
    FLOTANTE        reduce using rule 46 (sentencia_booleana -> LPAREN operador_comparadores dato dato RPAREN .)
    BOOLEAN         reduce using rule 46 (sentencia_booleana -> LPAREN operador_comparadores dato dato RPAREN .)
    RPAREN          reduce using rule 46 (sentencia_booleana -> LPAREN operador_comparadores dato dato RPAREN .)
    STRING          reduce using rule 46 (sentencia_booleana -> LPAREN operador_comparadores dato dato RPAREN .)
    CHAR            reduce using rule 46 (sentencia_booleana -> LPAREN operador_comparadores dato dato RPAREN .)
    VARIABLE        reduce using rule 46 (sentencia_booleana -> LPAREN operador_comparadores dato dato RPAREN .)


state 190

    (82) dotimes -> LPAREN DOTIMES ciclo body RPAREN .

    $end            reduce using rule 82 (dotimes -> LPAREN DOTIMES ciclo body RPAREN .)
    LPAREN          reduce using rule 82 (dotimes -> LPAREN DOTIMES ciclo body RPAREN .)
    NUMERAL         reduce using rule 82 (dotimes -> LPAREN DOTIMES ciclo body RPAREN .)
    LCOR            reduce using rule 82 (dotimes -> LPAREN DOTIMES ciclo body RPAREN .)
    MAPA            reduce using rule 82 (dotimes -> LPAREN DOTIMES ciclo body RPAREN .)
    IF              reduce using rule 82 (dotimes -> LPAREN DOTIMES ciclo body RPAREN .)
    ENTERO          reduce using rule 82 (dotimes -> LPAREN DOTIMES ciclo body RPAREN .)
    FLOTANTE        reduce using rule 82 (dotimes -> LPAREN DOTIMES ciclo body RPAREN .)
    BOOLEAN         reduce using rule 82 (dotimes -> LPAREN DOTIMES ciclo body RPAREN .)
    RPAREN          reduce using rule 82 (dotimes -> LPAREN DOTIMES ciclo body RPAREN .)


state 191

    (45) asignacion -> LPAREN LET LCOR VARIABLE dato RCOR . RPAREN

    RPAREN          shift and go to state 212


state 192

    (63) recur -> LPAREN RECUR LPAREN INC . dato RPAREN RPAREN
    (25) dato -> . STRING
    (26) dato -> . CHAR
    (27) dato -> . ENTERO
    (28) dato -> . FLOTANTE
    (29) dato -> . BOOLEAN
    (30) dato -> . VARIABLE

    STRING          shift and go to state 65
    CHAR            shift and go to state 66
    ENTERO          shift and go to state 63
    FLOTANTE        shift and go to state 67
    BOOLEAN         shift and go to state 68
    VARIABLE        shift and go to state 76

    dato                           shift and go to state 213

state 193

    (83) operacionesLogicas -> LPAREN if recur VARIABLE RPAREN RPAREN .

    $end            reduce using rule 83 (operacionesLogicas -> LPAREN if recur VARIABLE RPAREN RPAREN .)
    LPAREN          reduce using rule 83 (operacionesLogicas -> LPAREN if recur VARIABLE RPAREN RPAREN .)
    NUMERAL         reduce using rule 83 (operacionesLogicas -> LPAREN if recur VARIABLE RPAREN RPAREN .)
    LCOR            reduce using rule 83 (operacionesLogicas -> LPAREN if recur VARIABLE RPAREN RPAREN .)
    MAPA            reduce using rule 83 (operacionesLogicas -> LPAREN if recur VARIABLE RPAREN RPAREN .)
    IF              reduce using rule 83 (operacionesLogicas -> LPAREN if recur VARIABLE RPAREN RPAREN .)
    ENTERO          reduce using rule 83 (operacionesLogicas -> LPAREN if recur VARIABLE RPAREN RPAREN .)
    FLOTANTE        reduce using rule 83 (operacionesLogicas -> LPAREN if recur VARIABLE RPAREN RPAREN .)
    BOOLEAN         reduce using rule 83 (operacionesLogicas -> LPAREN if recur VARIABLE RPAREN RPAREN .)
    RPAREN          reduce using rule 83 (operacionesLogicas -> LPAREN if recur VARIABLE RPAREN RPAREN .)


state 194

    (95) defn -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR . LPAREN expresionDefnElse RPAREN RPAREN
    (97) defn_with_return -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR . LPAREN expresionDefnElse RPAREN RPAREN defn_return

    LPAREN          shift and go to state 214


state 195

    (96) defn -> LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR . operacionesLogicas RPAREN
    (98) defn_with_return -> LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR . operacionesLogicas RPAREN defn_return
    (83) operacionesLogicas -> . LPAREN if recur VARIABLE RPAREN RPAREN

    LPAREN          shift and go to state 215

    operacionesLogicas             shift and go to state 216

state 196

    (60) increase -> INCREASE LCOR dato RCOR .

    IF              reduce using rule 60 (increase -> INCREASE LCOR dato RCOR .)
    LPAREN          reduce using rule 60 (increase -> INCREASE LCOR dato RCOR .)
    RPAREN          reduce using rule 60 (increase -> INCREASE LCOR dato RCOR .)


state 197

    (71) function -> LPAREN DEFFUNCION internos if dato RPAREN .

    $end            reduce using rule 71 (function -> LPAREN DEFFUNCION internos if dato RPAREN .)
    LPAREN          reduce using rule 71 (function -> LPAREN DEFFUNCION internos if dato RPAREN .)
    NUMERAL         reduce using rule 71 (function -> LPAREN DEFFUNCION internos if dato RPAREN .)
    LCOR            reduce using rule 71 (function -> LPAREN DEFFUNCION internos if dato RPAREN .)
    MAPA            reduce using rule 71 (function -> LPAREN DEFFUNCION internos if dato RPAREN .)
    IF              reduce using rule 71 (function -> LPAREN DEFFUNCION internos if dato RPAREN .)
    ENTERO          reduce using rule 71 (function -> LPAREN DEFFUNCION internos if dato RPAREN .)
    FLOTANTE        reduce using rule 71 (function -> LPAREN DEFFUNCION internos if dato RPAREN .)
    BOOLEAN         reduce using rule 71 (function -> LPAREN DEFFUNCION internos if dato RPAREN .)
    RPAREN          reduce using rule 71 (function -> LPAREN DEFFUNCION internos if dato RPAREN .)


state 198

    (105) sentenciaLoopRecur -> LPAREN LOOP argumments LPAREN if dato . RPAREN RPAREN

    RPAREN          shift and go to state 217


state 199

    (49) cond_else -> LPAREN COND linecondition linecondition DOSPUNTOS ELSE . impresion RPAREN
    (72) impresion -> . LPAREN IMPRIMIR dato RPAREN

    LPAREN          shift and go to state 140

    impresion                      shift and go to state 218

state 200

    (94) doseq -> LPAREN DOSEQ doseq_args LPAREN doseq_prn RPAREN . RPAREN

    RPAREN          shift and go to state 219


state 201

    (89) doseq_prn -> PRN LPAREN . dato RPAREN
    (84) operacion_aritmetica -> LPAREN . operador_aritmetico dato dato RPAREN
    (25) dato -> . STRING
    (26) dato -> . CHAR
    (27) dato -> . ENTERO
    (28) dato -> . FLOTANTE
    (29) dato -> . BOOLEAN
    (30) dato -> . VARIABLE
    (40) operador_aritmetico -> . MAS
    (41) operador_aritmetico -> . MENOS
    (42) operador_aritmetico -> . PRODUCTO
    (43) operador_aritmetico -> . DIVISION

    STRING          shift and go to state 65
    CHAR            shift and go to state 66
    ENTERO          shift and go to state 63
    FLOTANTE        shift and go to state 67
    BOOLEAN         shift and go to state 68
    VARIABLE        shift and go to state 76
    MAS             shift and go to state 51
    MENOS           shift and go to state 52
    PRODUCTO        shift and go to state 53
    DIVISION        shift and go to state 54

    dato                           shift and go to state 220
    operador_aritmetico            shift and go to state 38

state 202

    (90) doseq_prn -> PRN dato . dato
    (91) doseq_prn -> PRN dato . dato dato
    (25) dato -> . STRING
    (26) dato -> . CHAR
    (27) dato -> . ENTERO
    (28) dato -> . FLOTANTE
    (29) dato -> . BOOLEAN
    (30) dato -> . VARIABLE

    STRING          shift and go to state 65
    CHAR            shift and go to state 66
    ENTERO          shift and go to state 63
    FLOTANTE        shift and go to state 67
    BOOLEAN         shift and go to state 68
    VARIABLE        shift and go to state 76

    dato                           shift and go to state 221

state 203

    (92) doseq_prn -> PRN operacion_aritmetica .

    RPAREN          reduce using rule 92 (doseq_prn -> PRN operacion_aritmetica .)


state 204

    (85) doseq_args -> LCOR dato LPAREN RANGE . dato RPAREN RCOR
    (25) dato -> . STRING
    (26) dato -> . CHAR
    (27) dato -> . ENTERO
    (28) dato -> . FLOTANTE
    (29) dato -> . BOOLEAN
    (30) dato -> . VARIABLE

    STRING          shift and go to state 65
    CHAR            shift and go to state 66
    ENTERO          shift and go to state 63
    FLOTANTE        shift and go to state 67
    BOOLEAN         shift and go to state 68
    VARIABLE        shift and go to state 76

    dato                           shift and go to state 222

state 205

    (86) doseq_args -> LCOR dato conjuntos RCOR .

    LPAREN          reduce using rule 86 (doseq_args -> LCOR dato conjuntos RCOR .)


state 206

    (87) doseq_args -> LCOR dato vector dato . vector RCOR
    (73) vector -> . LCOR argumentos_lista RCOR

    LCOR            shift and go to state 143

    vector                         shift and go to state 223

state 207

    (88) doseq_args -> LCOR vector conjuntos RCOR .

    LPAREN          reduce using rule 88 (doseq_args -> LCOR vector conjuntos RCOR .)


state 208

    (52) case -> dato impresion case .

    DOSPUNTOS       reduce using rule 52 (case -> dato impresion case .)
    LPAREN          reduce using rule 52 (case -> dato impresion case .)


state 209

    (53) case -> dato STRING case .

    DOSPUNTOS       reduce using rule 53 (case -> dato STRING case .)
    LPAREN          reduce using rule 53 (case -> dato STRING case .)


state 210

    (54) case_expression -> LPAREN CASE dato case impresion RPAREN .

    $end            reduce using rule 54 (case_expression -> LPAREN CASE dato case impresion RPAREN .)
    LPAREN          reduce using rule 54 (case_expression -> LPAREN CASE dato case impresion RPAREN .)
    NUMERAL         reduce using rule 54 (case_expression -> LPAREN CASE dato case impresion RPAREN .)
    LCOR            reduce using rule 54 (case_expression -> LPAREN CASE dato case impresion RPAREN .)
    MAPA            reduce using rule 54 (case_expression -> LPAREN CASE dato case impresion RPAREN .)
    IF              reduce using rule 54 (case_expression -> LPAREN CASE dato case impresion RPAREN .)
    ENTERO          reduce using rule 54 (case_expression -> LPAREN CASE dato case impresion RPAREN .)
    FLOTANTE        reduce using rule 54 (case_expression -> LPAREN CASE dato case impresion RPAREN .)
    BOOLEAN         reduce using rule 54 (case_expression -> LPAREN CASE dato case impresion RPAREN .)
    RPAREN          reduce using rule 54 (case_expression -> LPAREN CASE dato case impresion RPAREN .)


state 211

    (55) case_expression -> LPAREN CASE dato case DOSPUNTOS ELSE . STRING RPAREN

    STRING          shift and go to state 224


state 212

    (45) asignacion -> LPAREN LET LCOR VARIABLE dato RCOR RPAREN .

    $end            reduce using rule 45 (asignacion -> LPAREN LET LCOR VARIABLE dato RCOR RPAREN .)
    LPAREN          reduce using rule 45 (asignacion -> LPAREN LET LCOR VARIABLE dato RCOR RPAREN .)
    NUMERAL         reduce using rule 45 (asignacion -> LPAREN LET LCOR VARIABLE dato RCOR RPAREN .)
    LCOR            reduce using rule 45 (asignacion -> LPAREN LET LCOR VARIABLE dato RCOR RPAREN .)
    MAPA            reduce using rule 45 (asignacion -> LPAREN LET LCOR VARIABLE dato RCOR RPAREN .)
    IF              reduce using rule 45 (asignacion -> LPAREN LET LCOR VARIABLE dato RCOR RPAREN .)
    ENTERO          reduce using rule 45 (asignacion -> LPAREN LET LCOR VARIABLE dato RCOR RPAREN .)
    FLOTANTE        reduce using rule 45 (asignacion -> LPAREN LET LCOR VARIABLE dato RCOR RPAREN .)
    BOOLEAN         reduce using rule 45 (asignacion -> LPAREN LET LCOR VARIABLE dato RCOR RPAREN .)
    RPAREN          reduce using rule 45 (asignacion -> LPAREN LET LCOR VARIABLE dato RCOR RPAREN .)


state 213

    (63) recur -> LPAREN RECUR LPAREN INC dato . RPAREN RPAREN

    RPAREN          shift and go to state 225


state 214

    (95) defn -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN . expresionDefnElse RPAREN RPAREN
    (97) defn_with_return -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN . expresionDefnElse RPAREN RPAREN defn_return
    (99) expresionDefnElse -> . CASE VARIABLE expresionCase DOSPUNTOS ELSE STRING

    CASE            shift and go to state 227

    expresionDefnElse              shift and go to state 226

state 215

    (83) operacionesLogicas -> LPAREN . if recur VARIABLE RPAREN RPAREN
    (75) if -> . IF sentencia_booleana
    (76) if -> . IF sentencia_booleana recur
    (77) if -> . LPAREN IF instrucciones body RPAREN

    IF              shift and go to state 30
    LPAREN          shift and go to state 34

    if                             shift and go to state 228

state 216

    (96) defn -> LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas . RPAREN
    (98) defn_with_return -> LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas . RPAREN defn_return

    RPAREN          shift and go to state 229


state 217

    (105) sentenciaLoopRecur -> LPAREN LOOP argumments LPAREN if dato RPAREN . RPAREN

    RPAREN          shift and go to state 230


state 218

    (49) cond_else -> LPAREN COND linecondition linecondition DOSPUNTOS ELSE impresion . RPAREN

    RPAREN          shift and go to state 231


state 219

    (94) doseq -> LPAREN DOSEQ doseq_args LPAREN doseq_prn RPAREN RPAREN .

    $end            reduce using rule 94 (doseq -> LPAREN DOSEQ doseq_args LPAREN doseq_prn RPAREN RPAREN .)
    LPAREN          reduce using rule 94 (doseq -> LPAREN DOSEQ doseq_args LPAREN doseq_prn RPAREN RPAREN .)
    NUMERAL         reduce using rule 94 (doseq -> LPAREN DOSEQ doseq_args LPAREN doseq_prn RPAREN RPAREN .)
    LCOR            reduce using rule 94 (doseq -> LPAREN DOSEQ doseq_args LPAREN doseq_prn RPAREN RPAREN .)
    MAPA            reduce using rule 94 (doseq -> LPAREN DOSEQ doseq_args LPAREN doseq_prn RPAREN RPAREN .)
    IF              reduce using rule 94 (doseq -> LPAREN DOSEQ doseq_args LPAREN doseq_prn RPAREN RPAREN .)
    ENTERO          reduce using rule 94 (doseq -> LPAREN DOSEQ doseq_args LPAREN doseq_prn RPAREN RPAREN .)
    FLOTANTE        reduce using rule 94 (doseq -> LPAREN DOSEQ doseq_args LPAREN doseq_prn RPAREN RPAREN .)
    BOOLEAN         reduce using rule 94 (doseq -> LPAREN DOSEQ doseq_args LPAREN doseq_prn RPAREN RPAREN .)
    RPAREN          reduce using rule 94 (doseq -> LPAREN DOSEQ doseq_args LPAREN doseq_prn RPAREN RPAREN .)


state 220

    (89) doseq_prn -> PRN LPAREN dato . RPAREN

    RPAREN          shift and go to state 232


state 221

    (90) doseq_prn -> PRN dato dato .
    (91) doseq_prn -> PRN dato dato . dato
    (25) dato -> . STRING
    (26) dato -> . CHAR
    (27) dato -> . ENTERO
    (28) dato -> . FLOTANTE
    (29) dato -> . BOOLEAN
    (30) dato -> . VARIABLE

    RPAREN          reduce using rule 90 (doseq_prn -> PRN dato dato .)
    STRING          shift and go to state 65
    CHAR            shift and go to state 66
    ENTERO          shift and go to state 63
    FLOTANTE        shift and go to state 67
    BOOLEAN         shift and go to state 68
    VARIABLE        shift and go to state 76

    dato                           shift and go to state 233

state 222

    (85) doseq_args -> LCOR dato LPAREN RANGE dato . RPAREN RCOR

    RPAREN          shift and go to state 234


state 223

    (87) doseq_args -> LCOR dato vector dato vector . RCOR

    RCOR            shift and go to state 235


state 224

    (55) case_expression -> LPAREN CASE dato case DOSPUNTOS ELSE STRING . RPAREN

    RPAREN          shift and go to state 236


state 225

    (63) recur -> LPAREN RECUR LPAREN INC dato RPAREN . RPAREN

    RPAREN          shift and go to state 237


state 226

    (95) defn -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse . RPAREN RPAREN
    (97) defn_with_return -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse . RPAREN RPAREN defn_return

    RPAREN          shift and go to state 238


state 227

    (99) expresionDefnElse -> CASE . VARIABLE expresionCase DOSPUNTOS ELSE STRING

    VARIABLE        shift and go to state 239


state 228

    (83) operacionesLogicas -> LPAREN if . recur VARIABLE RPAREN RPAREN
    (63) recur -> . LPAREN RECUR LPAREN INC dato RPAREN RPAREN

    LPAREN          shift and go to state 117

    recur                          shift and go to state 84

state 229

    (96) defn -> LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN .
    (98) defn_with_return -> LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN . defn_return
    (100) defn_return -> . LPAREN dato dato RPAREN

  ! shift/reduce conflict for LPAREN resolved as shift
    $end            reduce using rule 96 (defn -> LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN .)
    NUMERAL         reduce using rule 96 (defn -> LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN .)
    LCOR            reduce using rule 96 (defn -> LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN .)
    MAPA            reduce using rule 96 (defn -> LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN .)
    IF              reduce using rule 96 (defn -> LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN .)
    ENTERO          reduce using rule 96 (defn -> LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN .)
    FLOTANTE        reduce using rule 96 (defn -> LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN .)
    BOOLEAN         reduce using rule 96 (defn -> LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN .)
    RPAREN          reduce using rule 96 (defn -> LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN .)
    LPAREN          shift and go to state 240

  ! LPAREN          [ reduce using rule 96 (defn -> LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN .) ]

    defn_return                    shift and go to state 241

state 230

    (105) sentenciaLoopRecur -> LPAREN LOOP argumments LPAREN if dato RPAREN RPAREN .

    $end            reduce using rule 105 (sentenciaLoopRecur -> LPAREN LOOP argumments LPAREN if dato RPAREN RPAREN .)
    LPAREN          reduce using rule 105 (sentenciaLoopRecur -> LPAREN LOOP argumments LPAREN if dato RPAREN RPAREN .)
    NUMERAL         reduce using rule 105 (sentenciaLoopRecur -> LPAREN LOOP argumments LPAREN if dato RPAREN RPAREN .)
    LCOR            reduce using rule 105 (sentenciaLoopRecur -> LPAREN LOOP argumments LPAREN if dato RPAREN RPAREN .)
    MAPA            reduce using rule 105 (sentenciaLoopRecur -> LPAREN LOOP argumments LPAREN if dato RPAREN RPAREN .)
    IF              reduce using rule 105 (sentenciaLoopRecur -> LPAREN LOOP argumments LPAREN if dato RPAREN RPAREN .)
    ENTERO          reduce using rule 105 (sentenciaLoopRecur -> LPAREN LOOP argumments LPAREN if dato RPAREN RPAREN .)
    FLOTANTE        reduce using rule 105 (sentenciaLoopRecur -> LPAREN LOOP argumments LPAREN if dato RPAREN RPAREN .)
    BOOLEAN         reduce using rule 105 (sentenciaLoopRecur -> LPAREN LOOP argumments LPAREN if dato RPAREN RPAREN .)
    RPAREN          reduce using rule 105 (sentenciaLoopRecur -> LPAREN LOOP argumments LPAREN if dato RPAREN RPAREN .)


state 231

    (49) cond_else -> LPAREN COND linecondition linecondition DOSPUNTOS ELSE impresion RPAREN .

    $end            reduce using rule 49 (cond_else -> LPAREN COND linecondition linecondition DOSPUNTOS ELSE impresion RPAREN .)
    LPAREN          reduce using rule 49 (cond_else -> LPAREN COND linecondition linecondition DOSPUNTOS ELSE impresion RPAREN .)
    NUMERAL         reduce using rule 49 (cond_else -> LPAREN COND linecondition linecondition DOSPUNTOS ELSE impresion RPAREN .)
    LCOR            reduce using rule 49 (cond_else -> LPAREN COND linecondition linecondition DOSPUNTOS ELSE impresion RPAREN .)
    MAPA            reduce using rule 49 (cond_else -> LPAREN COND linecondition linecondition DOSPUNTOS ELSE impresion RPAREN .)
    IF              reduce using rule 49 (cond_else -> LPAREN COND linecondition linecondition DOSPUNTOS ELSE impresion RPAREN .)
    ENTERO          reduce using rule 49 (cond_else -> LPAREN COND linecondition linecondition DOSPUNTOS ELSE impresion RPAREN .)
    FLOTANTE        reduce using rule 49 (cond_else -> LPAREN COND linecondition linecondition DOSPUNTOS ELSE impresion RPAREN .)
    BOOLEAN         reduce using rule 49 (cond_else -> LPAREN COND linecondition linecondition DOSPUNTOS ELSE impresion RPAREN .)
    RPAREN          reduce using rule 49 (cond_else -> LPAREN COND linecondition linecondition DOSPUNTOS ELSE impresion RPAREN .)


state 232

    (89) doseq_prn -> PRN LPAREN dato RPAREN .

    RPAREN          reduce using rule 89 (doseq_prn -> PRN LPAREN dato RPAREN .)


state 233

    (91) doseq_prn -> PRN dato dato dato .

    RPAREN          reduce using rule 91 (doseq_prn -> PRN dato dato dato .)


state 234

    (85) doseq_args -> LCOR dato LPAREN RANGE dato RPAREN . RCOR

    RCOR            shift and go to state 242


state 235

    (87) doseq_args -> LCOR dato vector dato vector RCOR .

    LPAREN          reduce using rule 87 (doseq_args -> LCOR dato vector dato vector RCOR .)


state 236

    (55) case_expression -> LPAREN CASE dato case DOSPUNTOS ELSE STRING RPAREN .

    $end            reduce using rule 55 (case_expression -> LPAREN CASE dato case DOSPUNTOS ELSE STRING RPAREN .)
    LPAREN          reduce using rule 55 (case_expression -> LPAREN CASE dato case DOSPUNTOS ELSE STRING RPAREN .)
    NUMERAL         reduce using rule 55 (case_expression -> LPAREN CASE dato case DOSPUNTOS ELSE STRING RPAREN .)
    LCOR            reduce using rule 55 (case_expression -> LPAREN CASE dato case DOSPUNTOS ELSE STRING RPAREN .)
    MAPA            reduce using rule 55 (case_expression -> LPAREN CASE dato case DOSPUNTOS ELSE STRING RPAREN .)
    IF              reduce using rule 55 (case_expression -> LPAREN CASE dato case DOSPUNTOS ELSE STRING RPAREN .)
    ENTERO          reduce using rule 55 (case_expression -> LPAREN CASE dato case DOSPUNTOS ELSE STRING RPAREN .)
    FLOTANTE        reduce using rule 55 (case_expression -> LPAREN CASE dato case DOSPUNTOS ELSE STRING RPAREN .)
    BOOLEAN         reduce using rule 55 (case_expression -> LPAREN CASE dato case DOSPUNTOS ELSE STRING RPAREN .)
    RPAREN          reduce using rule 55 (case_expression -> LPAREN CASE dato case DOSPUNTOS ELSE STRING RPAREN .)


state 237

    (63) recur -> LPAREN RECUR LPAREN INC dato RPAREN RPAREN .

    VARIABLE        reduce using rule 63 (recur -> LPAREN RECUR LPAREN INC dato RPAREN RPAREN .)
    $end            reduce using rule 63 (recur -> LPAREN RECUR LPAREN INC dato RPAREN RPAREN .)
    LPAREN          reduce using rule 63 (recur -> LPAREN RECUR LPAREN INC dato RPAREN RPAREN .)
    NUMERAL         reduce using rule 63 (recur -> LPAREN RECUR LPAREN INC dato RPAREN RPAREN .)
    LCOR            reduce using rule 63 (recur -> LPAREN RECUR LPAREN INC dato RPAREN RPAREN .)
    MAPA            reduce using rule 63 (recur -> LPAREN RECUR LPAREN INC dato RPAREN RPAREN .)
    IF              reduce using rule 63 (recur -> LPAREN RECUR LPAREN INC dato RPAREN RPAREN .)
    ENTERO          reduce using rule 63 (recur -> LPAREN RECUR LPAREN INC dato RPAREN RPAREN .)
    FLOTANTE        reduce using rule 63 (recur -> LPAREN RECUR LPAREN INC dato RPAREN RPAREN .)
    BOOLEAN         reduce using rule 63 (recur -> LPAREN RECUR LPAREN INC dato RPAREN RPAREN .)
    RPAREN          reduce using rule 63 (recur -> LPAREN RECUR LPAREN INC dato RPAREN RPAREN .)
    STRING          reduce using rule 63 (recur -> LPAREN RECUR LPAREN INC dato RPAREN RPAREN .)
    CHAR            reduce using rule 63 (recur -> LPAREN RECUR LPAREN INC dato RPAREN RPAREN .)


state 238

    (95) defn -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN . RPAREN
    (97) defn_with_return -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN . RPAREN defn_return

    RPAREN          shift and go to state 243


state 239

    (99) expresionDefnElse -> CASE VARIABLE . expresionCase DOSPUNTOS ELSE STRING
    (101) expresionCase -> . dato STRING
    (25) dato -> . STRING
    (26) dato -> . CHAR
    (27) dato -> . ENTERO
    (28) dato -> . FLOTANTE
    (29) dato -> . BOOLEAN
    (30) dato -> . VARIABLE

    STRING          shift and go to state 65
    CHAR            shift and go to state 66
    ENTERO          shift and go to state 63
    FLOTANTE        shift and go to state 67
    BOOLEAN         shift and go to state 68
    VARIABLE        shift and go to state 76

    expresionCase                  shift and go to state 244
    dato                           shift and go to state 245

state 240

    (100) defn_return -> LPAREN . dato dato RPAREN
    (25) dato -> . STRING
    (26) dato -> . CHAR
    (27) dato -> . ENTERO
    (28) dato -> . FLOTANTE
    (29) dato -> . BOOLEAN
    (30) dato -> . VARIABLE

    STRING          shift and go to state 65
    CHAR            shift and go to state 66
    ENTERO          shift and go to state 63
    FLOTANTE        shift and go to state 67
    BOOLEAN         shift and go to state 68
    VARIABLE        shift and go to state 76

    dato                           shift and go to state 246

state 241

    (98) defn_with_return -> LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN defn_return .

    $end            reduce using rule 98 (defn_with_return -> LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN defn_return .)
    LPAREN          reduce using rule 98 (defn_with_return -> LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN defn_return .)
    NUMERAL         reduce using rule 98 (defn_with_return -> LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN defn_return .)
    LCOR            reduce using rule 98 (defn_with_return -> LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN defn_return .)
    MAPA            reduce using rule 98 (defn_with_return -> LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN defn_return .)
    IF              reduce using rule 98 (defn_with_return -> LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN defn_return .)
    ENTERO          reduce using rule 98 (defn_with_return -> LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN defn_return .)
    FLOTANTE        reduce using rule 98 (defn_with_return -> LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN defn_return .)
    BOOLEAN         reduce using rule 98 (defn_with_return -> LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN defn_return .)
    RPAREN          reduce using rule 98 (defn_with_return -> LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN defn_return .)


state 242

    (85) doseq_args -> LCOR dato LPAREN RANGE dato RPAREN RCOR .

    LPAREN          reduce using rule 85 (doseq_args -> LCOR dato LPAREN RANGE dato RPAREN RCOR .)


state 243

    (95) defn -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN .
    (97) defn_with_return -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN . defn_return
    (100) defn_return -> . LPAREN dato dato RPAREN

  ! shift/reduce conflict for LPAREN resolved as shift
    $end            reduce using rule 95 (defn -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN .)
    NUMERAL         reduce using rule 95 (defn -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN .)
    LCOR            reduce using rule 95 (defn -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN .)
    MAPA            reduce using rule 95 (defn -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN .)
    IF              reduce using rule 95 (defn -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN .)
    ENTERO          reduce using rule 95 (defn -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN .)
    FLOTANTE        reduce using rule 95 (defn -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN .)
    BOOLEAN         reduce using rule 95 (defn -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN .)
    RPAREN          reduce using rule 95 (defn -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN .)
    LPAREN          shift and go to state 240

  ! LPAREN          [ reduce using rule 95 (defn -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN .) ]

    defn_return                    shift and go to state 247

state 244

    (99) expresionDefnElse -> CASE VARIABLE expresionCase . DOSPUNTOS ELSE STRING

    DOSPUNTOS       shift and go to state 248


state 245

    (101) expresionCase -> dato . STRING

    STRING          shift and go to state 249


state 246

    (100) defn_return -> LPAREN dato . dato RPAREN
    (25) dato -> . STRING
    (26) dato -> . CHAR
    (27) dato -> . ENTERO
    (28) dato -> . FLOTANTE
    (29) dato -> . BOOLEAN
    (30) dato -> . VARIABLE

    STRING          shift and go to state 65
    CHAR            shift and go to state 66
    ENTERO          shift and go to state 63
    FLOTANTE        shift and go to state 67
    BOOLEAN         shift and go to state 68
    VARIABLE        shift and go to state 76

    dato                           shift and go to state 250

state 247

    (97) defn_with_return -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN defn_return .

    $end            reduce using rule 97 (defn_with_return -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN defn_return .)
    LPAREN          reduce using rule 97 (defn_with_return -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN defn_return .)
    NUMERAL         reduce using rule 97 (defn_with_return -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN defn_return .)
    LCOR            reduce using rule 97 (defn_with_return -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN defn_return .)
    MAPA            reduce using rule 97 (defn_with_return -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN defn_return .)
    IF              reduce using rule 97 (defn_with_return -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN defn_return .)
    ENTERO          reduce using rule 97 (defn_with_return -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN defn_return .)
    FLOTANTE        reduce using rule 97 (defn_with_return -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN defn_return .)
    BOOLEAN         reduce using rule 97 (defn_with_return -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN defn_return .)
    RPAREN          reduce using rule 97 (defn_with_return -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN defn_return .)


state 248

    (99) expresionDefnElse -> CASE VARIABLE expresionCase DOSPUNTOS . ELSE STRING

    ELSE            shift and go to state 251


state 249

    (101) expresionCase -> dato STRING .

    DOSPUNTOS       reduce using rule 101 (expresionCase -> dato STRING .)


state 250

    (100) defn_return -> LPAREN dato dato . RPAREN

    RPAREN          shift and go to state 252


state 251

    (99) expresionDefnElse -> CASE VARIABLE expresionCase DOSPUNTOS ELSE . STRING

    STRING          shift and go to state 253


state 252

    (100) defn_return -> LPAREN dato dato RPAREN .

    $end            reduce using rule 100 (defn_return -> LPAREN dato dato RPAREN .)
    LPAREN          reduce using rule 100 (defn_return -> LPAREN dato dato RPAREN .)
    NUMERAL         reduce using rule 100 (defn_return -> LPAREN dato dato RPAREN .)
    LCOR            reduce using rule 100 (defn_return -> LPAREN dato dato RPAREN .)
    MAPA            reduce using rule 100 (defn_return -> LPAREN dato dato RPAREN .)
    IF              reduce using rule 100 (defn_return -> LPAREN dato dato RPAREN .)
    ENTERO          reduce using rule 100 (defn_return -> LPAREN dato dato RPAREN .)
    FLOTANTE        reduce using rule 100 (defn_return -> LPAREN dato dato RPAREN .)
    BOOLEAN         reduce using rule 100 (defn_return -> LPAREN dato dato RPAREN .)
    RPAREN          reduce using rule 100 (defn_return -> LPAREN dato dato RPAREN .)


state 253

    (99) expresionDefnElse -> CASE VARIABLE expresionCase DOSPUNTOS ELSE STRING .

    RPAREN          reduce using rule 99 (expresionDefnElse -> CASE VARIABLE expresionCase DOSPUNTOS ELSE STRING .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ENTERO in state 62 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 70 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 80 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 91 resolved as shift
WARNING: shift/reduce conflict for IF in state 91 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 166 resolved as shift
WARNING: shift/reduce conflict for RCOR in state 166 resolved as shift
WARNING: shift/reduce conflict for RCOR in state 170 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 229 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 243 resolved as shift
WARNING: reduce/reduce conflict in state 80 resolved using rule (instrucciones -> sentencia_booleana)
WARNING: rejected rule (if -> IF sentencia_booleana) in state 80
WARNING: reduce/reduce conflict in state 169 resolved using rule (argumments -> LCOR argumentos_lista RCOR)
WARNING: rejected rule (vector -> LCOR argumentos_lista RCOR) in state 169
