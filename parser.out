Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    CLASE
    CONJUNTOS
    DO
    DOTIMES
    FUNCION
    FUTURE
    IGUAL
    INPUT
    LISTA
    MAPAS
    NOT
    NS
    NUEVO
    STR
    WHEN

Grammar

Rule 0     S' -> instrucciones
Rule 1     instrucciones -> asignacion
Rule 2     instrucciones -> impresion
Rule 3     instrucciones -> operacion_aritmetica1
Rule 4     instrucciones -> condicional
Rule 5     instrucciones -> vectores
Rule 6     instrucciones -> conjuntos
Rule 7     instrucciones -> defn
Rule 8     instrucciones -> operacionesLogicas
Rule 9     instrucciones -> sentenciaLoopRecur
Rule 10    instrucciones -> cond_
Rule 11    instrucciones -> cond_else
Rule 12    instrucciones -> doseq
Rule 13    instrucciones -> case
Rule 14    instrucciones -> case_expression
Rule 15    instrucciones -> lista
Rule 16    instrucciones -> sentencia_booleana
Rule 17    instrucciones -> operador_comparadores
Rule 18    dato -> STRING
Rule 19    dato -> CHAR
Rule 20    dato -> ENTERO
Rule 21    dato -> FLOTANTE
Rule 22    dato -> BOOLEAN
Rule 23    dato -> VARIABLE
Rule 24    valor -> ENTERO
Rule 25    valor -> FLOTANTE
Rule 26    valor -> BOOLEAN
Rule 27    operador_comparadores -> COMPARA_IGUAL
Rule 28    operador_comparadores -> MENORQUE
Rule 29    operador_comparadores -> MAYORQUE
Rule 30    operador_comparadores -> MAYORIGUALQUE
Rule 31    operador_comparadores -> MENORIGUALQUE
Rule 32    operador_comparadores -> DIFERENTE
Rule 33    asignacion -> LPAREN DEFICION VARIABLE dato RPAREN
Rule 34    asignacion -> LPAREN LET LCOR VARIABLE dato RCOR RPAREN
Rule 35    sentencia_booleana -> LPAREN operador_comparadores dato dato RPAREN
Rule 36    linecondition -> sentencia_booleana impresion
Rule 37    cond_ -> LPAREN COND linecondition linecondition RPAREN
Rule 38    cond_else -> LPAREN COND linecondition linecondition DOSPUNTOS ELSE impresion RPAREN
Rule 39    case -> dato impresion
Rule 40    case_expression -> LPAREN CASE dato case case case impresion RPAREN
Rule 41    lista -> LPAREN LIST dato dato RPAREN
Rule 42    impresion -> LPAREN IMPRIMIR dato RPAREN
Rule 43    valor -> VARIABLE
Rule 44    operacion -> MAS
Rule 45    operacion -> MENOS
Rule 46    operacion -> PRODUCTO
Rule 47    operacion -> DIVISION
Rule 48    operacionesLogicas -> LPAREN IF LPAREN MENORQUE VARIABLE ENTERO RPAREN LPAREN RECUR LPAREN INC LPAREN VARIABLE RPAREN RPAREN VARIABLE RPAREN RPAREN
Rule 49    operacion_aritmetica1 -> LPAREN operacion valor valor RPAREN
Rule 50    condicional -> LPAREN operacion valor valor RPAREN
Rule 51    vectores -> VECTORES
Rule 52    doseq -> LPAREN DOSEQ LCOR VARIABLE LPAREN RANGE VARIABLE RPAREN RCOR LPAREN impresion RPAREN RPAREN
Rule 53    defn -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN
Rule 54    defn -> LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN
Rule 55    expresionDefnElse -> CASE VARIABLE expresionCase DOSPUNTOS ELSE STRING
Rule 56    expresionCase -> dato STRING
Rule 57    conjuntos -> NUMERAL L_LLAVE expresionConjuntoEnteros R_LLAVE
Rule 58    conjuntos -> NUMERAL L_LLAVE expresionConjuntoDouble R_LLAVE
Rule 59    conjuntos -> NUMERAL L_LLAVE expresionConjuntoString R_LLAVE
Rule 60    sentenciaLoopRecur -> LPAREN LOOP LCOR VARIABLE ENTERO RCOR operacionesLogicas RPAREN
Rule 61    expresionConjuntoEnteros -> ENTERO
Rule 62    expresionConjuntoEnteros -> ENTERO expresionConjuntoEnteros
Rule 63    expresionConjuntoDouble -> FLOTANTE
Rule 64    expresionConjuntoDouble -> FLOTANTE expresionConjuntoDouble
Rule 65    expresionConjuntoString -> STRING
Rule 66    expresionConjuntoString -> STRING expresionConjuntoString

Terminals, with rules where they appear

BOOLEAN              : 22 26
CASE                 : 40 55
CHAR                 : 19
CLASE                : 
COMPARA_IGUAL        : 27
COND                 : 37 38
CONJUNTOS            : 
DEFFUNCION           : 53 54
DEFICION             : 33
DIFERENTE            : 32
DIVISION             : 47
DO                   : 
DOSEQ                : 52
DOSPUNTOS            : 38 55
DOTIMES              : 
ELSE                 : 38 55
ENTERO               : 20 24 48 60 61 62
FLOTANTE             : 21 25 63 64
FUNCION              : 
FUTURE               : 
IF                   : 48
IGUAL                : 
IMPRIMIR             : 42
INC                  : 48
INCREASE             : 54
INPUT                : 
LCOR                 : 34 52 53 54 60
LET                  : 34
LIST                 : 41
LISTA                : 
LOOP                 : 60
LPAREN               : 33 34 35 37 38 40 41 42 48 48 48 48 48 49 50 52 52 52 53 53 54 60
L_LLAVE              : 57 58 59
MAPAS                : 
MAS                  : 44
MAYORIGUALQUE        : 30
MAYORQUE             : 29
MENORIGUALQUE        : 31
MENORQUE             : 28 48
MENOS                : 45
NOT                  : 
NS                   : 
NUEVO                : 
NUMERAL              : 57 58 59
PRODUCTO             : 46
RANGE                : 52
RCOR                 : 34 52 53 54 60
RECUR                : 48
RPAREN               : 33 34 35 37 38 40 41 42 48 48 48 48 48 49 50 52 52 52 53 53 54 60
R_LLAVE              : 57 58 59
STR                  : 
STRING               : 18 55 56 65 66
VARIABLE             : 23 33 34 43 48 48 48 52 52 53 53 54 55 60
VECTORES             : 51
WHEN                 : 
error                : 

Nonterminals, with rules where they appear

asignacion           : 1
case                 : 13 40 40 40
case_expression      : 14
cond_                : 10
cond_else            : 11
condicional          : 4
conjuntos            : 6
dato                 : 33 34 35 35 39 40 41 41 42 56
defn                 : 7
doseq                : 12
expresionCase        : 55
expresionConjuntoDouble : 58 64
expresionConjuntoEnteros : 57 62
expresionConjuntoString : 59 66
expresionDefnElse    : 53
impresion            : 2 36 38 39 40 52
instrucciones        : 0
linecondition        : 37 37 38 38
lista                : 15
operacion            : 49 50
operacion_aritmetica1 : 3
operacionesLogicas   : 8 54 60
operador_comparadores : 17 35
sentenciaLoopRecur   : 9
sentencia_booleana   : 16 36
valor                : 49 49 50 50
vectores             : 5

Parsing method: LALR

state 0

    (0) S' -> . instrucciones
    (1) instrucciones -> . asignacion
    (2) instrucciones -> . impresion
    (3) instrucciones -> . operacion_aritmetica1
    (4) instrucciones -> . condicional
    (5) instrucciones -> . vectores
    (6) instrucciones -> . conjuntos
    (7) instrucciones -> . defn
    (8) instrucciones -> . operacionesLogicas
    (9) instrucciones -> . sentenciaLoopRecur
    (10) instrucciones -> . cond_
    (11) instrucciones -> . cond_else
    (12) instrucciones -> . doseq
    (13) instrucciones -> . case
    (14) instrucciones -> . case_expression
    (15) instrucciones -> . lista
    (16) instrucciones -> . sentencia_booleana
    (17) instrucciones -> . operador_comparadores
    (33) asignacion -> . LPAREN DEFICION VARIABLE dato RPAREN
    (34) asignacion -> . LPAREN LET LCOR VARIABLE dato RCOR RPAREN
    (42) impresion -> . LPAREN IMPRIMIR dato RPAREN
    (49) operacion_aritmetica1 -> . LPAREN operacion valor valor RPAREN
    (50) condicional -> . LPAREN operacion valor valor RPAREN
    (51) vectores -> . VECTORES
    (57) conjuntos -> . NUMERAL L_LLAVE expresionConjuntoEnteros R_LLAVE
    (58) conjuntos -> . NUMERAL L_LLAVE expresionConjuntoDouble R_LLAVE
    (59) conjuntos -> . NUMERAL L_LLAVE expresionConjuntoString R_LLAVE
    (53) defn -> . LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN
    (54) defn -> . LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN
    (48) operacionesLogicas -> . LPAREN IF LPAREN MENORQUE VARIABLE ENTERO RPAREN LPAREN RECUR LPAREN INC LPAREN VARIABLE RPAREN RPAREN VARIABLE RPAREN RPAREN
    (60) sentenciaLoopRecur -> . LPAREN LOOP LCOR VARIABLE ENTERO RCOR operacionesLogicas RPAREN
    (37) cond_ -> . LPAREN COND linecondition linecondition RPAREN
    (38) cond_else -> . LPAREN COND linecondition linecondition DOSPUNTOS ELSE impresion RPAREN
    (52) doseq -> . LPAREN DOSEQ LCOR VARIABLE LPAREN RANGE VARIABLE RPAREN RCOR LPAREN impresion RPAREN RPAREN
    (39) case -> . dato impresion
    (40) case_expression -> . LPAREN CASE dato case case case impresion RPAREN
    (41) lista -> . LPAREN LIST dato dato RPAREN
    (35) sentencia_booleana -> . LPAREN operador_comparadores dato dato RPAREN
    (27) operador_comparadores -> . COMPARA_IGUAL
    (28) operador_comparadores -> . MENORQUE
    (29) operador_comparadores -> . MAYORQUE
    (30) operador_comparadores -> . MAYORIGUALQUE
    (31) operador_comparadores -> . MENORIGUALQUE
    (32) operador_comparadores -> . DIFERENTE
    (18) dato -> . STRING
    (19) dato -> . CHAR
    (20) dato -> . ENTERO
    (21) dato -> . FLOTANTE
    (22) dato -> . BOOLEAN
    (23) dato -> . VARIABLE

    LPAREN          shift and go to state 19
    VECTORES        shift and go to state 22
    NUMERAL         shift and go to state 23
    COMPARA_IGUAL   shift and go to state 26
    MENORQUE        shift and go to state 24
    MAYORQUE        shift and go to state 27
    MAYORIGUALQUE   shift and go to state 28
    MENORIGUALQUE   shift and go to state 29
    DIFERENTE       shift and go to state 30
    STRING          shift and go to state 31
    CHAR            shift and go to state 32
    ENTERO          shift and go to state 25
    FLOTANTE        shift and go to state 33
    BOOLEAN         shift and go to state 34
    VARIABLE        shift and go to state 20

    instrucciones                  shift and go to state 1
    asignacion                     shift and go to state 2
    impresion                      shift and go to state 3
    operacion_aritmetica1          shift and go to state 4
    condicional                    shift and go to state 5
    vectores                       shift and go to state 6
    conjuntos                      shift and go to state 7
    defn                           shift and go to state 8
    operacionesLogicas             shift and go to state 9
    sentenciaLoopRecur             shift and go to state 10
    cond_                          shift and go to state 11
    cond_else                      shift and go to state 12
    doseq                          shift and go to state 13
    case                           shift and go to state 14
    case_expression                shift and go to state 15
    lista                          shift and go to state 16
    sentencia_booleana             shift and go to state 17
    operador_comparadores          shift and go to state 18
    dato                           shift and go to state 21

state 1

    (0) S' -> instrucciones .



state 2

    (1) instrucciones -> asignacion .

    $end            reduce using rule 1 (instrucciones -> asignacion .)


state 3

    (2) instrucciones -> impresion .

    $end            reduce using rule 2 (instrucciones -> impresion .)


state 4

    (3) instrucciones -> operacion_aritmetica1 .

    $end            reduce using rule 3 (instrucciones -> operacion_aritmetica1 .)


state 5

    (4) instrucciones -> condicional .

    $end            reduce using rule 4 (instrucciones -> condicional .)


state 6

    (5) instrucciones -> vectores .

    $end            reduce using rule 5 (instrucciones -> vectores .)


state 7

    (6) instrucciones -> conjuntos .

    $end            reduce using rule 6 (instrucciones -> conjuntos .)


state 8

    (7) instrucciones -> defn .

    $end            reduce using rule 7 (instrucciones -> defn .)


state 9

    (8) instrucciones -> operacionesLogicas .

    $end            reduce using rule 8 (instrucciones -> operacionesLogicas .)


state 10

    (9) instrucciones -> sentenciaLoopRecur .

    $end            reduce using rule 9 (instrucciones -> sentenciaLoopRecur .)


state 11

    (10) instrucciones -> cond_ .

    $end            reduce using rule 10 (instrucciones -> cond_ .)


state 12

    (11) instrucciones -> cond_else .

    $end            reduce using rule 11 (instrucciones -> cond_else .)


state 13

    (12) instrucciones -> doseq .

    $end            reduce using rule 12 (instrucciones -> doseq .)


state 14

    (13) instrucciones -> case .

    $end            reduce using rule 13 (instrucciones -> case .)


state 15

    (14) instrucciones -> case_expression .

    $end            reduce using rule 14 (instrucciones -> case_expression .)


state 16

    (15) instrucciones -> lista .

    $end            reduce using rule 15 (instrucciones -> lista .)


state 17

    (16) instrucciones -> sentencia_booleana .

    $end            reduce using rule 16 (instrucciones -> sentencia_booleana .)


state 18

    (17) instrucciones -> operador_comparadores .

    $end            reduce using rule 17 (instrucciones -> operador_comparadores .)


state 19

    (33) asignacion -> LPAREN . DEFICION VARIABLE dato RPAREN
    (34) asignacion -> LPAREN . LET LCOR VARIABLE dato RCOR RPAREN
    (42) impresion -> LPAREN . IMPRIMIR dato RPAREN
    (49) operacion_aritmetica1 -> LPAREN . operacion valor valor RPAREN
    (50) condicional -> LPAREN . operacion valor valor RPAREN
    (53) defn -> LPAREN . DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN
    (54) defn -> LPAREN . DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN
    (48) operacionesLogicas -> LPAREN . IF LPAREN MENORQUE VARIABLE ENTERO RPAREN LPAREN RECUR LPAREN INC LPAREN VARIABLE RPAREN RPAREN VARIABLE RPAREN RPAREN
    (60) sentenciaLoopRecur -> LPAREN . LOOP LCOR VARIABLE ENTERO RCOR operacionesLogicas RPAREN
    (37) cond_ -> LPAREN . COND linecondition linecondition RPAREN
    (38) cond_else -> LPAREN . COND linecondition linecondition DOSPUNTOS ELSE impresion RPAREN
    (52) doseq -> LPAREN . DOSEQ LCOR VARIABLE LPAREN RANGE VARIABLE RPAREN RCOR LPAREN impresion RPAREN RPAREN
    (40) case_expression -> LPAREN . CASE dato case case case impresion RPAREN
    (41) lista -> LPAREN . LIST dato dato RPAREN
    (35) sentencia_booleana -> LPAREN . operador_comparadores dato dato RPAREN
    (44) operacion -> . MAS
    (45) operacion -> . MENOS
    (46) operacion -> . PRODUCTO
    (47) operacion -> . DIVISION
    (27) operador_comparadores -> . COMPARA_IGUAL
    (28) operador_comparadores -> . MENORQUE
    (29) operador_comparadores -> . MAYORQUE
    (30) operador_comparadores -> . MAYORIGUALQUE
    (31) operador_comparadores -> . MENORIGUALQUE
    (32) operador_comparadores -> . DIFERENTE

    DEFICION        shift and go to state 35
    LET             shift and go to state 36
    IMPRIMIR        shift and go to state 37
    DEFFUNCION      shift and go to state 39
    IF              shift and go to state 40
    LOOP            shift and go to state 41
    COND            shift and go to state 42
    DOSEQ           shift and go to state 43
    CASE            shift and go to state 44
    LIST            shift and go to state 45
    MAS             shift and go to state 47
    MENOS           shift and go to state 48
    PRODUCTO        shift and go to state 49
    DIVISION        shift and go to state 50
    COMPARA_IGUAL   shift and go to state 26
    MENORQUE        shift and go to state 24
    MAYORQUE        shift and go to state 27
    MAYORIGUALQUE   shift and go to state 28
    MENORIGUALQUE   shift and go to state 29
    DIFERENTE       shift and go to state 30

    operacion                      shift and go to state 38
    operador_comparadores          shift and go to state 46

state 20

    (23) dato -> VARIABLE .

    LPAREN          reduce using rule 23 (dato -> VARIABLE .)
    RPAREN          reduce using rule 23 (dato -> VARIABLE .)
    STRING          reduce using rule 23 (dato -> VARIABLE .)
    CHAR            reduce using rule 23 (dato -> VARIABLE .)
    ENTERO          reduce using rule 23 (dato -> VARIABLE .)
    FLOTANTE        reduce using rule 23 (dato -> VARIABLE .)
    BOOLEAN         reduce using rule 23 (dato -> VARIABLE .)
    VARIABLE        reduce using rule 23 (dato -> VARIABLE .)
    RCOR            reduce using rule 23 (dato -> VARIABLE .)


state 21

    (39) case -> dato . impresion
    (42) impresion -> . LPAREN IMPRIMIR dato RPAREN

    LPAREN          shift and go to state 52

    impresion                      shift and go to state 51

state 22

    (51) vectores -> VECTORES .

    $end            reduce using rule 51 (vectores -> VECTORES .)


state 23

    (57) conjuntos -> NUMERAL . L_LLAVE expresionConjuntoEnteros R_LLAVE
    (58) conjuntos -> NUMERAL . L_LLAVE expresionConjuntoDouble R_LLAVE
    (59) conjuntos -> NUMERAL . L_LLAVE expresionConjuntoString R_LLAVE

    L_LLAVE         shift and go to state 53


state 24

    (28) operador_comparadores -> MENORQUE .

    $end            reduce using rule 28 (operador_comparadores -> MENORQUE .)
    STRING          reduce using rule 28 (operador_comparadores -> MENORQUE .)
    CHAR            reduce using rule 28 (operador_comparadores -> MENORQUE .)
    ENTERO          reduce using rule 28 (operador_comparadores -> MENORQUE .)
    FLOTANTE        reduce using rule 28 (operador_comparadores -> MENORQUE .)
    BOOLEAN         reduce using rule 28 (operador_comparadores -> MENORQUE .)
    VARIABLE        reduce using rule 28 (operador_comparadores -> MENORQUE .)


state 25

    (20) dato -> ENTERO .

    LPAREN          reduce using rule 20 (dato -> ENTERO .)
    RPAREN          reduce using rule 20 (dato -> ENTERO .)
    STRING          reduce using rule 20 (dato -> ENTERO .)
    CHAR            reduce using rule 20 (dato -> ENTERO .)
    ENTERO          reduce using rule 20 (dato -> ENTERO .)
    FLOTANTE        reduce using rule 20 (dato -> ENTERO .)
    BOOLEAN         reduce using rule 20 (dato -> ENTERO .)
    VARIABLE        reduce using rule 20 (dato -> ENTERO .)
    RCOR            reduce using rule 20 (dato -> ENTERO .)


state 26

    (27) operador_comparadores -> COMPARA_IGUAL .

    $end            reduce using rule 27 (operador_comparadores -> COMPARA_IGUAL .)
    STRING          reduce using rule 27 (operador_comparadores -> COMPARA_IGUAL .)
    CHAR            reduce using rule 27 (operador_comparadores -> COMPARA_IGUAL .)
    ENTERO          reduce using rule 27 (operador_comparadores -> COMPARA_IGUAL .)
    FLOTANTE        reduce using rule 27 (operador_comparadores -> COMPARA_IGUAL .)
    BOOLEAN         reduce using rule 27 (operador_comparadores -> COMPARA_IGUAL .)
    VARIABLE        reduce using rule 27 (operador_comparadores -> COMPARA_IGUAL .)


state 27

    (29) operador_comparadores -> MAYORQUE .

    $end            reduce using rule 29 (operador_comparadores -> MAYORQUE .)
    STRING          reduce using rule 29 (operador_comparadores -> MAYORQUE .)
    CHAR            reduce using rule 29 (operador_comparadores -> MAYORQUE .)
    ENTERO          reduce using rule 29 (operador_comparadores -> MAYORQUE .)
    FLOTANTE        reduce using rule 29 (operador_comparadores -> MAYORQUE .)
    BOOLEAN         reduce using rule 29 (operador_comparadores -> MAYORQUE .)
    VARIABLE        reduce using rule 29 (operador_comparadores -> MAYORQUE .)


state 28

    (30) operador_comparadores -> MAYORIGUALQUE .

    $end            reduce using rule 30 (operador_comparadores -> MAYORIGUALQUE .)
    STRING          reduce using rule 30 (operador_comparadores -> MAYORIGUALQUE .)
    CHAR            reduce using rule 30 (operador_comparadores -> MAYORIGUALQUE .)
    ENTERO          reduce using rule 30 (operador_comparadores -> MAYORIGUALQUE .)
    FLOTANTE        reduce using rule 30 (operador_comparadores -> MAYORIGUALQUE .)
    BOOLEAN         reduce using rule 30 (operador_comparadores -> MAYORIGUALQUE .)
    VARIABLE        reduce using rule 30 (operador_comparadores -> MAYORIGUALQUE .)


state 29

    (31) operador_comparadores -> MENORIGUALQUE .

    $end            reduce using rule 31 (operador_comparadores -> MENORIGUALQUE .)
    STRING          reduce using rule 31 (operador_comparadores -> MENORIGUALQUE .)
    CHAR            reduce using rule 31 (operador_comparadores -> MENORIGUALQUE .)
    ENTERO          reduce using rule 31 (operador_comparadores -> MENORIGUALQUE .)
    FLOTANTE        reduce using rule 31 (operador_comparadores -> MENORIGUALQUE .)
    BOOLEAN         reduce using rule 31 (operador_comparadores -> MENORIGUALQUE .)
    VARIABLE        reduce using rule 31 (operador_comparadores -> MENORIGUALQUE .)


state 30

    (32) operador_comparadores -> DIFERENTE .

    $end            reduce using rule 32 (operador_comparadores -> DIFERENTE .)
    STRING          reduce using rule 32 (operador_comparadores -> DIFERENTE .)
    CHAR            reduce using rule 32 (operador_comparadores -> DIFERENTE .)
    ENTERO          reduce using rule 32 (operador_comparadores -> DIFERENTE .)
    FLOTANTE        reduce using rule 32 (operador_comparadores -> DIFERENTE .)
    BOOLEAN         reduce using rule 32 (operador_comparadores -> DIFERENTE .)
    VARIABLE        reduce using rule 32 (operador_comparadores -> DIFERENTE .)


state 31

    (18) dato -> STRING .

    LPAREN          reduce using rule 18 (dato -> STRING .)
    RPAREN          reduce using rule 18 (dato -> STRING .)
    STRING          reduce using rule 18 (dato -> STRING .)
    CHAR            reduce using rule 18 (dato -> STRING .)
    ENTERO          reduce using rule 18 (dato -> STRING .)
    FLOTANTE        reduce using rule 18 (dato -> STRING .)
    BOOLEAN         reduce using rule 18 (dato -> STRING .)
    VARIABLE        reduce using rule 18 (dato -> STRING .)
    RCOR            reduce using rule 18 (dato -> STRING .)


state 32

    (19) dato -> CHAR .

    LPAREN          reduce using rule 19 (dato -> CHAR .)
    RPAREN          reduce using rule 19 (dato -> CHAR .)
    STRING          reduce using rule 19 (dato -> CHAR .)
    CHAR            reduce using rule 19 (dato -> CHAR .)
    ENTERO          reduce using rule 19 (dato -> CHAR .)
    FLOTANTE        reduce using rule 19 (dato -> CHAR .)
    BOOLEAN         reduce using rule 19 (dato -> CHAR .)
    VARIABLE        reduce using rule 19 (dato -> CHAR .)
    RCOR            reduce using rule 19 (dato -> CHAR .)


state 33

    (21) dato -> FLOTANTE .

    LPAREN          reduce using rule 21 (dato -> FLOTANTE .)
    RPAREN          reduce using rule 21 (dato -> FLOTANTE .)
    STRING          reduce using rule 21 (dato -> FLOTANTE .)
    CHAR            reduce using rule 21 (dato -> FLOTANTE .)
    ENTERO          reduce using rule 21 (dato -> FLOTANTE .)
    FLOTANTE        reduce using rule 21 (dato -> FLOTANTE .)
    BOOLEAN         reduce using rule 21 (dato -> FLOTANTE .)
    VARIABLE        reduce using rule 21 (dato -> FLOTANTE .)
    RCOR            reduce using rule 21 (dato -> FLOTANTE .)


state 34

    (22) dato -> BOOLEAN .

    LPAREN          reduce using rule 22 (dato -> BOOLEAN .)
    RPAREN          reduce using rule 22 (dato -> BOOLEAN .)
    STRING          reduce using rule 22 (dato -> BOOLEAN .)
    CHAR            reduce using rule 22 (dato -> BOOLEAN .)
    ENTERO          reduce using rule 22 (dato -> BOOLEAN .)
    FLOTANTE        reduce using rule 22 (dato -> BOOLEAN .)
    BOOLEAN         reduce using rule 22 (dato -> BOOLEAN .)
    VARIABLE        reduce using rule 22 (dato -> BOOLEAN .)
    RCOR            reduce using rule 22 (dato -> BOOLEAN .)


state 35

    (33) asignacion -> LPAREN DEFICION . VARIABLE dato RPAREN

    VARIABLE        shift and go to state 54


state 36

    (34) asignacion -> LPAREN LET . LCOR VARIABLE dato RCOR RPAREN

    LCOR            shift and go to state 55


state 37

    (42) impresion -> LPAREN IMPRIMIR . dato RPAREN
    (18) dato -> . STRING
    (19) dato -> . CHAR
    (20) dato -> . ENTERO
    (21) dato -> . FLOTANTE
    (22) dato -> . BOOLEAN
    (23) dato -> . VARIABLE

    STRING          shift and go to state 31
    CHAR            shift and go to state 32
    ENTERO          shift and go to state 25
    FLOTANTE        shift and go to state 33
    BOOLEAN         shift and go to state 34
    VARIABLE        shift and go to state 20

    dato                           shift and go to state 56

state 38

    (49) operacion_aritmetica1 -> LPAREN operacion . valor valor RPAREN
    (50) condicional -> LPAREN operacion . valor valor RPAREN
    (24) valor -> . ENTERO
    (25) valor -> . FLOTANTE
    (26) valor -> . BOOLEAN
    (43) valor -> . VARIABLE

    ENTERO          shift and go to state 58
    FLOTANTE        shift and go to state 59
    BOOLEAN         shift and go to state 60
    VARIABLE        shift and go to state 61

    valor                          shift and go to state 57

state 39

    (53) defn -> LPAREN DEFFUNCION . VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN
    (54) defn -> LPAREN DEFFUNCION . INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN

    VARIABLE        shift and go to state 62
    INCREASE        shift and go to state 63


state 40

    (48) operacionesLogicas -> LPAREN IF . LPAREN MENORQUE VARIABLE ENTERO RPAREN LPAREN RECUR LPAREN INC LPAREN VARIABLE RPAREN RPAREN VARIABLE RPAREN RPAREN

    LPAREN          shift and go to state 64


state 41

    (60) sentenciaLoopRecur -> LPAREN LOOP . LCOR VARIABLE ENTERO RCOR operacionesLogicas RPAREN

    LCOR            shift and go to state 65


state 42

    (37) cond_ -> LPAREN COND . linecondition linecondition RPAREN
    (38) cond_else -> LPAREN COND . linecondition linecondition DOSPUNTOS ELSE impresion RPAREN
    (36) linecondition -> . sentencia_booleana impresion
    (35) sentencia_booleana -> . LPAREN operador_comparadores dato dato RPAREN

    LPAREN          shift and go to state 66

    linecondition                  shift and go to state 67
    sentencia_booleana             shift and go to state 68

state 43

    (52) doseq -> LPAREN DOSEQ . LCOR VARIABLE LPAREN RANGE VARIABLE RPAREN RCOR LPAREN impresion RPAREN RPAREN

    LCOR            shift and go to state 69


state 44

    (40) case_expression -> LPAREN CASE . dato case case case impresion RPAREN
    (18) dato -> . STRING
    (19) dato -> . CHAR
    (20) dato -> . ENTERO
    (21) dato -> . FLOTANTE
    (22) dato -> . BOOLEAN
    (23) dato -> . VARIABLE

    STRING          shift and go to state 31
    CHAR            shift and go to state 32
    ENTERO          shift and go to state 25
    FLOTANTE        shift and go to state 33
    BOOLEAN         shift and go to state 34
    VARIABLE        shift and go to state 20

    dato                           shift and go to state 70

state 45

    (41) lista -> LPAREN LIST . dato dato RPAREN
    (18) dato -> . STRING
    (19) dato -> . CHAR
    (20) dato -> . ENTERO
    (21) dato -> . FLOTANTE
    (22) dato -> . BOOLEAN
    (23) dato -> . VARIABLE

    STRING          shift and go to state 31
    CHAR            shift and go to state 32
    ENTERO          shift and go to state 25
    FLOTANTE        shift and go to state 33
    BOOLEAN         shift and go to state 34
    VARIABLE        shift and go to state 20

    dato                           shift and go to state 71

state 46

    (35) sentencia_booleana -> LPAREN operador_comparadores . dato dato RPAREN
    (18) dato -> . STRING
    (19) dato -> . CHAR
    (20) dato -> . ENTERO
    (21) dato -> . FLOTANTE
    (22) dato -> . BOOLEAN
    (23) dato -> . VARIABLE

    STRING          shift and go to state 31
    CHAR            shift and go to state 32
    ENTERO          shift and go to state 25
    FLOTANTE        shift and go to state 33
    BOOLEAN         shift and go to state 34
    VARIABLE        shift and go to state 20

    dato                           shift and go to state 72

state 47

    (44) operacion -> MAS .

    ENTERO          reduce using rule 44 (operacion -> MAS .)
    FLOTANTE        reduce using rule 44 (operacion -> MAS .)
    BOOLEAN         reduce using rule 44 (operacion -> MAS .)
    VARIABLE        reduce using rule 44 (operacion -> MAS .)


state 48

    (45) operacion -> MENOS .

    ENTERO          reduce using rule 45 (operacion -> MENOS .)
    FLOTANTE        reduce using rule 45 (operacion -> MENOS .)
    BOOLEAN         reduce using rule 45 (operacion -> MENOS .)
    VARIABLE        reduce using rule 45 (operacion -> MENOS .)


state 49

    (46) operacion -> PRODUCTO .

    ENTERO          reduce using rule 46 (operacion -> PRODUCTO .)
    FLOTANTE        reduce using rule 46 (operacion -> PRODUCTO .)
    BOOLEAN         reduce using rule 46 (operacion -> PRODUCTO .)
    VARIABLE        reduce using rule 46 (operacion -> PRODUCTO .)


state 50

    (47) operacion -> DIVISION .

    ENTERO          reduce using rule 47 (operacion -> DIVISION .)
    FLOTANTE        reduce using rule 47 (operacion -> DIVISION .)
    BOOLEAN         reduce using rule 47 (operacion -> DIVISION .)
    VARIABLE        reduce using rule 47 (operacion -> DIVISION .)


state 51

    (39) case -> dato impresion .

    $end            reduce using rule 39 (case -> dato impresion .)
    STRING          reduce using rule 39 (case -> dato impresion .)
    CHAR            reduce using rule 39 (case -> dato impresion .)
    ENTERO          reduce using rule 39 (case -> dato impresion .)
    FLOTANTE        reduce using rule 39 (case -> dato impresion .)
    BOOLEAN         reduce using rule 39 (case -> dato impresion .)
    VARIABLE        reduce using rule 39 (case -> dato impresion .)
    LPAREN          reduce using rule 39 (case -> dato impresion .)


state 52

    (42) impresion -> LPAREN . IMPRIMIR dato RPAREN

    IMPRIMIR        shift and go to state 37


state 53

    (57) conjuntos -> NUMERAL L_LLAVE . expresionConjuntoEnteros R_LLAVE
    (58) conjuntos -> NUMERAL L_LLAVE . expresionConjuntoDouble R_LLAVE
    (59) conjuntos -> NUMERAL L_LLAVE . expresionConjuntoString R_LLAVE
    (61) expresionConjuntoEnteros -> . ENTERO
    (62) expresionConjuntoEnteros -> . ENTERO expresionConjuntoEnteros
    (63) expresionConjuntoDouble -> . FLOTANTE
    (64) expresionConjuntoDouble -> . FLOTANTE expresionConjuntoDouble
    (65) expresionConjuntoString -> . STRING
    (66) expresionConjuntoString -> . STRING expresionConjuntoString

    ENTERO          shift and go to state 76
    FLOTANTE        shift and go to state 77
    STRING          shift and go to state 78

    expresionConjuntoEnteros       shift and go to state 73
    expresionConjuntoDouble        shift and go to state 74
    expresionConjuntoString        shift and go to state 75

state 54

    (33) asignacion -> LPAREN DEFICION VARIABLE . dato RPAREN
    (18) dato -> . STRING
    (19) dato -> . CHAR
    (20) dato -> . ENTERO
    (21) dato -> . FLOTANTE
    (22) dato -> . BOOLEAN
    (23) dato -> . VARIABLE

    STRING          shift and go to state 31
    CHAR            shift and go to state 32
    ENTERO          shift and go to state 25
    FLOTANTE        shift and go to state 33
    BOOLEAN         shift and go to state 34
    VARIABLE        shift and go to state 20

    dato                           shift and go to state 79

state 55

    (34) asignacion -> LPAREN LET LCOR . VARIABLE dato RCOR RPAREN

    VARIABLE        shift and go to state 80


state 56

    (42) impresion -> LPAREN IMPRIMIR dato . RPAREN

    RPAREN          shift and go to state 81


state 57

    (49) operacion_aritmetica1 -> LPAREN operacion valor . valor RPAREN
    (50) condicional -> LPAREN operacion valor . valor RPAREN
    (24) valor -> . ENTERO
    (25) valor -> . FLOTANTE
    (26) valor -> . BOOLEAN
    (43) valor -> . VARIABLE

    ENTERO          shift and go to state 58
    FLOTANTE        shift and go to state 59
    BOOLEAN         shift and go to state 60
    VARIABLE        shift and go to state 61

    valor                          shift and go to state 82

state 58

    (24) valor -> ENTERO .

    ENTERO          reduce using rule 24 (valor -> ENTERO .)
    FLOTANTE        reduce using rule 24 (valor -> ENTERO .)
    BOOLEAN         reduce using rule 24 (valor -> ENTERO .)
    VARIABLE        reduce using rule 24 (valor -> ENTERO .)
    RPAREN          reduce using rule 24 (valor -> ENTERO .)


state 59

    (25) valor -> FLOTANTE .

    ENTERO          reduce using rule 25 (valor -> FLOTANTE .)
    FLOTANTE        reduce using rule 25 (valor -> FLOTANTE .)
    BOOLEAN         reduce using rule 25 (valor -> FLOTANTE .)
    VARIABLE        reduce using rule 25 (valor -> FLOTANTE .)
    RPAREN          reduce using rule 25 (valor -> FLOTANTE .)


state 60

    (26) valor -> BOOLEAN .

    ENTERO          reduce using rule 26 (valor -> BOOLEAN .)
    FLOTANTE        reduce using rule 26 (valor -> BOOLEAN .)
    BOOLEAN         reduce using rule 26 (valor -> BOOLEAN .)
    VARIABLE        reduce using rule 26 (valor -> BOOLEAN .)
    RPAREN          reduce using rule 26 (valor -> BOOLEAN .)


state 61

    (43) valor -> VARIABLE .

    ENTERO          reduce using rule 43 (valor -> VARIABLE .)
    FLOTANTE        reduce using rule 43 (valor -> VARIABLE .)
    BOOLEAN         reduce using rule 43 (valor -> VARIABLE .)
    VARIABLE        reduce using rule 43 (valor -> VARIABLE .)
    RPAREN          reduce using rule 43 (valor -> VARIABLE .)


state 62

    (53) defn -> LPAREN DEFFUNCION VARIABLE . LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN

    LCOR            shift and go to state 83


state 63

    (54) defn -> LPAREN DEFFUNCION INCREASE . LCOR VARIABLE RCOR operacionesLogicas RPAREN

    LCOR            shift and go to state 84


state 64

    (48) operacionesLogicas -> LPAREN IF LPAREN . MENORQUE VARIABLE ENTERO RPAREN LPAREN RECUR LPAREN INC LPAREN VARIABLE RPAREN RPAREN VARIABLE RPAREN RPAREN

    MENORQUE        shift and go to state 85


state 65

    (60) sentenciaLoopRecur -> LPAREN LOOP LCOR . VARIABLE ENTERO RCOR operacionesLogicas RPAREN

    VARIABLE        shift and go to state 86


state 66

    (35) sentencia_booleana -> LPAREN . operador_comparadores dato dato RPAREN
    (27) operador_comparadores -> . COMPARA_IGUAL
    (28) operador_comparadores -> . MENORQUE
    (29) operador_comparadores -> . MAYORQUE
    (30) operador_comparadores -> . MAYORIGUALQUE
    (31) operador_comparadores -> . MENORIGUALQUE
    (32) operador_comparadores -> . DIFERENTE

    COMPARA_IGUAL   shift and go to state 26
    MENORQUE        shift and go to state 24
    MAYORQUE        shift and go to state 27
    MAYORIGUALQUE   shift and go to state 28
    MENORIGUALQUE   shift and go to state 29
    DIFERENTE       shift and go to state 30

    operador_comparadores          shift and go to state 46

state 67

    (37) cond_ -> LPAREN COND linecondition . linecondition RPAREN
    (38) cond_else -> LPAREN COND linecondition . linecondition DOSPUNTOS ELSE impresion RPAREN
    (36) linecondition -> . sentencia_booleana impresion
    (35) sentencia_booleana -> . LPAREN operador_comparadores dato dato RPAREN

    LPAREN          shift and go to state 66

    linecondition                  shift and go to state 87
    sentencia_booleana             shift and go to state 68

state 68

    (36) linecondition -> sentencia_booleana . impresion
    (42) impresion -> . LPAREN IMPRIMIR dato RPAREN

    LPAREN          shift and go to state 52

    impresion                      shift and go to state 88

state 69

    (52) doseq -> LPAREN DOSEQ LCOR . VARIABLE LPAREN RANGE VARIABLE RPAREN RCOR LPAREN impresion RPAREN RPAREN

    VARIABLE        shift and go to state 89


state 70

    (40) case_expression -> LPAREN CASE dato . case case case impresion RPAREN
    (39) case -> . dato impresion
    (18) dato -> . STRING
    (19) dato -> . CHAR
    (20) dato -> . ENTERO
    (21) dato -> . FLOTANTE
    (22) dato -> . BOOLEAN
    (23) dato -> . VARIABLE

    STRING          shift and go to state 31
    CHAR            shift and go to state 32
    ENTERO          shift and go to state 25
    FLOTANTE        shift and go to state 33
    BOOLEAN         shift and go to state 34
    VARIABLE        shift and go to state 20

    dato                           shift and go to state 21
    case                           shift and go to state 90

state 71

    (41) lista -> LPAREN LIST dato . dato RPAREN
    (18) dato -> . STRING
    (19) dato -> . CHAR
    (20) dato -> . ENTERO
    (21) dato -> . FLOTANTE
    (22) dato -> . BOOLEAN
    (23) dato -> . VARIABLE

    STRING          shift and go to state 31
    CHAR            shift and go to state 32
    ENTERO          shift and go to state 25
    FLOTANTE        shift and go to state 33
    BOOLEAN         shift and go to state 34
    VARIABLE        shift and go to state 20

    dato                           shift and go to state 91

state 72

    (35) sentencia_booleana -> LPAREN operador_comparadores dato . dato RPAREN
    (18) dato -> . STRING
    (19) dato -> . CHAR
    (20) dato -> . ENTERO
    (21) dato -> . FLOTANTE
    (22) dato -> . BOOLEAN
    (23) dato -> . VARIABLE

    STRING          shift and go to state 31
    CHAR            shift and go to state 32
    ENTERO          shift and go to state 25
    FLOTANTE        shift and go to state 33
    BOOLEAN         shift and go to state 34
    VARIABLE        shift and go to state 20

    dato                           shift and go to state 92

state 73

    (57) conjuntos -> NUMERAL L_LLAVE expresionConjuntoEnteros . R_LLAVE

    R_LLAVE         shift and go to state 93


state 74

    (58) conjuntos -> NUMERAL L_LLAVE expresionConjuntoDouble . R_LLAVE

    R_LLAVE         shift and go to state 94


state 75

    (59) conjuntos -> NUMERAL L_LLAVE expresionConjuntoString . R_LLAVE

    R_LLAVE         shift and go to state 95


state 76

    (61) expresionConjuntoEnteros -> ENTERO .
    (62) expresionConjuntoEnteros -> ENTERO . expresionConjuntoEnteros
    (61) expresionConjuntoEnteros -> . ENTERO
    (62) expresionConjuntoEnteros -> . ENTERO expresionConjuntoEnteros

    R_LLAVE         reduce using rule 61 (expresionConjuntoEnteros -> ENTERO .)
    ENTERO          shift and go to state 76

    expresionConjuntoEnteros       shift and go to state 96

state 77

    (63) expresionConjuntoDouble -> FLOTANTE .
    (64) expresionConjuntoDouble -> FLOTANTE . expresionConjuntoDouble
    (63) expresionConjuntoDouble -> . FLOTANTE
    (64) expresionConjuntoDouble -> . FLOTANTE expresionConjuntoDouble

    R_LLAVE         reduce using rule 63 (expresionConjuntoDouble -> FLOTANTE .)
    FLOTANTE        shift and go to state 77

    expresionConjuntoDouble        shift and go to state 97

state 78

    (65) expresionConjuntoString -> STRING .
    (66) expresionConjuntoString -> STRING . expresionConjuntoString
    (65) expresionConjuntoString -> . STRING
    (66) expresionConjuntoString -> . STRING expresionConjuntoString

    R_LLAVE         reduce using rule 65 (expresionConjuntoString -> STRING .)
    STRING          shift and go to state 78

    expresionConjuntoString        shift and go to state 98

state 79

    (33) asignacion -> LPAREN DEFICION VARIABLE dato . RPAREN

    RPAREN          shift and go to state 99


state 80

    (34) asignacion -> LPAREN LET LCOR VARIABLE . dato RCOR RPAREN
    (18) dato -> . STRING
    (19) dato -> . CHAR
    (20) dato -> . ENTERO
    (21) dato -> . FLOTANTE
    (22) dato -> . BOOLEAN
    (23) dato -> . VARIABLE

    STRING          shift and go to state 31
    CHAR            shift and go to state 32
    ENTERO          shift and go to state 25
    FLOTANTE        shift and go to state 33
    BOOLEAN         shift and go to state 34
    VARIABLE        shift and go to state 20

    dato                           shift and go to state 100

state 81

    (42) impresion -> LPAREN IMPRIMIR dato RPAREN .

    $end            reduce using rule 42 (impresion -> LPAREN IMPRIMIR dato RPAREN .)
    STRING          reduce using rule 42 (impresion -> LPAREN IMPRIMIR dato RPAREN .)
    CHAR            reduce using rule 42 (impresion -> LPAREN IMPRIMIR dato RPAREN .)
    ENTERO          reduce using rule 42 (impresion -> LPAREN IMPRIMIR dato RPAREN .)
    FLOTANTE        reduce using rule 42 (impresion -> LPAREN IMPRIMIR dato RPAREN .)
    BOOLEAN         reduce using rule 42 (impresion -> LPAREN IMPRIMIR dato RPAREN .)
    VARIABLE        reduce using rule 42 (impresion -> LPAREN IMPRIMIR dato RPAREN .)
    LPAREN          reduce using rule 42 (impresion -> LPAREN IMPRIMIR dato RPAREN .)
    RPAREN          reduce using rule 42 (impresion -> LPAREN IMPRIMIR dato RPAREN .)
    DOSPUNTOS       reduce using rule 42 (impresion -> LPAREN IMPRIMIR dato RPAREN .)


state 82

    (49) operacion_aritmetica1 -> LPAREN operacion valor valor . RPAREN
    (50) condicional -> LPAREN operacion valor valor . RPAREN

    RPAREN          shift and go to state 101


state 83

    (53) defn -> LPAREN DEFFUNCION VARIABLE LCOR . VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN

    VARIABLE        shift and go to state 102


state 84

    (54) defn -> LPAREN DEFFUNCION INCREASE LCOR . VARIABLE RCOR operacionesLogicas RPAREN

    VARIABLE        shift and go to state 103


state 85

    (48) operacionesLogicas -> LPAREN IF LPAREN MENORQUE . VARIABLE ENTERO RPAREN LPAREN RECUR LPAREN INC LPAREN VARIABLE RPAREN RPAREN VARIABLE RPAREN RPAREN

    VARIABLE        shift and go to state 104


state 86

    (60) sentenciaLoopRecur -> LPAREN LOOP LCOR VARIABLE . ENTERO RCOR operacionesLogicas RPAREN

    ENTERO          shift and go to state 105


state 87

    (37) cond_ -> LPAREN COND linecondition linecondition . RPAREN
    (38) cond_else -> LPAREN COND linecondition linecondition . DOSPUNTOS ELSE impresion RPAREN

    RPAREN          shift and go to state 106
    DOSPUNTOS       shift and go to state 107


state 88

    (36) linecondition -> sentencia_booleana impresion .

    LPAREN          reduce using rule 36 (linecondition -> sentencia_booleana impresion .)
    RPAREN          reduce using rule 36 (linecondition -> sentencia_booleana impresion .)
    DOSPUNTOS       reduce using rule 36 (linecondition -> sentencia_booleana impresion .)


state 89

    (52) doseq -> LPAREN DOSEQ LCOR VARIABLE . LPAREN RANGE VARIABLE RPAREN RCOR LPAREN impresion RPAREN RPAREN

    LPAREN          shift and go to state 108


state 90

    (40) case_expression -> LPAREN CASE dato case . case case impresion RPAREN
    (39) case -> . dato impresion
    (18) dato -> . STRING
    (19) dato -> . CHAR
    (20) dato -> . ENTERO
    (21) dato -> . FLOTANTE
    (22) dato -> . BOOLEAN
    (23) dato -> . VARIABLE

    STRING          shift and go to state 31
    CHAR            shift and go to state 32
    ENTERO          shift and go to state 25
    FLOTANTE        shift and go to state 33
    BOOLEAN         shift and go to state 34
    VARIABLE        shift and go to state 20

    dato                           shift and go to state 21
    case                           shift and go to state 109

state 91

    (41) lista -> LPAREN LIST dato dato . RPAREN

    RPAREN          shift and go to state 110


state 92

    (35) sentencia_booleana -> LPAREN operador_comparadores dato dato . RPAREN

    RPAREN          shift and go to state 111


state 93

    (57) conjuntos -> NUMERAL L_LLAVE expresionConjuntoEnteros R_LLAVE .

    $end            reduce using rule 57 (conjuntos -> NUMERAL L_LLAVE expresionConjuntoEnteros R_LLAVE .)


state 94

    (58) conjuntos -> NUMERAL L_LLAVE expresionConjuntoDouble R_LLAVE .

    $end            reduce using rule 58 (conjuntos -> NUMERAL L_LLAVE expresionConjuntoDouble R_LLAVE .)


state 95

    (59) conjuntos -> NUMERAL L_LLAVE expresionConjuntoString R_LLAVE .

    $end            reduce using rule 59 (conjuntos -> NUMERAL L_LLAVE expresionConjuntoString R_LLAVE .)


state 96

    (62) expresionConjuntoEnteros -> ENTERO expresionConjuntoEnteros .

    R_LLAVE         reduce using rule 62 (expresionConjuntoEnteros -> ENTERO expresionConjuntoEnteros .)


state 97

    (64) expresionConjuntoDouble -> FLOTANTE expresionConjuntoDouble .

    R_LLAVE         reduce using rule 64 (expresionConjuntoDouble -> FLOTANTE expresionConjuntoDouble .)


state 98

    (66) expresionConjuntoString -> STRING expresionConjuntoString .

    R_LLAVE         reduce using rule 66 (expresionConjuntoString -> STRING expresionConjuntoString .)


state 99

    (33) asignacion -> LPAREN DEFICION VARIABLE dato RPAREN .

    $end            reduce using rule 33 (asignacion -> LPAREN DEFICION VARIABLE dato RPAREN .)


state 100

    (34) asignacion -> LPAREN LET LCOR VARIABLE dato . RCOR RPAREN

    RCOR            shift and go to state 112


state 101

    (49) operacion_aritmetica1 -> LPAREN operacion valor valor RPAREN .
    (50) condicional -> LPAREN operacion valor valor RPAREN .

  ! reduce/reduce conflict for $end resolved using rule 49 (operacion_aritmetica1 -> LPAREN operacion valor valor RPAREN .)
    $end            reduce using rule 49 (operacion_aritmetica1 -> LPAREN operacion valor valor RPAREN .)

  ! $end            [ reduce using rule 50 (condicional -> LPAREN operacion valor valor RPAREN .) ]


state 102

    (53) defn -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE . RCOR LPAREN expresionDefnElse RPAREN RPAREN

    RCOR            shift and go to state 113


state 103

    (54) defn -> LPAREN DEFFUNCION INCREASE LCOR VARIABLE . RCOR operacionesLogicas RPAREN

    RCOR            shift and go to state 114


state 104

    (48) operacionesLogicas -> LPAREN IF LPAREN MENORQUE VARIABLE . ENTERO RPAREN LPAREN RECUR LPAREN INC LPAREN VARIABLE RPAREN RPAREN VARIABLE RPAREN RPAREN

    ENTERO          shift and go to state 115


state 105

    (60) sentenciaLoopRecur -> LPAREN LOOP LCOR VARIABLE ENTERO . RCOR operacionesLogicas RPAREN

    RCOR            shift and go to state 116


state 106

    (37) cond_ -> LPAREN COND linecondition linecondition RPAREN .

    $end            reduce using rule 37 (cond_ -> LPAREN COND linecondition linecondition RPAREN .)


state 107

    (38) cond_else -> LPAREN COND linecondition linecondition DOSPUNTOS . ELSE impresion RPAREN

    ELSE            shift and go to state 117


state 108

    (52) doseq -> LPAREN DOSEQ LCOR VARIABLE LPAREN . RANGE VARIABLE RPAREN RCOR LPAREN impresion RPAREN RPAREN

    RANGE           shift and go to state 118


state 109

    (40) case_expression -> LPAREN CASE dato case case . case impresion RPAREN
    (39) case -> . dato impresion
    (18) dato -> . STRING
    (19) dato -> . CHAR
    (20) dato -> . ENTERO
    (21) dato -> . FLOTANTE
    (22) dato -> . BOOLEAN
    (23) dato -> . VARIABLE

    STRING          shift and go to state 31
    CHAR            shift and go to state 32
    ENTERO          shift and go to state 25
    FLOTANTE        shift and go to state 33
    BOOLEAN         shift and go to state 34
    VARIABLE        shift and go to state 20

    dato                           shift and go to state 21
    case                           shift and go to state 119

state 110

    (41) lista -> LPAREN LIST dato dato RPAREN .

    $end            reduce using rule 41 (lista -> LPAREN LIST dato dato RPAREN .)


state 111

    (35) sentencia_booleana -> LPAREN operador_comparadores dato dato RPAREN .

    $end            reduce using rule 35 (sentencia_booleana -> LPAREN operador_comparadores dato dato RPAREN .)
    LPAREN          reduce using rule 35 (sentencia_booleana -> LPAREN operador_comparadores dato dato RPAREN .)


state 112

    (34) asignacion -> LPAREN LET LCOR VARIABLE dato RCOR . RPAREN

    RPAREN          shift and go to state 120


state 113

    (53) defn -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR . LPAREN expresionDefnElse RPAREN RPAREN

    LPAREN          shift and go to state 121


state 114

    (54) defn -> LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR . operacionesLogicas RPAREN
    (48) operacionesLogicas -> . LPAREN IF LPAREN MENORQUE VARIABLE ENTERO RPAREN LPAREN RECUR LPAREN INC LPAREN VARIABLE RPAREN RPAREN VARIABLE RPAREN RPAREN

    LPAREN          shift and go to state 122

    operacionesLogicas             shift and go to state 123

state 115

    (48) operacionesLogicas -> LPAREN IF LPAREN MENORQUE VARIABLE ENTERO . RPAREN LPAREN RECUR LPAREN INC LPAREN VARIABLE RPAREN RPAREN VARIABLE RPAREN RPAREN

    RPAREN          shift and go to state 124


state 116

    (60) sentenciaLoopRecur -> LPAREN LOOP LCOR VARIABLE ENTERO RCOR . operacionesLogicas RPAREN
    (48) operacionesLogicas -> . LPAREN IF LPAREN MENORQUE VARIABLE ENTERO RPAREN LPAREN RECUR LPAREN INC LPAREN VARIABLE RPAREN RPAREN VARIABLE RPAREN RPAREN

    LPAREN          shift and go to state 122

    operacionesLogicas             shift and go to state 125

state 117

    (38) cond_else -> LPAREN COND linecondition linecondition DOSPUNTOS ELSE . impresion RPAREN
    (42) impresion -> . LPAREN IMPRIMIR dato RPAREN

    LPAREN          shift and go to state 52

    impresion                      shift and go to state 126

state 118

    (52) doseq -> LPAREN DOSEQ LCOR VARIABLE LPAREN RANGE . VARIABLE RPAREN RCOR LPAREN impresion RPAREN RPAREN

    VARIABLE        shift and go to state 127


state 119

    (40) case_expression -> LPAREN CASE dato case case case . impresion RPAREN
    (42) impresion -> . LPAREN IMPRIMIR dato RPAREN

    LPAREN          shift and go to state 52

    impresion                      shift and go to state 128

state 120

    (34) asignacion -> LPAREN LET LCOR VARIABLE dato RCOR RPAREN .

    $end            reduce using rule 34 (asignacion -> LPAREN LET LCOR VARIABLE dato RCOR RPAREN .)


state 121

    (53) defn -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN . expresionDefnElse RPAREN RPAREN
    (55) expresionDefnElse -> . CASE VARIABLE expresionCase DOSPUNTOS ELSE STRING

    CASE            shift and go to state 130

    expresionDefnElse              shift and go to state 129

state 122

    (48) operacionesLogicas -> LPAREN . IF LPAREN MENORQUE VARIABLE ENTERO RPAREN LPAREN RECUR LPAREN INC LPAREN VARIABLE RPAREN RPAREN VARIABLE RPAREN RPAREN

    IF              shift and go to state 40


state 123

    (54) defn -> LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas . RPAREN

    RPAREN          shift and go to state 131


state 124

    (48) operacionesLogicas -> LPAREN IF LPAREN MENORQUE VARIABLE ENTERO RPAREN . LPAREN RECUR LPAREN INC LPAREN VARIABLE RPAREN RPAREN VARIABLE RPAREN RPAREN

    LPAREN          shift and go to state 132


state 125

    (60) sentenciaLoopRecur -> LPAREN LOOP LCOR VARIABLE ENTERO RCOR operacionesLogicas . RPAREN

    RPAREN          shift and go to state 133


state 126

    (38) cond_else -> LPAREN COND linecondition linecondition DOSPUNTOS ELSE impresion . RPAREN

    RPAREN          shift and go to state 134


state 127

    (52) doseq -> LPAREN DOSEQ LCOR VARIABLE LPAREN RANGE VARIABLE . RPAREN RCOR LPAREN impresion RPAREN RPAREN

    RPAREN          shift and go to state 135


state 128

    (40) case_expression -> LPAREN CASE dato case case case impresion . RPAREN

    RPAREN          shift and go to state 136


state 129

    (53) defn -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse . RPAREN RPAREN

    RPAREN          shift and go to state 137


state 130

    (55) expresionDefnElse -> CASE . VARIABLE expresionCase DOSPUNTOS ELSE STRING

    VARIABLE        shift and go to state 138


state 131

    (54) defn -> LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN .

    $end            reduce using rule 54 (defn -> LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN .)


state 132

    (48) operacionesLogicas -> LPAREN IF LPAREN MENORQUE VARIABLE ENTERO RPAREN LPAREN . RECUR LPAREN INC LPAREN VARIABLE RPAREN RPAREN VARIABLE RPAREN RPAREN

    RECUR           shift and go to state 139


state 133

    (60) sentenciaLoopRecur -> LPAREN LOOP LCOR VARIABLE ENTERO RCOR operacionesLogicas RPAREN .

    $end            reduce using rule 60 (sentenciaLoopRecur -> LPAREN LOOP LCOR VARIABLE ENTERO RCOR operacionesLogicas RPAREN .)


state 134

    (38) cond_else -> LPAREN COND linecondition linecondition DOSPUNTOS ELSE impresion RPAREN .

    $end            reduce using rule 38 (cond_else -> LPAREN COND linecondition linecondition DOSPUNTOS ELSE impresion RPAREN .)


state 135

    (52) doseq -> LPAREN DOSEQ LCOR VARIABLE LPAREN RANGE VARIABLE RPAREN . RCOR LPAREN impresion RPAREN RPAREN

    RCOR            shift and go to state 140


state 136

    (40) case_expression -> LPAREN CASE dato case case case impresion RPAREN .

    $end            reduce using rule 40 (case_expression -> LPAREN CASE dato case case case impresion RPAREN .)


state 137

    (53) defn -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN . RPAREN

    RPAREN          shift and go to state 141


state 138

    (55) expresionDefnElse -> CASE VARIABLE . expresionCase DOSPUNTOS ELSE STRING
    (56) expresionCase -> . dato STRING
    (18) dato -> . STRING
    (19) dato -> . CHAR
    (20) dato -> . ENTERO
    (21) dato -> . FLOTANTE
    (22) dato -> . BOOLEAN
    (23) dato -> . VARIABLE

    STRING          shift and go to state 31
    CHAR            shift and go to state 32
    ENTERO          shift and go to state 25
    FLOTANTE        shift and go to state 33
    BOOLEAN         shift and go to state 34
    VARIABLE        shift and go to state 20

    expresionCase                  shift and go to state 142
    dato                           shift and go to state 143

state 139

    (48) operacionesLogicas -> LPAREN IF LPAREN MENORQUE VARIABLE ENTERO RPAREN LPAREN RECUR . LPAREN INC LPAREN VARIABLE RPAREN RPAREN VARIABLE RPAREN RPAREN

    LPAREN          shift and go to state 144


state 140

    (52) doseq -> LPAREN DOSEQ LCOR VARIABLE LPAREN RANGE VARIABLE RPAREN RCOR . LPAREN impresion RPAREN RPAREN

    LPAREN          shift and go to state 145


state 141

    (53) defn -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN .

    $end            reduce using rule 53 (defn -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN .)


state 142

    (55) expresionDefnElse -> CASE VARIABLE expresionCase . DOSPUNTOS ELSE STRING

    DOSPUNTOS       shift and go to state 146


state 143

    (56) expresionCase -> dato . STRING

    STRING          shift and go to state 147


state 144

    (48) operacionesLogicas -> LPAREN IF LPAREN MENORQUE VARIABLE ENTERO RPAREN LPAREN RECUR LPAREN . INC LPAREN VARIABLE RPAREN RPAREN VARIABLE RPAREN RPAREN

    INC             shift and go to state 148


state 145

    (52) doseq -> LPAREN DOSEQ LCOR VARIABLE LPAREN RANGE VARIABLE RPAREN RCOR LPAREN . impresion RPAREN RPAREN
    (42) impresion -> . LPAREN IMPRIMIR dato RPAREN

    LPAREN          shift and go to state 52

    impresion                      shift and go to state 149

state 146

    (55) expresionDefnElse -> CASE VARIABLE expresionCase DOSPUNTOS . ELSE STRING

    ELSE            shift and go to state 150


state 147

    (56) expresionCase -> dato STRING .

    DOSPUNTOS       reduce using rule 56 (expresionCase -> dato STRING .)


state 148

    (48) operacionesLogicas -> LPAREN IF LPAREN MENORQUE VARIABLE ENTERO RPAREN LPAREN RECUR LPAREN INC . LPAREN VARIABLE RPAREN RPAREN VARIABLE RPAREN RPAREN

    LPAREN          shift and go to state 151


state 149

    (52) doseq -> LPAREN DOSEQ LCOR VARIABLE LPAREN RANGE VARIABLE RPAREN RCOR LPAREN impresion . RPAREN RPAREN

    RPAREN          shift and go to state 152


state 150

    (55) expresionDefnElse -> CASE VARIABLE expresionCase DOSPUNTOS ELSE . STRING

    STRING          shift and go to state 153


state 151

    (48) operacionesLogicas -> LPAREN IF LPAREN MENORQUE VARIABLE ENTERO RPAREN LPAREN RECUR LPAREN INC LPAREN . VARIABLE RPAREN RPAREN VARIABLE RPAREN RPAREN

    VARIABLE        shift and go to state 154


state 152

    (52) doseq -> LPAREN DOSEQ LCOR VARIABLE LPAREN RANGE VARIABLE RPAREN RCOR LPAREN impresion RPAREN . RPAREN

    RPAREN          shift and go to state 155


state 153

    (55) expresionDefnElse -> CASE VARIABLE expresionCase DOSPUNTOS ELSE STRING .

    RPAREN          reduce using rule 55 (expresionDefnElse -> CASE VARIABLE expresionCase DOSPUNTOS ELSE STRING .)


state 154

    (48) operacionesLogicas -> LPAREN IF LPAREN MENORQUE VARIABLE ENTERO RPAREN LPAREN RECUR LPAREN INC LPAREN VARIABLE . RPAREN RPAREN VARIABLE RPAREN RPAREN

    RPAREN          shift and go to state 156


state 155

    (52) doseq -> LPAREN DOSEQ LCOR VARIABLE LPAREN RANGE VARIABLE RPAREN RCOR LPAREN impresion RPAREN RPAREN .

    $end            reduce using rule 52 (doseq -> LPAREN DOSEQ LCOR VARIABLE LPAREN RANGE VARIABLE RPAREN RCOR LPAREN impresion RPAREN RPAREN .)


state 156

    (48) operacionesLogicas -> LPAREN IF LPAREN MENORQUE VARIABLE ENTERO RPAREN LPAREN RECUR LPAREN INC LPAREN VARIABLE RPAREN . RPAREN VARIABLE RPAREN RPAREN

    RPAREN          shift and go to state 157


state 157

    (48) operacionesLogicas -> LPAREN IF LPAREN MENORQUE VARIABLE ENTERO RPAREN LPAREN RECUR LPAREN INC LPAREN VARIABLE RPAREN RPAREN . VARIABLE RPAREN RPAREN

    VARIABLE        shift and go to state 158


state 158

    (48) operacionesLogicas -> LPAREN IF LPAREN MENORQUE VARIABLE ENTERO RPAREN LPAREN RECUR LPAREN INC LPAREN VARIABLE RPAREN RPAREN VARIABLE . RPAREN RPAREN

    RPAREN          shift and go to state 159


state 159

    (48) operacionesLogicas -> LPAREN IF LPAREN MENORQUE VARIABLE ENTERO RPAREN LPAREN RECUR LPAREN INC LPAREN VARIABLE RPAREN RPAREN VARIABLE RPAREN . RPAREN

    RPAREN          shift and go to state 160


state 160

    (48) operacionesLogicas -> LPAREN IF LPAREN MENORQUE VARIABLE ENTERO RPAREN LPAREN RECUR LPAREN INC LPAREN VARIABLE RPAREN RPAREN VARIABLE RPAREN RPAREN .

    $end            reduce using rule 48 (operacionesLogicas -> LPAREN IF LPAREN MENORQUE VARIABLE ENTERO RPAREN LPAREN RECUR LPAREN INC LPAREN VARIABLE RPAREN RPAREN VARIABLE RPAREN RPAREN .)
    RPAREN          reduce using rule 48 (operacionesLogicas -> LPAREN IF LPAREN MENORQUE VARIABLE ENTERO RPAREN LPAREN RECUR LPAREN INC LPAREN VARIABLE RPAREN RPAREN VARIABLE RPAREN RPAREN .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: reduce/reduce conflict in state 101 resolved using rule (operacion_aritmetica1 -> LPAREN operacion valor valor RPAREN)
WARNING: rejected rule (condicional -> LPAREN operacion valor valor RPAREN) in state 101
WARNING: Rule (condicional -> LPAREN operacion valor valor RPAREN) is never reduced
