Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    CLASE
    CONJUNTOS
    FUNCION
    FUTURE
    IGUAL
    INPUT
    LISTA
    MAPA
    NOT
    NS
    NUEVO
    STR
    VECTOR

Grammar

Rule 0     S' -> instrucciones
Rule 1     instrucciones -> asignacion
Rule 2     instrucciones -> impresion
Rule 3     instrucciones -> operacion_aritmetica
Rule 4     instrucciones -> conjuntos
Rule 5     instrucciones -> vector
Rule 6     instrucciones -> mapa
Rule 7     instrucciones -> if
Rule 8     instrucciones -> do
Rule 9     instrucciones -> if_do
Rule 10    instrucciones -> when
Rule 11    instrucciones -> defn
Rule 12    instrucciones -> defn_with_return
Rule 13    instrucciones -> operacionesLogicas
Rule 14    instrucciones -> sentenciaLoopRecur
Rule 15    instrucciones -> cond_
Rule 16    instrucciones -> cond_else
Rule 17    instrucciones -> doseq
Rule 18    instrucciones -> case_expression
Rule 19    instrucciones -> lista
Rule 20    instrucciones -> sentencia_booleana
Rule 21    instrucciones -> function
Rule 22    instrucciones -> dotimes
Rule 23    instrucciones -> ciclo
Rule 24    instrucciones -> valor
Rule 25    dato -> STRING
Rule 26    dato -> CHAR
Rule 27    dato -> ENTERO
Rule 28    dato -> FLOTANTE
Rule 29    dato -> BOOLEAN
Rule 30    dato -> VARIABLE
Rule 31    valor -> ENTERO
Rule 32    valor -> FLOTANTE
Rule 33    valor -> BOOLEAN
Rule 34    operador_comparadores -> COMPARA_IGUAL
Rule 35    operador_comparadores -> MENORQUE
Rule 36    operador_comparadores -> MAYORQUE
Rule 37    operador_comparadores -> MAYORIGUALQUE
Rule 38    operador_comparadores -> MENORIGUALQUE
Rule 39    operador_comparadores -> DIFERENTE
Rule 40    operador_aritmetico -> MAS
Rule 41    operador_aritmetico -> MENOS
Rule 42    operador_aritmetico -> PRODUCTO
Rule 43    operador_aritmetico -> DIVISION
Rule 44    asignacion -> LPAREN DEFICION VARIABLE dato RPAREN
Rule 45    asignacion -> LPAREN LET LCOR VARIABLE dato RCOR RPAREN
Rule 46    linecondition -> sentencia_booleana impresion
Rule 47    cond_ -> LPAREN COND linecondition linecondition RPAREN
Rule 48    cond_else -> LPAREN COND linecondition linecondition DOSPUNTOS ELSE impresion RPAREN
Rule 49    case -> dato impresion
Rule 50    case -> dato STRING
Rule 51    case -> dato impresion case
Rule 52    case -> dato STRING case
Rule 53    case_expression -> LPAREN CASE dato case impresion RPAREN
Rule 54    case_expression -> LPAREN CASE dato case DOSPUNTOS ELSE STRING RPAREN
Rule 55    argumentos_lista -> dato
Rule 56    argumentos_lista -> dato argumentos_lista
Rule 57    lista -> LPAREN LIST argumentos_lista RPAREN
Rule 58    description -> STRING
Rule 59    increase -> INCREASE LCOR dato RCOR
Rule 60    argumments -> LCOR argumentos_lista RCOR
Rule 61    body -> instrucciones
Rule 62    recur -> LPAREN RECUR LPAREN INC dato RPAREN RPAREN
Rule 63    internos -> description
Rule 64    internos -> argumments
Rule 65    internos -> body
Rule 66    internos -> increase
Rule 67    internos -> argumments body
Rule 68    internos -> description argumments body
Rule 69    function -> LPAREN DEFFUNCION VARIABLE internos RPAREN
Rule 70    function -> LPAREN DEFFUNCION internos if dato RPAREN
Rule 71    impresion -> LPAREN IMPRIMIR dato RPAREN
Rule 72    vector -> LCOR argumentos_lista RCOR
Rule 73    secuencia_mapa -> DOSPUNTOS VARIABLE dato
Rule 74    secuencia_mapa -> DOSPUNTOS VARIABLE secuencia_mapa
Rule 75    mapa -> LPAREN secuencia_mapa RPAREN
Rule 76    if -> IF sentencia_booleana
Rule 77    if -> IF sentencia_booleana recur
Rule 78    if -> LPAREN IF instrucciones body RPAREN
Rule 79    do -> LPAREN DO instrucciones RPAREN
Rule 80    if_do -> LPAREN if do RPAREN
Rule 81    when -> LPAREN WHEN sentencia_booleana body RPAREN
Rule 82    ciclo -> LCOR VARIABLE ENTERO RCOR
Rule 83    dotimes -> LPAREN DOTIMES ciclo body RPAREN
Rule 84    operacionesLogicas -> LPAREN if recur VARIABLE RPAREN RPAREN
Rule 85    operacion_aritmetica -> LPAREN operador_aritmetico dato dato RPAREN
Rule 86    doseq_args -> LCOR dato LPAREN RANGE dato RPAREN RCOR
Rule 87    doseq_args -> LCOR dato conjuntos RCOR
Rule 88    doseq_args -> LCOR dato vector dato vector RCOR
Rule 89    doseq_args -> LCOR vector conjuntos RCOR
Rule 90    doseq_prn -> PRN LPAREN dato RPAREN
Rule 91    doseq_prn -> PRN dato dato
Rule 92    doseq_prn -> PRN dato dato dato
Rule 93    doseq_prn -> PRN operacion_aritmetica
Rule 94    doseq -> LPAREN DOSEQ doseq_args impresion RPAREN
Rule 95    doseq -> LPAREN DOSEQ doseq_args LPAREN doseq_prn RPAREN RPAREN
Rule 96    defn -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN
Rule 97    defn -> LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN
Rule 98    defn_with_return -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN defn_return
Rule 99    defn_with_return -> LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN defn_return
Rule 100   expresionDefnElse -> CASE VARIABLE expresionCase DOSPUNTOS ELSE STRING
Rule 101   defn_return -> LPAREN dato dato RPAREN
Rule 102   expresionCase -> dato STRING
Rule 103   conjuntos -> NUMERAL L_LLAVE expresionConjuntoEnteros R_LLAVE
Rule 104   conjuntos -> NUMERAL L_LLAVE expresionConjuntoDouble R_LLAVE
Rule 105   conjuntos -> NUMERAL L_LLAVE expresionConjuntoString R_LLAVE
Rule 106   sentenciaLoopRecur -> LPAREN LOOP argumments LPAREN if dato RPAREN RPAREN
Rule 107   expresionConjuntoEnteros -> ENTERO
Rule 108   expresionConjuntoEnteros -> ENTERO expresionConjuntoEnteros
Rule 109   expresionConjuntoDouble -> FLOTANTE
Rule 110   expresionConjuntoDouble -> FLOTANTE expresionConjuntoDouble
Rule 111   expresionConjuntoString -> STRING
Rule 112   expresionConjuntoString -> STRING expresionConjuntoString

Terminals, with rules where they appear

BOOLEAN              : 29 33
CASE                 : 53 54 100
CHAR                 : 26
CLASE                : 
COMPARA_IGUAL        : 34
COND                 : 47 48
CONJUNTOS            : 
DEFFUNCION           : 69 70 96 97 98 99
DEFICION             : 44
DIFERENTE            : 39
DIVISION             : 43
DO                   : 79
DOSEQ                : 94 95
DOSPUNTOS            : 48 54 73 74 100
DOTIMES              : 83
ELSE                 : 48 54 100
ENTERO               : 27 31 82 107 108
FLOTANTE             : 28 32 109 110
FUNCION              : 
FUTURE               : 
IF                   : 76 77 78
IGUAL                : 
IMPRIMIR             : 71
INC                  : 62
INCREASE             : 59 97 99
INPUT                : 
LCOR                 : 45 59 60 72 82 86 87 88 89 96 97 98 99
LET                  : 45
LIST                 : 57
LISTA                : 
LOOP                 : 106
LPAREN               : 44 45 47 48 53 54 57 62 62 69 70 71 75 78 79 80 81 83 84 85 86 90 94 95 95 96 96 97 98 98 99 101 106 106
L_LLAVE              : 103 104 105
MAPA                 : 
MAS                  : 40
MAYORIGUALQUE        : 37
MAYORQUE             : 36
MENORIGUALQUE        : 38
MENORQUE             : 35
MENOS                : 41
NOT                  : 
NS                   : 
NUEVO                : 
NUMERAL              : 103 104 105
PRN                  : 90 91 92 93
PRODUCTO             : 42
RANGE                : 86
RCOR                 : 45 59 60 72 82 86 87 88 89 96 97 98 99
RECUR                : 62
RPAREN               : 44 45 47 48 53 54 57 62 62 69 70 71 75 78 79 80 81 83 84 84 85 86 90 94 95 95 96 96 97 98 98 99 101 106 106
R_LLAVE              : 103 104 105
STR                  : 
STRING               : 25 50 52 54 58 100 102 111 112
VARIABLE             : 30 44 45 69 73 74 82 84 96 96 97 98 98 99 100
VECTOR               : 
WHEN                 : 81
error                : 

Nonterminals, with rules where they appear

argumentos_lista     : 56 57 60 72
argumments           : 64 67 68 106
asignacion           : 1
body                 : 65 67 68 78 81 83
case                 : 51 52 53 54
case_expression      : 18
ciclo                : 23 83
cond_                : 15
cond_else            : 16
conjuntos            : 4 87 89
dato                 : 44 45 49 50 51 52 53 54 55 56 59 62 70 71 73 85 85 86 86 87 88 88 90 91 91 92 92 92 101 101 102 106
defn                 : 11
defn_return          : 98 99
defn_with_return     : 12
description          : 63 68
do                   : 8 80
doseq                : 17
doseq_args           : 94 95
doseq_prn            : 95
dotimes              : 22
expresionCase        : 100
expresionConjuntoDouble : 104 110
expresionConjuntoEnteros : 103 108
expresionConjuntoString : 105 112
expresionDefnElse    : 96 98
function             : 21
if                   : 7 70 80 84 106
if_do                : 9
impresion            : 2 46 48 49 51 53 94
increase             : 66
instrucciones        : 61 78 79 0
internos             : 69 70
linecondition        : 47 47 48 48
lista                : 19
mapa                 : 6
operacion_aritmetica : 3 93
operacionesLogicas   : 13 97 99
operador_aritmetico  : 85
operador_comparadores : 
recur                : 77 84
secuencia_mapa       : 74 75
sentenciaLoopRecur   : 14
sentencia_booleana   : 20 46 76 77 81
valor                : 24
vector               : 5 88 88 89
when                 : 10

