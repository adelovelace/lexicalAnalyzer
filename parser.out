Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    CASE
    CLASE
    COMPARA_IGUAL
    COND
    DEFFUNCION
    DEFICION
    DEFMACRO
    DIFERENTE
    DO
    DOSEQ
    DOTIMES
    ELSE
    FUNCION
    FUTURE
    IF
    LCOR
    LET
    LOOP
    L_LLAVE
    MAYORQUE
    MENORQUE
    NUEVO
    PUNTO_COMA
    RCOR
    RECURSION
    R_LLAVE
    WHEN

Grammar

Rule 0     S' -> instrucciones
Rule 1     instrucciones -> asignacion
Rule 2     instrucciones -> impresion
Rule 3     instrucciones -> sumatoria
Rule 4     instrucciones -> diferencia
Rule 5     instrucciones -> producto
Rule 6     instrucciones -> division
Rule 7     asignacion -> VARIABLE IGUAL valor
Rule 8     impresion -> IMPRIMIR LPAREN valor RPAREN
Rule 9     valor -> ENTERO
Rule 10    valor -> FLOTANTE
Rule 11    valor -> VARIABLE
Rule 12    operacion -> MAS
Rule 13    operacion -> MENOS
Rule 14    operacion -> PRODUCTO
Rule 15    operacion -> DIVISION
Rule 16    sumatoria -> LPAREN operacion valor valor RPAREN
Rule 17    diferencia -> LPAREN operacion valor valor RPAREN
Rule 18    producto -> LPAREN operacion valor valor RPAREN
Rule 19    division -> LPAREN operacion valor valor RPAREN

Terminals, with rules where they appear

CASE                 : 
CLASE                : 
COMPARA_IGUAL        : 
COND                 : 
DEFFUNCION           : 
DEFICION             : 
DEFMACRO             : 
DIFERENTE            : 
DIVISION             : 15
DO                   : 
DOSEQ                : 
DOTIMES              : 
ELSE                 : 
ENTERO               : 9
FLOTANTE             : 10
FUNCION              : 
FUTURE               : 
IF                   : 
IGUAL                : 7
IMPRIMIR             : 8
LCOR                 : 
LET                  : 
LOOP                 : 
LPAREN               : 8 16 17 18 19
L_LLAVE              : 
MAS                  : 12
MAYORQUE             : 
MENORQUE             : 
MENOS                : 13
NUEVO                : 
PRODUCTO             : 14
PUNTO_COMA           : 
RCOR                 : 
RECURSION            : 
RPAREN               : 8 16 17 18 19
R_LLAVE              : 
VARIABLE             : 7 11
WHEN                 : 
error                : 

Nonterminals, with rules where they appear

asignacion           : 1
diferencia           : 4
division             : 6
impresion            : 2
instrucciones        : 0
operacion            : 16 17 18 19
producto             : 5
sumatoria            : 3
valor                : 7 8 16 16 17 17 18 18 19 19

Parsing method: LALR

state 0

    (0) S' -> . instrucciones
    (1) instrucciones -> . asignacion
    (2) instrucciones -> . impresion
    (3) instrucciones -> . sumatoria
    (4) instrucciones -> . diferencia
    (5) instrucciones -> . producto
    (6) instrucciones -> . division
    (7) asignacion -> . VARIABLE IGUAL valor
    (8) impresion -> . IMPRIMIR LPAREN valor RPAREN
    (16) sumatoria -> . LPAREN operacion valor valor RPAREN
    (17) diferencia -> . LPAREN operacion valor valor RPAREN
    (18) producto -> . LPAREN operacion valor valor RPAREN
    (19) division -> . LPAREN operacion valor valor RPAREN

    VARIABLE        shift and go to state 8
    IMPRIMIR        shift and go to state 9
    LPAREN          shift and go to state 10

    instrucciones                  shift and go to state 1
    asignacion                     shift and go to state 2
    impresion                      shift and go to state 3
    sumatoria                      shift and go to state 4
    diferencia                     shift and go to state 5
    producto                       shift and go to state 6
    division                       shift and go to state 7

state 1

    (0) S' -> instrucciones .



state 2

    (1) instrucciones -> asignacion .

    $end            reduce using rule 1 (instrucciones -> asignacion .)


state 3

    (2) instrucciones -> impresion .

    $end            reduce using rule 2 (instrucciones -> impresion .)


state 4

    (3) instrucciones -> sumatoria .

    $end            reduce using rule 3 (instrucciones -> sumatoria .)


state 5

    (4) instrucciones -> diferencia .

    $end            reduce using rule 4 (instrucciones -> diferencia .)


state 6

    (5) instrucciones -> producto .

    $end            reduce using rule 5 (instrucciones -> producto .)


state 7

    (6) instrucciones -> division .

    $end            reduce using rule 6 (instrucciones -> division .)


state 8

    (7) asignacion -> VARIABLE . IGUAL valor

    IGUAL           shift and go to state 11


state 9

    (8) impresion -> IMPRIMIR . LPAREN valor RPAREN

    LPAREN          shift and go to state 12


state 10

    (16) sumatoria -> LPAREN . operacion valor valor RPAREN
    (17) diferencia -> LPAREN . operacion valor valor RPAREN
    (18) producto -> LPAREN . operacion valor valor RPAREN
    (19) division -> LPAREN . operacion valor valor RPAREN
    (12) operacion -> . MAS
    (13) operacion -> . MENOS
    (14) operacion -> . PRODUCTO
    (15) operacion -> . DIVISION

    MAS             shift and go to state 14
    MENOS           shift and go to state 15
    PRODUCTO        shift and go to state 16
    DIVISION        shift and go to state 17

    operacion                      shift and go to state 13

state 11

    (7) asignacion -> VARIABLE IGUAL . valor
    (9) valor -> . ENTERO
    (10) valor -> . FLOTANTE
    (11) valor -> . VARIABLE

    ENTERO          shift and go to state 20
    FLOTANTE        shift and go to state 21
    VARIABLE        shift and go to state 18

    valor                          shift and go to state 19

state 12

    (8) impresion -> IMPRIMIR LPAREN . valor RPAREN
    (9) valor -> . ENTERO
    (10) valor -> . FLOTANTE
    (11) valor -> . VARIABLE

    ENTERO          shift and go to state 20
    FLOTANTE        shift and go to state 21
    VARIABLE        shift and go to state 18

    valor                          shift and go to state 22

state 13

    (16) sumatoria -> LPAREN operacion . valor valor RPAREN
    (17) diferencia -> LPAREN operacion . valor valor RPAREN
    (18) producto -> LPAREN operacion . valor valor RPAREN
    (19) division -> LPAREN operacion . valor valor RPAREN
    (9) valor -> . ENTERO
    (10) valor -> . FLOTANTE
    (11) valor -> . VARIABLE

    ENTERO          shift and go to state 20
    FLOTANTE        shift and go to state 21
    VARIABLE        shift and go to state 18

    valor                          shift and go to state 23

state 14

    (12) operacion -> MAS .

    ENTERO          reduce using rule 12 (operacion -> MAS .)
    FLOTANTE        reduce using rule 12 (operacion -> MAS .)
    VARIABLE        reduce using rule 12 (operacion -> MAS .)


state 15

    (13) operacion -> MENOS .

    ENTERO          reduce using rule 13 (operacion -> MENOS .)
    FLOTANTE        reduce using rule 13 (operacion -> MENOS .)
    VARIABLE        reduce using rule 13 (operacion -> MENOS .)


state 16

    (14) operacion -> PRODUCTO .

    ENTERO          reduce using rule 14 (operacion -> PRODUCTO .)
    FLOTANTE        reduce using rule 14 (operacion -> PRODUCTO .)
    VARIABLE        reduce using rule 14 (operacion -> PRODUCTO .)


state 17

    (15) operacion -> DIVISION .

    ENTERO          reduce using rule 15 (operacion -> DIVISION .)
    FLOTANTE        reduce using rule 15 (operacion -> DIVISION .)
    VARIABLE        reduce using rule 15 (operacion -> DIVISION .)


state 18

    (11) valor -> VARIABLE .

    $end            reduce using rule 11 (valor -> VARIABLE .)
    RPAREN          reduce using rule 11 (valor -> VARIABLE .)
    ENTERO          reduce using rule 11 (valor -> VARIABLE .)
    FLOTANTE        reduce using rule 11 (valor -> VARIABLE .)
    VARIABLE        reduce using rule 11 (valor -> VARIABLE .)


state 19

    (7) asignacion -> VARIABLE IGUAL valor .

    $end            reduce using rule 7 (asignacion -> VARIABLE IGUAL valor .)


state 20

    (9) valor -> ENTERO .

    $end            reduce using rule 9 (valor -> ENTERO .)
    RPAREN          reduce using rule 9 (valor -> ENTERO .)
    ENTERO          reduce using rule 9 (valor -> ENTERO .)
    FLOTANTE        reduce using rule 9 (valor -> ENTERO .)
    VARIABLE        reduce using rule 9 (valor -> ENTERO .)


state 21

    (10) valor -> FLOTANTE .

    $end            reduce using rule 10 (valor -> FLOTANTE .)
    RPAREN          reduce using rule 10 (valor -> FLOTANTE .)
    ENTERO          reduce using rule 10 (valor -> FLOTANTE .)
    FLOTANTE        reduce using rule 10 (valor -> FLOTANTE .)
    VARIABLE        reduce using rule 10 (valor -> FLOTANTE .)


state 22

    (8) impresion -> IMPRIMIR LPAREN valor . RPAREN

    RPAREN          shift and go to state 24


state 23

    (16) sumatoria -> LPAREN operacion valor . valor RPAREN
    (17) diferencia -> LPAREN operacion valor . valor RPAREN
    (18) producto -> LPAREN operacion valor . valor RPAREN
    (19) division -> LPAREN operacion valor . valor RPAREN
    (9) valor -> . ENTERO
    (10) valor -> . FLOTANTE
    (11) valor -> . VARIABLE

    ENTERO          shift and go to state 20
    FLOTANTE        shift and go to state 21
    VARIABLE        shift and go to state 18

    valor                          shift and go to state 25

state 24

    (8) impresion -> IMPRIMIR LPAREN valor RPAREN .

    $end            reduce using rule 8 (impresion -> IMPRIMIR LPAREN valor RPAREN .)


state 25

    (16) sumatoria -> LPAREN operacion valor valor . RPAREN
    (17) diferencia -> LPAREN operacion valor valor . RPAREN
    (18) producto -> LPAREN operacion valor valor . RPAREN
    (19) division -> LPAREN operacion valor valor . RPAREN

    RPAREN          shift and go to state 26


state 26

    (16) sumatoria -> LPAREN operacion valor valor RPAREN .
    (17) diferencia -> LPAREN operacion valor valor RPAREN .
    (18) producto -> LPAREN operacion valor valor RPAREN .
    (19) division -> LPAREN operacion valor valor RPAREN .

  ! reduce/reduce conflict for $end resolved using rule 16 (sumatoria -> LPAREN operacion valor valor RPAREN .)
  ! reduce/reduce conflict for $end resolved using rule 16 (sumatoria -> LPAREN operacion valor valor RPAREN .)
  ! reduce/reduce conflict for $end resolved using rule 16 (sumatoria -> LPAREN operacion valor valor RPAREN .)
    $end            reduce using rule 16 (sumatoria -> LPAREN operacion valor valor RPAREN .)

  ! $end            [ reduce using rule 17 (diferencia -> LPAREN operacion valor valor RPAREN .) ]
  ! $end            [ reduce using rule 18 (producto -> LPAREN operacion valor valor RPAREN .) ]
  ! $end            [ reduce using rule 19 (division -> LPAREN operacion valor valor RPAREN .) ]

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: reduce/reduce conflict in state 26 resolved using rule (sumatoria -> LPAREN operacion valor valor RPAREN)
WARNING: rejected rule (diferencia -> LPAREN operacion valor valor RPAREN) in state 26
WARNING: reduce/reduce conflict in state 26 resolved using rule (sumatoria -> LPAREN operacion valor valor RPAREN)
WARNING: rejected rule (producto -> LPAREN operacion valor valor RPAREN) in state 26
WARNING: reduce/reduce conflict in state 26 resolved using rule (sumatoria -> LPAREN operacion valor valor RPAREN)
WARNING: rejected rule (division -> LPAREN operacion valor valor RPAREN) in state 26
WARNING: Rule (diferencia -> LPAREN operacion valor valor RPAREN) is never reduced
WARNING: Rule (producto -> LPAREN operacion valor valor RPAREN) is never reduced
WARNING: Rule (division -> LPAREN operacion valor valor RPAREN) is never reduced
