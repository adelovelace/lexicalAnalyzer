Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    CLASE
    CONJUNTOS
    DO
    DOTIMES
    FUNCION
    FUTURE
    IGUAL
    INPUT
    LISTA
    MAPAS
    NOT
    NS
    NUEVO
    STR
    WHEN

Grammar

Rule 0     S' -> instrucciones
Rule 1     instrucciones -> asignacion
Rule 2     instrucciones -> impresion
Rule 3     instrucciones -> operacion_aritmetica1
Rule 4     instrucciones -> condicional
Rule 5     instrucciones -> vectores
Rule 6     instrucciones -> conjuntos
Rule 7     instrucciones -> defn
Rule 8     instrucciones -> operacionesLogicas
Rule 9     instrucciones -> sentenciaLoopRecur
Rule 10    instrucciones -> cond_
Rule 11    instrucciones -> cond_else
Rule 12    instrucciones -> doseq
Rule 13    instrucciones -> case
Rule 14    instrucciones -> case_expression
Rule 15    instrucciones -> sentencia_booleana
Rule 16    instrucciones -> operador_comparadores
Rule 17    dato -> STRING
Rule 18    dato -> CHAR
Rule 19    dato -> ENTERO
Rule 20    dato -> FLOTANTE
Rule 21    dato -> BOOLEAN
Rule 22    dato -> VARIABLE
Rule 23    valor -> ENTERO
Rule 24    valor -> FLOTANTE
Rule 25    valor -> BOOLEAN
Rule 26    operador_comparadores -> COMPARA_IGUAL
Rule 27    operador_comparadores -> MENORQUE
Rule 28    operador_comparadores -> MAYORQUE
Rule 29    operador_comparadores -> MAYORIGUALQUE
Rule 30    operador_comparadores -> MENORIGUALQUE
Rule 31    operador_comparadores -> DIFERENTE
Rule 32    asignacion -> LPAREN DEFICION VARIABLE dato RPAREN
Rule 33    asignacion -> LPAREN LET LCOR VARIABLE dato RCOR RPAREN
Rule 34    sentencia_booleana -> LPAREN operador_comparadores dato dato RPAREN
Rule 35    linecondition -> sentencia_booleana impresion
Rule 36    cond_ -> LPAREN COND linecondition linecondition RPAREN
Rule 37    cond_else -> LPAREN COND linecondition linecondition DOSPUNTOS ELSE impresion RPAREN
Rule 38    case -> dato impresion
Rule 39    case_expression -> LPAREN CASE dato case case case impresion RPAREN
Rule 40    impresion -> LPAREN IMPRIMIR dato RPAREN
Rule 41    valor -> VARIABLE
Rule 42    operacion -> MAS
Rule 43    operacion -> MENOS
Rule 44    operacion -> PRODUCTO
Rule 45    operacion -> DIVISION
Rule 46    operacionesLogicas -> LPAREN IF LPAREN MENORQUE VARIABLE ENTERO RPAREN LPAREN RECUR LPAREN INC LPAREN VARIABLE RPAREN RPAREN VARIABLE RPAREN RPAREN
Rule 47    operacion_aritmetica1 -> LPAREN operacion valor valor RPAREN
Rule 48    condicional -> LPAREN operacion valor valor RPAREN
Rule 49    vectores -> VECTORES
Rule 50    doseq -> LPAREN DOSEQ LCOR VARIABLE LPAREN RANGE VARIABLE RPAREN RCOR LPAREN impresion RPAREN RPAREN
Rule 51    defn -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN
Rule 52    defn -> LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN
Rule 53    expresionDefnElse -> CASE VARIABLE expresionCase DOSPUNTOS ELSE STRING
Rule 54    expresionCase -> dato STRING
Rule 55    conjuntos -> NUMERAL L_LLAVE expresionConjuntoEnteros R_LLAVE
Rule 56    conjuntos -> NUMERAL L_LLAVE expresionConjuntoDouble R_LLAVE
Rule 57    conjuntos -> NUMERAL L_LLAVE expresionConjuntoString R_LLAVE
Rule 58    sentenciaLoopRecur -> LPAREN LOOP LCOR VARIABLE ENTERO RCOR operacionesLogicas RPAREN
Rule 59    expresionConjuntoEnteros -> ENTERO
Rule 60    expresionConjuntoEnteros -> ENTERO expresionConjuntoEnteros
Rule 61    expresionConjuntoDouble -> FLOTANTE
Rule 62    expresionConjuntoDouble -> FLOTANTE expresionConjuntoDouble
Rule 63    expresionConjuntoString -> STRING
Rule 64    expresionConjuntoString -> STRING expresionConjuntoString

Terminals, with rules where they appear

BOOLEAN              : 21 25
CASE                 : 39 53
CHAR                 : 18
CLASE                : 
COMPARA_IGUAL        : 26
COND                 : 36 37
CONJUNTOS            : 
DEFFUNCION           : 51 52
DEFICION             : 32
DIFERENTE            : 31
DIVISION             : 45
DO                   : 
DOSEQ                : 50
DOSPUNTOS            : 37 53
DOTIMES              : 
ELSE                 : 37 53
ENTERO               : 19 23 46 58 59 60
FLOTANTE             : 20 24 61 62
FUNCION              : 
FUTURE               : 
IF                   : 46
IGUAL                : 
IMPRIMIR             : 40
INC                  : 46
INCREASE             : 52
INPUT                : 
LCOR                 : 33 50 51 52 58
LET                  : 33
LISTA                : 
LOOP                 : 58
LPAREN               : 32 33 34 36 37 39 40 46 46 46 46 46 47 48 50 50 50 51 51 52 58
L_LLAVE              : 55 56 57
MAPAS                : 
MAS                  : 42
MAYORIGUALQUE        : 29
MAYORQUE             : 28
MENORIGUALQUE        : 30
MENORQUE             : 27 46
MENOS                : 43
NOT                  : 
NS                   : 
NUEVO                : 
NUMERAL              : 55 56 57
PRODUCTO             : 44
RANGE                : 50
RCOR                 : 33 50 51 52 58
RECUR                : 46
RPAREN               : 32 33 34 36 37 39 40 46 46 46 46 46 47 48 50 50 50 51 51 52 58
R_LLAVE              : 55 56 57
STR                  : 
STRING               : 17 53 54 63 64
VARIABLE             : 22 32 33 41 46 46 46 50 50 51 51 52 53 58
VECTORES             : 49
WHEN                 : 
error                : 

Nonterminals, with rules where they appear

asignacion           : 1
case                 : 13 39 39 39
case_expression      : 14
cond_                : 10
cond_else            : 11
condicional          : 4
conjuntos            : 6
dato                 : 32 33 34 34 38 39 40 54
defn                 : 7
doseq                : 12
expresionCase        : 53
expresionConjuntoDouble : 56 62
expresionConjuntoEnteros : 55 60
expresionConjuntoString : 57 64
expresionDefnElse    : 51
impresion            : 2 35 37 38 39 50
instrucciones        : 0
linecondition        : 36 36 37 37
operacion            : 47 48
operacion_aritmetica1 : 3
operacionesLogicas   : 8 52 58
operador_comparadores : 16 34
sentenciaLoopRecur   : 9
sentencia_booleana   : 15 35
valor                : 47 47 48 48
vectores             : 5

Parsing method: LALR

state 0

    (0) S' -> . instrucciones
    (1) instrucciones -> . asignacion
    (2) instrucciones -> . impresion
    (3) instrucciones -> . operacion_aritmetica1
    (4) instrucciones -> . condicional
    (5) instrucciones -> . vectores
    (6) instrucciones -> . conjuntos
    (7) instrucciones -> . defn
    (8) instrucciones -> . operacionesLogicas
    (9) instrucciones -> . sentenciaLoopRecur
    (10) instrucciones -> . cond_
    (11) instrucciones -> . cond_else
    (12) instrucciones -> . doseq
    (13) instrucciones -> . case
    (14) instrucciones -> . case_expression
    (15) instrucciones -> . sentencia_booleana
    (16) instrucciones -> . operador_comparadores
    (32) asignacion -> . LPAREN DEFICION VARIABLE dato RPAREN
    (33) asignacion -> . LPAREN LET LCOR VARIABLE dato RCOR RPAREN
    (40) impresion -> . LPAREN IMPRIMIR dato RPAREN
    (47) operacion_aritmetica1 -> . LPAREN operacion valor valor RPAREN
    (48) condicional -> . LPAREN operacion valor valor RPAREN
    (49) vectores -> . VECTORES
    (55) conjuntos -> . NUMERAL L_LLAVE expresionConjuntoEnteros R_LLAVE
    (56) conjuntos -> . NUMERAL L_LLAVE expresionConjuntoDouble R_LLAVE
    (57) conjuntos -> . NUMERAL L_LLAVE expresionConjuntoString R_LLAVE
    (51) defn -> . LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN
    (52) defn -> . LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN
    (46) operacionesLogicas -> . LPAREN IF LPAREN MENORQUE VARIABLE ENTERO RPAREN LPAREN RECUR LPAREN INC LPAREN VARIABLE RPAREN RPAREN VARIABLE RPAREN RPAREN
    (58) sentenciaLoopRecur -> . LPAREN LOOP LCOR VARIABLE ENTERO RCOR operacionesLogicas RPAREN
    (36) cond_ -> . LPAREN COND linecondition linecondition RPAREN
    (37) cond_else -> . LPAREN COND linecondition linecondition DOSPUNTOS ELSE impresion RPAREN
    (50) doseq -> . LPAREN DOSEQ LCOR VARIABLE LPAREN RANGE VARIABLE RPAREN RCOR LPAREN impresion RPAREN RPAREN
    (38) case -> . dato impresion
    (39) case_expression -> . LPAREN CASE dato case case case impresion RPAREN
    (34) sentencia_booleana -> . LPAREN operador_comparadores dato dato RPAREN
    (26) operador_comparadores -> . COMPARA_IGUAL
    (27) operador_comparadores -> . MENORQUE
    (28) operador_comparadores -> . MAYORQUE
    (29) operador_comparadores -> . MAYORIGUALQUE
    (30) operador_comparadores -> . MENORIGUALQUE
    (31) operador_comparadores -> . DIFERENTE
    (17) dato -> . STRING
    (18) dato -> . CHAR
    (19) dato -> . ENTERO
    (20) dato -> . FLOTANTE
    (21) dato -> . BOOLEAN
    (22) dato -> . VARIABLE

    LPAREN          shift and go to state 18
    VECTORES        shift and go to state 21
    NUMERAL         shift and go to state 22
    COMPARA_IGUAL   shift and go to state 25
    MENORQUE        shift and go to state 23
    MAYORQUE        shift and go to state 26
    MAYORIGUALQUE   shift and go to state 27
    MENORIGUALQUE   shift and go to state 28
    DIFERENTE       shift and go to state 29
    STRING          shift and go to state 30
    CHAR            shift and go to state 31
    ENTERO          shift and go to state 24
    FLOTANTE        shift and go to state 32
    BOOLEAN         shift and go to state 33
    VARIABLE        shift and go to state 19

    instrucciones                  shift and go to state 1
    asignacion                     shift and go to state 2
    impresion                      shift and go to state 3
    operacion_aritmetica1          shift and go to state 4
    condicional                    shift and go to state 5
    vectores                       shift and go to state 6
    conjuntos                      shift and go to state 7
    defn                           shift and go to state 8
    operacionesLogicas             shift and go to state 9
    sentenciaLoopRecur             shift and go to state 10
    cond_                          shift and go to state 11
    cond_else                      shift and go to state 12
    doseq                          shift and go to state 13
    case                           shift and go to state 14
    case_expression                shift and go to state 15
    sentencia_booleana             shift and go to state 16
    operador_comparadores          shift and go to state 17
    dato                           shift and go to state 20

state 1

    (0) S' -> instrucciones .



state 2

    (1) instrucciones -> asignacion .

    $end            reduce using rule 1 (instrucciones -> asignacion .)


state 3

    (2) instrucciones -> impresion .

    $end            reduce using rule 2 (instrucciones -> impresion .)


state 4

    (3) instrucciones -> operacion_aritmetica1 .

    $end            reduce using rule 3 (instrucciones -> operacion_aritmetica1 .)


state 5

    (4) instrucciones -> condicional .

    $end            reduce using rule 4 (instrucciones -> condicional .)


state 6

    (5) instrucciones -> vectores .

    $end            reduce using rule 5 (instrucciones -> vectores .)


state 7

    (6) instrucciones -> conjuntos .

    $end            reduce using rule 6 (instrucciones -> conjuntos .)


state 8

    (7) instrucciones -> defn .

    $end            reduce using rule 7 (instrucciones -> defn .)


state 9

    (8) instrucciones -> operacionesLogicas .

    $end            reduce using rule 8 (instrucciones -> operacionesLogicas .)


state 10

    (9) instrucciones -> sentenciaLoopRecur .

    $end            reduce using rule 9 (instrucciones -> sentenciaLoopRecur .)


state 11

    (10) instrucciones -> cond_ .

    $end            reduce using rule 10 (instrucciones -> cond_ .)


state 12

    (11) instrucciones -> cond_else .

    $end            reduce using rule 11 (instrucciones -> cond_else .)


state 13

    (12) instrucciones -> doseq .

    $end            reduce using rule 12 (instrucciones -> doseq .)


state 14

    (13) instrucciones -> case .

    $end            reduce using rule 13 (instrucciones -> case .)


state 15

    (14) instrucciones -> case_expression .

    $end            reduce using rule 14 (instrucciones -> case_expression .)


state 16

    (15) instrucciones -> sentencia_booleana .

    $end            reduce using rule 15 (instrucciones -> sentencia_booleana .)


state 17

    (16) instrucciones -> operador_comparadores .

    $end            reduce using rule 16 (instrucciones -> operador_comparadores .)


state 18

    (32) asignacion -> LPAREN . DEFICION VARIABLE dato RPAREN
    (33) asignacion -> LPAREN . LET LCOR VARIABLE dato RCOR RPAREN
    (40) impresion -> LPAREN . IMPRIMIR dato RPAREN
    (47) operacion_aritmetica1 -> LPAREN . operacion valor valor RPAREN
    (48) condicional -> LPAREN . operacion valor valor RPAREN
    (51) defn -> LPAREN . DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN
    (52) defn -> LPAREN . DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN
    (46) operacionesLogicas -> LPAREN . IF LPAREN MENORQUE VARIABLE ENTERO RPAREN LPAREN RECUR LPAREN INC LPAREN VARIABLE RPAREN RPAREN VARIABLE RPAREN RPAREN
    (58) sentenciaLoopRecur -> LPAREN . LOOP LCOR VARIABLE ENTERO RCOR operacionesLogicas RPAREN
    (36) cond_ -> LPAREN . COND linecondition linecondition RPAREN
    (37) cond_else -> LPAREN . COND linecondition linecondition DOSPUNTOS ELSE impresion RPAREN
    (50) doseq -> LPAREN . DOSEQ LCOR VARIABLE LPAREN RANGE VARIABLE RPAREN RCOR LPAREN impresion RPAREN RPAREN
    (39) case_expression -> LPAREN . CASE dato case case case impresion RPAREN
    (34) sentencia_booleana -> LPAREN . operador_comparadores dato dato RPAREN
    (42) operacion -> . MAS
    (43) operacion -> . MENOS
    (44) operacion -> . PRODUCTO
    (45) operacion -> . DIVISION
    (26) operador_comparadores -> . COMPARA_IGUAL
    (27) operador_comparadores -> . MENORQUE
    (28) operador_comparadores -> . MAYORQUE
    (29) operador_comparadores -> . MAYORIGUALQUE
    (30) operador_comparadores -> . MENORIGUALQUE
    (31) operador_comparadores -> . DIFERENTE

    DEFICION        shift and go to state 34
    LET             shift and go to state 35
    IMPRIMIR        shift and go to state 36
    DEFFUNCION      shift and go to state 38
    IF              shift and go to state 39
    LOOP            shift and go to state 40
    COND            shift and go to state 41
    DOSEQ           shift and go to state 42
    CASE            shift and go to state 43
    MAS             shift and go to state 45
    MENOS           shift and go to state 46
    PRODUCTO        shift and go to state 47
    DIVISION        shift and go to state 48
    COMPARA_IGUAL   shift and go to state 25
    MENORQUE        shift and go to state 23
    MAYORQUE        shift and go to state 26
    MAYORIGUALQUE   shift and go to state 27
    MENORIGUALQUE   shift and go to state 28
    DIFERENTE       shift and go to state 29

    operacion                      shift and go to state 37
    operador_comparadores          shift and go to state 44

state 19

    (22) dato -> VARIABLE .

    LPAREN          reduce using rule 22 (dato -> VARIABLE .)
    RPAREN          reduce using rule 22 (dato -> VARIABLE .)
    STRING          reduce using rule 22 (dato -> VARIABLE .)
    CHAR            reduce using rule 22 (dato -> VARIABLE .)
    ENTERO          reduce using rule 22 (dato -> VARIABLE .)
    FLOTANTE        reduce using rule 22 (dato -> VARIABLE .)
    BOOLEAN         reduce using rule 22 (dato -> VARIABLE .)
    VARIABLE        reduce using rule 22 (dato -> VARIABLE .)
    RCOR            reduce using rule 22 (dato -> VARIABLE .)


state 20

    (38) case -> dato . impresion
    (40) impresion -> . LPAREN IMPRIMIR dato RPAREN

    LPAREN          shift and go to state 50

    impresion                      shift and go to state 49

state 21

    (49) vectores -> VECTORES .

    $end            reduce using rule 49 (vectores -> VECTORES .)


state 22

    (55) conjuntos -> NUMERAL . L_LLAVE expresionConjuntoEnteros R_LLAVE
    (56) conjuntos -> NUMERAL . L_LLAVE expresionConjuntoDouble R_LLAVE
    (57) conjuntos -> NUMERAL . L_LLAVE expresionConjuntoString R_LLAVE

    L_LLAVE         shift and go to state 51


state 23

    (27) operador_comparadores -> MENORQUE .

    $end            reduce using rule 27 (operador_comparadores -> MENORQUE .)
    STRING          reduce using rule 27 (operador_comparadores -> MENORQUE .)
    CHAR            reduce using rule 27 (operador_comparadores -> MENORQUE .)
    ENTERO          reduce using rule 27 (operador_comparadores -> MENORQUE .)
    FLOTANTE        reduce using rule 27 (operador_comparadores -> MENORQUE .)
    BOOLEAN         reduce using rule 27 (operador_comparadores -> MENORQUE .)
    VARIABLE        reduce using rule 27 (operador_comparadores -> MENORQUE .)


state 24

    (19) dato -> ENTERO .

    LPAREN          reduce using rule 19 (dato -> ENTERO .)
    RPAREN          reduce using rule 19 (dato -> ENTERO .)
    STRING          reduce using rule 19 (dato -> ENTERO .)
    CHAR            reduce using rule 19 (dato -> ENTERO .)
    ENTERO          reduce using rule 19 (dato -> ENTERO .)
    FLOTANTE        reduce using rule 19 (dato -> ENTERO .)
    BOOLEAN         reduce using rule 19 (dato -> ENTERO .)
    VARIABLE        reduce using rule 19 (dato -> ENTERO .)
    RCOR            reduce using rule 19 (dato -> ENTERO .)


state 25

    (26) operador_comparadores -> COMPARA_IGUAL .

    $end            reduce using rule 26 (operador_comparadores -> COMPARA_IGUAL .)
    STRING          reduce using rule 26 (operador_comparadores -> COMPARA_IGUAL .)
    CHAR            reduce using rule 26 (operador_comparadores -> COMPARA_IGUAL .)
    ENTERO          reduce using rule 26 (operador_comparadores -> COMPARA_IGUAL .)
    FLOTANTE        reduce using rule 26 (operador_comparadores -> COMPARA_IGUAL .)
    BOOLEAN         reduce using rule 26 (operador_comparadores -> COMPARA_IGUAL .)
    VARIABLE        reduce using rule 26 (operador_comparadores -> COMPARA_IGUAL .)


state 26

    (28) operador_comparadores -> MAYORQUE .

    $end            reduce using rule 28 (operador_comparadores -> MAYORQUE .)
    STRING          reduce using rule 28 (operador_comparadores -> MAYORQUE .)
    CHAR            reduce using rule 28 (operador_comparadores -> MAYORQUE .)
    ENTERO          reduce using rule 28 (operador_comparadores -> MAYORQUE .)
    FLOTANTE        reduce using rule 28 (operador_comparadores -> MAYORQUE .)
    BOOLEAN         reduce using rule 28 (operador_comparadores -> MAYORQUE .)
    VARIABLE        reduce using rule 28 (operador_comparadores -> MAYORQUE .)


state 27

    (29) operador_comparadores -> MAYORIGUALQUE .

    $end            reduce using rule 29 (operador_comparadores -> MAYORIGUALQUE .)
    STRING          reduce using rule 29 (operador_comparadores -> MAYORIGUALQUE .)
    CHAR            reduce using rule 29 (operador_comparadores -> MAYORIGUALQUE .)
    ENTERO          reduce using rule 29 (operador_comparadores -> MAYORIGUALQUE .)
    FLOTANTE        reduce using rule 29 (operador_comparadores -> MAYORIGUALQUE .)
    BOOLEAN         reduce using rule 29 (operador_comparadores -> MAYORIGUALQUE .)
    VARIABLE        reduce using rule 29 (operador_comparadores -> MAYORIGUALQUE .)


state 28

    (30) operador_comparadores -> MENORIGUALQUE .

    $end            reduce using rule 30 (operador_comparadores -> MENORIGUALQUE .)
    STRING          reduce using rule 30 (operador_comparadores -> MENORIGUALQUE .)
    CHAR            reduce using rule 30 (operador_comparadores -> MENORIGUALQUE .)
    ENTERO          reduce using rule 30 (operador_comparadores -> MENORIGUALQUE .)
    FLOTANTE        reduce using rule 30 (operador_comparadores -> MENORIGUALQUE .)
    BOOLEAN         reduce using rule 30 (operador_comparadores -> MENORIGUALQUE .)
    VARIABLE        reduce using rule 30 (operador_comparadores -> MENORIGUALQUE .)


state 29

    (31) operador_comparadores -> DIFERENTE .

    $end            reduce using rule 31 (operador_comparadores -> DIFERENTE .)
    STRING          reduce using rule 31 (operador_comparadores -> DIFERENTE .)
    CHAR            reduce using rule 31 (operador_comparadores -> DIFERENTE .)
    ENTERO          reduce using rule 31 (operador_comparadores -> DIFERENTE .)
    FLOTANTE        reduce using rule 31 (operador_comparadores -> DIFERENTE .)
    BOOLEAN         reduce using rule 31 (operador_comparadores -> DIFERENTE .)
    VARIABLE        reduce using rule 31 (operador_comparadores -> DIFERENTE .)


state 30

    (17) dato -> STRING .

    LPAREN          reduce using rule 17 (dato -> STRING .)
    RPAREN          reduce using rule 17 (dato -> STRING .)
    STRING          reduce using rule 17 (dato -> STRING .)
    CHAR            reduce using rule 17 (dato -> STRING .)
    ENTERO          reduce using rule 17 (dato -> STRING .)
    FLOTANTE        reduce using rule 17 (dato -> STRING .)
    BOOLEAN         reduce using rule 17 (dato -> STRING .)
    VARIABLE        reduce using rule 17 (dato -> STRING .)
    RCOR            reduce using rule 17 (dato -> STRING .)


state 31

    (18) dato -> CHAR .

    LPAREN          reduce using rule 18 (dato -> CHAR .)
    RPAREN          reduce using rule 18 (dato -> CHAR .)
    STRING          reduce using rule 18 (dato -> CHAR .)
    CHAR            reduce using rule 18 (dato -> CHAR .)
    ENTERO          reduce using rule 18 (dato -> CHAR .)
    FLOTANTE        reduce using rule 18 (dato -> CHAR .)
    BOOLEAN         reduce using rule 18 (dato -> CHAR .)
    VARIABLE        reduce using rule 18 (dato -> CHAR .)
    RCOR            reduce using rule 18 (dato -> CHAR .)


state 32

    (20) dato -> FLOTANTE .

    LPAREN          reduce using rule 20 (dato -> FLOTANTE .)
    RPAREN          reduce using rule 20 (dato -> FLOTANTE .)
    STRING          reduce using rule 20 (dato -> FLOTANTE .)
    CHAR            reduce using rule 20 (dato -> FLOTANTE .)
    ENTERO          reduce using rule 20 (dato -> FLOTANTE .)
    FLOTANTE        reduce using rule 20 (dato -> FLOTANTE .)
    BOOLEAN         reduce using rule 20 (dato -> FLOTANTE .)
    VARIABLE        reduce using rule 20 (dato -> FLOTANTE .)
    RCOR            reduce using rule 20 (dato -> FLOTANTE .)


state 33

    (21) dato -> BOOLEAN .

    LPAREN          reduce using rule 21 (dato -> BOOLEAN .)
    RPAREN          reduce using rule 21 (dato -> BOOLEAN .)
    STRING          reduce using rule 21 (dato -> BOOLEAN .)
    CHAR            reduce using rule 21 (dato -> BOOLEAN .)
    ENTERO          reduce using rule 21 (dato -> BOOLEAN .)
    FLOTANTE        reduce using rule 21 (dato -> BOOLEAN .)
    BOOLEAN         reduce using rule 21 (dato -> BOOLEAN .)
    VARIABLE        reduce using rule 21 (dato -> BOOLEAN .)
    RCOR            reduce using rule 21 (dato -> BOOLEAN .)


state 34

    (32) asignacion -> LPAREN DEFICION . VARIABLE dato RPAREN

    VARIABLE        shift and go to state 52


state 35

    (33) asignacion -> LPAREN LET . LCOR VARIABLE dato RCOR RPAREN

    LCOR            shift and go to state 53


state 36

    (40) impresion -> LPAREN IMPRIMIR . dato RPAREN
    (17) dato -> . STRING
    (18) dato -> . CHAR
    (19) dato -> . ENTERO
    (20) dato -> . FLOTANTE
    (21) dato -> . BOOLEAN
    (22) dato -> . VARIABLE

    STRING          shift and go to state 30
    CHAR            shift and go to state 31
    ENTERO          shift and go to state 24
    FLOTANTE        shift and go to state 32
    BOOLEAN         shift and go to state 33
    VARIABLE        shift and go to state 19

    dato                           shift and go to state 54

state 37

    (47) operacion_aritmetica1 -> LPAREN operacion . valor valor RPAREN
    (48) condicional -> LPAREN operacion . valor valor RPAREN
    (23) valor -> . ENTERO
    (24) valor -> . FLOTANTE
    (25) valor -> . BOOLEAN
    (41) valor -> . VARIABLE

    ENTERO          shift and go to state 56
    FLOTANTE        shift and go to state 57
    BOOLEAN         shift and go to state 58
    VARIABLE        shift and go to state 59

    valor                          shift and go to state 55

state 38

    (51) defn -> LPAREN DEFFUNCION . VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN
    (52) defn -> LPAREN DEFFUNCION . INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN

    VARIABLE        shift and go to state 60
    INCREASE        shift and go to state 61


state 39

    (46) operacionesLogicas -> LPAREN IF . LPAREN MENORQUE VARIABLE ENTERO RPAREN LPAREN RECUR LPAREN INC LPAREN VARIABLE RPAREN RPAREN VARIABLE RPAREN RPAREN

    LPAREN          shift and go to state 62


state 40

    (58) sentenciaLoopRecur -> LPAREN LOOP . LCOR VARIABLE ENTERO RCOR operacionesLogicas RPAREN

    LCOR            shift and go to state 63


state 41

    (36) cond_ -> LPAREN COND . linecondition linecondition RPAREN
    (37) cond_else -> LPAREN COND . linecondition linecondition DOSPUNTOS ELSE impresion RPAREN
    (35) linecondition -> . sentencia_booleana impresion
    (34) sentencia_booleana -> . LPAREN operador_comparadores dato dato RPAREN

    LPAREN          shift and go to state 64

    linecondition                  shift and go to state 65
    sentencia_booleana             shift and go to state 66

state 42

    (50) doseq -> LPAREN DOSEQ . LCOR VARIABLE LPAREN RANGE VARIABLE RPAREN RCOR LPAREN impresion RPAREN RPAREN

    LCOR            shift and go to state 67


state 43

    (39) case_expression -> LPAREN CASE . dato case case case impresion RPAREN
    (17) dato -> . STRING
    (18) dato -> . CHAR
    (19) dato -> . ENTERO
    (20) dato -> . FLOTANTE
    (21) dato -> . BOOLEAN
    (22) dato -> . VARIABLE

    STRING          shift and go to state 30
    CHAR            shift and go to state 31
    ENTERO          shift and go to state 24
    FLOTANTE        shift and go to state 32
    BOOLEAN         shift and go to state 33
    VARIABLE        shift and go to state 19

    dato                           shift and go to state 68

state 44

    (34) sentencia_booleana -> LPAREN operador_comparadores . dato dato RPAREN
    (17) dato -> . STRING
    (18) dato -> . CHAR
    (19) dato -> . ENTERO
    (20) dato -> . FLOTANTE
    (21) dato -> . BOOLEAN
    (22) dato -> . VARIABLE

    STRING          shift and go to state 30
    CHAR            shift and go to state 31
    ENTERO          shift and go to state 24
    FLOTANTE        shift and go to state 32
    BOOLEAN         shift and go to state 33
    VARIABLE        shift and go to state 19

    dato                           shift and go to state 69

state 45

    (42) operacion -> MAS .

    ENTERO          reduce using rule 42 (operacion -> MAS .)
    FLOTANTE        reduce using rule 42 (operacion -> MAS .)
    BOOLEAN         reduce using rule 42 (operacion -> MAS .)
    VARIABLE        reduce using rule 42 (operacion -> MAS .)


state 46

    (43) operacion -> MENOS .

    ENTERO          reduce using rule 43 (operacion -> MENOS .)
    FLOTANTE        reduce using rule 43 (operacion -> MENOS .)
    BOOLEAN         reduce using rule 43 (operacion -> MENOS .)
    VARIABLE        reduce using rule 43 (operacion -> MENOS .)


state 47

    (44) operacion -> PRODUCTO .

    ENTERO          reduce using rule 44 (operacion -> PRODUCTO .)
    FLOTANTE        reduce using rule 44 (operacion -> PRODUCTO .)
    BOOLEAN         reduce using rule 44 (operacion -> PRODUCTO .)
    VARIABLE        reduce using rule 44 (operacion -> PRODUCTO .)


state 48

    (45) operacion -> DIVISION .

    ENTERO          reduce using rule 45 (operacion -> DIVISION .)
    FLOTANTE        reduce using rule 45 (operacion -> DIVISION .)
    BOOLEAN         reduce using rule 45 (operacion -> DIVISION .)
    VARIABLE        reduce using rule 45 (operacion -> DIVISION .)


state 49

    (38) case -> dato impresion .

    $end            reduce using rule 38 (case -> dato impresion .)
    STRING          reduce using rule 38 (case -> dato impresion .)
    CHAR            reduce using rule 38 (case -> dato impresion .)
    ENTERO          reduce using rule 38 (case -> dato impresion .)
    FLOTANTE        reduce using rule 38 (case -> dato impresion .)
    BOOLEAN         reduce using rule 38 (case -> dato impresion .)
    VARIABLE        reduce using rule 38 (case -> dato impresion .)
    LPAREN          reduce using rule 38 (case -> dato impresion .)


state 50

    (40) impresion -> LPAREN . IMPRIMIR dato RPAREN

    IMPRIMIR        shift and go to state 36


state 51

    (55) conjuntos -> NUMERAL L_LLAVE . expresionConjuntoEnteros R_LLAVE
    (56) conjuntos -> NUMERAL L_LLAVE . expresionConjuntoDouble R_LLAVE
    (57) conjuntos -> NUMERAL L_LLAVE . expresionConjuntoString R_LLAVE
    (59) expresionConjuntoEnteros -> . ENTERO
    (60) expresionConjuntoEnteros -> . ENTERO expresionConjuntoEnteros
    (61) expresionConjuntoDouble -> . FLOTANTE
    (62) expresionConjuntoDouble -> . FLOTANTE expresionConjuntoDouble
    (63) expresionConjuntoString -> . STRING
    (64) expresionConjuntoString -> . STRING expresionConjuntoString

    ENTERO          shift and go to state 73
    FLOTANTE        shift and go to state 74
    STRING          shift and go to state 75

    expresionConjuntoEnteros       shift and go to state 70
    expresionConjuntoDouble        shift and go to state 71
    expresionConjuntoString        shift and go to state 72

state 52

    (32) asignacion -> LPAREN DEFICION VARIABLE . dato RPAREN
    (17) dato -> . STRING
    (18) dato -> . CHAR
    (19) dato -> . ENTERO
    (20) dato -> . FLOTANTE
    (21) dato -> . BOOLEAN
    (22) dato -> . VARIABLE

    STRING          shift and go to state 30
    CHAR            shift and go to state 31
    ENTERO          shift and go to state 24
    FLOTANTE        shift and go to state 32
    BOOLEAN         shift and go to state 33
    VARIABLE        shift and go to state 19

    dato                           shift and go to state 76

state 53

    (33) asignacion -> LPAREN LET LCOR . VARIABLE dato RCOR RPAREN

    VARIABLE        shift and go to state 77


state 54

    (40) impresion -> LPAREN IMPRIMIR dato . RPAREN

    RPAREN          shift and go to state 78


state 55

    (47) operacion_aritmetica1 -> LPAREN operacion valor . valor RPAREN
    (48) condicional -> LPAREN operacion valor . valor RPAREN
    (23) valor -> . ENTERO
    (24) valor -> . FLOTANTE
    (25) valor -> . BOOLEAN
    (41) valor -> . VARIABLE

    ENTERO          shift and go to state 56
    FLOTANTE        shift and go to state 57
    BOOLEAN         shift and go to state 58
    VARIABLE        shift and go to state 59

    valor                          shift and go to state 79

state 56

    (23) valor -> ENTERO .

    ENTERO          reduce using rule 23 (valor -> ENTERO .)
    FLOTANTE        reduce using rule 23 (valor -> ENTERO .)
    BOOLEAN         reduce using rule 23 (valor -> ENTERO .)
    VARIABLE        reduce using rule 23 (valor -> ENTERO .)
    RPAREN          reduce using rule 23 (valor -> ENTERO .)


state 57

    (24) valor -> FLOTANTE .

    ENTERO          reduce using rule 24 (valor -> FLOTANTE .)
    FLOTANTE        reduce using rule 24 (valor -> FLOTANTE .)
    BOOLEAN         reduce using rule 24 (valor -> FLOTANTE .)
    VARIABLE        reduce using rule 24 (valor -> FLOTANTE .)
    RPAREN          reduce using rule 24 (valor -> FLOTANTE .)


state 58

    (25) valor -> BOOLEAN .

    ENTERO          reduce using rule 25 (valor -> BOOLEAN .)
    FLOTANTE        reduce using rule 25 (valor -> BOOLEAN .)
    BOOLEAN         reduce using rule 25 (valor -> BOOLEAN .)
    VARIABLE        reduce using rule 25 (valor -> BOOLEAN .)
    RPAREN          reduce using rule 25 (valor -> BOOLEAN .)


state 59

    (41) valor -> VARIABLE .

    ENTERO          reduce using rule 41 (valor -> VARIABLE .)
    FLOTANTE        reduce using rule 41 (valor -> VARIABLE .)
    BOOLEAN         reduce using rule 41 (valor -> VARIABLE .)
    VARIABLE        reduce using rule 41 (valor -> VARIABLE .)
    RPAREN          reduce using rule 41 (valor -> VARIABLE .)


state 60

    (51) defn -> LPAREN DEFFUNCION VARIABLE . LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN

    LCOR            shift and go to state 80


state 61

    (52) defn -> LPAREN DEFFUNCION INCREASE . LCOR VARIABLE RCOR operacionesLogicas RPAREN

    LCOR            shift and go to state 81


state 62

    (46) operacionesLogicas -> LPAREN IF LPAREN . MENORQUE VARIABLE ENTERO RPAREN LPAREN RECUR LPAREN INC LPAREN VARIABLE RPAREN RPAREN VARIABLE RPAREN RPAREN

    MENORQUE        shift and go to state 82


state 63

    (58) sentenciaLoopRecur -> LPAREN LOOP LCOR . VARIABLE ENTERO RCOR operacionesLogicas RPAREN

    VARIABLE        shift and go to state 83


state 64

    (34) sentencia_booleana -> LPAREN . operador_comparadores dato dato RPAREN
    (26) operador_comparadores -> . COMPARA_IGUAL
    (27) operador_comparadores -> . MENORQUE
    (28) operador_comparadores -> . MAYORQUE
    (29) operador_comparadores -> . MAYORIGUALQUE
    (30) operador_comparadores -> . MENORIGUALQUE
    (31) operador_comparadores -> . DIFERENTE

    COMPARA_IGUAL   shift and go to state 25
    MENORQUE        shift and go to state 23
    MAYORQUE        shift and go to state 26
    MAYORIGUALQUE   shift and go to state 27
    MENORIGUALQUE   shift and go to state 28
    DIFERENTE       shift and go to state 29

    operador_comparadores          shift and go to state 44

state 65

    (36) cond_ -> LPAREN COND linecondition . linecondition RPAREN
    (37) cond_else -> LPAREN COND linecondition . linecondition DOSPUNTOS ELSE impresion RPAREN
    (35) linecondition -> . sentencia_booleana impresion
    (34) sentencia_booleana -> . LPAREN operador_comparadores dato dato RPAREN

    LPAREN          shift and go to state 64

    linecondition                  shift and go to state 84
    sentencia_booleana             shift and go to state 66

state 66

    (35) linecondition -> sentencia_booleana . impresion
    (40) impresion -> . LPAREN IMPRIMIR dato RPAREN

    LPAREN          shift and go to state 50

    impresion                      shift and go to state 85

state 67

    (50) doseq -> LPAREN DOSEQ LCOR . VARIABLE LPAREN RANGE VARIABLE RPAREN RCOR LPAREN impresion RPAREN RPAREN

    VARIABLE        shift and go to state 86


state 68

    (39) case_expression -> LPAREN CASE dato . case case case impresion RPAREN
    (38) case -> . dato impresion
    (17) dato -> . STRING
    (18) dato -> . CHAR
    (19) dato -> . ENTERO
    (20) dato -> . FLOTANTE
    (21) dato -> . BOOLEAN
    (22) dato -> . VARIABLE

    STRING          shift and go to state 30
    CHAR            shift and go to state 31
    ENTERO          shift and go to state 24
    FLOTANTE        shift and go to state 32
    BOOLEAN         shift and go to state 33
    VARIABLE        shift and go to state 19

    dato                           shift and go to state 20
    case                           shift and go to state 87

state 69

    (34) sentencia_booleana -> LPAREN operador_comparadores dato . dato RPAREN
    (17) dato -> . STRING
    (18) dato -> . CHAR
    (19) dato -> . ENTERO
    (20) dato -> . FLOTANTE
    (21) dato -> . BOOLEAN
    (22) dato -> . VARIABLE

    STRING          shift and go to state 30
    CHAR            shift and go to state 31
    ENTERO          shift and go to state 24
    FLOTANTE        shift and go to state 32
    BOOLEAN         shift and go to state 33
    VARIABLE        shift and go to state 19

    dato                           shift and go to state 88

state 70

    (55) conjuntos -> NUMERAL L_LLAVE expresionConjuntoEnteros . R_LLAVE

    R_LLAVE         shift and go to state 89


state 71

    (56) conjuntos -> NUMERAL L_LLAVE expresionConjuntoDouble . R_LLAVE

    R_LLAVE         shift and go to state 90


state 72

    (57) conjuntos -> NUMERAL L_LLAVE expresionConjuntoString . R_LLAVE

    R_LLAVE         shift and go to state 91


state 73

    (59) expresionConjuntoEnteros -> ENTERO .
    (60) expresionConjuntoEnteros -> ENTERO . expresionConjuntoEnteros
    (59) expresionConjuntoEnteros -> . ENTERO
    (60) expresionConjuntoEnteros -> . ENTERO expresionConjuntoEnteros

    R_LLAVE         reduce using rule 59 (expresionConjuntoEnteros -> ENTERO .)
    ENTERO          shift and go to state 73

    expresionConjuntoEnteros       shift and go to state 92

state 74

    (61) expresionConjuntoDouble -> FLOTANTE .
    (62) expresionConjuntoDouble -> FLOTANTE . expresionConjuntoDouble
    (61) expresionConjuntoDouble -> . FLOTANTE
    (62) expresionConjuntoDouble -> . FLOTANTE expresionConjuntoDouble

    R_LLAVE         reduce using rule 61 (expresionConjuntoDouble -> FLOTANTE .)
    FLOTANTE        shift and go to state 74

    expresionConjuntoDouble        shift and go to state 93

state 75

    (63) expresionConjuntoString -> STRING .
    (64) expresionConjuntoString -> STRING . expresionConjuntoString
    (63) expresionConjuntoString -> . STRING
    (64) expresionConjuntoString -> . STRING expresionConjuntoString

    R_LLAVE         reduce using rule 63 (expresionConjuntoString -> STRING .)
    STRING          shift and go to state 75

    expresionConjuntoString        shift and go to state 94

state 76

    (32) asignacion -> LPAREN DEFICION VARIABLE dato . RPAREN

    RPAREN          shift and go to state 95


state 77

    (33) asignacion -> LPAREN LET LCOR VARIABLE . dato RCOR RPAREN
    (17) dato -> . STRING
    (18) dato -> . CHAR
    (19) dato -> . ENTERO
    (20) dato -> . FLOTANTE
    (21) dato -> . BOOLEAN
    (22) dato -> . VARIABLE

    STRING          shift and go to state 30
    CHAR            shift and go to state 31
    ENTERO          shift and go to state 24
    FLOTANTE        shift and go to state 32
    BOOLEAN         shift and go to state 33
    VARIABLE        shift and go to state 19

    dato                           shift and go to state 96

state 78

    (40) impresion -> LPAREN IMPRIMIR dato RPAREN .

    $end            reduce using rule 40 (impresion -> LPAREN IMPRIMIR dato RPAREN .)
    STRING          reduce using rule 40 (impresion -> LPAREN IMPRIMIR dato RPAREN .)
    CHAR            reduce using rule 40 (impresion -> LPAREN IMPRIMIR dato RPAREN .)
    ENTERO          reduce using rule 40 (impresion -> LPAREN IMPRIMIR dato RPAREN .)
    FLOTANTE        reduce using rule 40 (impresion -> LPAREN IMPRIMIR dato RPAREN .)
    BOOLEAN         reduce using rule 40 (impresion -> LPAREN IMPRIMIR dato RPAREN .)
    VARIABLE        reduce using rule 40 (impresion -> LPAREN IMPRIMIR dato RPAREN .)
    LPAREN          reduce using rule 40 (impresion -> LPAREN IMPRIMIR dato RPAREN .)
    RPAREN          reduce using rule 40 (impresion -> LPAREN IMPRIMIR dato RPAREN .)
    DOSPUNTOS       reduce using rule 40 (impresion -> LPAREN IMPRIMIR dato RPAREN .)


state 79

    (47) operacion_aritmetica1 -> LPAREN operacion valor valor . RPAREN
    (48) condicional -> LPAREN operacion valor valor . RPAREN

    RPAREN          shift and go to state 97


state 80

    (51) defn -> LPAREN DEFFUNCION VARIABLE LCOR . VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN

    VARIABLE        shift and go to state 98


state 81

    (52) defn -> LPAREN DEFFUNCION INCREASE LCOR . VARIABLE RCOR operacionesLogicas RPAREN

    VARIABLE        shift and go to state 99


state 82

    (46) operacionesLogicas -> LPAREN IF LPAREN MENORQUE . VARIABLE ENTERO RPAREN LPAREN RECUR LPAREN INC LPAREN VARIABLE RPAREN RPAREN VARIABLE RPAREN RPAREN

    VARIABLE        shift and go to state 100


state 83

    (58) sentenciaLoopRecur -> LPAREN LOOP LCOR VARIABLE . ENTERO RCOR operacionesLogicas RPAREN

    ENTERO          shift and go to state 101


state 84

    (36) cond_ -> LPAREN COND linecondition linecondition . RPAREN
    (37) cond_else -> LPAREN COND linecondition linecondition . DOSPUNTOS ELSE impresion RPAREN

    RPAREN          shift and go to state 102
    DOSPUNTOS       shift and go to state 103


state 85

    (35) linecondition -> sentencia_booleana impresion .

    LPAREN          reduce using rule 35 (linecondition -> sentencia_booleana impresion .)
    RPAREN          reduce using rule 35 (linecondition -> sentencia_booleana impresion .)
    DOSPUNTOS       reduce using rule 35 (linecondition -> sentencia_booleana impresion .)


state 86

    (50) doseq -> LPAREN DOSEQ LCOR VARIABLE . LPAREN RANGE VARIABLE RPAREN RCOR LPAREN impresion RPAREN RPAREN

    LPAREN          shift and go to state 104


state 87

    (39) case_expression -> LPAREN CASE dato case . case case impresion RPAREN
    (38) case -> . dato impresion
    (17) dato -> . STRING
    (18) dato -> . CHAR
    (19) dato -> . ENTERO
    (20) dato -> . FLOTANTE
    (21) dato -> . BOOLEAN
    (22) dato -> . VARIABLE

    STRING          shift and go to state 30
    CHAR            shift and go to state 31
    ENTERO          shift and go to state 24
    FLOTANTE        shift and go to state 32
    BOOLEAN         shift and go to state 33
    VARIABLE        shift and go to state 19

    dato                           shift and go to state 20
    case                           shift and go to state 105

state 88

    (34) sentencia_booleana -> LPAREN operador_comparadores dato dato . RPAREN

    RPAREN          shift and go to state 106


state 89

    (55) conjuntos -> NUMERAL L_LLAVE expresionConjuntoEnteros R_LLAVE .

    $end            reduce using rule 55 (conjuntos -> NUMERAL L_LLAVE expresionConjuntoEnteros R_LLAVE .)


state 90

    (56) conjuntos -> NUMERAL L_LLAVE expresionConjuntoDouble R_LLAVE .

    $end            reduce using rule 56 (conjuntos -> NUMERAL L_LLAVE expresionConjuntoDouble R_LLAVE .)


state 91

    (57) conjuntos -> NUMERAL L_LLAVE expresionConjuntoString R_LLAVE .

    $end            reduce using rule 57 (conjuntos -> NUMERAL L_LLAVE expresionConjuntoString R_LLAVE .)


state 92

    (60) expresionConjuntoEnteros -> ENTERO expresionConjuntoEnteros .

    R_LLAVE         reduce using rule 60 (expresionConjuntoEnteros -> ENTERO expresionConjuntoEnteros .)


state 93

    (62) expresionConjuntoDouble -> FLOTANTE expresionConjuntoDouble .

    R_LLAVE         reduce using rule 62 (expresionConjuntoDouble -> FLOTANTE expresionConjuntoDouble .)


state 94

    (64) expresionConjuntoString -> STRING expresionConjuntoString .

    R_LLAVE         reduce using rule 64 (expresionConjuntoString -> STRING expresionConjuntoString .)


state 95

    (32) asignacion -> LPAREN DEFICION VARIABLE dato RPAREN .

    $end            reduce using rule 32 (asignacion -> LPAREN DEFICION VARIABLE dato RPAREN .)


state 96

    (33) asignacion -> LPAREN LET LCOR VARIABLE dato . RCOR RPAREN

    RCOR            shift and go to state 107


state 97

    (47) operacion_aritmetica1 -> LPAREN operacion valor valor RPAREN .
    (48) condicional -> LPAREN operacion valor valor RPAREN .

  ! reduce/reduce conflict for $end resolved using rule 47 (operacion_aritmetica1 -> LPAREN operacion valor valor RPAREN .)
    $end            reduce using rule 47 (operacion_aritmetica1 -> LPAREN operacion valor valor RPAREN .)

  ! $end            [ reduce using rule 48 (condicional -> LPAREN operacion valor valor RPAREN .) ]


state 98

    (51) defn -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE . RCOR LPAREN expresionDefnElse RPAREN RPAREN

    RCOR            shift and go to state 108


state 99

    (52) defn -> LPAREN DEFFUNCION INCREASE LCOR VARIABLE . RCOR operacionesLogicas RPAREN

    RCOR            shift and go to state 109


state 100

    (46) operacionesLogicas -> LPAREN IF LPAREN MENORQUE VARIABLE . ENTERO RPAREN LPAREN RECUR LPAREN INC LPAREN VARIABLE RPAREN RPAREN VARIABLE RPAREN RPAREN

    ENTERO          shift and go to state 110


state 101

    (58) sentenciaLoopRecur -> LPAREN LOOP LCOR VARIABLE ENTERO . RCOR operacionesLogicas RPAREN

    RCOR            shift and go to state 111


state 102

    (36) cond_ -> LPAREN COND linecondition linecondition RPAREN .

    $end            reduce using rule 36 (cond_ -> LPAREN COND linecondition linecondition RPAREN .)


state 103

    (37) cond_else -> LPAREN COND linecondition linecondition DOSPUNTOS . ELSE impresion RPAREN

    ELSE            shift and go to state 112


state 104

    (50) doseq -> LPAREN DOSEQ LCOR VARIABLE LPAREN . RANGE VARIABLE RPAREN RCOR LPAREN impresion RPAREN RPAREN

    RANGE           shift and go to state 113


state 105

    (39) case_expression -> LPAREN CASE dato case case . case impresion RPAREN
    (38) case -> . dato impresion
    (17) dato -> . STRING
    (18) dato -> . CHAR
    (19) dato -> . ENTERO
    (20) dato -> . FLOTANTE
    (21) dato -> . BOOLEAN
    (22) dato -> . VARIABLE

    STRING          shift and go to state 30
    CHAR            shift and go to state 31
    ENTERO          shift and go to state 24
    FLOTANTE        shift and go to state 32
    BOOLEAN         shift and go to state 33
    VARIABLE        shift and go to state 19

    dato                           shift and go to state 20
    case                           shift and go to state 114

state 106

    (34) sentencia_booleana -> LPAREN operador_comparadores dato dato RPAREN .

    $end            reduce using rule 34 (sentencia_booleana -> LPAREN operador_comparadores dato dato RPAREN .)
    LPAREN          reduce using rule 34 (sentencia_booleana -> LPAREN operador_comparadores dato dato RPAREN .)


state 107

    (33) asignacion -> LPAREN LET LCOR VARIABLE dato RCOR . RPAREN

    RPAREN          shift and go to state 115


state 108

    (51) defn -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR . LPAREN expresionDefnElse RPAREN RPAREN

    LPAREN          shift and go to state 116


state 109

    (52) defn -> LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR . operacionesLogicas RPAREN
    (46) operacionesLogicas -> . LPAREN IF LPAREN MENORQUE VARIABLE ENTERO RPAREN LPAREN RECUR LPAREN INC LPAREN VARIABLE RPAREN RPAREN VARIABLE RPAREN RPAREN

    LPAREN          shift and go to state 117

    operacionesLogicas             shift and go to state 118

state 110

    (46) operacionesLogicas -> LPAREN IF LPAREN MENORQUE VARIABLE ENTERO . RPAREN LPAREN RECUR LPAREN INC LPAREN VARIABLE RPAREN RPAREN VARIABLE RPAREN RPAREN

    RPAREN          shift and go to state 119


state 111

    (58) sentenciaLoopRecur -> LPAREN LOOP LCOR VARIABLE ENTERO RCOR . operacionesLogicas RPAREN
    (46) operacionesLogicas -> . LPAREN IF LPAREN MENORQUE VARIABLE ENTERO RPAREN LPAREN RECUR LPAREN INC LPAREN VARIABLE RPAREN RPAREN VARIABLE RPAREN RPAREN

    LPAREN          shift and go to state 117

    operacionesLogicas             shift and go to state 120

state 112

    (37) cond_else -> LPAREN COND linecondition linecondition DOSPUNTOS ELSE . impresion RPAREN
    (40) impresion -> . LPAREN IMPRIMIR dato RPAREN

    LPAREN          shift and go to state 50

    impresion                      shift and go to state 121

state 113

    (50) doseq -> LPAREN DOSEQ LCOR VARIABLE LPAREN RANGE . VARIABLE RPAREN RCOR LPAREN impresion RPAREN RPAREN

    VARIABLE        shift and go to state 122


state 114

    (39) case_expression -> LPAREN CASE dato case case case . impresion RPAREN
    (40) impresion -> . LPAREN IMPRIMIR dato RPAREN

    LPAREN          shift and go to state 50

    impresion                      shift and go to state 123

state 115

    (33) asignacion -> LPAREN LET LCOR VARIABLE dato RCOR RPAREN .

    $end            reduce using rule 33 (asignacion -> LPAREN LET LCOR VARIABLE dato RCOR RPAREN .)


state 116

    (51) defn -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN . expresionDefnElse RPAREN RPAREN
    (53) expresionDefnElse -> . CASE VARIABLE expresionCase DOSPUNTOS ELSE STRING

    CASE            shift and go to state 125

    expresionDefnElse              shift and go to state 124

state 117

    (46) operacionesLogicas -> LPAREN . IF LPAREN MENORQUE VARIABLE ENTERO RPAREN LPAREN RECUR LPAREN INC LPAREN VARIABLE RPAREN RPAREN VARIABLE RPAREN RPAREN

    IF              shift and go to state 39


state 118

    (52) defn -> LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas . RPAREN

    RPAREN          shift and go to state 126


state 119

    (46) operacionesLogicas -> LPAREN IF LPAREN MENORQUE VARIABLE ENTERO RPAREN . LPAREN RECUR LPAREN INC LPAREN VARIABLE RPAREN RPAREN VARIABLE RPAREN RPAREN

    LPAREN          shift and go to state 127


state 120

    (58) sentenciaLoopRecur -> LPAREN LOOP LCOR VARIABLE ENTERO RCOR operacionesLogicas . RPAREN

    RPAREN          shift and go to state 128


state 121

    (37) cond_else -> LPAREN COND linecondition linecondition DOSPUNTOS ELSE impresion . RPAREN

    RPAREN          shift and go to state 129


state 122

    (50) doseq -> LPAREN DOSEQ LCOR VARIABLE LPAREN RANGE VARIABLE . RPAREN RCOR LPAREN impresion RPAREN RPAREN

    RPAREN          shift and go to state 130


state 123

    (39) case_expression -> LPAREN CASE dato case case case impresion . RPAREN

    RPAREN          shift and go to state 131


state 124

    (51) defn -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse . RPAREN RPAREN

    RPAREN          shift and go to state 132


state 125

    (53) expresionDefnElse -> CASE . VARIABLE expresionCase DOSPUNTOS ELSE STRING

    VARIABLE        shift and go to state 133


state 126

    (52) defn -> LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN .

    $end            reduce using rule 52 (defn -> LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN .)


state 127

    (46) operacionesLogicas -> LPAREN IF LPAREN MENORQUE VARIABLE ENTERO RPAREN LPAREN . RECUR LPAREN INC LPAREN VARIABLE RPAREN RPAREN VARIABLE RPAREN RPAREN

    RECUR           shift and go to state 134


state 128

    (58) sentenciaLoopRecur -> LPAREN LOOP LCOR VARIABLE ENTERO RCOR operacionesLogicas RPAREN .

    $end            reduce using rule 58 (sentenciaLoopRecur -> LPAREN LOOP LCOR VARIABLE ENTERO RCOR operacionesLogicas RPAREN .)


state 129

    (37) cond_else -> LPAREN COND linecondition linecondition DOSPUNTOS ELSE impresion RPAREN .

    $end            reduce using rule 37 (cond_else -> LPAREN COND linecondition linecondition DOSPUNTOS ELSE impresion RPAREN .)


state 130

    (50) doseq -> LPAREN DOSEQ LCOR VARIABLE LPAREN RANGE VARIABLE RPAREN . RCOR LPAREN impresion RPAREN RPAREN

    RCOR            shift and go to state 135


state 131

    (39) case_expression -> LPAREN CASE dato case case case impresion RPAREN .

    $end            reduce using rule 39 (case_expression -> LPAREN CASE dato case case case impresion RPAREN .)


state 132

    (51) defn -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN . RPAREN

    RPAREN          shift and go to state 136


state 133

    (53) expresionDefnElse -> CASE VARIABLE . expresionCase DOSPUNTOS ELSE STRING
    (54) expresionCase -> . dato STRING
    (17) dato -> . STRING
    (18) dato -> . CHAR
    (19) dato -> . ENTERO
    (20) dato -> . FLOTANTE
    (21) dato -> . BOOLEAN
    (22) dato -> . VARIABLE

    STRING          shift and go to state 30
    CHAR            shift and go to state 31
    ENTERO          shift and go to state 24
    FLOTANTE        shift and go to state 32
    BOOLEAN         shift and go to state 33
    VARIABLE        shift and go to state 19

    expresionCase                  shift and go to state 137
    dato                           shift and go to state 138

state 134

    (46) operacionesLogicas -> LPAREN IF LPAREN MENORQUE VARIABLE ENTERO RPAREN LPAREN RECUR . LPAREN INC LPAREN VARIABLE RPAREN RPAREN VARIABLE RPAREN RPAREN

    LPAREN          shift and go to state 139


state 135

    (50) doseq -> LPAREN DOSEQ LCOR VARIABLE LPAREN RANGE VARIABLE RPAREN RCOR . LPAREN impresion RPAREN RPAREN

    LPAREN          shift and go to state 140


state 136

    (51) defn -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN .

    $end            reduce using rule 51 (defn -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN .)


state 137

    (53) expresionDefnElse -> CASE VARIABLE expresionCase . DOSPUNTOS ELSE STRING

    DOSPUNTOS       shift and go to state 141


state 138

    (54) expresionCase -> dato . STRING

    STRING          shift and go to state 142


state 139

    (46) operacionesLogicas -> LPAREN IF LPAREN MENORQUE VARIABLE ENTERO RPAREN LPAREN RECUR LPAREN . INC LPAREN VARIABLE RPAREN RPAREN VARIABLE RPAREN RPAREN

    INC             shift and go to state 143


state 140

    (50) doseq -> LPAREN DOSEQ LCOR VARIABLE LPAREN RANGE VARIABLE RPAREN RCOR LPAREN . impresion RPAREN RPAREN
    (40) impresion -> . LPAREN IMPRIMIR dato RPAREN

    LPAREN          shift and go to state 50

    impresion                      shift and go to state 144

state 141

    (53) expresionDefnElse -> CASE VARIABLE expresionCase DOSPUNTOS . ELSE STRING

    ELSE            shift and go to state 145


state 142

    (54) expresionCase -> dato STRING .

    DOSPUNTOS       reduce using rule 54 (expresionCase -> dato STRING .)


state 143

    (46) operacionesLogicas -> LPAREN IF LPAREN MENORQUE VARIABLE ENTERO RPAREN LPAREN RECUR LPAREN INC . LPAREN VARIABLE RPAREN RPAREN VARIABLE RPAREN RPAREN

    LPAREN          shift and go to state 146


state 144

    (50) doseq -> LPAREN DOSEQ LCOR VARIABLE LPAREN RANGE VARIABLE RPAREN RCOR LPAREN impresion . RPAREN RPAREN

    RPAREN          shift and go to state 147


state 145

    (53) expresionDefnElse -> CASE VARIABLE expresionCase DOSPUNTOS ELSE . STRING

    STRING          shift and go to state 148


state 146

    (46) operacionesLogicas -> LPAREN IF LPAREN MENORQUE VARIABLE ENTERO RPAREN LPAREN RECUR LPAREN INC LPAREN . VARIABLE RPAREN RPAREN VARIABLE RPAREN RPAREN

    VARIABLE        shift and go to state 149


state 147

    (50) doseq -> LPAREN DOSEQ LCOR VARIABLE LPAREN RANGE VARIABLE RPAREN RCOR LPAREN impresion RPAREN . RPAREN

    RPAREN          shift and go to state 150


state 148

    (53) expresionDefnElse -> CASE VARIABLE expresionCase DOSPUNTOS ELSE STRING .

    RPAREN          reduce using rule 53 (expresionDefnElse -> CASE VARIABLE expresionCase DOSPUNTOS ELSE STRING .)


state 149

    (46) operacionesLogicas -> LPAREN IF LPAREN MENORQUE VARIABLE ENTERO RPAREN LPAREN RECUR LPAREN INC LPAREN VARIABLE . RPAREN RPAREN VARIABLE RPAREN RPAREN

    RPAREN          shift and go to state 151


state 150

    (50) doseq -> LPAREN DOSEQ LCOR VARIABLE LPAREN RANGE VARIABLE RPAREN RCOR LPAREN impresion RPAREN RPAREN .

    $end            reduce using rule 50 (doseq -> LPAREN DOSEQ LCOR VARIABLE LPAREN RANGE VARIABLE RPAREN RCOR LPAREN impresion RPAREN RPAREN .)


state 151

    (46) operacionesLogicas -> LPAREN IF LPAREN MENORQUE VARIABLE ENTERO RPAREN LPAREN RECUR LPAREN INC LPAREN VARIABLE RPAREN . RPAREN VARIABLE RPAREN RPAREN

    RPAREN          shift and go to state 152


state 152

    (46) operacionesLogicas -> LPAREN IF LPAREN MENORQUE VARIABLE ENTERO RPAREN LPAREN RECUR LPAREN INC LPAREN VARIABLE RPAREN RPAREN . VARIABLE RPAREN RPAREN

    VARIABLE        shift and go to state 153


state 153

    (46) operacionesLogicas -> LPAREN IF LPAREN MENORQUE VARIABLE ENTERO RPAREN LPAREN RECUR LPAREN INC LPAREN VARIABLE RPAREN RPAREN VARIABLE . RPAREN RPAREN

    RPAREN          shift and go to state 154


state 154

    (46) operacionesLogicas -> LPAREN IF LPAREN MENORQUE VARIABLE ENTERO RPAREN LPAREN RECUR LPAREN INC LPAREN VARIABLE RPAREN RPAREN VARIABLE RPAREN . RPAREN

    RPAREN          shift and go to state 155


state 155

    (46) operacionesLogicas -> LPAREN IF LPAREN MENORQUE VARIABLE ENTERO RPAREN LPAREN RECUR LPAREN INC LPAREN VARIABLE RPAREN RPAREN VARIABLE RPAREN RPAREN .

    $end            reduce using rule 46 (operacionesLogicas -> LPAREN IF LPAREN MENORQUE VARIABLE ENTERO RPAREN LPAREN RECUR LPAREN INC LPAREN VARIABLE RPAREN RPAREN VARIABLE RPAREN RPAREN .)
    RPAREN          reduce using rule 46 (operacionesLogicas -> LPAREN IF LPAREN MENORQUE VARIABLE ENTERO RPAREN LPAREN RECUR LPAREN INC LPAREN VARIABLE RPAREN RPAREN VARIABLE RPAREN RPAREN .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: reduce/reduce conflict in state 97 resolved using rule (operacion_aritmetica1 -> LPAREN operacion valor valor RPAREN)
WARNING: rejected rule (condicional -> LPAREN operacion valor valor RPAREN) in state 97
WARNING: Rule (condicional -> LPAREN operacion valor valor RPAREN) is never reduced
