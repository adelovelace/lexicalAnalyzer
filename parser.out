Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    CLASE
    CONJUNTOS
    DOTIMES
    FUNCION
    FUTURE
    IGUAL
    INPUT
    LISTA
    NOT
    NS
    NUEVO
    STR
    WHEN

Grammar

Rule 0     S' -> instrucciones
Rule 1     instrucciones -> asignacion
Rule 2     instrucciones -> impresion
Rule 3     instrucciones -> operacion_aritmetica1
Rule 4     instrucciones -> condicional
Rule 5     instrucciones -> conjuntos
Rule 6     instrucciones -> vector_entero
Rule 7     instrucciones -> vector_flotante
Rule 8     instrucciones -> mapa_entero
Rule 9     instrucciones -> mapa_flotante
Rule 10    instrucciones -> if
Rule 11    instrucciones -> if_do
Rule 12    instrucciones -> defn
Rule 13    instrucciones -> operacionesLogicas
Rule 14    instrucciones -> sentenciaLoopRecur
Rule 15    instrucciones -> cond_
Rule 16    instrucciones -> cond_else
Rule 17    instrucciones -> doseq
Rule 18    instrucciones -> case_expression
Rule 19    instrucciones -> lista
Rule 20    instrucciones -> sentencia_booleana
Rule 21    instrucciones -> definition
Rule 22    dato -> STRING
Rule 23    dato -> CHAR
Rule 24    dato -> ENTERO
Rule 25    dato -> FLOTANTE
Rule 26    dato -> BOOLEAN
Rule 27    dato -> VARIABLE
Rule 28    valor -> ENTERO
Rule 29    valor -> FLOTANTE
Rule 30    valor -> BOOLEAN
Rule 31    operador_comparadores -> COMPARA_IGUAL
Rule 32    operador_comparadores -> MENORQUE
Rule 33    operador_comparadores -> MAYORQUE
Rule 34    operador_comparadores -> MAYORIGUALQUE
Rule 35    operador_comparadores -> MENORIGUALQUE
Rule 36    operador_comparadores -> DIFERENTE
Rule 37    asignacion -> LPAREN DEFICION VARIABLE dato RPAREN
Rule 38    asignacion -> LPAREN LET LCOR VARIABLE dato RCOR RPAREN
Rule 39    sentencia_booleana -> LPAREN operador_comparadores dato dato RPAREN
Rule 40    linecondition -> sentencia_booleana impresion
Rule 41    cond_ -> LPAREN COND linecondition linecondition RPAREN
Rule 42    cond_else -> LPAREN COND linecondition linecondition DOSPUNTOS ELSE impresion RPAREN
Rule 43    case -> dato impresion
Rule 44    case_expression -> LPAREN CASE dato case case impresion RPAREN
Rule 45    lista -> LPAREN LIST dato dato RPAREN
Rule 46    description -> STRING
Rule 47    argumments -> LCOR dato dato dato RCOR
Rule 48    argumments -> LCOR dato dato RCOR
Rule 49    argumments -> LCOR dato RCOR
Rule 50    body -> instrucciones
Rule 51    internos -> description
Rule 52    internos -> argumments
Rule 53    internos -> body
Rule 54    internos -> argumments body
Rule 55    internos -> description argumments body
Rule 56    definition -> LPAREN DEFFUNCION VARIABLE internos RPAREN
Rule 57    impresion -> LPAREN IMPRIMIR dato RPAREN
Rule 58    valor -> VARIABLE
Rule 59    vector_entero -> VECTOR_ENTERO
Rule 60    vector_flotante -> VECTOR_FLOTANTE
Rule 61    mapa_entero -> MAPA_ENTERO
Rule 62    mapa_flotante -> MAPA_FLOTANTE
Rule 63    if -> IF LPAREN operador_comparadores dato dato RPAREN
Rule 64    if_do -> LPAREN IF LPAREN operador_comparadores dato dato RPAREN LPAREN DO LPAREN dato RPAREN BOOLEAN RPAREN RPAREN
Rule 65    operacion -> MAS
Rule 66    operacion -> MENOS
Rule 67    operacion -> PRODUCTO
Rule 68    operacion -> DIVISION
Rule 69    operacionesLogicas -> LPAREN IF LPAREN MENORQUE VARIABLE ENTERO RPAREN LPAREN RECUR LPAREN INC LPAREN VARIABLE RPAREN RPAREN VARIABLE RPAREN RPAREN
Rule 70    operacion_aritmetica1 -> LPAREN operacion valor valor RPAREN
Rule 71    condicional -> LPAREN operacion valor valor RPAREN
Rule 72    doseq -> LPAREN DOSEQ LCOR VARIABLE LPAREN RANGE VARIABLE RPAREN RCOR LPAREN impresion RPAREN RPAREN
Rule 73    defn -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN
Rule 74    defn -> LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN
Rule 75    expresionDefnElse -> CASE VARIABLE expresionCase DOSPUNTOS ELSE STRING
Rule 76    expresionCase -> dato STRING
Rule 77    conjuntos -> NUMERAL L_LLAVE expresionConjuntoEnteros R_LLAVE
Rule 78    conjuntos -> NUMERAL L_LLAVE expresionConjuntoDouble R_LLAVE
Rule 79    conjuntos -> NUMERAL L_LLAVE expresionConjuntoString R_LLAVE
Rule 80    sentenciaLoopRecur -> LPAREN LOOP LCOR VARIABLE ENTERO RCOR operacionesLogicas RPAREN
Rule 81    expresionConjuntoEnteros -> ENTERO
Rule 82    expresionConjuntoEnteros -> ENTERO expresionConjuntoEnteros
Rule 83    expresionConjuntoDouble -> FLOTANTE
Rule 84    expresionConjuntoDouble -> FLOTANTE expresionConjuntoDouble
Rule 85    expresionConjuntoString -> STRING
Rule 86    expresionConjuntoString -> STRING expresionConjuntoString

Terminals, with rules where they appear

BOOLEAN              : 26 30 64
CASE                 : 44 75
CHAR                 : 23
CLASE                : 
COMPARA_IGUAL        : 31
COND                 : 41 42
CONJUNTOS            : 
DEFFUNCION           : 56 73 74
DEFICION             : 37
DIFERENTE            : 36
DIVISION             : 68
DO                   : 64
DOSEQ                : 72
DOSPUNTOS            : 42 75
DOTIMES              : 
ELSE                 : 42 75
ENTERO               : 24 28 69 80 81 82
FLOTANTE             : 25 29 83 84
FUNCION              : 
FUTURE               : 
IF                   : 63 64 69
IGUAL                : 
IMPRIMIR             : 57
INC                  : 69
INCREASE             : 74
INPUT                : 
LCOR                 : 38 47 48 49 72 73 74 80
LET                  : 38
LIST                 : 45
LISTA                : 
LOOP                 : 80
LPAREN               : 37 38 39 41 42 44 45 56 57 63 64 64 64 64 69 69 69 69 69 70 71 72 72 72 73 73 74 80
L_LLAVE              : 77 78 79
MAPA_ENTERO          : 61
MAPA_FLOTANTE        : 62
MAS                  : 65
MAYORIGUALQUE        : 34
MAYORQUE             : 33
MENORIGUALQUE        : 35
MENORQUE             : 32 69
MENOS                : 66
NOT                  : 
NS                   : 
NUEVO                : 
NUMERAL              : 77 78 79
PRODUCTO             : 67
RANGE                : 72
RCOR                 : 38 47 48 49 72 73 74 80
RECUR                : 69
RPAREN               : 37 38 39 41 42 44 45 56 57 63 64 64 64 64 69 69 69 69 69 70 71 72 72 72 73 73 74 80
R_LLAVE              : 77 78 79
STR                  : 
STRING               : 22 46 75 76 85 86
VARIABLE             : 27 37 38 56 58 69 69 69 72 72 73 73 74 75 80
VECTOR_ENTERO        : 59
VECTOR_FLOTANTE      : 60
WHEN                 : 
error                : 

Nonterminals, with rules where they appear

argumments           : 52 54 55
asignacion           : 1
body                 : 53 54 55
case                 : 44 44
case_expression      : 18
cond_                : 15
cond_else            : 16
condicional          : 4
conjuntos            : 5
dato                 : 37 38 39 39 43 44 45 45 47 47 47 48 48 49 57 63 63 64 64 64 76
definition           : 21
defn                 : 12
description          : 51 55
doseq                : 17
expresionCase        : 75
expresionConjuntoDouble : 78 84
expresionConjuntoEnteros : 77 82
expresionConjuntoString : 79 86
expresionDefnElse    : 73
if                   : 10
if_do                : 11
impresion            : 2 40 42 43 44 72
instrucciones        : 50 0
internos             : 56
linecondition        : 41 41 42 42
lista                : 19
mapa_entero          : 8
mapa_flotante        : 9
operacion            : 70 71
operacion_aritmetica1 : 3
operacionesLogicas   : 13 74 80
operador_comparadores : 39 63 64
sentenciaLoopRecur   : 14
sentencia_booleana   : 20 40
valor                : 70 70 71 71
vector_entero        : 6
vector_flotante      : 7

Parsing method: LALR

state 0

    (0) S' -> . instrucciones
    (1) instrucciones -> . asignacion
    (2) instrucciones -> . impresion
    (3) instrucciones -> . operacion_aritmetica1
    (4) instrucciones -> . condicional
    (5) instrucciones -> . conjuntos
    (6) instrucciones -> . vector_entero
    (7) instrucciones -> . vector_flotante
    (8) instrucciones -> . mapa_entero
    (9) instrucciones -> . mapa_flotante
    (10) instrucciones -> . if
    (11) instrucciones -> . if_do
    (12) instrucciones -> . defn
    (13) instrucciones -> . operacionesLogicas
    (14) instrucciones -> . sentenciaLoopRecur
    (15) instrucciones -> . cond_
    (16) instrucciones -> . cond_else
    (17) instrucciones -> . doseq
    (18) instrucciones -> . case_expression
    (19) instrucciones -> . lista
    (20) instrucciones -> . sentencia_booleana
    (21) instrucciones -> . definition
    (37) asignacion -> . LPAREN DEFICION VARIABLE dato RPAREN
    (38) asignacion -> . LPAREN LET LCOR VARIABLE dato RCOR RPAREN
    (57) impresion -> . LPAREN IMPRIMIR dato RPAREN
    (70) operacion_aritmetica1 -> . LPAREN operacion valor valor RPAREN
    (71) condicional -> . LPAREN operacion valor valor RPAREN
    (77) conjuntos -> . NUMERAL L_LLAVE expresionConjuntoEnteros R_LLAVE
    (78) conjuntos -> . NUMERAL L_LLAVE expresionConjuntoDouble R_LLAVE
    (79) conjuntos -> . NUMERAL L_LLAVE expresionConjuntoString R_LLAVE
    (59) vector_entero -> . VECTOR_ENTERO
    (60) vector_flotante -> . VECTOR_FLOTANTE
    (61) mapa_entero -> . MAPA_ENTERO
    (62) mapa_flotante -> . MAPA_FLOTANTE
    (63) if -> . IF LPAREN operador_comparadores dato dato RPAREN
    (64) if_do -> . LPAREN IF LPAREN operador_comparadores dato dato RPAREN LPAREN DO LPAREN dato RPAREN BOOLEAN RPAREN RPAREN
    (73) defn -> . LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN
    (74) defn -> . LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN
    (69) operacionesLogicas -> . LPAREN IF LPAREN MENORQUE VARIABLE ENTERO RPAREN LPAREN RECUR LPAREN INC LPAREN VARIABLE RPAREN RPAREN VARIABLE RPAREN RPAREN
    (80) sentenciaLoopRecur -> . LPAREN LOOP LCOR VARIABLE ENTERO RCOR operacionesLogicas RPAREN
    (41) cond_ -> . LPAREN COND linecondition linecondition RPAREN
    (42) cond_else -> . LPAREN COND linecondition linecondition DOSPUNTOS ELSE impresion RPAREN
    (72) doseq -> . LPAREN DOSEQ LCOR VARIABLE LPAREN RANGE VARIABLE RPAREN RCOR LPAREN impresion RPAREN RPAREN
    (44) case_expression -> . LPAREN CASE dato case case impresion RPAREN
    (45) lista -> . LPAREN LIST dato dato RPAREN
    (39) sentencia_booleana -> . LPAREN operador_comparadores dato dato RPAREN
    (56) definition -> . LPAREN DEFFUNCION VARIABLE internos RPAREN

    LPAREN          shift and go to state 23
    NUMERAL         shift and go to state 24
    VECTOR_ENTERO   shift and go to state 25
    VECTOR_FLOTANTE shift and go to state 26
    MAPA_ENTERO     shift and go to state 27
    MAPA_FLOTANTE   shift and go to state 28
    IF              shift and go to state 29

    instrucciones                  shift and go to state 1
    asignacion                     shift and go to state 2
    impresion                      shift and go to state 3
    operacion_aritmetica1          shift and go to state 4
    condicional                    shift and go to state 5
    conjuntos                      shift and go to state 6
    vector_entero                  shift and go to state 7
    vector_flotante                shift and go to state 8
    mapa_entero                    shift and go to state 9
    mapa_flotante                  shift and go to state 10
    if                             shift and go to state 11
    if_do                          shift and go to state 12
    defn                           shift and go to state 13
    operacionesLogicas             shift and go to state 14
    sentenciaLoopRecur             shift and go to state 15
    cond_                          shift and go to state 16
    cond_else                      shift and go to state 17
    doseq                          shift and go to state 18
    case_expression                shift and go to state 19
    lista                          shift and go to state 20
    sentencia_booleana             shift and go to state 21
    definition                     shift and go to state 22

state 1

    (0) S' -> instrucciones .



state 2

    (1) instrucciones -> asignacion .

    $end            reduce using rule 1 (instrucciones -> asignacion .)
    RPAREN          reduce using rule 1 (instrucciones -> asignacion .)


state 3

    (2) instrucciones -> impresion .

    $end            reduce using rule 2 (instrucciones -> impresion .)
    RPAREN          reduce using rule 2 (instrucciones -> impresion .)


state 4

    (3) instrucciones -> operacion_aritmetica1 .

    $end            reduce using rule 3 (instrucciones -> operacion_aritmetica1 .)
    RPAREN          reduce using rule 3 (instrucciones -> operacion_aritmetica1 .)


state 5

    (4) instrucciones -> condicional .

    $end            reduce using rule 4 (instrucciones -> condicional .)
    RPAREN          reduce using rule 4 (instrucciones -> condicional .)


state 6

    (5) instrucciones -> conjuntos .

    $end            reduce using rule 5 (instrucciones -> conjuntos .)
    RPAREN          reduce using rule 5 (instrucciones -> conjuntos .)


state 7

    (6) instrucciones -> vector_entero .

    $end            reduce using rule 6 (instrucciones -> vector_entero .)
    RPAREN          reduce using rule 6 (instrucciones -> vector_entero .)


state 8

    (7) instrucciones -> vector_flotante .

    $end            reduce using rule 7 (instrucciones -> vector_flotante .)
    RPAREN          reduce using rule 7 (instrucciones -> vector_flotante .)


state 9

    (8) instrucciones -> mapa_entero .

    $end            reduce using rule 8 (instrucciones -> mapa_entero .)
    RPAREN          reduce using rule 8 (instrucciones -> mapa_entero .)


state 10

    (9) instrucciones -> mapa_flotante .

    $end            reduce using rule 9 (instrucciones -> mapa_flotante .)
    RPAREN          reduce using rule 9 (instrucciones -> mapa_flotante .)


state 11

    (10) instrucciones -> if .

    $end            reduce using rule 10 (instrucciones -> if .)
    RPAREN          reduce using rule 10 (instrucciones -> if .)


state 12

    (11) instrucciones -> if_do .

    $end            reduce using rule 11 (instrucciones -> if_do .)
    RPAREN          reduce using rule 11 (instrucciones -> if_do .)


state 13

    (12) instrucciones -> defn .

    $end            reduce using rule 12 (instrucciones -> defn .)
    RPAREN          reduce using rule 12 (instrucciones -> defn .)


state 14

    (13) instrucciones -> operacionesLogicas .

    $end            reduce using rule 13 (instrucciones -> operacionesLogicas .)
    RPAREN          reduce using rule 13 (instrucciones -> operacionesLogicas .)


state 15

    (14) instrucciones -> sentenciaLoopRecur .

    $end            reduce using rule 14 (instrucciones -> sentenciaLoopRecur .)
    RPAREN          reduce using rule 14 (instrucciones -> sentenciaLoopRecur .)


state 16

    (15) instrucciones -> cond_ .

    $end            reduce using rule 15 (instrucciones -> cond_ .)
    RPAREN          reduce using rule 15 (instrucciones -> cond_ .)


state 17

    (16) instrucciones -> cond_else .

    $end            reduce using rule 16 (instrucciones -> cond_else .)
    RPAREN          reduce using rule 16 (instrucciones -> cond_else .)


state 18

    (17) instrucciones -> doseq .

    $end            reduce using rule 17 (instrucciones -> doseq .)
    RPAREN          reduce using rule 17 (instrucciones -> doseq .)


state 19

    (18) instrucciones -> case_expression .

    $end            reduce using rule 18 (instrucciones -> case_expression .)
    RPAREN          reduce using rule 18 (instrucciones -> case_expression .)


state 20

    (19) instrucciones -> lista .

    $end            reduce using rule 19 (instrucciones -> lista .)
    RPAREN          reduce using rule 19 (instrucciones -> lista .)


state 21

    (20) instrucciones -> sentencia_booleana .

    $end            reduce using rule 20 (instrucciones -> sentencia_booleana .)
    RPAREN          reduce using rule 20 (instrucciones -> sentencia_booleana .)


state 22

    (21) instrucciones -> definition .

    $end            reduce using rule 21 (instrucciones -> definition .)
    RPAREN          reduce using rule 21 (instrucciones -> definition .)


state 23

    (37) asignacion -> LPAREN . DEFICION VARIABLE dato RPAREN
    (38) asignacion -> LPAREN . LET LCOR VARIABLE dato RCOR RPAREN
    (57) impresion -> LPAREN . IMPRIMIR dato RPAREN
    (70) operacion_aritmetica1 -> LPAREN . operacion valor valor RPAREN
    (71) condicional -> LPAREN . operacion valor valor RPAREN
    (64) if_do -> LPAREN . IF LPAREN operador_comparadores dato dato RPAREN LPAREN DO LPAREN dato RPAREN BOOLEAN RPAREN RPAREN
    (73) defn -> LPAREN . DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN
    (74) defn -> LPAREN . DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN
    (69) operacionesLogicas -> LPAREN . IF LPAREN MENORQUE VARIABLE ENTERO RPAREN LPAREN RECUR LPAREN INC LPAREN VARIABLE RPAREN RPAREN VARIABLE RPAREN RPAREN
    (80) sentenciaLoopRecur -> LPAREN . LOOP LCOR VARIABLE ENTERO RCOR operacionesLogicas RPAREN
    (41) cond_ -> LPAREN . COND linecondition linecondition RPAREN
    (42) cond_else -> LPAREN . COND linecondition linecondition DOSPUNTOS ELSE impresion RPAREN
    (72) doseq -> LPAREN . DOSEQ LCOR VARIABLE LPAREN RANGE VARIABLE RPAREN RCOR LPAREN impresion RPAREN RPAREN
    (44) case_expression -> LPAREN . CASE dato case case impresion RPAREN
    (45) lista -> LPAREN . LIST dato dato RPAREN
    (39) sentencia_booleana -> LPAREN . operador_comparadores dato dato RPAREN
    (56) definition -> LPAREN . DEFFUNCION VARIABLE internos RPAREN
    (65) operacion -> . MAS
    (66) operacion -> . MENOS
    (67) operacion -> . PRODUCTO
    (68) operacion -> . DIVISION
    (31) operador_comparadores -> . COMPARA_IGUAL
    (32) operador_comparadores -> . MENORQUE
    (33) operador_comparadores -> . MAYORQUE
    (34) operador_comparadores -> . MAYORIGUALQUE
    (35) operador_comparadores -> . MENORIGUALQUE
    (36) operador_comparadores -> . DIFERENTE

    DEFICION        shift and go to state 30
    LET             shift and go to state 31
    IMPRIMIR        shift and go to state 32
    IF              shift and go to state 34
    DEFFUNCION      shift and go to state 36
    LOOP            shift and go to state 38
    COND            shift and go to state 39
    DOSEQ           shift and go to state 40
    CASE            shift and go to state 41
    LIST            shift and go to state 42
    MAS             shift and go to state 43
    MENOS           shift and go to state 44
    PRODUCTO        shift and go to state 45
    DIVISION        shift and go to state 46
    COMPARA_IGUAL   shift and go to state 47
    MENORQUE        shift and go to state 37
    MAYORQUE        shift and go to state 48
    MAYORIGUALQUE   shift and go to state 49
    MENORIGUALQUE   shift and go to state 50
    DIFERENTE       shift and go to state 51

    operacion                      shift and go to state 33
    operador_comparadores          shift and go to state 35

state 24

    (77) conjuntos -> NUMERAL . L_LLAVE expresionConjuntoEnteros R_LLAVE
    (78) conjuntos -> NUMERAL . L_LLAVE expresionConjuntoDouble R_LLAVE
    (79) conjuntos -> NUMERAL . L_LLAVE expresionConjuntoString R_LLAVE

    L_LLAVE         shift and go to state 52


state 25

    (59) vector_entero -> VECTOR_ENTERO .

    $end            reduce using rule 59 (vector_entero -> VECTOR_ENTERO .)
    RPAREN          reduce using rule 59 (vector_entero -> VECTOR_ENTERO .)


state 26

    (60) vector_flotante -> VECTOR_FLOTANTE .

    $end            reduce using rule 60 (vector_flotante -> VECTOR_FLOTANTE .)
    RPAREN          reduce using rule 60 (vector_flotante -> VECTOR_FLOTANTE .)


state 27

    (61) mapa_entero -> MAPA_ENTERO .

    $end            reduce using rule 61 (mapa_entero -> MAPA_ENTERO .)
    RPAREN          reduce using rule 61 (mapa_entero -> MAPA_ENTERO .)


state 28

    (62) mapa_flotante -> MAPA_FLOTANTE .

    $end            reduce using rule 62 (mapa_flotante -> MAPA_FLOTANTE .)
    RPAREN          reduce using rule 62 (mapa_flotante -> MAPA_FLOTANTE .)


state 29

    (63) if -> IF . LPAREN operador_comparadores dato dato RPAREN

    LPAREN          shift and go to state 53


state 30

    (37) asignacion -> LPAREN DEFICION . VARIABLE dato RPAREN

    VARIABLE        shift and go to state 54


state 31

    (38) asignacion -> LPAREN LET . LCOR VARIABLE dato RCOR RPAREN

    LCOR            shift and go to state 55


state 32

    (57) impresion -> LPAREN IMPRIMIR . dato RPAREN
    (22) dato -> . STRING
    (23) dato -> . CHAR
    (24) dato -> . ENTERO
    (25) dato -> . FLOTANTE
    (26) dato -> . BOOLEAN
    (27) dato -> . VARIABLE

    STRING          shift and go to state 57
    CHAR            shift and go to state 58
    ENTERO          shift and go to state 59
    FLOTANTE        shift and go to state 60
    BOOLEAN         shift and go to state 61
    VARIABLE        shift and go to state 62

    dato                           shift and go to state 56

state 33

    (70) operacion_aritmetica1 -> LPAREN operacion . valor valor RPAREN
    (71) condicional -> LPAREN operacion . valor valor RPAREN
    (28) valor -> . ENTERO
    (29) valor -> . FLOTANTE
    (30) valor -> . BOOLEAN
    (58) valor -> . VARIABLE

    ENTERO          shift and go to state 64
    FLOTANTE        shift and go to state 65
    BOOLEAN         shift and go to state 66
    VARIABLE        shift and go to state 67

    valor                          shift and go to state 63

state 34

    (64) if_do -> LPAREN IF . LPAREN operador_comparadores dato dato RPAREN LPAREN DO LPAREN dato RPAREN BOOLEAN RPAREN RPAREN
    (69) operacionesLogicas -> LPAREN IF . LPAREN MENORQUE VARIABLE ENTERO RPAREN LPAREN RECUR LPAREN INC LPAREN VARIABLE RPAREN RPAREN VARIABLE RPAREN RPAREN

    LPAREN          shift and go to state 68


state 35

    (39) sentencia_booleana -> LPAREN operador_comparadores . dato dato RPAREN
    (22) dato -> . STRING
    (23) dato -> . CHAR
    (24) dato -> . ENTERO
    (25) dato -> . FLOTANTE
    (26) dato -> . BOOLEAN
    (27) dato -> . VARIABLE

    STRING          shift and go to state 57
    CHAR            shift and go to state 58
    ENTERO          shift and go to state 59
    FLOTANTE        shift and go to state 60
    BOOLEAN         shift and go to state 61
    VARIABLE        shift and go to state 62

    dato                           shift and go to state 69

state 36

    (73) defn -> LPAREN DEFFUNCION . VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN
    (74) defn -> LPAREN DEFFUNCION . INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN
    (56) definition -> LPAREN DEFFUNCION . VARIABLE internos RPAREN

    VARIABLE        shift and go to state 70
    INCREASE        shift and go to state 71


state 37

    (32) operador_comparadores -> MENORQUE .

    STRING          reduce using rule 32 (operador_comparadores -> MENORQUE .)
    CHAR            reduce using rule 32 (operador_comparadores -> MENORQUE .)
    ENTERO          reduce using rule 32 (operador_comparadores -> MENORQUE .)
    FLOTANTE        reduce using rule 32 (operador_comparadores -> MENORQUE .)
    BOOLEAN         reduce using rule 32 (operador_comparadores -> MENORQUE .)
    VARIABLE        reduce using rule 32 (operador_comparadores -> MENORQUE .)


state 38

    (80) sentenciaLoopRecur -> LPAREN LOOP . LCOR VARIABLE ENTERO RCOR operacionesLogicas RPAREN

    LCOR            shift and go to state 72


state 39

    (41) cond_ -> LPAREN COND . linecondition linecondition RPAREN
    (42) cond_else -> LPAREN COND . linecondition linecondition DOSPUNTOS ELSE impresion RPAREN
    (40) linecondition -> . sentencia_booleana impresion
    (39) sentencia_booleana -> . LPAREN operador_comparadores dato dato RPAREN

    LPAREN          shift and go to state 73

    linecondition                  shift and go to state 74
    sentencia_booleana             shift and go to state 75

state 40

    (72) doseq -> LPAREN DOSEQ . LCOR VARIABLE LPAREN RANGE VARIABLE RPAREN RCOR LPAREN impresion RPAREN RPAREN

    LCOR            shift and go to state 76


state 41

    (44) case_expression -> LPAREN CASE . dato case case impresion RPAREN
    (22) dato -> . STRING
    (23) dato -> . CHAR
    (24) dato -> . ENTERO
    (25) dato -> . FLOTANTE
    (26) dato -> . BOOLEAN
    (27) dato -> . VARIABLE

    STRING          shift and go to state 57
    CHAR            shift and go to state 58
    ENTERO          shift and go to state 59
    FLOTANTE        shift and go to state 60
    BOOLEAN         shift and go to state 61
    VARIABLE        shift and go to state 62

    dato                           shift and go to state 77

state 42

    (45) lista -> LPAREN LIST . dato dato RPAREN
    (22) dato -> . STRING
    (23) dato -> . CHAR
    (24) dato -> . ENTERO
    (25) dato -> . FLOTANTE
    (26) dato -> . BOOLEAN
    (27) dato -> . VARIABLE

    STRING          shift and go to state 57
    CHAR            shift and go to state 58
    ENTERO          shift and go to state 59
    FLOTANTE        shift and go to state 60
    BOOLEAN         shift and go to state 61
    VARIABLE        shift and go to state 62

    dato                           shift and go to state 78

state 43

    (65) operacion -> MAS .

    ENTERO          reduce using rule 65 (operacion -> MAS .)
    FLOTANTE        reduce using rule 65 (operacion -> MAS .)
    BOOLEAN         reduce using rule 65 (operacion -> MAS .)
    VARIABLE        reduce using rule 65 (operacion -> MAS .)


state 44

    (66) operacion -> MENOS .

    ENTERO          reduce using rule 66 (operacion -> MENOS .)
    FLOTANTE        reduce using rule 66 (operacion -> MENOS .)
    BOOLEAN         reduce using rule 66 (operacion -> MENOS .)
    VARIABLE        reduce using rule 66 (operacion -> MENOS .)


state 45

    (67) operacion -> PRODUCTO .

    ENTERO          reduce using rule 67 (operacion -> PRODUCTO .)
    FLOTANTE        reduce using rule 67 (operacion -> PRODUCTO .)
    BOOLEAN         reduce using rule 67 (operacion -> PRODUCTO .)
    VARIABLE        reduce using rule 67 (operacion -> PRODUCTO .)


state 46

    (68) operacion -> DIVISION .

    ENTERO          reduce using rule 68 (operacion -> DIVISION .)
    FLOTANTE        reduce using rule 68 (operacion -> DIVISION .)
    BOOLEAN         reduce using rule 68 (operacion -> DIVISION .)
    VARIABLE        reduce using rule 68 (operacion -> DIVISION .)


state 47

    (31) operador_comparadores -> COMPARA_IGUAL .

    STRING          reduce using rule 31 (operador_comparadores -> COMPARA_IGUAL .)
    CHAR            reduce using rule 31 (operador_comparadores -> COMPARA_IGUAL .)
    ENTERO          reduce using rule 31 (operador_comparadores -> COMPARA_IGUAL .)
    FLOTANTE        reduce using rule 31 (operador_comparadores -> COMPARA_IGUAL .)
    BOOLEAN         reduce using rule 31 (operador_comparadores -> COMPARA_IGUAL .)
    VARIABLE        reduce using rule 31 (operador_comparadores -> COMPARA_IGUAL .)


state 48

    (33) operador_comparadores -> MAYORQUE .

    STRING          reduce using rule 33 (operador_comparadores -> MAYORQUE .)
    CHAR            reduce using rule 33 (operador_comparadores -> MAYORQUE .)
    ENTERO          reduce using rule 33 (operador_comparadores -> MAYORQUE .)
    FLOTANTE        reduce using rule 33 (operador_comparadores -> MAYORQUE .)
    BOOLEAN         reduce using rule 33 (operador_comparadores -> MAYORQUE .)
    VARIABLE        reduce using rule 33 (operador_comparadores -> MAYORQUE .)


state 49

    (34) operador_comparadores -> MAYORIGUALQUE .

    STRING          reduce using rule 34 (operador_comparadores -> MAYORIGUALQUE .)
    CHAR            reduce using rule 34 (operador_comparadores -> MAYORIGUALQUE .)
    ENTERO          reduce using rule 34 (operador_comparadores -> MAYORIGUALQUE .)
    FLOTANTE        reduce using rule 34 (operador_comparadores -> MAYORIGUALQUE .)
    BOOLEAN         reduce using rule 34 (operador_comparadores -> MAYORIGUALQUE .)
    VARIABLE        reduce using rule 34 (operador_comparadores -> MAYORIGUALQUE .)


state 50

    (35) operador_comparadores -> MENORIGUALQUE .

    STRING          reduce using rule 35 (operador_comparadores -> MENORIGUALQUE .)
    CHAR            reduce using rule 35 (operador_comparadores -> MENORIGUALQUE .)
    ENTERO          reduce using rule 35 (operador_comparadores -> MENORIGUALQUE .)
    FLOTANTE        reduce using rule 35 (operador_comparadores -> MENORIGUALQUE .)
    BOOLEAN         reduce using rule 35 (operador_comparadores -> MENORIGUALQUE .)
    VARIABLE        reduce using rule 35 (operador_comparadores -> MENORIGUALQUE .)


state 51

    (36) operador_comparadores -> DIFERENTE .

    STRING          reduce using rule 36 (operador_comparadores -> DIFERENTE .)
    CHAR            reduce using rule 36 (operador_comparadores -> DIFERENTE .)
    ENTERO          reduce using rule 36 (operador_comparadores -> DIFERENTE .)
    FLOTANTE        reduce using rule 36 (operador_comparadores -> DIFERENTE .)
    BOOLEAN         reduce using rule 36 (operador_comparadores -> DIFERENTE .)
    VARIABLE        reduce using rule 36 (operador_comparadores -> DIFERENTE .)


state 52

    (77) conjuntos -> NUMERAL L_LLAVE . expresionConjuntoEnteros R_LLAVE
    (78) conjuntos -> NUMERAL L_LLAVE . expresionConjuntoDouble R_LLAVE
    (79) conjuntos -> NUMERAL L_LLAVE . expresionConjuntoString R_LLAVE
    (81) expresionConjuntoEnteros -> . ENTERO
    (82) expresionConjuntoEnteros -> . ENTERO expresionConjuntoEnteros
    (83) expresionConjuntoDouble -> . FLOTANTE
    (84) expresionConjuntoDouble -> . FLOTANTE expresionConjuntoDouble
    (85) expresionConjuntoString -> . STRING
    (86) expresionConjuntoString -> . STRING expresionConjuntoString

    ENTERO          shift and go to state 82
    FLOTANTE        shift and go to state 83
    STRING          shift and go to state 84

    expresionConjuntoEnteros       shift and go to state 79
    expresionConjuntoDouble        shift and go to state 80
    expresionConjuntoString        shift and go to state 81

state 53

    (63) if -> IF LPAREN . operador_comparadores dato dato RPAREN
    (31) operador_comparadores -> . COMPARA_IGUAL
    (32) operador_comparadores -> . MENORQUE
    (33) operador_comparadores -> . MAYORQUE
    (34) operador_comparadores -> . MAYORIGUALQUE
    (35) operador_comparadores -> . MENORIGUALQUE
    (36) operador_comparadores -> . DIFERENTE

    COMPARA_IGUAL   shift and go to state 47
    MENORQUE        shift and go to state 37
    MAYORQUE        shift and go to state 48
    MAYORIGUALQUE   shift and go to state 49
    MENORIGUALQUE   shift and go to state 50
    DIFERENTE       shift and go to state 51

    operador_comparadores          shift and go to state 85

state 54

    (37) asignacion -> LPAREN DEFICION VARIABLE . dato RPAREN
    (22) dato -> . STRING
    (23) dato -> . CHAR
    (24) dato -> . ENTERO
    (25) dato -> . FLOTANTE
    (26) dato -> . BOOLEAN
    (27) dato -> . VARIABLE

    STRING          shift and go to state 57
    CHAR            shift and go to state 58
    ENTERO          shift and go to state 59
    FLOTANTE        shift and go to state 60
    BOOLEAN         shift and go to state 61
    VARIABLE        shift and go to state 62

    dato                           shift and go to state 86

state 55

    (38) asignacion -> LPAREN LET LCOR . VARIABLE dato RCOR RPAREN

    VARIABLE        shift and go to state 87


state 56

    (57) impresion -> LPAREN IMPRIMIR dato . RPAREN

    RPAREN          shift and go to state 88


state 57

    (22) dato -> STRING .

    RPAREN          reduce using rule 22 (dato -> STRING .)
    STRING          reduce using rule 22 (dato -> STRING .)
    CHAR            reduce using rule 22 (dato -> STRING .)
    ENTERO          reduce using rule 22 (dato -> STRING .)
    FLOTANTE        reduce using rule 22 (dato -> STRING .)
    BOOLEAN         reduce using rule 22 (dato -> STRING .)
    VARIABLE        reduce using rule 22 (dato -> STRING .)
    LPAREN          reduce using rule 22 (dato -> STRING .)
    RCOR            reduce using rule 22 (dato -> STRING .)


state 58

    (23) dato -> CHAR .

    RPAREN          reduce using rule 23 (dato -> CHAR .)
    STRING          reduce using rule 23 (dato -> CHAR .)
    CHAR            reduce using rule 23 (dato -> CHAR .)
    ENTERO          reduce using rule 23 (dato -> CHAR .)
    FLOTANTE        reduce using rule 23 (dato -> CHAR .)
    BOOLEAN         reduce using rule 23 (dato -> CHAR .)
    VARIABLE        reduce using rule 23 (dato -> CHAR .)
    LPAREN          reduce using rule 23 (dato -> CHAR .)
    RCOR            reduce using rule 23 (dato -> CHAR .)


state 59

    (24) dato -> ENTERO .

    RPAREN          reduce using rule 24 (dato -> ENTERO .)
    STRING          reduce using rule 24 (dato -> ENTERO .)
    CHAR            reduce using rule 24 (dato -> ENTERO .)
    ENTERO          reduce using rule 24 (dato -> ENTERO .)
    FLOTANTE        reduce using rule 24 (dato -> ENTERO .)
    BOOLEAN         reduce using rule 24 (dato -> ENTERO .)
    VARIABLE        reduce using rule 24 (dato -> ENTERO .)
    LPAREN          reduce using rule 24 (dato -> ENTERO .)
    RCOR            reduce using rule 24 (dato -> ENTERO .)


state 60

    (25) dato -> FLOTANTE .

    RPAREN          reduce using rule 25 (dato -> FLOTANTE .)
    STRING          reduce using rule 25 (dato -> FLOTANTE .)
    CHAR            reduce using rule 25 (dato -> FLOTANTE .)
    ENTERO          reduce using rule 25 (dato -> FLOTANTE .)
    FLOTANTE        reduce using rule 25 (dato -> FLOTANTE .)
    BOOLEAN         reduce using rule 25 (dato -> FLOTANTE .)
    VARIABLE        reduce using rule 25 (dato -> FLOTANTE .)
    LPAREN          reduce using rule 25 (dato -> FLOTANTE .)
    RCOR            reduce using rule 25 (dato -> FLOTANTE .)


state 61

    (26) dato -> BOOLEAN .

    RPAREN          reduce using rule 26 (dato -> BOOLEAN .)
    STRING          reduce using rule 26 (dato -> BOOLEAN .)
    CHAR            reduce using rule 26 (dato -> BOOLEAN .)
    ENTERO          reduce using rule 26 (dato -> BOOLEAN .)
    FLOTANTE        reduce using rule 26 (dato -> BOOLEAN .)
    BOOLEAN         reduce using rule 26 (dato -> BOOLEAN .)
    VARIABLE        reduce using rule 26 (dato -> BOOLEAN .)
    LPAREN          reduce using rule 26 (dato -> BOOLEAN .)
    RCOR            reduce using rule 26 (dato -> BOOLEAN .)


state 62

    (27) dato -> VARIABLE .

    RPAREN          reduce using rule 27 (dato -> VARIABLE .)
    STRING          reduce using rule 27 (dato -> VARIABLE .)
    CHAR            reduce using rule 27 (dato -> VARIABLE .)
    ENTERO          reduce using rule 27 (dato -> VARIABLE .)
    FLOTANTE        reduce using rule 27 (dato -> VARIABLE .)
    BOOLEAN         reduce using rule 27 (dato -> VARIABLE .)
    VARIABLE        reduce using rule 27 (dato -> VARIABLE .)
    LPAREN          reduce using rule 27 (dato -> VARIABLE .)
    RCOR            reduce using rule 27 (dato -> VARIABLE .)


state 63

    (70) operacion_aritmetica1 -> LPAREN operacion valor . valor RPAREN
    (71) condicional -> LPAREN operacion valor . valor RPAREN
    (28) valor -> . ENTERO
    (29) valor -> . FLOTANTE
    (30) valor -> . BOOLEAN
    (58) valor -> . VARIABLE

    ENTERO          shift and go to state 64
    FLOTANTE        shift and go to state 65
    BOOLEAN         shift and go to state 66
    VARIABLE        shift and go to state 67

    valor                          shift and go to state 89

state 64

    (28) valor -> ENTERO .

    ENTERO          reduce using rule 28 (valor -> ENTERO .)
    FLOTANTE        reduce using rule 28 (valor -> ENTERO .)
    BOOLEAN         reduce using rule 28 (valor -> ENTERO .)
    VARIABLE        reduce using rule 28 (valor -> ENTERO .)
    RPAREN          reduce using rule 28 (valor -> ENTERO .)


state 65

    (29) valor -> FLOTANTE .

    ENTERO          reduce using rule 29 (valor -> FLOTANTE .)
    FLOTANTE        reduce using rule 29 (valor -> FLOTANTE .)
    BOOLEAN         reduce using rule 29 (valor -> FLOTANTE .)
    VARIABLE        reduce using rule 29 (valor -> FLOTANTE .)
    RPAREN          reduce using rule 29 (valor -> FLOTANTE .)


state 66

    (30) valor -> BOOLEAN .

    ENTERO          reduce using rule 30 (valor -> BOOLEAN .)
    FLOTANTE        reduce using rule 30 (valor -> BOOLEAN .)
    BOOLEAN         reduce using rule 30 (valor -> BOOLEAN .)
    VARIABLE        reduce using rule 30 (valor -> BOOLEAN .)
    RPAREN          reduce using rule 30 (valor -> BOOLEAN .)


state 67

    (58) valor -> VARIABLE .

    ENTERO          reduce using rule 58 (valor -> VARIABLE .)
    FLOTANTE        reduce using rule 58 (valor -> VARIABLE .)
    BOOLEAN         reduce using rule 58 (valor -> VARIABLE .)
    VARIABLE        reduce using rule 58 (valor -> VARIABLE .)
    RPAREN          reduce using rule 58 (valor -> VARIABLE .)


state 68

    (64) if_do -> LPAREN IF LPAREN . operador_comparadores dato dato RPAREN LPAREN DO LPAREN dato RPAREN BOOLEAN RPAREN RPAREN
    (69) operacionesLogicas -> LPAREN IF LPAREN . MENORQUE VARIABLE ENTERO RPAREN LPAREN RECUR LPAREN INC LPAREN VARIABLE RPAREN RPAREN VARIABLE RPAREN RPAREN
    (31) operador_comparadores -> . COMPARA_IGUAL
    (32) operador_comparadores -> . MENORQUE
    (33) operador_comparadores -> . MAYORQUE
    (34) operador_comparadores -> . MAYORIGUALQUE
    (35) operador_comparadores -> . MENORIGUALQUE
    (36) operador_comparadores -> . DIFERENTE

    MENORQUE        shift and go to state 91
    COMPARA_IGUAL   shift and go to state 47
    MAYORQUE        shift and go to state 48
    MAYORIGUALQUE   shift and go to state 49
    MENORIGUALQUE   shift and go to state 50
    DIFERENTE       shift and go to state 51

    operador_comparadores          shift and go to state 90

state 69

    (39) sentencia_booleana -> LPAREN operador_comparadores dato . dato RPAREN
    (22) dato -> . STRING
    (23) dato -> . CHAR
    (24) dato -> . ENTERO
    (25) dato -> . FLOTANTE
    (26) dato -> . BOOLEAN
    (27) dato -> . VARIABLE

    STRING          shift and go to state 57
    CHAR            shift and go to state 58
    ENTERO          shift and go to state 59
    FLOTANTE        shift and go to state 60
    BOOLEAN         shift and go to state 61
    VARIABLE        shift and go to state 62

    dato                           shift and go to state 92

state 70

    (73) defn -> LPAREN DEFFUNCION VARIABLE . LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN
    (56) definition -> LPAREN DEFFUNCION VARIABLE . internos RPAREN
    (51) internos -> . description
    (52) internos -> . argumments
    (53) internos -> . body
    (54) internos -> . argumments body
    (55) internos -> . description argumments body
    (46) description -> . STRING
    (47) argumments -> . LCOR dato dato dato RCOR
    (48) argumments -> . LCOR dato dato RCOR
    (49) argumments -> . LCOR dato RCOR
    (50) body -> . instrucciones
    (1) instrucciones -> . asignacion
    (2) instrucciones -> . impresion
    (3) instrucciones -> . operacion_aritmetica1
    (4) instrucciones -> . condicional
    (5) instrucciones -> . conjuntos
    (6) instrucciones -> . vector_entero
    (7) instrucciones -> . vector_flotante
    (8) instrucciones -> . mapa_entero
    (9) instrucciones -> . mapa_flotante
    (10) instrucciones -> . if
    (11) instrucciones -> . if_do
    (12) instrucciones -> . defn
    (13) instrucciones -> . operacionesLogicas
    (14) instrucciones -> . sentenciaLoopRecur
    (15) instrucciones -> . cond_
    (16) instrucciones -> . cond_else
    (17) instrucciones -> . doseq
    (18) instrucciones -> . case_expression
    (19) instrucciones -> . lista
    (20) instrucciones -> . sentencia_booleana
    (21) instrucciones -> . definition
    (37) asignacion -> . LPAREN DEFICION VARIABLE dato RPAREN
    (38) asignacion -> . LPAREN LET LCOR VARIABLE dato RCOR RPAREN
    (57) impresion -> . LPAREN IMPRIMIR dato RPAREN
    (70) operacion_aritmetica1 -> . LPAREN operacion valor valor RPAREN
    (71) condicional -> . LPAREN operacion valor valor RPAREN
    (77) conjuntos -> . NUMERAL L_LLAVE expresionConjuntoEnteros R_LLAVE
    (78) conjuntos -> . NUMERAL L_LLAVE expresionConjuntoDouble R_LLAVE
    (79) conjuntos -> . NUMERAL L_LLAVE expresionConjuntoString R_LLAVE
    (59) vector_entero -> . VECTOR_ENTERO
    (60) vector_flotante -> . VECTOR_FLOTANTE
    (61) mapa_entero -> . MAPA_ENTERO
    (62) mapa_flotante -> . MAPA_FLOTANTE
    (63) if -> . IF LPAREN operador_comparadores dato dato RPAREN
    (64) if_do -> . LPAREN IF LPAREN operador_comparadores dato dato RPAREN LPAREN DO LPAREN dato RPAREN BOOLEAN RPAREN RPAREN
    (73) defn -> . LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN
    (74) defn -> . LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN
    (69) operacionesLogicas -> . LPAREN IF LPAREN MENORQUE VARIABLE ENTERO RPAREN LPAREN RECUR LPAREN INC LPAREN VARIABLE RPAREN RPAREN VARIABLE RPAREN RPAREN
    (80) sentenciaLoopRecur -> . LPAREN LOOP LCOR VARIABLE ENTERO RCOR operacionesLogicas RPAREN
    (41) cond_ -> . LPAREN COND linecondition linecondition RPAREN
    (42) cond_else -> . LPAREN COND linecondition linecondition DOSPUNTOS ELSE impresion RPAREN
    (72) doseq -> . LPAREN DOSEQ LCOR VARIABLE LPAREN RANGE VARIABLE RPAREN RCOR LPAREN impresion RPAREN RPAREN
    (44) case_expression -> . LPAREN CASE dato case case impresion RPAREN
    (45) lista -> . LPAREN LIST dato dato RPAREN
    (39) sentencia_booleana -> . LPAREN operador_comparadores dato dato RPAREN
    (56) definition -> . LPAREN DEFFUNCION VARIABLE internos RPAREN

    LCOR            shift and go to state 93
    STRING          shift and go to state 98
    LPAREN          shift and go to state 23
    NUMERAL         shift and go to state 24
    VECTOR_ENTERO   shift and go to state 25
    VECTOR_FLOTANTE shift and go to state 26
    MAPA_ENTERO     shift and go to state 27
    MAPA_FLOTANTE   shift and go to state 28
    IF              shift and go to state 29

    internos                       shift and go to state 94
    description                    shift and go to state 95
    argumments                     shift and go to state 96
    body                           shift and go to state 97
    instrucciones                  shift and go to state 99
    asignacion                     shift and go to state 2
    impresion                      shift and go to state 3
    operacion_aritmetica1          shift and go to state 4
    condicional                    shift and go to state 5
    conjuntos                      shift and go to state 6
    vector_entero                  shift and go to state 7
    vector_flotante                shift and go to state 8
    mapa_entero                    shift and go to state 9
    mapa_flotante                  shift and go to state 10
    if                             shift and go to state 11
    if_do                          shift and go to state 12
    defn                           shift and go to state 13
    operacionesLogicas             shift and go to state 14
    sentenciaLoopRecur             shift and go to state 15
    cond_                          shift and go to state 16
    cond_else                      shift and go to state 17
    doseq                          shift and go to state 18
    case_expression                shift and go to state 19
    lista                          shift and go to state 20
    sentencia_booleana             shift and go to state 21
    definition                     shift and go to state 22

state 71

    (74) defn -> LPAREN DEFFUNCION INCREASE . LCOR VARIABLE RCOR operacionesLogicas RPAREN

    LCOR            shift and go to state 100


state 72

    (80) sentenciaLoopRecur -> LPAREN LOOP LCOR . VARIABLE ENTERO RCOR operacionesLogicas RPAREN

    VARIABLE        shift and go to state 101


state 73

    (39) sentencia_booleana -> LPAREN . operador_comparadores dato dato RPAREN
    (31) operador_comparadores -> . COMPARA_IGUAL
    (32) operador_comparadores -> . MENORQUE
    (33) operador_comparadores -> . MAYORQUE
    (34) operador_comparadores -> . MAYORIGUALQUE
    (35) operador_comparadores -> . MENORIGUALQUE
    (36) operador_comparadores -> . DIFERENTE

    COMPARA_IGUAL   shift and go to state 47
    MENORQUE        shift and go to state 37
    MAYORQUE        shift and go to state 48
    MAYORIGUALQUE   shift and go to state 49
    MENORIGUALQUE   shift and go to state 50
    DIFERENTE       shift and go to state 51

    operador_comparadores          shift and go to state 35

state 74

    (41) cond_ -> LPAREN COND linecondition . linecondition RPAREN
    (42) cond_else -> LPAREN COND linecondition . linecondition DOSPUNTOS ELSE impresion RPAREN
    (40) linecondition -> . sentencia_booleana impresion
    (39) sentencia_booleana -> . LPAREN operador_comparadores dato dato RPAREN

    LPAREN          shift and go to state 73

    linecondition                  shift and go to state 102
    sentencia_booleana             shift and go to state 75

state 75

    (40) linecondition -> sentencia_booleana . impresion
    (57) impresion -> . LPAREN IMPRIMIR dato RPAREN

    LPAREN          shift and go to state 104

    impresion                      shift and go to state 103

state 76

    (72) doseq -> LPAREN DOSEQ LCOR . VARIABLE LPAREN RANGE VARIABLE RPAREN RCOR LPAREN impresion RPAREN RPAREN

    VARIABLE        shift and go to state 105


state 77

    (44) case_expression -> LPAREN CASE dato . case case impresion RPAREN
    (43) case -> . dato impresion
    (22) dato -> . STRING
    (23) dato -> . CHAR
    (24) dato -> . ENTERO
    (25) dato -> . FLOTANTE
    (26) dato -> . BOOLEAN
    (27) dato -> . VARIABLE

    STRING          shift and go to state 57
    CHAR            shift and go to state 58
    ENTERO          shift and go to state 59
    FLOTANTE        shift and go to state 60
    BOOLEAN         shift and go to state 61
    VARIABLE        shift and go to state 62

    dato                           shift and go to state 106
    case                           shift and go to state 107

state 78

    (45) lista -> LPAREN LIST dato . dato RPAREN
    (22) dato -> . STRING
    (23) dato -> . CHAR
    (24) dato -> . ENTERO
    (25) dato -> . FLOTANTE
    (26) dato -> . BOOLEAN
    (27) dato -> . VARIABLE

    STRING          shift and go to state 57
    CHAR            shift and go to state 58
    ENTERO          shift and go to state 59
    FLOTANTE        shift and go to state 60
    BOOLEAN         shift and go to state 61
    VARIABLE        shift and go to state 62

    dato                           shift and go to state 108

state 79

    (77) conjuntos -> NUMERAL L_LLAVE expresionConjuntoEnteros . R_LLAVE

    R_LLAVE         shift and go to state 109


state 80

    (78) conjuntos -> NUMERAL L_LLAVE expresionConjuntoDouble . R_LLAVE

    R_LLAVE         shift and go to state 110


state 81

    (79) conjuntos -> NUMERAL L_LLAVE expresionConjuntoString . R_LLAVE

    R_LLAVE         shift and go to state 111


state 82

    (81) expresionConjuntoEnteros -> ENTERO .
    (82) expresionConjuntoEnteros -> ENTERO . expresionConjuntoEnteros
    (81) expresionConjuntoEnteros -> . ENTERO
    (82) expresionConjuntoEnteros -> . ENTERO expresionConjuntoEnteros

    R_LLAVE         reduce using rule 81 (expresionConjuntoEnteros -> ENTERO .)
    ENTERO          shift and go to state 82

    expresionConjuntoEnteros       shift and go to state 112

state 83

    (83) expresionConjuntoDouble -> FLOTANTE .
    (84) expresionConjuntoDouble -> FLOTANTE . expresionConjuntoDouble
    (83) expresionConjuntoDouble -> . FLOTANTE
    (84) expresionConjuntoDouble -> . FLOTANTE expresionConjuntoDouble

    R_LLAVE         reduce using rule 83 (expresionConjuntoDouble -> FLOTANTE .)
    FLOTANTE        shift and go to state 83

    expresionConjuntoDouble        shift and go to state 113

state 84

    (85) expresionConjuntoString -> STRING .
    (86) expresionConjuntoString -> STRING . expresionConjuntoString
    (85) expresionConjuntoString -> . STRING
    (86) expresionConjuntoString -> . STRING expresionConjuntoString

    R_LLAVE         reduce using rule 85 (expresionConjuntoString -> STRING .)
    STRING          shift and go to state 84

    expresionConjuntoString        shift and go to state 114

state 85

    (63) if -> IF LPAREN operador_comparadores . dato dato RPAREN
    (22) dato -> . STRING
    (23) dato -> . CHAR
    (24) dato -> . ENTERO
    (25) dato -> . FLOTANTE
    (26) dato -> . BOOLEAN
    (27) dato -> . VARIABLE

    STRING          shift and go to state 57
    CHAR            shift and go to state 58
    ENTERO          shift and go to state 59
    FLOTANTE        shift and go to state 60
    BOOLEAN         shift and go to state 61
    VARIABLE        shift and go to state 62

    dato                           shift and go to state 115

state 86

    (37) asignacion -> LPAREN DEFICION VARIABLE dato . RPAREN

    RPAREN          shift and go to state 116


state 87

    (38) asignacion -> LPAREN LET LCOR VARIABLE . dato RCOR RPAREN
    (22) dato -> . STRING
    (23) dato -> . CHAR
    (24) dato -> . ENTERO
    (25) dato -> . FLOTANTE
    (26) dato -> . BOOLEAN
    (27) dato -> . VARIABLE

    STRING          shift and go to state 57
    CHAR            shift and go to state 58
    ENTERO          shift and go to state 59
    FLOTANTE        shift and go to state 60
    BOOLEAN         shift and go to state 61
    VARIABLE        shift and go to state 62

    dato                           shift and go to state 117

state 88

    (57) impresion -> LPAREN IMPRIMIR dato RPAREN .

    $end            reduce using rule 57 (impresion -> LPAREN IMPRIMIR dato RPAREN .)
    RPAREN          reduce using rule 57 (impresion -> LPAREN IMPRIMIR dato RPAREN .)
    LPAREN          reduce using rule 57 (impresion -> LPAREN IMPRIMIR dato RPAREN .)
    DOSPUNTOS       reduce using rule 57 (impresion -> LPAREN IMPRIMIR dato RPAREN .)
    STRING          reduce using rule 57 (impresion -> LPAREN IMPRIMIR dato RPAREN .)
    CHAR            reduce using rule 57 (impresion -> LPAREN IMPRIMIR dato RPAREN .)
    ENTERO          reduce using rule 57 (impresion -> LPAREN IMPRIMIR dato RPAREN .)
    FLOTANTE        reduce using rule 57 (impresion -> LPAREN IMPRIMIR dato RPAREN .)
    BOOLEAN         reduce using rule 57 (impresion -> LPAREN IMPRIMIR dato RPAREN .)
    VARIABLE        reduce using rule 57 (impresion -> LPAREN IMPRIMIR dato RPAREN .)


state 89

    (70) operacion_aritmetica1 -> LPAREN operacion valor valor . RPAREN
    (71) condicional -> LPAREN operacion valor valor . RPAREN

    RPAREN          shift and go to state 118


state 90

    (64) if_do -> LPAREN IF LPAREN operador_comparadores . dato dato RPAREN LPAREN DO LPAREN dato RPAREN BOOLEAN RPAREN RPAREN
    (22) dato -> . STRING
    (23) dato -> . CHAR
    (24) dato -> . ENTERO
    (25) dato -> . FLOTANTE
    (26) dato -> . BOOLEAN
    (27) dato -> . VARIABLE

    STRING          shift and go to state 57
    CHAR            shift and go to state 58
    ENTERO          shift and go to state 59
    FLOTANTE        shift and go to state 60
    BOOLEAN         shift and go to state 61
    VARIABLE        shift and go to state 62

    dato                           shift and go to state 119

state 91

    (69) operacionesLogicas -> LPAREN IF LPAREN MENORQUE . VARIABLE ENTERO RPAREN LPAREN RECUR LPAREN INC LPAREN VARIABLE RPAREN RPAREN VARIABLE RPAREN RPAREN
    (32) operador_comparadores -> MENORQUE .

  ! shift/reduce conflict for VARIABLE resolved as shift
    VARIABLE        shift and go to state 120
    STRING          reduce using rule 32 (operador_comparadores -> MENORQUE .)
    CHAR            reduce using rule 32 (operador_comparadores -> MENORQUE .)
    ENTERO          reduce using rule 32 (operador_comparadores -> MENORQUE .)
    FLOTANTE        reduce using rule 32 (operador_comparadores -> MENORQUE .)
    BOOLEAN         reduce using rule 32 (operador_comparadores -> MENORQUE .)

  ! VARIABLE        [ reduce using rule 32 (operador_comparadores -> MENORQUE .) ]


state 92

    (39) sentencia_booleana -> LPAREN operador_comparadores dato dato . RPAREN

    RPAREN          shift and go to state 121


state 93

    (73) defn -> LPAREN DEFFUNCION VARIABLE LCOR . VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN
    (47) argumments -> LCOR . dato dato dato RCOR
    (48) argumments -> LCOR . dato dato RCOR
    (49) argumments -> LCOR . dato RCOR
    (22) dato -> . STRING
    (23) dato -> . CHAR
    (24) dato -> . ENTERO
    (25) dato -> . FLOTANTE
    (26) dato -> . BOOLEAN
    (27) dato -> . VARIABLE

    VARIABLE        shift and go to state 122
    STRING          shift and go to state 57
    CHAR            shift and go to state 58
    ENTERO          shift and go to state 59
    FLOTANTE        shift and go to state 60
    BOOLEAN         shift and go to state 61

    dato                           shift and go to state 123

state 94

    (56) definition -> LPAREN DEFFUNCION VARIABLE internos . RPAREN

    RPAREN          shift and go to state 124


state 95

    (51) internos -> description .
    (55) internos -> description . argumments body
    (47) argumments -> . LCOR dato dato dato RCOR
    (48) argumments -> . LCOR dato dato RCOR
    (49) argumments -> . LCOR dato RCOR

    RPAREN          reduce using rule 51 (internos -> description .)
    LCOR            shift and go to state 126

    argumments                     shift and go to state 125

state 96

    (52) internos -> argumments .
    (54) internos -> argumments . body
    (50) body -> . instrucciones
    (1) instrucciones -> . asignacion
    (2) instrucciones -> . impresion
    (3) instrucciones -> . operacion_aritmetica1
    (4) instrucciones -> . condicional
    (5) instrucciones -> . conjuntos
    (6) instrucciones -> . vector_entero
    (7) instrucciones -> . vector_flotante
    (8) instrucciones -> . mapa_entero
    (9) instrucciones -> . mapa_flotante
    (10) instrucciones -> . if
    (11) instrucciones -> . if_do
    (12) instrucciones -> . defn
    (13) instrucciones -> . operacionesLogicas
    (14) instrucciones -> . sentenciaLoopRecur
    (15) instrucciones -> . cond_
    (16) instrucciones -> . cond_else
    (17) instrucciones -> . doseq
    (18) instrucciones -> . case_expression
    (19) instrucciones -> . lista
    (20) instrucciones -> . sentencia_booleana
    (21) instrucciones -> . definition
    (37) asignacion -> . LPAREN DEFICION VARIABLE dato RPAREN
    (38) asignacion -> . LPAREN LET LCOR VARIABLE dato RCOR RPAREN
    (57) impresion -> . LPAREN IMPRIMIR dato RPAREN
    (70) operacion_aritmetica1 -> . LPAREN operacion valor valor RPAREN
    (71) condicional -> . LPAREN operacion valor valor RPAREN
    (77) conjuntos -> . NUMERAL L_LLAVE expresionConjuntoEnteros R_LLAVE
    (78) conjuntos -> . NUMERAL L_LLAVE expresionConjuntoDouble R_LLAVE
    (79) conjuntos -> . NUMERAL L_LLAVE expresionConjuntoString R_LLAVE
    (59) vector_entero -> . VECTOR_ENTERO
    (60) vector_flotante -> . VECTOR_FLOTANTE
    (61) mapa_entero -> . MAPA_ENTERO
    (62) mapa_flotante -> . MAPA_FLOTANTE
    (63) if -> . IF LPAREN operador_comparadores dato dato RPAREN
    (64) if_do -> . LPAREN IF LPAREN operador_comparadores dato dato RPAREN LPAREN DO LPAREN dato RPAREN BOOLEAN RPAREN RPAREN
    (73) defn -> . LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN
    (74) defn -> . LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN
    (69) operacionesLogicas -> . LPAREN IF LPAREN MENORQUE VARIABLE ENTERO RPAREN LPAREN RECUR LPAREN INC LPAREN VARIABLE RPAREN RPAREN VARIABLE RPAREN RPAREN
    (80) sentenciaLoopRecur -> . LPAREN LOOP LCOR VARIABLE ENTERO RCOR operacionesLogicas RPAREN
    (41) cond_ -> . LPAREN COND linecondition linecondition RPAREN
    (42) cond_else -> . LPAREN COND linecondition linecondition DOSPUNTOS ELSE impresion RPAREN
    (72) doseq -> . LPAREN DOSEQ LCOR VARIABLE LPAREN RANGE VARIABLE RPAREN RCOR LPAREN impresion RPAREN RPAREN
    (44) case_expression -> . LPAREN CASE dato case case impresion RPAREN
    (45) lista -> . LPAREN LIST dato dato RPAREN
    (39) sentencia_booleana -> . LPAREN operador_comparadores dato dato RPAREN
    (56) definition -> . LPAREN DEFFUNCION VARIABLE internos RPAREN

    RPAREN          reduce using rule 52 (internos -> argumments .)
    LPAREN          shift and go to state 23
    NUMERAL         shift and go to state 24
    VECTOR_ENTERO   shift and go to state 25
    VECTOR_FLOTANTE shift and go to state 26
    MAPA_ENTERO     shift and go to state 27
    MAPA_FLOTANTE   shift and go to state 28
    IF              shift and go to state 29

    body                           shift and go to state 127
    instrucciones                  shift and go to state 99
    asignacion                     shift and go to state 2
    impresion                      shift and go to state 3
    operacion_aritmetica1          shift and go to state 4
    condicional                    shift and go to state 5
    conjuntos                      shift and go to state 6
    vector_entero                  shift and go to state 7
    vector_flotante                shift and go to state 8
    mapa_entero                    shift and go to state 9
    mapa_flotante                  shift and go to state 10
    if                             shift and go to state 11
    if_do                          shift and go to state 12
    defn                           shift and go to state 13
    operacionesLogicas             shift and go to state 14
    sentenciaLoopRecur             shift and go to state 15
    cond_                          shift and go to state 16
    cond_else                      shift and go to state 17
    doseq                          shift and go to state 18
    case_expression                shift and go to state 19
    lista                          shift and go to state 20
    sentencia_booleana             shift and go to state 21
    definition                     shift and go to state 22

state 97

    (53) internos -> body .

    RPAREN          reduce using rule 53 (internos -> body .)


state 98

    (46) description -> STRING .

    LCOR            reduce using rule 46 (description -> STRING .)
    RPAREN          reduce using rule 46 (description -> STRING .)


state 99

    (50) body -> instrucciones .

    RPAREN          reduce using rule 50 (body -> instrucciones .)


state 100

    (74) defn -> LPAREN DEFFUNCION INCREASE LCOR . VARIABLE RCOR operacionesLogicas RPAREN

    VARIABLE        shift and go to state 128


state 101

    (80) sentenciaLoopRecur -> LPAREN LOOP LCOR VARIABLE . ENTERO RCOR operacionesLogicas RPAREN

    ENTERO          shift and go to state 129


state 102

    (41) cond_ -> LPAREN COND linecondition linecondition . RPAREN
    (42) cond_else -> LPAREN COND linecondition linecondition . DOSPUNTOS ELSE impresion RPAREN

    RPAREN          shift and go to state 130
    DOSPUNTOS       shift and go to state 131


state 103

    (40) linecondition -> sentencia_booleana impresion .

    LPAREN          reduce using rule 40 (linecondition -> sentencia_booleana impresion .)
    RPAREN          reduce using rule 40 (linecondition -> sentencia_booleana impresion .)
    DOSPUNTOS       reduce using rule 40 (linecondition -> sentencia_booleana impresion .)


state 104

    (57) impresion -> LPAREN . IMPRIMIR dato RPAREN

    IMPRIMIR        shift and go to state 32


state 105

    (72) doseq -> LPAREN DOSEQ LCOR VARIABLE . LPAREN RANGE VARIABLE RPAREN RCOR LPAREN impresion RPAREN RPAREN

    LPAREN          shift and go to state 132


state 106

    (43) case -> dato . impresion
    (57) impresion -> . LPAREN IMPRIMIR dato RPAREN

    LPAREN          shift and go to state 104

    impresion                      shift and go to state 133

state 107

    (44) case_expression -> LPAREN CASE dato case . case impresion RPAREN
    (43) case -> . dato impresion
    (22) dato -> . STRING
    (23) dato -> . CHAR
    (24) dato -> . ENTERO
    (25) dato -> . FLOTANTE
    (26) dato -> . BOOLEAN
    (27) dato -> . VARIABLE

    STRING          shift and go to state 57
    CHAR            shift and go to state 58
    ENTERO          shift and go to state 59
    FLOTANTE        shift and go to state 60
    BOOLEAN         shift and go to state 61
    VARIABLE        shift and go to state 62

    dato                           shift and go to state 106
    case                           shift and go to state 134

state 108

    (45) lista -> LPAREN LIST dato dato . RPAREN

    RPAREN          shift and go to state 135


state 109

    (77) conjuntos -> NUMERAL L_LLAVE expresionConjuntoEnteros R_LLAVE .

    $end            reduce using rule 77 (conjuntos -> NUMERAL L_LLAVE expresionConjuntoEnteros R_LLAVE .)
    RPAREN          reduce using rule 77 (conjuntos -> NUMERAL L_LLAVE expresionConjuntoEnteros R_LLAVE .)


state 110

    (78) conjuntos -> NUMERAL L_LLAVE expresionConjuntoDouble R_LLAVE .

    $end            reduce using rule 78 (conjuntos -> NUMERAL L_LLAVE expresionConjuntoDouble R_LLAVE .)
    RPAREN          reduce using rule 78 (conjuntos -> NUMERAL L_LLAVE expresionConjuntoDouble R_LLAVE .)


state 111

    (79) conjuntos -> NUMERAL L_LLAVE expresionConjuntoString R_LLAVE .

    $end            reduce using rule 79 (conjuntos -> NUMERAL L_LLAVE expresionConjuntoString R_LLAVE .)
    RPAREN          reduce using rule 79 (conjuntos -> NUMERAL L_LLAVE expresionConjuntoString R_LLAVE .)


state 112

    (82) expresionConjuntoEnteros -> ENTERO expresionConjuntoEnteros .

    R_LLAVE         reduce using rule 82 (expresionConjuntoEnteros -> ENTERO expresionConjuntoEnteros .)


state 113

    (84) expresionConjuntoDouble -> FLOTANTE expresionConjuntoDouble .

    R_LLAVE         reduce using rule 84 (expresionConjuntoDouble -> FLOTANTE expresionConjuntoDouble .)


state 114

    (86) expresionConjuntoString -> STRING expresionConjuntoString .

    R_LLAVE         reduce using rule 86 (expresionConjuntoString -> STRING expresionConjuntoString .)


state 115

    (63) if -> IF LPAREN operador_comparadores dato . dato RPAREN
    (22) dato -> . STRING
    (23) dato -> . CHAR
    (24) dato -> . ENTERO
    (25) dato -> . FLOTANTE
    (26) dato -> . BOOLEAN
    (27) dato -> . VARIABLE

    STRING          shift and go to state 57
    CHAR            shift and go to state 58
    ENTERO          shift and go to state 59
    FLOTANTE        shift and go to state 60
    BOOLEAN         shift and go to state 61
    VARIABLE        shift and go to state 62

    dato                           shift and go to state 136

state 116

    (37) asignacion -> LPAREN DEFICION VARIABLE dato RPAREN .

    $end            reduce using rule 37 (asignacion -> LPAREN DEFICION VARIABLE dato RPAREN .)
    RPAREN          reduce using rule 37 (asignacion -> LPAREN DEFICION VARIABLE dato RPAREN .)


state 117

    (38) asignacion -> LPAREN LET LCOR VARIABLE dato . RCOR RPAREN

    RCOR            shift and go to state 137


state 118

    (70) operacion_aritmetica1 -> LPAREN operacion valor valor RPAREN .
    (71) condicional -> LPAREN operacion valor valor RPAREN .

  ! reduce/reduce conflict for $end resolved using rule 70 (operacion_aritmetica1 -> LPAREN operacion valor valor RPAREN .)
  ! reduce/reduce conflict for RPAREN resolved using rule 70 (operacion_aritmetica1 -> LPAREN operacion valor valor RPAREN .)
    $end            reduce using rule 70 (operacion_aritmetica1 -> LPAREN operacion valor valor RPAREN .)
    RPAREN          reduce using rule 70 (operacion_aritmetica1 -> LPAREN operacion valor valor RPAREN .)

  ! $end            [ reduce using rule 71 (condicional -> LPAREN operacion valor valor RPAREN .) ]
  ! RPAREN          [ reduce using rule 71 (condicional -> LPAREN operacion valor valor RPAREN .) ]


state 119

    (64) if_do -> LPAREN IF LPAREN operador_comparadores dato . dato RPAREN LPAREN DO LPAREN dato RPAREN BOOLEAN RPAREN RPAREN
    (22) dato -> . STRING
    (23) dato -> . CHAR
    (24) dato -> . ENTERO
    (25) dato -> . FLOTANTE
    (26) dato -> . BOOLEAN
    (27) dato -> . VARIABLE

    STRING          shift and go to state 57
    CHAR            shift and go to state 58
    ENTERO          shift and go to state 59
    FLOTANTE        shift and go to state 60
    BOOLEAN         shift and go to state 61
    VARIABLE        shift and go to state 62

    dato                           shift and go to state 138

state 120

    (69) operacionesLogicas -> LPAREN IF LPAREN MENORQUE VARIABLE . ENTERO RPAREN LPAREN RECUR LPAREN INC LPAREN VARIABLE RPAREN RPAREN VARIABLE RPAREN RPAREN

    ENTERO          shift and go to state 139


state 121

    (39) sentencia_booleana -> LPAREN operador_comparadores dato dato RPAREN .

    $end            reduce using rule 39 (sentencia_booleana -> LPAREN operador_comparadores dato dato RPAREN .)
    LPAREN          reduce using rule 39 (sentencia_booleana -> LPAREN operador_comparadores dato dato RPAREN .)
    RPAREN          reduce using rule 39 (sentencia_booleana -> LPAREN operador_comparadores dato dato RPAREN .)


state 122

    (73) defn -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE . RCOR LPAREN expresionDefnElse RPAREN RPAREN
    (27) dato -> VARIABLE .

  ! shift/reduce conflict for RCOR resolved as shift
    RCOR            shift and go to state 140
    STRING          reduce using rule 27 (dato -> VARIABLE .)
    CHAR            reduce using rule 27 (dato -> VARIABLE .)
    ENTERO          reduce using rule 27 (dato -> VARIABLE .)
    FLOTANTE        reduce using rule 27 (dato -> VARIABLE .)
    BOOLEAN         reduce using rule 27 (dato -> VARIABLE .)
    VARIABLE        reduce using rule 27 (dato -> VARIABLE .)

  ! RCOR            [ reduce using rule 27 (dato -> VARIABLE .) ]


state 123

    (47) argumments -> LCOR dato . dato dato RCOR
    (48) argumments -> LCOR dato . dato RCOR
    (49) argumments -> LCOR dato . RCOR
    (22) dato -> . STRING
    (23) dato -> . CHAR
    (24) dato -> . ENTERO
    (25) dato -> . FLOTANTE
    (26) dato -> . BOOLEAN
    (27) dato -> . VARIABLE

    RCOR            shift and go to state 142
    STRING          shift and go to state 57
    CHAR            shift and go to state 58
    ENTERO          shift and go to state 59
    FLOTANTE        shift and go to state 60
    BOOLEAN         shift and go to state 61
    VARIABLE        shift and go to state 62

    dato                           shift and go to state 141

state 124

    (56) definition -> LPAREN DEFFUNCION VARIABLE internos RPAREN .

    $end            reduce using rule 56 (definition -> LPAREN DEFFUNCION VARIABLE internos RPAREN .)
    RPAREN          reduce using rule 56 (definition -> LPAREN DEFFUNCION VARIABLE internos RPAREN .)


state 125

    (55) internos -> description argumments . body
    (50) body -> . instrucciones
    (1) instrucciones -> . asignacion
    (2) instrucciones -> . impresion
    (3) instrucciones -> . operacion_aritmetica1
    (4) instrucciones -> . condicional
    (5) instrucciones -> . conjuntos
    (6) instrucciones -> . vector_entero
    (7) instrucciones -> . vector_flotante
    (8) instrucciones -> . mapa_entero
    (9) instrucciones -> . mapa_flotante
    (10) instrucciones -> . if
    (11) instrucciones -> . if_do
    (12) instrucciones -> . defn
    (13) instrucciones -> . operacionesLogicas
    (14) instrucciones -> . sentenciaLoopRecur
    (15) instrucciones -> . cond_
    (16) instrucciones -> . cond_else
    (17) instrucciones -> . doseq
    (18) instrucciones -> . case_expression
    (19) instrucciones -> . lista
    (20) instrucciones -> . sentencia_booleana
    (21) instrucciones -> . definition
    (37) asignacion -> . LPAREN DEFICION VARIABLE dato RPAREN
    (38) asignacion -> . LPAREN LET LCOR VARIABLE dato RCOR RPAREN
    (57) impresion -> . LPAREN IMPRIMIR dato RPAREN
    (70) operacion_aritmetica1 -> . LPAREN operacion valor valor RPAREN
    (71) condicional -> . LPAREN operacion valor valor RPAREN
    (77) conjuntos -> . NUMERAL L_LLAVE expresionConjuntoEnteros R_LLAVE
    (78) conjuntos -> . NUMERAL L_LLAVE expresionConjuntoDouble R_LLAVE
    (79) conjuntos -> . NUMERAL L_LLAVE expresionConjuntoString R_LLAVE
    (59) vector_entero -> . VECTOR_ENTERO
    (60) vector_flotante -> . VECTOR_FLOTANTE
    (61) mapa_entero -> . MAPA_ENTERO
    (62) mapa_flotante -> . MAPA_FLOTANTE
    (63) if -> . IF LPAREN operador_comparadores dato dato RPAREN
    (64) if_do -> . LPAREN IF LPAREN operador_comparadores dato dato RPAREN LPAREN DO LPAREN dato RPAREN BOOLEAN RPAREN RPAREN
    (73) defn -> . LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN
    (74) defn -> . LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN
    (69) operacionesLogicas -> . LPAREN IF LPAREN MENORQUE VARIABLE ENTERO RPAREN LPAREN RECUR LPAREN INC LPAREN VARIABLE RPAREN RPAREN VARIABLE RPAREN RPAREN
    (80) sentenciaLoopRecur -> . LPAREN LOOP LCOR VARIABLE ENTERO RCOR operacionesLogicas RPAREN
    (41) cond_ -> . LPAREN COND linecondition linecondition RPAREN
    (42) cond_else -> . LPAREN COND linecondition linecondition DOSPUNTOS ELSE impresion RPAREN
    (72) doseq -> . LPAREN DOSEQ LCOR VARIABLE LPAREN RANGE VARIABLE RPAREN RCOR LPAREN impresion RPAREN RPAREN
    (44) case_expression -> . LPAREN CASE dato case case impresion RPAREN
    (45) lista -> . LPAREN LIST dato dato RPAREN
    (39) sentencia_booleana -> . LPAREN operador_comparadores dato dato RPAREN
    (56) definition -> . LPAREN DEFFUNCION VARIABLE internos RPAREN

    LPAREN          shift and go to state 23
    NUMERAL         shift and go to state 24
    VECTOR_ENTERO   shift and go to state 25
    VECTOR_FLOTANTE shift and go to state 26
    MAPA_ENTERO     shift and go to state 27
    MAPA_FLOTANTE   shift and go to state 28
    IF              shift and go to state 29

    body                           shift and go to state 143
    instrucciones                  shift and go to state 99
    asignacion                     shift and go to state 2
    impresion                      shift and go to state 3
    operacion_aritmetica1          shift and go to state 4
    condicional                    shift and go to state 5
    conjuntos                      shift and go to state 6
    vector_entero                  shift and go to state 7
    vector_flotante                shift and go to state 8
    mapa_entero                    shift and go to state 9
    mapa_flotante                  shift and go to state 10
    if                             shift and go to state 11
    if_do                          shift and go to state 12
    defn                           shift and go to state 13
    operacionesLogicas             shift and go to state 14
    sentenciaLoopRecur             shift and go to state 15
    cond_                          shift and go to state 16
    cond_else                      shift and go to state 17
    doseq                          shift and go to state 18
    case_expression                shift and go to state 19
    lista                          shift and go to state 20
    sentencia_booleana             shift and go to state 21
    definition                     shift and go to state 22

state 126

    (47) argumments -> LCOR . dato dato dato RCOR
    (48) argumments -> LCOR . dato dato RCOR
    (49) argumments -> LCOR . dato RCOR
    (22) dato -> . STRING
    (23) dato -> . CHAR
    (24) dato -> . ENTERO
    (25) dato -> . FLOTANTE
    (26) dato -> . BOOLEAN
    (27) dato -> . VARIABLE

    STRING          shift and go to state 57
    CHAR            shift and go to state 58
    ENTERO          shift and go to state 59
    FLOTANTE        shift and go to state 60
    BOOLEAN         shift and go to state 61
    VARIABLE        shift and go to state 62

    dato                           shift and go to state 123

state 127

    (54) internos -> argumments body .

    RPAREN          reduce using rule 54 (internos -> argumments body .)


state 128

    (74) defn -> LPAREN DEFFUNCION INCREASE LCOR VARIABLE . RCOR operacionesLogicas RPAREN

    RCOR            shift and go to state 144


state 129

    (80) sentenciaLoopRecur -> LPAREN LOOP LCOR VARIABLE ENTERO . RCOR operacionesLogicas RPAREN

    RCOR            shift and go to state 145


state 130

    (41) cond_ -> LPAREN COND linecondition linecondition RPAREN .

    $end            reduce using rule 41 (cond_ -> LPAREN COND linecondition linecondition RPAREN .)
    RPAREN          reduce using rule 41 (cond_ -> LPAREN COND linecondition linecondition RPAREN .)


state 131

    (42) cond_else -> LPAREN COND linecondition linecondition DOSPUNTOS . ELSE impresion RPAREN

    ELSE            shift and go to state 146


state 132

    (72) doseq -> LPAREN DOSEQ LCOR VARIABLE LPAREN . RANGE VARIABLE RPAREN RCOR LPAREN impresion RPAREN RPAREN

    RANGE           shift and go to state 147


state 133

    (43) case -> dato impresion .

    STRING          reduce using rule 43 (case -> dato impresion .)
    CHAR            reduce using rule 43 (case -> dato impresion .)
    ENTERO          reduce using rule 43 (case -> dato impresion .)
    FLOTANTE        reduce using rule 43 (case -> dato impresion .)
    BOOLEAN         reduce using rule 43 (case -> dato impresion .)
    VARIABLE        reduce using rule 43 (case -> dato impresion .)
    LPAREN          reduce using rule 43 (case -> dato impresion .)


state 134

    (44) case_expression -> LPAREN CASE dato case case . impresion RPAREN
    (57) impresion -> . LPAREN IMPRIMIR dato RPAREN

    LPAREN          shift and go to state 104

    impresion                      shift and go to state 148

state 135

    (45) lista -> LPAREN LIST dato dato RPAREN .

    $end            reduce using rule 45 (lista -> LPAREN LIST dato dato RPAREN .)
    RPAREN          reduce using rule 45 (lista -> LPAREN LIST dato dato RPAREN .)


state 136

    (63) if -> IF LPAREN operador_comparadores dato dato . RPAREN

    RPAREN          shift and go to state 149


state 137

    (38) asignacion -> LPAREN LET LCOR VARIABLE dato RCOR . RPAREN

    RPAREN          shift and go to state 150


state 138

    (64) if_do -> LPAREN IF LPAREN operador_comparadores dato dato . RPAREN LPAREN DO LPAREN dato RPAREN BOOLEAN RPAREN RPAREN

    RPAREN          shift and go to state 151


state 139

    (69) operacionesLogicas -> LPAREN IF LPAREN MENORQUE VARIABLE ENTERO . RPAREN LPAREN RECUR LPAREN INC LPAREN VARIABLE RPAREN RPAREN VARIABLE RPAREN RPAREN

    RPAREN          shift and go to state 152


state 140

    (73) defn -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR . LPAREN expresionDefnElse RPAREN RPAREN

    LPAREN          shift and go to state 153


state 141

    (47) argumments -> LCOR dato dato . dato RCOR
    (48) argumments -> LCOR dato dato . RCOR
    (22) dato -> . STRING
    (23) dato -> . CHAR
    (24) dato -> . ENTERO
    (25) dato -> . FLOTANTE
    (26) dato -> . BOOLEAN
    (27) dato -> . VARIABLE

    RCOR            shift and go to state 155
    STRING          shift and go to state 57
    CHAR            shift and go to state 58
    ENTERO          shift and go to state 59
    FLOTANTE        shift and go to state 60
    BOOLEAN         shift and go to state 61
    VARIABLE        shift and go to state 62

    dato                           shift and go to state 154

state 142

    (49) argumments -> LCOR dato RCOR .

    LPAREN          reduce using rule 49 (argumments -> LCOR dato RCOR .)
    NUMERAL         reduce using rule 49 (argumments -> LCOR dato RCOR .)
    VECTOR_ENTERO   reduce using rule 49 (argumments -> LCOR dato RCOR .)
    VECTOR_FLOTANTE reduce using rule 49 (argumments -> LCOR dato RCOR .)
    MAPA_ENTERO     reduce using rule 49 (argumments -> LCOR dato RCOR .)
    MAPA_FLOTANTE   reduce using rule 49 (argumments -> LCOR dato RCOR .)
    IF              reduce using rule 49 (argumments -> LCOR dato RCOR .)
    RPAREN          reduce using rule 49 (argumments -> LCOR dato RCOR .)


state 143

    (55) internos -> description argumments body .

    RPAREN          reduce using rule 55 (internos -> description argumments body .)


state 144

    (74) defn -> LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR . operacionesLogicas RPAREN
    (69) operacionesLogicas -> . LPAREN IF LPAREN MENORQUE VARIABLE ENTERO RPAREN LPAREN RECUR LPAREN INC LPAREN VARIABLE RPAREN RPAREN VARIABLE RPAREN RPAREN

    LPAREN          shift and go to state 156

    operacionesLogicas             shift and go to state 157

state 145

    (80) sentenciaLoopRecur -> LPAREN LOOP LCOR VARIABLE ENTERO RCOR . operacionesLogicas RPAREN
    (69) operacionesLogicas -> . LPAREN IF LPAREN MENORQUE VARIABLE ENTERO RPAREN LPAREN RECUR LPAREN INC LPAREN VARIABLE RPAREN RPAREN VARIABLE RPAREN RPAREN

    LPAREN          shift and go to state 156

    operacionesLogicas             shift and go to state 158

state 146

    (42) cond_else -> LPAREN COND linecondition linecondition DOSPUNTOS ELSE . impresion RPAREN
    (57) impresion -> . LPAREN IMPRIMIR dato RPAREN

    LPAREN          shift and go to state 104

    impresion                      shift and go to state 159

state 147

    (72) doseq -> LPAREN DOSEQ LCOR VARIABLE LPAREN RANGE . VARIABLE RPAREN RCOR LPAREN impresion RPAREN RPAREN

    VARIABLE        shift and go to state 160


state 148

    (44) case_expression -> LPAREN CASE dato case case impresion . RPAREN

    RPAREN          shift and go to state 161


state 149

    (63) if -> IF LPAREN operador_comparadores dato dato RPAREN .

    $end            reduce using rule 63 (if -> IF LPAREN operador_comparadores dato dato RPAREN .)
    RPAREN          reduce using rule 63 (if -> IF LPAREN operador_comparadores dato dato RPAREN .)


state 150

    (38) asignacion -> LPAREN LET LCOR VARIABLE dato RCOR RPAREN .

    $end            reduce using rule 38 (asignacion -> LPAREN LET LCOR VARIABLE dato RCOR RPAREN .)
    RPAREN          reduce using rule 38 (asignacion -> LPAREN LET LCOR VARIABLE dato RCOR RPAREN .)


state 151

    (64) if_do -> LPAREN IF LPAREN operador_comparadores dato dato RPAREN . LPAREN DO LPAREN dato RPAREN BOOLEAN RPAREN RPAREN

    LPAREN          shift and go to state 162


state 152

    (69) operacionesLogicas -> LPAREN IF LPAREN MENORQUE VARIABLE ENTERO RPAREN . LPAREN RECUR LPAREN INC LPAREN VARIABLE RPAREN RPAREN VARIABLE RPAREN RPAREN

    LPAREN          shift and go to state 163


state 153

    (73) defn -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN . expresionDefnElse RPAREN RPAREN
    (75) expresionDefnElse -> . CASE VARIABLE expresionCase DOSPUNTOS ELSE STRING

    CASE            shift and go to state 165

    expresionDefnElse              shift and go to state 164

state 154

    (47) argumments -> LCOR dato dato dato . RCOR

    RCOR            shift and go to state 166


state 155

    (48) argumments -> LCOR dato dato RCOR .

    LPAREN          reduce using rule 48 (argumments -> LCOR dato dato RCOR .)
    NUMERAL         reduce using rule 48 (argumments -> LCOR dato dato RCOR .)
    VECTOR_ENTERO   reduce using rule 48 (argumments -> LCOR dato dato RCOR .)
    VECTOR_FLOTANTE reduce using rule 48 (argumments -> LCOR dato dato RCOR .)
    MAPA_ENTERO     reduce using rule 48 (argumments -> LCOR dato dato RCOR .)
    MAPA_FLOTANTE   reduce using rule 48 (argumments -> LCOR dato dato RCOR .)
    IF              reduce using rule 48 (argumments -> LCOR dato dato RCOR .)
    RPAREN          reduce using rule 48 (argumments -> LCOR dato dato RCOR .)


state 156

    (69) operacionesLogicas -> LPAREN . IF LPAREN MENORQUE VARIABLE ENTERO RPAREN LPAREN RECUR LPAREN INC LPAREN VARIABLE RPAREN RPAREN VARIABLE RPAREN RPAREN

    IF              shift and go to state 167


state 157

    (74) defn -> LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas . RPAREN

    RPAREN          shift and go to state 168


state 158

    (80) sentenciaLoopRecur -> LPAREN LOOP LCOR VARIABLE ENTERO RCOR operacionesLogicas . RPAREN

    RPAREN          shift and go to state 169


state 159

    (42) cond_else -> LPAREN COND linecondition linecondition DOSPUNTOS ELSE impresion . RPAREN

    RPAREN          shift and go to state 170


state 160

    (72) doseq -> LPAREN DOSEQ LCOR VARIABLE LPAREN RANGE VARIABLE . RPAREN RCOR LPAREN impresion RPAREN RPAREN

    RPAREN          shift and go to state 171


state 161

    (44) case_expression -> LPAREN CASE dato case case impresion RPAREN .

    $end            reduce using rule 44 (case_expression -> LPAREN CASE dato case case impresion RPAREN .)
    RPAREN          reduce using rule 44 (case_expression -> LPAREN CASE dato case case impresion RPAREN .)


state 162

    (64) if_do -> LPAREN IF LPAREN operador_comparadores dato dato RPAREN LPAREN . DO LPAREN dato RPAREN BOOLEAN RPAREN RPAREN

    DO              shift and go to state 172


state 163

    (69) operacionesLogicas -> LPAREN IF LPAREN MENORQUE VARIABLE ENTERO RPAREN LPAREN . RECUR LPAREN INC LPAREN VARIABLE RPAREN RPAREN VARIABLE RPAREN RPAREN

    RECUR           shift and go to state 173


state 164

    (73) defn -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse . RPAREN RPAREN

    RPAREN          shift and go to state 174


state 165

    (75) expresionDefnElse -> CASE . VARIABLE expresionCase DOSPUNTOS ELSE STRING

    VARIABLE        shift and go to state 175


state 166

    (47) argumments -> LCOR dato dato dato RCOR .

    LPAREN          reduce using rule 47 (argumments -> LCOR dato dato dato RCOR .)
    NUMERAL         reduce using rule 47 (argumments -> LCOR dato dato dato RCOR .)
    VECTOR_ENTERO   reduce using rule 47 (argumments -> LCOR dato dato dato RCOR .)
    VECTOR_FLOTANTE reduce using rule 47 (argumments -> LCOR dato dato dato RCOR .)
    MAPA_ENTERO     reduce using rule 47 (argumments -> LCOR dato dato dato RCOR .)
    MAPA_FLOTANTE   reduce using rule 47 (argumments -> LCOR dato dato dato RCOR .)
    IF              reduce using rule 47 (argumments -> LCOR dato dato dato RCOR .)
    RPAREN          reduce using rule 47 (argumments -> LCOR dato dato dato RCOR .)


state 167

    (69) operacionesLogicas -> LPAREN IF . LPAREN MENORQUE VARIABLE ENTERO RPAREN LPAREN RECUR LPAREN INC LPAREN VARIABLE RPAREN RPAREN VARIABLE RPAREN RPAREN

    LPAREN          shift and go to state 176


state 168

    (74) defn -> LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN .

    $end            reduce using rule 74 (defn -> LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN .)
    RPAREN          reduce using rule 74 (defn -> LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN .)


state 169

    (80) sentenciaLoopRecur -> LPAREN LOOP LCOR VARIABLE ENTERO RCOR operacionesLogicas RPAREN .

    $end            reduce using rule 80 (sentenciaLoopRecur -> LPAREN LOOP LCOR VARIABLE ENTERO RCOR operacionesLogicas RPAREN .)
    RPAREN          reduce using rule 80 (sentenciaLoopRecur -> LPAREN LOOP LCOR VARIABLE ENTERO RCOR operacionesLogicas RPAREN .)


state 170

    (42) cond_else -> LPAREN COND linecondition linecondition DOSPUNTOS ELSE impresion RPAREN .

    $end            reduce using rule 42 (cond_else -> LPAREN COND linecondition linecondition DOSPUNTOS ELSE impresion RPAREN .)
    RPAREN          reduce using rule 42 (cond_else -> LPAREN COND linecondition linecondition DOSPUNTOS ELSE impresion RPAREN .)


state 171

    (72) doseq -> LPAREN DOSEQ LCOR VARIABLE LPAREN RANGE VARIABLE RPAREN . RCOR LPAREN impresion RPAREN RPAREN

    RCOR            shift and go to state 177


state 172

    (64) if_do -> LPAREN IF LPAREN operador_comparadores dato dato RPAREN LPAREN DO . LPAREN dato RPAREN BOOLEAN RPAREN RPAREN

    LPAREN          shift and go to state 178


state 173

    (69) operacionesLogicas -> LPAREN IF LPAREN MENORQUE VARIABLE ENTERO RPAREN LPAREN RECUR . LPAREN INC LPAREN VARIABLE RPAREN RPAREN VARIABLE RPAREN RPAREN

    LPAREN          shift and go to state 179


state 174

    (73) defn -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN . RPAREN

    RPAREN          shift and go to state 180


state 175

    (75) expresionDefnElse -> CASE VARIABLE . expresionCase DOSPUNTOS ELSE STRING
    (76) expresionCase -> . dato STRING
    (22) dato -> . STRING
    (23) dato -> . CHAR
    (24) dato -> . ENTERO
    (25) dato -> . FLOTANTE
    (26) dato -> . BOOLEAN
    (27) dato -> . VARIABLE

    STRING          shift and go to state 57
    CHAR            shift and go to state 58
    ENTERO          shift and go to state 59
    FLOTANTE        shift and go to state 60
    BOOLEAN         shift and go to state 61
    VARIABLE        shift and go to state 62

    expresionCase                  shift and go to state 181
    dato                           shift and go to state 182

state 176

    (69) operacionesLogicas -> LPAREN IF LPAREN . MENORQUE VARIABLE ENTERO RPAREN LPAREN RECUR LPAREN INC LPAREN VARIABLE RPAREN RPAREN VARIABLE RPAREN RPAREN

    MENORQUE        shift and go to state 183


state 177

    (72) doseq -> LPAREN DOSEQ LCOR VARIABLE LPAREN RANGE VARIABLE RPAREN RCOR . LPAREN impresion RPAREN RPAREN

    LPAREN          shift and go to state 184


state 178

    (64) if_do -> LPAREN IF LPAREN operador_comparadores dato dato RPAREN LPAREN DO LPAREN . dato RPAREN BOOLEAN RPAREN RPAREN
    (22) dato -> . STRING
    (23) dato -> . CHAR
    (24) dato -> . ENTERO
    (25) dato -> . FLOTANTE
    (26) dato -> . BOOLEAN
    (27) dato -> . VARIABLE

    STRING          shift and go to state 57
    CHAR            shift and go to state 58
    ENTERO          shift and go to state 59
    FLOTANTE        shift and go to state 60
    BOOLEAN         shift and go to state 61
    VARIABLE        shift and go to state 62

    dato                           shift and go to state 185

state 179

    (69) operacionesLogicas -> LPAREN IF LPAREN MENORQUE VARIABLE ENTERO RPAREN LPAREN RECUR LPAREN . INC LPAREN VARIABLE RPAREN RPAREN VARIABLE RPAREN RPAREN

    INC             shift and go to state 186


state 180

    (73) defn -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN .

    $end            reduce using rule 73 (defn -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN .)
    RPAREN          reduce using rule 73 (defn -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN .)


state 181

    (75) expresionDefnElse -> CASE VARIABLE expresionCase . DOSPUNTOS ELSE STRING

    DOSPUNTOS       shift and go to state 187


state 182

    (76) expresionCase -> dato . STRING

    STRING          shift and go to state 188


state 183

    (69) operacionesLogicas -> LPAREN IF LPAREN MENORQUE . VARIABLE ENTERO RPAREN LPAREN RECUR LPAREN INC LPAREN VARIABLE RPAREN RPAREN VARIABLE RPAREN RPAREN

    VARIABLE        shift and go to state 120


state 184

    (72) doseq -> LPAREN DOSEQ LCOR VARIABLE LPAREN RANGE VARIABLE RPAREN RCOR LPAREN . impresion RPAREN RPAREN
    (57) impresion -> . LPAREN IMPRIMIR dato RPAREN

    LPAREN          shift and go to state 104

    impresion                      shift and go to state 189

state 185

    (64) if_do -> LPAREN IF LPAREN operador_comparadores dato dato RPAREN LPAREN DO LPAREN dato . RPAREN BOOLEAN RPAREN RPAREN

    RPAREN          shift and go to state 190


state 186

    (69) operacionesLogicas -> LPAREN IF LPAREN MENORQUE VARIABLE ENTERO RPAREN LPAREN RECUR LPAREN INC . LPAREN VARIABLE RPAREN RPAREN VARIABLE RPAREN RPAREN

    LPAREN          shift and go to state 191


state 187

    (75) expresionDefnElse -> CASE VARIABLE expresionCase DOSPUNTOS . ELSE STRING

    ELSE            shift and go to state 192


state 188

    (76) expresionCase -> dato STRING .

    DOSPUNTOS       reduce using rule 76 (expresionCase -> dato STRING .)


state 189

    (72) doseq -> LPAREN DOSEQ LCOR VARIABLE LPAREN RANGE VARIABLE RPAREN RCOR LPAREN impresion . RPAREN RPAREN

    RPAREN          shift and go to state 193


state 190

    (64) if_do -> LPAREN IF LPAREN operador_comparadores dato dato RPAREN LPAREN DO LPAREN dato RPAREN . BOOLEAN RPAREN RPAREN

    BOOLEAN         shift and go to state 194


state 191

    (69) operacionesLogicas -> LPAREN IF LPAREN MENORQUE VARIABLE ENTERO RPAREN LPAREN RECUR LPAREN INC LPAREN . VARIABLE RPAREN RPAREN VARIABLE RPAREN RPAREN

    VARIABLE        shift and go to state 195


state 192

    (75) expresionDefnElse -> CASE VARIABLE expresionCase DOSPUNTOS ELSE . STRING

    STRING          shift and go to state 196


state 193

    (72) doseq -> LPAREN DOSEQ LCOR VARIABLE LPAREN RANGE VARIABLE RPAREN RCOR LPAREN impresion RPAREN . RPAREN

    RPAREN          shift and go to state 197


state 194

    (64) if_do -> LPAREN IF LPAREN operador_comparadores dato dato RPAREN LPAREN DO LPAREN dato RPAREN BOOLEAN . RPAREN RPAREN

    RPAREN          shift and go to state 198


state 195

    (69) operacionesLogicas -> LPAREN IF LPAREN MENORQUE VARIABLE ENTERO RPAREN LPAREN RECUR LPAREN INC LPAREN VARIABLE . RPAREN RPAREN VARIABLE RPAREN RPAREN

    RPAREN          shift and go to state 199


state 196

    (75) expresionDefnElse -> CASE VARIABLE expresionCase DOSPUNTOS ELSE STRING .

    RPAREN          reduce using rule 75 (expresionDefnElse -> CASE VARIABLE expresionCase DOSPUNTOS ELSE STRING .)


state 197

    (72) doseq -> LPAREN DOSEQ LCOR VARIABLE LPAREN RANGE VARIABLE RPAREN RCOR LPAREN impresion RPAREN RPAREN .

    $end            reduce using rule 72 (doseq -> LPAREN DOSEQ LCOR VARIABLE LPAREN RANGE VARIABLE RPAREN RCOR LPAREN impresion RPAREN RPAREN .)
    RPAREN          reduce using rule 72 (doseq -> LPAREN DOSEQ LCOR VARIABLE LPAREN RANGE VARIABLE RPAREN RCOR LPAREN impresion RPAREN RPAREN .)


state 198

    (64) if_do -> LPAREN IF LPAREN operador_comparadores dato dato RPAREN LPAREN DO LPAREN dato RPAREN BOOLEAN RPAREN . RPAREN

    RPAREN          shift and go to state 200


state 199

    (69) operacionesLogicas -> LPAREN IF LPAREN MENORQUE VARIABLE ENTERO RPAREN LPAREN RECUR LPAREN INC LPAREN VARIABLE RPAREN . RPAREN VARIABLE RPAREN RPAREN

    RPAREN          shift and go to state 201


state 200

    (64) if_do -> LPAREN IF LPAREN operador_comparadores dato dato RPAREN LPAREN DO LPAREN dato RPAREN BOOLEAN RPAREN RPAREN .

    $end            reduce using rule 64 (if_do -> LPAREN IF LPAREN operador_comparadores dato dato RPAREN LPAREN DO LPAREN dato RPAREN BOOLEAN RPAREN RPAREN .)
    RPAREN          reduce using rule 64 (if_do -> LPAREN IF LPAREN operador_comparadores dato dato RPAREN LPAREN DO LPAREN dato RPAREN BOOLEAN RPAREN RPAREN .)


state 201

    (69) operacionesLogicas -> LPAREN IF LPAREN MENORQUE VARIABLE ENTERO RPAREN LPAREN RECUR LPAREN INC LPAREN VARIABLE RPAREN RPAREN . VARIABLE RPAREN RPAREN

    VARIABLE        shift and go to state 202


state 202

    (69) operacionesLogicas -> LPAREN IF LPAREN MENORQUE VARIABLE ENTERO RPAREN LPAREN RECUR LPAREN INC LPAREN VARIABLE RPAREN RPAREN VARIABLE . RPAREN RPAREN

    RPAREN          shift and go to state 203


state 203

    (69) operacionesLogicas -> LPAREN IF LPAREN MENORQUE VARIABLE ENTERO RPAREN LPAREN RECUR LPAREN INC LPAREN VARIABLE RPAREN RPAREN VARIABLE RPAREN . RPAREN

    RPAREN          shift and go to state 204


state 204

    (69) operacionesLogicas -> LPAREN IF LPAREN MENORQUE VARIABLE ENTERO RPAREN LPAREN RECUR LPAREN INC LPAREN VARIABLE RPAREN RPAREN VARIABLE RPAREN RPAREN .

    $end            reduce using rule 69 (operacionesLogicas -> LPAREN IF LPAREN MENORQUE VARIABLE ENTERO RPAREN LPAREN RECUR LPAREN INC LPAREN VARIABLE RPAREN RPAREN VARIABLE RPAREN RPAREN .)
    RPAREN          reduce using rule 69 (operacionesLogicas -> LPAREN IF LPAREN MENORQUE VARIABLE ENTERO RPAREN LPAREN RECUR LPAREN INC LPAREN VARIABLE RPAREN RPAREN VARIABLE RPAREN RPAREN .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for VARIABLE in state 91 resolved as shift
WARNING: shift/reduce conflict for RCOR in state 122 resolved as shift
WARNING: reduce/reduce conflict in state 118 resolved using rule (operacion_aritmetica1 -> LPAREN operacion valor valor RPAREN)
WARNING: rejected rule (condicional -> LPAREN operacion valor valor RPAREN) in state 118
WARNING: Rule (condicional -> LPAREN operacion valor valor RPAREN) is never reduced
