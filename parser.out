Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    CLASE
    CONJUNTOS
    DO
    DOTIMES
    FUNCION
    FUTURE
    IGUAL
    INPUT
    LISTA
    MAPAS
    NOT
    NS
    NUEVO
    STR
    WHEN

Grammar

Rule 0     S' -> instrucciones
Rule 1     instrucciones -> asignacion
Rule 2     instrucciones -> impresion
Rule 3     instrucciones -> operacion_aritmetica1
Rule 4     instrucciones -> condicional
Rule 5     instrucciones -> vectores
Rule 6     instrucciones -> conjuntos
Rule 7     instrucciones -> defn
Rule 8     instrucciones -> operacionesLogicas
Rule 9     instrucciones -> sentenciaLoopRecur
Rule 10    instrucciones -> cond_
Rule 11    instrucciones -> cond_else
Rule 12    instrucciones -> doseq
Rule 13    instrucciones -> case_expression
Rule 14    instrucciones -> lista
Rule 15    instrucciones -> sentencia_booleana
Rule 16    instrucciones -> definition
Rule 17    dato -> STRING
Rule 18    dato -> CHAR
Rule 19    dato -> ENTERO
Rule 20    dato -> FLOTANTE
Rule 21    dato -> BOOLEAN
Rule 22    dato -> VARIABLE
Rule 23    valor -> ENTERO
Rule 24    valor -> FLOTANTE
Rule 25    valor -> BOOLEAN
Rule 26    operador_comparadores -> COMPARA_IGUAL
Rule 27    operador_comparadores -> MENORQUE
Rule 28    operador_comparadores -> MAYORQUE
Rule 29    operador_comparadores -> MAYORIGUALQUE
Rule 30    operador_comparadores -> MENORIGUALQUE
Rule 31    operador_comparadores -> DIFERENTE
Rule 32    asignacion -> LPAREN DEFICION VARIABLE dato RPAREN
Rule 33    asignacion -> LPAREN LET LCOR VARIABLE dato RCOR RPAREN
Rule 34    sentencia_booleana -> LPAREN operador_comparadores dato dato RPAREN
Rule 35    linecondition -> sentencia_booleana impresion
Rule 36    cond_ -> LPAREN COND linecondition linecondition RPAREN
Rule 37    cond_else -> LPAREN COND linecondition linecondition DOSPUNTOS ELSE impresion RPAREN
Rule 38    case -> dato impresion
Rule 39    case_expression -> LPAREN CASE dato case case impresion RPAREN
Rule 40    lista -> LPAREN LIST dato dato RPAREN
Rule 41    description -> STRING
Rule 42    argumments -> LCOR dato dato dato RCOR
Rule 43    argumments -> LCOR dato dato RCOR
Rule 44    argumments -> LCOR dato RCOR
Rule 45    body -> instrucciones
Rule 46    internos -> description
Rule 47    internos -> argumments
Rule 48    internos -> body
Rule 49    internos -> argumments body
Rule 50    internos -> description argumments body
Rule 51    definition -> LPAREN DEFFUNCION VARIABLE internos
Rule 52    impresion -> LPAREN IMPRIMIR dato RPAREN
Rule 53    valor -> VARIABLE
Rule 54    operacion -> MAS
Rule 55    operacion -> MENOS
Rule 56    operacion -> PRODUCTO
Rule 57    operacion -> DIVISION
Rule 58    operacionesLogicas -> LPAREN IF LPAREN MENORQUE VARIABLE ENTERO RPAREN LPAREN RECUR LPAREN INC LPAREN VARIABLE RPAREN RPAREN VARIABLE RPAREN RPAREN
Rule 59    operacion_aritmetica1 -> LPAREN operacion valor valor RPAREN
Rule 60    condicional -> LPAREN operacion valor valor RPAREN
Rule 61    vectores -> VECTORES
Rule 62    doseq -> LPAREN DOSEQ LCOR VARIABLE LPAREN RANGE VARIABLE RPAREN RCOR LPAREN impresion RPAREN RPAREN
Rule 63    defn -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN
Rule 64    defn -> LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN
Rule 65    expresionDefnElse -> CASE VARIABLE expresionCase DOSPUNTOS ELSE STRING
Rule 66    expresionCase -> dato STRING
Rule 67    conjuntos -> NUMERAL L_LLAVE expresionConjuntoEnteros R_LLAVE
Rule 68    conjuntos -> NUMERAL L_LLAVE expresionConjuntoDouble R_LLAVE
Rule 69    conjuntos -> NUMERAL L_LLAVE expresionConjuntoString R_LLAVE
Rule 70    sentenciaLoopRecur -> LPAREN LOOP LCOR VARIABLE ENTERO RCOR operacionesLogicas RPAREN
Rule 71    expresionConjuntoEnteros -> ENTERO
Rule 72    expresionConjuntoEnteros -> ENTERO expresionConjuntoEnteros
Rule 73    expresionConjuntoDouble -> FLOTANTE
Rule 74    expresionConjuntoDouble -> FLOTANTE expresionConjuntoDouble
Rule 75    expresionConjuntoString -> STRING
Rule 76    expresionConjuntoString -> STRING expresionConjuntoString

Terminals, with rules where they appear

BOOLEAN              : 21 25
CASE                 : 39 65
CHAR                 : 18
CLASE                : 
COMPARA_IGUAL        : 26
COND                 : 36 37
CONJUNTOS            : 
DEFFUNCION           : 51 63 64
DEFICION             : 32
DIFERENTE            : 31
DIVISION             : 57
DO                   : 
DOSEQ                : 62
DOSPUNTOS            : 37 65
DOTIMES              : 
ELSE                 : 37 65
ENTERO               : 19 23 58 70 71 72
FLOTANTE             : 20 24 73 74
FUNCION              : 
FUTURE               : 
IF                   : 58
IGUAL                : 
IMPRIMIR             : 52
INC                  : 58
INCREASE             : 64
INPUT                : 
LCOR                 : 33 42 43 44 62 63 64 70
LET                  : 33
LIST                 : 40
LISTA                : 
LOOP                 : 70
LPAREN               : 32 33 34 36 37 39 40 51 52 58 58 58 58 58 59 60 62 62 62 63 63 64 70
L_LLAVE              : 67 68 69
MAPAS                : 
MAS                  : 54
MAYORIGUALQUE        : 29
MAYORQUE             : 28
MENORIGUALQUE        : 30
MENORQUE             : 27 58
MENOS                : 55
NOT                  : 
NS                   : 
NUEVO                : 
NUMERAL              : 67 68 69
PRODUCTO             : 56
RANGE                : 62
RCOR                 : 33 42 43 44 62 63 64 70
RECUR                : 58
RPAREN               : 32 33 34 36 37 39 40 52 58 58 58 58 58 59 60 62 62 62 63 63 64 70
R_LLAVE              : 67 68 69
STR                  : 
STRING               : 17 41 65 66 75 76
VARIABLE             : 22 32 33 51 53 58 58 58 62 62 63 63 64 65 70
VECTORES             : 61
WHEN                 : 
error                : 

Nonterminals, with rules where they appear

argumments           : 47 49 50
asignacion           : 1
body                 : 48 49 50
case                 : 39 39
case_expression      : 13
cond_                : 10
cond_else            : 11
condicional          : 4
conjuntos            : 6
dato                 : 32 33 34 34 38 39 40 40 42 42 42 43 43 44 52 66
definition           : 16
defn                 : 7
description          : 46 50
doseq                : 12
expresionCase        : 65
expresionConjuntoDouble : 68 74
expresionConjuntoEnteros : 67 72
expresionConjuntoString : 69 76
expresionDefnElse    : 63
impresion            : 2 35 37 38 39 62
instrucciones        : 45 0
internos             : 51
linecondition        : 36 36 37 37
lista                : 14
operacion            : 59 60
operacion_aritmetica1 : 3
operacionesLogicas   : 8 64 70
operador_comparadores : 34
sentenciaLoopRecur   : 9
sentencia_booleana   : 15 35
valor                : 59 59 60 60
vectores             : 5

Parsing method: LALR

state 0

    (0) S' -> . instrucciones
    (1) instrucciones -> . asignacion
    (2) instrucciones -> . impresion
    (3) instrucciones -> . operacion_aritmetica1
    (4) instrucciones -> . condicional
    (5) instrucciones -> . vectores
    (6) instrucciones -> . conjuntos
    (7) instrucciones -> . defn
    (8) instrucciones -> . operacionesLogicas
    (9) instrucciones -> . sentenciaLoopRecur
    (10) instrucciones -> . cond_
    (11) instrucciones -> . cond_else
    (12) instrucciones -> . doseq
    (13) instrucciones -> . case_expression
    (14) instrucciones -> . lista
    (15) instrucciones -> . sentencia_booleana
    (16) instrucciones -> . definition
    (32) asignacion -> . LPAREN DEFICION VARIABLE dato RPAREN
    (33) asignacion -> . LPAREN LET LCOR VARIABLE dato RCOR RPAREN
    (52) impresion -> . LPAREN IMPRIMIR dato RPAREN
    (59) operacion_aritmetica1 -> . LPAREN operacion valor valor RPAREN
    (60) condicional -> . LPAREN operacion valor valor RPAREN
    (61) vectores -> . VECTORES
    (67) conjuntos -> . NUMERAL L_LLAVE expresionConjuntoEnteros R_LLAVE
    (68) conjuntos -> . NUMERAL L_LLAVE expresionConjuntoDouble R_LLAVE
    (69) conjuntos -> . NUMERAL L_LLAVE expresionConjuntoString R_LLAVE
    (63) defn -> . LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN
    (64) defn -> . LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN
    (58) operacionesLogicas -> . LPAREN IF LPAREN MENORQUE VARIABLE ENTERO RPAREN LPAREN RECUR LPAREN INC LPAREN VARIABLE RPAREN RPAREN VARIABLE RPAREN RPAREN
    (70) sentenciaLoopRecur -> . LPAREN LOOP LCOR VARIABLE ENTERO RCOR operacionesLogicas RPAREN
    (36) cond_ -> . LPAREN COND linecondition linecondition RPAREN
    (37) cond_else -> . LPAREN COND linecondition linecondition DOSPUNTOS ELSE impresion RPAREN
    (62) doseq -> . LPAREN DOSEQ LCOR VARIABLE LPAREN RANGE VARIABLE RPAREN RCOR LPAREN impresion RPAREN RPAREN
    (39) case_expression -> . LPAREN CASE dato case case impresion RPAREN
    (40) lista -> . LPAREN LIST dato dato RPAREN
    (34) sentencia_booleana -> . LPAREN operador_comparadores dato dato RPAREN
    (51) definition -> . LPAREN DEFFUNCION VARIABLE internos

    LPAREN          shift and go to state 18
    VECTORES        shift and go to state 19
    NUMERAL         shift and go to state 20

    instrucciones                  shift and go to state 1
    asignacion                     shift and go to state 2
    impresion                      shift and go to state 3
    operacion_aritmetica1          shift and go to state 4
    condicional                    shift and go to state 5
    vectores                       shift and go to state 6
    conjuntos                      shift and go to state 7
    defn                           shift and go to state 8
    operacionesLogicas             shift and go to state 9
    sentenciaLoopRecur             shift and go to state 10
    cond_                          shift and go to state 11
    cond_else                      shift and go to state 12
    doseq                          shift and go to state 13
    case_expression                shift and go to state 14
    lista                          shift and go to state 15
    sentencia_booleana             shift and go to state 16
    definition                     shift and go to state 17

state 1

    (0) S' -> instrucciones .



state 2

    (1) instrucciones -> asignacion .

    $end            reduce using rule 1 (instrucciones -> asignacion .)


state 3

    (2) instrucciones -> impresion .

    $end            reduce using rule 2 (instrucciones -> impresion .)


state 4

    (3) instrucciones -> operacion_aritmetica1 .

    $end            reduce using rule 3 (instrucciones -> operacion_aritmetica1 .)


state 5

    (4) instrucciones -> condicional .

    $end            reduce using rule 4 (instrucciones -> condicional .)


state 6

    (5) instrucciones -> vectores .

    $end            reduce using rule 5 (instrucciones -> vectores .)


state 7

    (6) instrucciones -> conjuntos .

    $end            reduce using rule 6 (instrucciones -> conjuntos .)


state 8

    (7) instrucciones -> defn .

    $end            reduce using rule 7 (instrucciones -> defn .)


state 9

    (8) instrucciones -> operacionesLogicas .

    $end            reduce using rule 8 (instrucciones -> operacionesLogicas .)


state 10

    (9) instrucciones -> sentenciaLoopRecur .

    $end            reduce using rule 9 (instrucciones -> sentenciaLoopRecur .)


state 11

    (10) instrucciones -> cond_ .

    $end            reduce using rule 10 (instrucciones -> cond_ .)


state 12

    (11) instrucciones -> cond_else .

    $end            reduce using rule 11 (instrucciones -> cond_else .)


state 13

    (12) instrucciones -> doseq .

    $end            reduce using rule 12 (instrucciones -> doseq .)


state 14

    (13) instrucciones -> case_expression .

    $end            reduce using rule 13 (instrucciones -> case_expression .)


state 15

    (14) instrucciones -> lista .

    $end            reduce using rule 14 (instrucciones -> lista .)


state 16

    (15) instrucciones -> sentencia_booleana .

    $end            reduce using rule 15 (instrucciones -> sentencia_booleana .)


state 17

    (16) instrucciones -> definition .

    $end            reduce using rule 16 (instrucciones -> definition .)


state 18

    (32) asignacion -> LPAREN . DEFICION VARIABLE dato RPAREN
    (33) asignacion -> LPAREN . LET LCOR VARIABLE dato RCOR RPAREN
    (52) impresion -> LPAREN . IMPRIMIR dato RPAREN
    (59) operacion_aritmetica1 -> LPAREN . operacion valor valor RPAREN
    (60) condicional -> LPAREN . operacion valor valor RPAREN
    (63) defn -> LPAREN . DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN
    (64) defn -> LPAREN . DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN
    (58) operacionesLogicas -> LPAREN . IF LPAREN MENORQUE VARIABLE ENTERO RPAREN LPAREN RECUR LPAREN INC LPAREN VARIABLE RPAREN RPAREN VARIABLE RPAREN RPAREN
    (70) sentenciaLoopRecur -> LPAREN . LOOP LCOR VARIABLE ENTERO RCOR operacionesLogicas RPAREN
    (36) cond_ -> LPAREN . COND linecondition linecondition RPAREN
    (37) cond_else -> LPAREN . COND linecondition linecondition DOSPUNTOS ELSE impresion RPAREN
    (62) doseq -> LPAREN . DOSEQ LCOR VARIABLE LPAREN RANGE VARIABLE RPAREN RCOR LPAREN impresion RPAREN RPAREN
    (39) case_expression -> LPAREN . CASE dato case case impresion RPAREN
    (40) lista -> LPAREN . LIST dato dato RPAREN
    (34) sentencia_booleana -> LPAREN . operador_comparadores dato dato RPAREN
    (51) definition -> LPAREN . DEFFUNCION VARIABLE internos
    (54) operacion -> . MAS
    (55) operacion -> . MENOS
    (56) operacion -> . PRODUCTO
    (57) operacion -> . DIVISION
    (26) operador_comparadores -> . COMPARA_IGUAL
    (27) operador_comparadores -> . MENORQUE
    (28) operador_comparadores -> . MAYORQUE
    (29) operador_comparadores -> . MAYORIGUALQUE
    (30) operador_comparadores -> . MENORIGUALQUE
    (31) operador_comparadores -> . DIFERENTE

    DEFICION        shift and go to state 21
    LET             shift and go to state 22
    IMPRIMIR        shift and go to state 23
    DEFFUNCION      shift and go to state 25
    IF              shift and go to state 26
    LOOP            shift and go to state 28
    COND            shift and go to state 29
    DOSEQ           shift and go to state 30
    CASE            shift and go to state 31
    LIST            shift and go to state 32
    MAS             shift and go to state 34
    MENOS           shift and go to state 35
    PRODUCTO        shift and go to state 36
    DIVISION        shift and go to state 37
    COMPARA_IGUAL   shift and go to state 38
    MENORQUE        shift and go to state 27
    MAYORQUE        shift and go to state 39
    MAYORIGUALQUE   shift and go to state 40
    MENORIGUALQUE   shift and go to state 41
    DIFERENTE       shift and go to state 42

    operacion                      shift and go to state 24
    operador_comparadores          shift and go to state 33

state 19

    (61) vectores -> VECTORES .

    $end            reduce using rule 61 (vectores -> VECTORES .)


state 20

    (67) conjuntos -> NUMERAL . L_LLAVE expresionConjuntoEnteros R_LLAVE
    (68) conjuntos -> NUMERAL . L_LLAVE expresionConjuntoDouble R_LLAVE
    (69) conjuntos -> NUMERAL . L_LLAVE expresionConjuntoString R_LLAVE

    L_LLAVE         shift and go to state 43


state 21

    (32) asignacion -> LPAREN DEFICION . VARIABLE dato RPAREN

    VARIABLE        shift and go to state 44


state 22

    (33) asignacion -> LPAREN LET . LCOR VARIABLE dato RCOR RPAREN

    LCOR            shift and go to state 45


state 23

    (52) impresion -> LPAREN IMPRIMIR . dato RPAREN
    (17) dato -> . STRING
    (18) dato -> . CHAR
    (19) dato -> . ENTERO
    (20) dato -> . FLOTANTE
    (21) dato -> . BOOLEAN
    (22) dato -> . VARIABLE

    STRING          shift and go to state 47
    CHAR            shift and go to state 48
    ENTERO          shift and go to state 49
    FLOTANTE        shift and go to state 50
    BOOLEAN         shift and go to state 51
    VARIABLE        shift and go to state 52

    dato                           shift and go to state 46

state 24

    (59) operacion_aritmetica1 -> LPAREN operacion . valor valor RPAREN
    (60) condicional -> LPAREN operacion . valor valor RPAREN
    (23) valor -> . ENTERO
    (24) valor -> . FLOTANTE
    (25) valor -> . BOOLEAN
    (53) valor -> . VARIABLE

    ENTERO          shift and go to state 54
    FLOTANTE        shift and go to state 55
    BOOLEAN         shift and go to state 56
    VARIABLE        shift and go to state 57

    valor                          shift and go to state 53

state 25

    (63) defn -> LPAREN DEFFUNCION . VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN
    (64) defn -> LPAREN DEFFUNCION . INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN
    (51) definition -> LPAREN DEFFUNCION . VARIABLE internos

    VARIABLE        shift and go to state 58
    INCREASE        shift and go to state 59


state 26

    (58) operacionesLogicas -> LPAREN IF . LPAREN MENORQUE VARIABLE ENTERO RPAREN LPAREN RECUR LPAREN INC LPAREN VARIABLE RPAREN RPAREN VARIABLE RPAREN RPAREN

    LPAREN          shift and go to state 60


state 27

    (27) operador_comparadores -> MENORQUE .

    STRING          reduce using rule 27 (operador_comparadores -> MENORQUE .)
    CHAR            reduce using rule 27 (operador_comparadores -> MENORQUE .)
    ENTERO          reduce using rule 27 (operador_comparadores -> MENORQUE .)
    FLOTANTE        reduce using rule 27 (operador_comparadores -> MENORQUE .)
    BOOLEAN         reduce using rule 27 (operador_comparadores -> MENORQUE .)
    VARIABLE        reduce using rule 27 (operador_comparadores -> MENORQUE .)


state 28

    (70) sentenciaLoopRecur -> LPAREN LOOP . LCOR VARIABLE ENTERO RCOR operacionesLogicas RPAREN

    LCOR            shift and go to state 61


state 29

    (36) cond_ -> LPAREN COND . linecondition linecondition RPAREN
    (37) cond_else -> LPAREN COND . linecondition linecondition DOSPUNTOS ELSE impresion RPAREN
    (35) linecondition -> . sentencia_booleana impresion
    (34) sentencia_booleana -> . LPAREN operador_comparadores dato dato RPAREN

    LPAREN          shift and go to state 62

    linecondition                  shift and go to state 63
    sentencia_booleana             shift and go to state 64

state 30

    (62) doseq -> LPAREN DOSEQ . LCOR VARIABLE LPAREN RANGE VARIABLE RPAREN RCOR LPAREN impresion RPAREN RPAREN

    LCOR            shift and go to state 65


state 31

    (39) case_expression -> LPAREN CASE . dato case case impresion RPAREN
    (17) dato -> . STRING
    (18) dato -> . CHAR
    (19) dato -> . ENTERO
    (20) dato -> . FLOTANTE
    (21) dato -> . BOOLEAN
    (22) dato -> . VARIABLE

    STRING          shift and go to state 47
    CHAR            shift and go to state 48
    ENTERO          shift and go to state 49
    FLOTANTE        shift and go to state 50
    BOOLEAN         shift and go to state 51
    VARIABLE        shift and go to state 52

    dato                           shift and go to state 66

state 32

    (40) lista -> LPAREN LIST . dato dato RPAREN
    (17) dato -> . STRING
    (18) dato -> . CHAR
    (19) dato -> . ENTERO
    (20) dato -> . FLOTANTE
    (21) dato -> . BOOLEAN
    (22) dato -> . VARIABLE

    STRING          shift and go to state 47
    CHAR            shift and go to state 48
    ENTERO          shift and go to state 49
    FLOTANTE        shift and go to state 50
    BOOLEAN         shift and go to state 51
    VARIABLE        shift and go to state 52

    dato                           shift and go to state 67

state 33

    (34) sentencia_booleana -> LPAREN operador_comparadores . dato dato RPAREN
    (17) dato -> . STRING
    (18) dato -> . CHAR
    (19) dato -> . ENTERO
    (20) dato -> . FLOTANTE
    (21) dato -> . BOOLEAN
    (22) dato -> . VARIABLE

    STRING          shift and go to state 47
    CHAR            shift and go to state 48
    ENTERO          shift and go to state 49
    FLOTANTE        shift and go to state 50
    BOOLEAN         shift and go to state 51
    VARIABLE        shift and go to state 52

    dato                           shift and go to state 68

state 34

    (54) operacion -> MAS .

    ENTERO          reduce using rule 54 (operacion -> MAS .)
    FLOTANTE        reduce using rule 54 (operacion -> MAS .)
    BOOLEAN         reduce using rule 54 (operacion -> MAS .)
    VARIABLE        reduce using rule 54 (operacion -> MAS .)


state 35

    (55) operacion -> MENOS .

    ENTERO          reduce using rule 55 (operacion -> MENOS .)
    FLOTANTE        reduce using rule 55 (operacion -> MENOS .)
    BOOLEAN         reduce using rule 55 (operacion -> MENOS .)
    VARIABLE        reduce using rule 55 (operacion -> MENOS .)


state 36

    (56) operacion -> PRODUCTO .

    ENTERO          reduce using rule 56 (operacion -> PRODUCTO .)
    FLOTANTE        reduce using rule 56 (operacion -> PRODUCTO .)
    BOOLEAN         reduce using rule 56 (operacion -> PRODUCTO .)
    VARIABLE        reduce using rule 56 (operacion -> PRODUCTO .)


state 37

    (57) operacion -> DIVISION .

    ENTERO          reduce using rule 57 (operacion -> DIVISION .)
    FLOTANTE        reduce using rule 57 (operacion -> DIVISION .)
    BOOLEAN         reduce using rule 57 (operacion -> DIVISION .)
    VARIABLE        reduce using rule 57 (operacion -> DIVISION .)


state 38

    (26) operador_comparadores -> COMPARA_IGUAL .

    STRING          reduce using rule 26 (operador_comparadores -> COMPARA_IGUAL .)
    CHAR            reduce using rule 26 (operador_comparadores -> COMPARA_IGUAL .)
    ENTERO          reduce using rule 26 (operador_comparadores -> COMPARA_IGUAL .)
    FLOTANTE        reduce using rule 26 (operador_comparadores -> COMPARA_IGUAL .)
    BOOLEAN         reduce using rule 26 (operador_comparadores -> COMPARA_IGUAL .)
    VARIABLE        reduce using rule 26 (operador_comparadores -> COMPARA_IGUAL .)


state 39

    (28) operador_comparadores -> MAYORQUE .

    STRING          reduce using rule 28 (operador_comparadores -> MAYORQUE .)
    CHAR            reduce using rule 28 (operador_comparadores -> MAYORQUE .)
    ENTERO          reduce using rule 28 (operador_comparadores -> MAYORQUE .)
    FLOTANTE        reduce using rule 28 (operador_comparadores -> MAYORQUE .)
    BOOLEAN         reduce using rule 28 (operador_comparadores -> MAYORQUE .)
    VARIABLE        reduce using rule 28 (operador_comparadores -> MAYORQUE .)


state 40

    (29) operador_comparadores -> MAYORIGUALQUE .

    STRING          reduce using rule 29 (operador_comparadores -> MAYORIGUALQUE .)
    CHAR            reduce using rule 29 (operador_comparadores -> MAYORIGUALQUE .)
    ENTERO          reduce using rule 29 (operador_comparadores -> MAYORIGUALQUE .)
    FLOTANTE        reduce using rule 29 (operador_comparadores -> MAYORIGUALQUE .)
    BOOLEAN         reduce using rule 29 (operador_comparadores -> MAYORIGUALQUE .)
    VARIABLE        reduce using rule 29 (operador_comparadores -> MAYORIGUALQUE .)


state 41

    (30) operador_comparadores -> MENORIGUALQUE .

    STRING          reduce using rule 30 (operador_comparadores -> MENORIGUALQUE .)
    CHAR            reduce using rule 30 (operador_comparadores -> MENORIGUALQUE .)
    ENTERO          reduce using rule 30 (operador_comparadores -> MENORIGUALQUE .)
    FLOTANTE        reduce using rule 30 (operador_comparadores -> MENORIGUALQUE .)
    BOOLEAN         reduce using rule 30 (operador_comparadores -> MENORIGUALQUE .)
    VARIABLE        reduce using rule 30 (operador_comparadores -> MENORIGUALQUE .)


state 42

    (31) operador_comparadores -> DIFERENTE .

    STRING          reduce using rule 31 (operador_comparadores -> DIFERENTE .)
    CHAR            reduce using rule 31 (operador_comparadores -> DIFERENTE .)
    ENTERO          reduce using rule 31 (operador_comparadores -> DIFERENTE .)
    FLOTANTE        reduce using rule 31 (operador_comparadores -> DIFERENTE .)
    BOOLEAN         reduce using rule 31 (operador_comparadores -> DIFERENTE .)
    VARIABLE        reduce using rule 31 (operador_comparadores -> DIFERENTE .)


state 43

    (67) conjuntos -> NUMERAL L_LLAVE . expresionConjuntoEnteros R_LLAVE
    (68) conjuntos -> NUMERAL L_LLAVE . expresionConjuntoDouble R_LLAVE
    (69) conjuntos -> NUMERAL L_LLAVE . expresionConjuntoString R_LLAVE
    (71) expresionConjuntoEnteros -> . ENTERO
    (72) expresionConjuntoEnteros -> . ENTERO expresionConjuntoEnteros
    (73) expresionConjuntoDouble -> . FLOTANTE
    (74) expresionConjuntoDouble -> . FLOTANTE expresionConjuntoDouble
    (75) expresionConjuntoString -> . STRING
    (76) expresionConjuntoString -> . STRING expresionConjuntoString

    ENTERO          shift and go to state 72
    FLOTANTE        shift and go to state 73
    STRING          shift and go to state 74

    expresionConjuntoEnteros       shift and go to state 69
    expresionConjuntoDouble        shift and go to state 70
    expresionConjuntoString        shift and go to state 71

state 44

    (32) asignacion -> LPAREN DEFICION VARIABLE . dato RPAREN
    (17) dato -> . STRING
    (18) dato -> . CHAR
    (19) dato -> . ENTERO
    (20) dato -> . FLOTANTE
    (21) dato -> . BOOLEAN
    (22) dato -> . VARIABLE

    STRING          shift and go to state 47
    CHAR            shift and go to state 48
    ENTERO          shift and go to state 49
    FLOTANTE        shift and go to state 50
    BOOLEAN         shift and go to state 51
    VARIABLE        shift and go to state 52

    dato                           shift and go to state 75

state 45

    (33) asignacion -> LPAREN LET LCOR . VARIABLE dato RCOR RPAREN

    VARIABLE        shift and go to state 76


state 46

    (52) impresion -> LPAREN IMPRIMIR dato . RPAREN

    RPAREN          shift and go to state 77


state 47

    (17) dato -> STRING .

    RPAREN          reduce using rule 17 (dato -> STRING .)
    STRING          reduce using rule 17 (dato -> STRING .)
    CHAR            reduce using rule 17 (dato -> STRING .)
    ENTERO          reduce using rule 17 (dato -> STRING .)
    FLOTANTE        reduce using rule 17 (dato -> STRING .)
    BOOLEAN         reduce using rule 17 (dato -> STRING .)
    VARIABLE        reduce using rule 17 (dato -> STRING .)
    LPAREN          reduce using rule 17 (dato -> STRING .)
    RCOR            reduce using rule 17 (dato -> STRING .)


state 48

    (18) dato -> CHAR .

    RPAREN          reduce using rule 18 (dato -> CHAR .)
    STRING          reduce using rule 18 (dato -> CHAR .)
    CHAR            reduce using rule 18 (dato -> CHAR .)
    ENTERO          reduce using rule 18 (dato -> CHAR .)
    FLOTANTE        reduce using rule 18 (dato -> CHAR .)
    BOOLEAN         reduce using rule 18 (dato -> CHAR .)
    VARIABLE        reduce using rule 18 (dato -> CHAR .)
    LPAREN          reduce using rule 18 (dato -> CHAR .)
    RCOR            reduce using rule 18 (dato -> CHAR .)


state 49

    (19) dato -> ENTERO .

    RPAREN          reduce using rule 19 (dato -> ENTERO .)
    STRING          reduce using rule 19 (dato -> ENTERO .)
    CHAR            reduce using rule 19 (dato -> ENTERO .)
    ENTERO          reduce using rule 19 (dato -> ENTERO .)
    FLOTANTE        reduce using rule 19 (dato -> ENTERO .)
    BOOLEAN         reduce using rule 19 (dato -> ENTERO .)
    VARIABLE        reduce using rule 19 (dato -> ENTERO .)
    LPAREN          reduce using rule 19 (dato -> ENTERO .)
    RCOR            reduce using rule 19 (dato -> ENTERO .)


state 50

    (20) dato -> FLOTANTE .

    RPAREN          reduce using rule 20 (dato -> FLOTANTE .)
    STRING          reduce using rule 20 (dato -> FLOTANTE .)
    CHAR            reduce using rule 20 (dato -> FLOTANTE .)
    ENTERO          reduce using rule 20 (dato -> FLOTANTE .)
    FLOTANTE        reduce using rule 20 (dato -> FLOTANTE .)
    BOOLEAN         reduce using rule 20 (dato -> FLOTANTE .)
    VARIABLE        reduce using rule 20 (dato -> FLOTANTE .)
    LPAREN          reduce using rule 20 (dato -> FLOTANTE .)
    RCOR            reduce using rule 20 (dato -> FLOTANTE .)


state 51

    (21) dato -> BOOLEAN .

    RPAREN          reduce using rule 21 (dato -> BOOLEAN .)
    STRING          reduce using rule 21 (dato -> BOOLEAN .)
    CHAR            reduce using rule 21 (dato -> BOOLEAN .)
    ENTERO          reduce using rule 21 (dato -> BOOLEAN .)
    FLOTANTE        reduce using rule 21 (dato -> BOOLEAN .)
    BOOLEAN         reduce using rule 21 (dato -> BOOLEAN .)
    VARIABLE        reduce using rule 21 (dato -> BOOLEAN .)
    LPAREN          reduce using rule 21 (dato -> BOOLEAN .)
    RCOR            reduce using rule 21 (dato -> BOOLEAN .)


state 52

    (22) dato -> VARIABLE .

    RPAREN          reduce using rule 22 (dato -> VARIABLE .)
    STRING          reduce using rule 22 (dato -> VARIABLE .)
    CHAR            reduce using rule 22 (dato -> VARIABLE .)
    ENTERO          reduce using rule 22 (dato -> VARIABLE .)
    FLOTANTE        reduce using rule 22 (dato -> VARIABLE .)
    BOOLEAN         reduce using rule 22 (dato -> VARIABLE .)
    VARIABLE        reduce using rule 22 (dato -> VARIABLE .)
    LPAREN          reduce using rule 22 (dato -> VARIABLE .)
    RCOR            reduce using rule 22 (dato -> VARIABLE .)


state 53

    (59) operacion_aritmetica1 -> LPAREN operacion valor . valor RPAREN
    (60) condicional -> LPAREN operacion valor . valor RPAREN
    (23) valor -> . ENTERO
    (24) valor -> . FLOTANTE
    (25) valor -> . BOOLEAN
    (53) valor -> . VARIABLE

    ENTERO          shift and go to state 54
    FLOTANTE        shift and go to state 55
    BOOLEAN         shift and go to state 56
    VARIABLE        shift and go to state 57

    valor                          shift and go to state 78

state 54

    (23) valor -> ENTERO .

    ENTERO          reduce using rule 23 (valor -> ENTERO .)
    FLOTANTE        reduce using rule 23 (valor -> ENTERO .)
    BOOLEAN         reduce using rule 23 (valor -> ENTERO .)
    VARIABLE        reduce using rule 23 (valor -> ENTERO .)
    RPAREN          reduce using rule 23 (valor -> ENTERO .)


state 55

    (24) valor -> FLOTANTE .

    ENTERO          reduce using rule 24 (valor -> FLOTANTE .)
    FLOTANTE        reduce using rule 24 (valor -> FLOTANTE .)
    BOOLEAN         reduce using rule 24 (valor -> FLOTANTE .)
    VARIABLE        reduce using rule 24 (valor -> FLOTANTE .)
    RPAREN          reduce using rule 24 (valor -> FLOTANTE .)


state 56

    (25) valor -> BOOLEAN .

    ENTERO          reduce using rule 25 (valor -> BOOLEAN .)
    FLOTANTE        reduce using rule 25 (valor -> BOOLEAN .)
    BOOLEAN         reduce using rule 25 (valor -> BOOLEAN .)
    VARIABLE        reduce using rule 25 (valor -> BOOLEAN .)
    RPAREN          reduce using rule 25 (valor -> BOOLEAN .)


state 57

    (53) valor -> VARIABLE .

    ENTERO          reduce using rule 53 (valor -> VARIABLE .)
    FLOTANTE        reduce using rule 53 (valor -> VARIABLE .)
    BOOLEAN         reduce using rule 53 (valor -> VARIABLE .)
    VARIABLE        reduce using rule 53 (valor -> VARIABLE .)
    RPAREN          reduce using rule 53 (valor -> VARIABLE .)


state 58

    (63) defn -> LPAREN DEFFUNCION VARIABLE . LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN
    (51) definition -> LPAREN DEFFUNCION VARIABLE . internos
    (46) internos -> . description
    (47) internos -> . argumments
    (48) internos -> . body
    (49) internos -> . argumments body
    (50) internos -> . description argumments body
    (41) description -> . STRING
    (42) argumments -> . LCOR dato dato dato RCOR
    (43) argumments -> . LCOR dato dato RCOR
    (44) argumments -> . LCOR dato RCOR
    (45) body -> . instrucciones
    (1) instrucciones -> . asignacion
    (2) instrucciones -> . impresion
    (3) instrucciones -> . operacion_aritmetica1
    (4) instrucciones -> . condicional
    (5) instrucciones -> . vectores
    (6) instrucciones -> . conjuntos
    (7) instrucciones -> . defn
    (8) instrucciones -> . operacionesLogicas
    (9) instrucciones -> . sentenciaLoopRecur
    (10) instrucciones -> . cond_
    (11) instrucciones -> . cond_else
    (12) instrucciones -> . doseq
    (13) instrucciones -> . case_expression
    (14) instrucciones -> . lista
    (15) instrucciones -> . sentencia_booleana
    (16) instrucciones -> . definition
    (32) asignacion -> . LPAREN DEFICION VARIABLE dato RPAREN
    (33) asignacion -> . LPAREN LET LCOR VARIABLE dato RCOR RPAREN
    (52) impresion -> . LPAREN IMPRIMIR dato RPAREN
    (59) operacion_aritmetica1 -> . LPAREN operacion valor valor RPAREN
    (60) condicional -> . LPAREN operacion valor valor RPAREN
    (61) vectores -> . VECTORES
    (67) conjuntos -> . NUMERAL L_LLAVE expresionConjuntoEnteros R_LLAVE
    (68) conjuntos -> . NUMERAL L_LLAVE expresionConjuntoDouble R_LLAVE
    (69) conjuntos -> . NUMERAL L_LLAVE expresionConjuntoString R_LLAVE
    (63) defn -> . LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN
    (64) defn -> . LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN
    (58) operacionesLogicas -> . LPAREN IF LPAREN MENORQUE VARIABLE ENTERO RPAREN LPAREN RECUR LPAREN INC LPAREN VARIABLE RPAREN RPAREN VARIABLE RPAREN RPAREN
    (70) sentenciaLoopRecur -> . LPAREN LOOP LCOR VARIABLE ENTERO RCOR operacionesLogicas RPAREN
    (36) cond_ -> . LPAREN COND linecondition linecondition RPAREN
    (37) cond_else -> . LPAREN COND linecondition linecondition DOSPUNTOS ELSE impresion RPAREN
    (62) doseq -> . LPAREN DOSEQ LCOR VARIABLE LPAREN RANGE VARIABLE RPAREN RCOR LPAREN impresion RPAREN RPAREN
    (39) case_expression -> . LPAREN CASE dato case case impresion RPAREN
    (40) lista -> . LPAREN LIST dato dato RPAREN
    (34) sentencia_booleana -> . LPAREN operador_comparadores dato dato RPAREN
    (51) definition -> . LPAREN DEFFUNCION VARIABLE internos

    LCOR            shift and go to state 79
    STRING          shift and go to state 84
    LPAREN          shift and go to state 18
    VECTORES        shift and go to state 19
    NUMERAL         shift and go to state 20

    internos                       shift and go to state 80
    description                    shift and go to state 81
    argumments                     shift and go to state 82
    body                           shift and go to state 83
    instrucciones                  shift and go to state 85
    asignacion                     shift and go to state 2
    impresion                      shift and go to state 3
    operacion_aritmetica1          shift and go to state 4
    condicional                    shift and go to state 5
    vectores                       shift and go to state 6
    conjuntos                      shift and go to state 7
    defn                           shift and go to state 8
    operacionesLogicas             shift and go to state 9
    sentenciaLoopRecur             shift and go to state 10
    cond_                          shift and go to state 11
    cond_else                      shift and go to state 12
    doseq                          shift and go to state 13
    case_expression                shift and go to state 14
    lista                          shift and go to state 15
    sentencia_booleana             shift and go to state 16
    definition                     shift and go to state 17

state 59

    (64) defn -> LPAREN DEFFUNCION INCREASE . LCOR VARIABLE RCOR operacionesLogicas RPAREN

    LCOR            shift and go to state 86


state 60

    (58) operacionesLogicas -> LPAREN IF LPAREN . MENORQUE VARIABLE ENTERO RPAREN LPAREN RECUR LPAREN INC LPAREN VARIABLE RPAREN RPAREN VARIABLE RPAREN RPAREN

    MENORQUE        shift and go to state 87


state 61

    (70) sentenciaLoopRecur -> LPAREN LOOP LCOR . VARIABLE ENTERO RCOR operacionesLogicas RPAREN

    VARIABLE        shift and go to state 88


state 62

    (34) sentencia_booleana -> LPAREN . operador_comparadores dato dato RPAREN
    (26) operador_comparadores -> . COMPARA_IGUAL
    (27) operador_comparadores -> . MENORQUE
    (28) operador_comparadores -> . MAYORQUE
    (29) operador_comparadores -> . MAYORIGUALQUE
    (30) operador_comparadores -> . MENORIGUALQUE
    (31) operador_comparadores -> . DIFERENTE

    COMPARA_IGUAL   shift and go to state 38
    MENORQUE        shift and go to state 27
    MAYORQUE        shift and go to state 39
    MAYORIGUALQUE   shift and go to state 40
    MENORIGUALQUE   shift and go to state 41
    DIFERENTE       shift and go to state 42

    operador_comparadores          shift and go to state 33

state 63

    (36) cond_ -> LPAREN COND linecondition . linecondition RPAREN
    (37) cond_else -> LPAREN COND linecondition . linecondition DOSPUNTOS ELSE impresion RPAREN
    (35) linecondition -> . sentencia_booleana impresion
    (34) sentencia_booleana -> . LPAREN operador_comparadores dato dato RPAREN

    LPAREN          shift and go to state 62

    linecondition                  shift and go to state 89
    sentencia_booleana             shift and go to state 64

state 64

    (35) linecondition -> sentencia_booleana . impresion
    (52) impresion -> . LPAREN IMPRIMIR dato RPAREN

    LPAREN          shift and go to state 91

    impresion                      shift and go to state 90

state 65

    (62) doseq -> LPAREN DOSEQ LCOR . VARIABLE LPAREN RANGE VARIABLE RPAREN RCOR LPAREN impresion RPAREN RPAREN

    VARIABLE        shift and go to state 92


state 66

    (39) case_expression -> LPAREN CASE dato . case case impresion RPAREN
    (38) case -> . dato impresion
    (17) dato -> . STRING
    (18) dato -> . CHAR
    (19) dato -> . ENTERO
    (20) dato -> . FLOTANTE
    (21) dato -> . BOOLEAN
    (22) dato -> . VARIABLE

    STRING          shift and go to state 47
    CHAR            shift and go to state 48
    ENTERO          shift and go to state 49
    FLOTANTE        shift and go to state 50
    BOOLEAN         shift and go to state 51
    VARIABLE        shift and go to state 52

    dato                           shift and go to state 93
    case                           shift and go to state 94

state 67

    (40) lista -> LPAREN LIST dato . dato RPAREN
    (17) dato -> . STRING
    (18) dato -> . CHAR
    (19) dato -> . ENTERO
    (20) dato -> . FLOTANTE
    (21) dato -> . BOOLEAN
    (22) dato -> . VARIABLE

    STRING          shift and go to state 47
    CHAR            shift and go to state 48
    ENTERO          shift and go to state 49
    FLOTANTE        shift and go to state 50
    BOOLEAN         shift and go to state 51
    VARIABLE        shift and go to state 52

    dato                           shift and go to state 95

state 68

    (34) sentencia_booleana -> LPAREN operador_comparadores dato . dato RPAREN
    (17) dato -> . STRING
    (18) dato -> . CHAR
    (19) dato -> . ENTERO
    (20) dato -> . FLOTANTE
    (21) dato -> . BOOLEAN
    (22) dato -> . VARIABLE

    STRING          shift and go to state 47
    CHAR            shift and go to state 48
    ENTERO          shift and go to state 49
    FLOTANTE        shift and go to state 50
    BOOLEAN         shift and go to state 51
    VARIABLE        shift and go to state 52

    dato                           shift and go to state 96

state 69

    (67) conjuntos -> NUMERAL L_LLAVE expresionConjuntoEnteros . R_LLAVE

    R_LLAVE         shift and go to state 97


state 70

    (68) conjuntos -> NUMERAL L_LLAVE expresionConjuntoDouble . R_LLAVE

    R_LLAVE         shift and go to state 98


state 71

    (69) conjuntos -> NUMERAL L_LLAVE expresionConjuntoString . R_LLAVE

    R_LLAVE         shift and go to state 99


state 72

    (71) expresionConjuntoEnteros -> ENTERO .
    (72) expresionConjuntoEnteros -> ENTERO . expresionConjuntoEnteros
    (71) expresionConjuntoEnteros -> . ENTERO
    (72) expresionConjuntoEnteros -> . ENTERO expresionConjuntoEnteros

    R_LLAVE         reduce using rule 71 (expresionConjuntoEnteros -> ENTERO .)
    ENTERO          shift and go to state 72

    expresionConjuntoEnteros       shift and go to state 100

state 73

    (73) expresionConjuntoDouble -> FLOTANTE .
    (74) expresionConjuntoDouble -> FLOTANTE . expresionConjuntoDouble
    (73) expresionConjuntoDouble -> . FLOTANTE
    (74) expresionConjuntoDouble -> . FLOTANTE expresionConjuntoDouble

    R_LLAVE         reduce using rule 73 (expresionConjuntoDouble -> FLOTANTE .)
    FLOTANTE        shift and go to state 73

    expresionConjuntoDouble        shift and go to state 101

state 74

    (75) expresionConjuntoString -> STRING .
    (76) expresionConjuntoString -> STRING . expresionConjuntoString
    (75) expresionConjuntoString -> . STRING
    (76) expresionConjuntoString -> . STRING expresionConjuntoString

    R_LLAVE         reduce using rule 75 (expresionConjuntoString -> STRING .)
    STRING          shift and go to state 74

    expresionConjuntoString        shift and go to state 102

state 75

    (32) asignacion -> LPAREN DEFICION VARIABLE dato . RPAREN

    RPAREN          shift and go to state 103


state 76

    (33) asignacion -> LPAREN LET LCOR VARIABLE . dato RCOR RPAREN
    (17) dato -> . STRING
    (18) dato -> . CHAR
    (19) dato -> . ENTERO
    (20) dato -> . FLOTANTE
    (21) dato -> . BOOLEAN
    (22) dato -> . VARIABLE

    STRING          shift and go to state 47
    CHAR            shift and go to state 48
    ENTERO          shift and go to state 49
    FLOTANTE        shift and go to state 50
    BOOLEAN         shift and go to state 51
    VARIABLE        shift and go to state 52

    dato                           shift and go to state 104

state 77

    (52) impresion -> LPAREN IMPRIMIR dato RPAREN .

    $end            reduce using rule 52 (impresion -> LPAREN IMPRIMIR dato RPAREN .)
    LPAREN          reduce using rule 52 (impresion -> LPAREN IMPRIMIR dato RPAREN .)
    RPAREN          reduce using rule 52 (impresion -> LPAREN IMPRIMIR dato RPAREN .)
    DOSPUNTOS       reduce using rule 52 (impresion -> LPAREN IMPRIMIR dato RPAREN .)
    STRING          reduce using rule 52 (impresion -> LPAREN IMPRIMIR dato RPAREN .)
    CHAR            reduce using rule 52 (impresion -> LPAREN IMPRIMIR dato RPAREN .)
    ENTERO          reduce using rule 52 (impresion -> LPAREN IMPRIMIR dato RPAREN .)
    FLOTANTE        reduce using rule 52 (impresion -> LPAREN IMPRIMIR dato RPAREN .)
    BOOLEAN         reduce using rule 52 (impresion -> LPAREN IMPRIMIR dato RPAREN .)
    VARIABLE        reduce using rule 52 (impresion -> LPAREN IMPRIMIR dato RPAREN .)


state 78

    (59) operacion_aritmetica1 -> LPAREN operacion valor valor . RPAREN
    (60) condicional -> LPAREN operacion valor valor . RPAREN

    RPAREN          shift and go to state 105


state 79

    (63) defn -> LPAREN DEFFUNCION VARIABLE LCOR . VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN
    (42) argumments -> LCOR . dato dato dato RCOR
    (43) argumments -> LCOR . dato dato RCOR
    (44) argumments -> LCOR . dato RCOR
    (17) dato -> . STRING
    (18) dato -> . CHAR
    (19) dato -> . ENTERO
    (20) dato -> . FLOTANTE
    (21) dato -> . BOOLEAN
    (22) dato -> . VARIABLE

    VARIABLE        shift and go to state 106
    STRING          shift and go to state 47
    CHAR            shift and go to state 48
    ENTERO          shift and go to state 49
    FLOTANTE        shift and go to state 50
    BOOLEAN         shift and go to state 51

    dato                           shift and go to state 107

state 80

    (51) definition -> LPAREN DEFFUNCION VARIABLE internos .

    $end            reduce using rule 51 (definition -> LPAREN DEFFUNCION VARIABLE internos .)


state 81

    (46) internos -> description .
    (50) internos -> description . argumments body
    (42) argumments -> . LCOR dato dato dato RCOR
    (43) argumments -> . LCOR dato dato RCOR
    (44) argumments -> . LCOR dato RCOR

    $end            reduce using rule 46 (internos -> description .)
    LCOR            shift and go to state 109

    argumments                     shift and go to state 108

state 82

    (47) internos -> argumments .
    (49) internos -> argumments . body
    (45) body -> . instrucciones
    (1) instrucciones -> . asignacion
    (2) instrucciones -> . impresion
    (3) instrucciones -> . operacion_aritmetica1
    (4) instrucciones -> . condicional
    (5) instrucciones -> . vectores
    (6) instrucciones -> . conjuntos
    (7) instrucciones -> . defn
    (8) instrucciones -> . operacionesLogicas
    (9) instrucciones -> . sentenciaLoopRecur
    (10) instrucciones -> . cond_
    (11) instrucciones -> . cond_else
    (12) instrucciones -> . doseq
    (13) instrucciones -> . case_expression
    (14) instrucciones -> . lista
    (15) instrucciones -> . sentencia_booleana
    (16) instrucciones -> . definition
    (32) asignacion -> . LPAREN DEFICION VARIABLE dato RPAREN
    (33) asignacion -> . LPAREN LET LCOR VARIABLE dato RCOR RPAREN
    (52) impresion -> . LPAREN IMPRIMIR dato RPAREN
    (59) operacion_aritmetica1 -> . LPAREN operacion valor valor RPAREN
    (60) condicional -> . LPAREN operacion valor valor RPAREN
    (61) vectores -> . VECTORES
    (67) conjuntos -> . NUMERAL L_LLAVE expresionConjuntoEnteros R_LLAVE
    (68) conjuntos -> . NUMERAL L_LLAVE expresionConjuntoDouble R_LLAVE
    (69) conjuntos -> . NUMERAL L_LLAVE expresionConjuntoString R_LLAVE
    (63) defn -> . LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN
    (64) defn -> . LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN
    (58) operacionesLogicas -> . LPAREN IF LPAREN MENORQUE VARIABLE ENTERO RPAREN LPAREN RECUR LPAREN INC LPAREN VARIABLE RPAREN RPAREN VARIABLE RPAREN RPAREN
    (70) sentenciaLoopRecur -> . LPAREN LOOP LCOR VARIABLE ENTERO RCOR operacionesLogicas RPAREN
    (36) cond_ -> . LPAREN COND linecondition linecondition RPAREN
    (37) cond_else -> . LPAREN COND linecondition linecondition DOSPUNTOS ELSE impresion RPAREN
    (62) doseq -> . LPAREN DOSEQ LCOR VARIABLE LPAREN RANGE VARIABLE RPAREN RCOR LPAREN impresion RPAREN RPAREN
    (39) case_expression -> . LPAREN CASE dato case case impresion RPAREN
    (40) lista -> . LPAREN LIST dato dato RPAREN
    (34) sentencia_booleana -> . LPAREN operador_comparadores dato dato RPAREN
    (51) definition -> . LPAREN DEFFUNCION VARIABLE internos

    $end            reduce using rule 47 (internos -> argumments .)
    LPAREN          shift and go to state 18
    VECTORES        shift and go to state 19
    NUMERAL         shift and go to state 20

    body                           shift and go to state 110
    instrucciones                  shift and go to state 85
    asignacion                     shift and go to state 2
    impresion                      shift and go to state 3
    operacion_aritmetica1          shift and go to state 4
    condicional                    shift and go to state 5
    vectores                       shift and go to state 6
    conjuntos                      shift and go to state 7
    defn                           shift and go to state 8
    operacionesLogicas             shift and go to state 9
    sentenciaLoopRecur             shift and go to state 10
    cond_                          shift and go to state 11
    cond_else                      shift and go to state 12
    doseq                          shift and go to state 13
    case_expression                shift and go to state 14
    lista                          shift and go to state 15
    sentencia_booleana             shift and go to state 16
    definition                     shift and go to state 17

state 83

    (48) internos -> body .

    $end            reduce using rule 48 (internos -> body .)


state 84

    (41) description -> STRING .

    LCOR            reduce using rule 41 (description -> STRING .)
    $end            reduce using rule 41 (description -> STRING .)


state 85

    (45) body -> instrucciones .

    $end            reduce using rule 45 (body -> instrucciones .)


state 86

    (64) defn -> LPAREN DEFFUNCION INCREASE LCOR . VARIABLE RCOR operacionesLogicas RPAREN

    VARIABLE        shift and go to state 111


state 87

    (58) operacionesLogicas -> LPAREN IF LPAREN MENORQUE . VARIABLE ENTERO RPAREN LPAREN RECUR LPAREN INC LPAREN VARIABLE RPAREN RPAREN VARIABLE RPAREN RPAREN

    VARIABLE        shift and go to state 112


state 88

    (70) sentenciaLoopRecur -> LPAREN LOOP LCOR VARIABLE . ENTERO RCOR operacionesLogicas RPAREN

    ENTERO          shift and go to state 113


state 89

    (36) cond_ -> LPAREN COND linecondition linecondition . RPAREN
    (37) cond_else -> LPAREN COND linecondition linecondition . DOSPUNTOS ELSE impresion RPAREN

    RPAREN          shift and go to state 114
    DOSPUNTOS       shift and go to state 115


state 90

    (35) linecondition -> sentencia_booleana impresion .

    LPAREN          reduce using rule 35 (linecondition -> sentencia_booleana impresion .)
    RPAREN          reduce using rule 35 (linecondition -> sentencia_booleana impresion .)
    DOSPUNTOS       reduce using rule 35 (linecondition -> sentencia_booleana impresion .)


state 91

    (52) impresion -> LPAREN . IMPRIMIR dato RPAREN

    IMPRIMIR        shift and go to state 23


state 92

    (62) doseq -> LPAREN DOSEQ LCOR VARIABLE . LPAREN RANGE VARIABLE RPAREN RCOR LPAREN impresion RPAREN RPAREN

    LPAREN          shift and go to state 116


state 93

    (38) case -> dato . impresion
    (52) impresion -> . LPAREN IMPRIMIR dato RPAREN

    LPAREN          shift and go to state 91

    impresion                      shift and go to state 117

state 94

    (39) case_expression -> LPAREN CASE dato case . case impresion RPAREN
    (38) case -> . dato impresion
    (17) dato -> . STRING
    (18) dato -> . CHAR
    (19) dato -> . ENTERO
    (20) dato -> . FLOTANTE
    (21) dato -> . BOOLEAN
    (22) dato -> . VARIABLE

    STRING          shift and go to state 47
    CHAR            shift and go to state 48
    ENTERO          shift and go to state 49
    FLOTANTE        shift and go to state 50
    BOOLEAN         shift and go to state 51
    VARIABLE        shift and go to state 52

    dato                           shift and go to state 93
    case                           shift and go to state 118

state 95

    (40) lista -> LPAREN LIST dato dato . RPAREN

    RPAREN          shift and go to state 119


state 96

    (34) sentencia_booleana -> LPAREN operador_comparadores dato dato . RPAREN

    RPAREN          shift and go to state 120


state 97

    (67) conjuntos -> NUMERAL L_LLAVE expresionConjuntoEnteros R_LLAVE .

    $end            reduce using rule 67 (conjuntos -> NUMERAL L_LLAVE expresionConjuntoEnteros R_LLAVE .)


state 98

    (68) conjuntos -> NUMERAL L_LLAVE expresionConjuntoDouble R_LLAVE .

    $end            reduce using rule 68 (conjuntos -> NUMERAL L_LLAVE expresionConjuntoDouble R_LLAVE .)


state 99

    (69) conjuntos -> NUMERAL L_LLAVE expresionConjuntoString R_LLAVE .

    $end            reduce using rule 69 (conjuntos -> NUMERAL L_LLAVE expresionConjuntoString R_LLAVE .)


state 100

    (72) expresionConjuntoEnteros -> ENTERO expresionConjuntoEnteros .

    R_LLAVE         reduce using rule 72 (expresionConjuntoEnteros -> ENTERO expresionConjuntoEnteros .)


state 101

    (74) expresionConjuntoDouble -> FLOTANTE expresionConjuntoDouble .

    R_LLAVE         reduce using rule 74 (expresionConjuntoDouble -> FLOTANTE expresionConjuntoDouble .)


state 102

    (76) expresionConjuntoString -> STRING expresionConjuntoString .

    R_LLAVE         reduce using rule 76 (expresionConjuntoString -> STRING expresionConjuntoString .)


state 103

    (32) asignacion -> LPAREN DEFICION VARIABLE dato RPAREN .

    $end            reduce using rule 32 (asignacion -> LPAREN DEFICION VARIABLE dato RPAREN .)


state 104

    (33) asignacion -> LPAREN LET LCOR VARIABLE dato . RCOR RPAREN

    RCOR            shift and go to state 121


state 105

    (59) operacion_aritmetica1 -> LPAREN operacion valor valor RPAREN .
    (60) condicional -> LPAREN operacion valor valor RPAREN .

  ! reduce/reduce conflict for $end resolved using rule 59 (operacion_aritmetica1 -> LPAREN operacion valor valor RPAREN .)
    $end            reduce using rule 59 (operacion_aritmetica1 -> LPAREN operacion valor valor RPAREN .)

  ! $end            [ reduce using rule 60 (condicional -> LPAREN operacion valor valor RPAREN .) ]


state 106

    (63) defn -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE . RCOR LPAREN expresionDefnElse RPAREN RPAREN
    (22) dato -> VARIABLE .

  ! shift/reduce conflict for RCOR resolved as shift
    RCOR            shift and go to state 122
    STRING          reduce using rule 22 (dato -> VARIABLE .)
    CHAR            reduce using rule 22 (dato -> VARIABLE .)
    ENTERO          reduce using rule 22 (dato -> VARIABLE .)
    FLOTANTE        reduce using rule 22 (dato -> VARIABLE .)
    BOOLEAN         reduce using rule 22 (dato -> VARIABLE .)
    VARIABLE        reduce using rule 22 (dato -> VARIABLE .)

  ! RCOR            [ reduce using rule 22 (dato -> VARIABLE .) ]


state 107

    (42) argumments -> LCOR dato . dato dato RCOR
    (43) argumments -> LCOR dato . dato RCOR
    (44) argumments -> LCOR dato . RCOR
    (17) dato -> . STRING
    (18) dato -> . CHAR
    (19) dato -> . ENTERO
    (20) dato -> . FLOTANTE
    (21) dato -> . BOOLEAN
    (22) dato -> . VARIABLE

    RCOR            shift and go to state 124
    STRING          shift and go to state 47
    CHAR            shift and go to state 48
    ENTERO          shift and go to state 49
    FLOTANTE        shift and go to state 50
    BOOLEAN         shift and go to state 51
    VARIABLE        shift and go to state 52

    dato                           shift and go to state 123

state 108

    (50) internos -> description argumments . body
    (45) body -> . instrucciones
    (1) instrucciones -> . asignacion
    (2) instrucciones -> . impresion
    (3) instrucciones -> . operacion_aritmetica1
    (4) instrucciones -> . condicional
    (5) instrucciones -> . vectores
    (6) instrucciones -> . conjuntos
    (7) instrucciones -> . defn
    (8) instrucciones -> . operacionesLogicas
    (9) instrucciones -> . sentenciaLoopRecur
    (10) instrucciones -> . cond_
    (11) instrucciones -> . cond_else
    (12) instrucciones -> . doseq
    (13) instrucciones -> . case_expression
    (14) instrucciones -> . lista
    (15) instrucciones -> . sentencia_booleana
    (16) instrucciones -> . definition
    (32) asignacion -> . LPAREN DEFICION VARIABLE dato RPAREN
    (33) asignacion -> . LPAREN LET LCOR VARIABLE dato RCOR RPAREN
    (52) impresion -> . LPAREN IMPRIMIR dato RPAREN
    (59) operacion_aritmetica1 -> . LPAREN operacion valor valor RPAREN
    (60) condicional -> . LPAREN operacion valor valor RPAREN
    (61) vectores -> . VECTORES
    (67) conjuntos -> . NUMERAL L_LLAVE expresionConjuntoEnteros R_LLAVE
    (68) conjuntos -> . NUMERAL L_LLAVE expresionConjuntoDouble R_LLAVE
    (69) conjuntos -> . NUMERAL L_LLAVE expresionConjuntoString R_LLAVE
    (63) defn -> . LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN
    (64) defn -> . LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN
    (58) operacionesLogicas -> . LPAREN IF LPAREN MENORQUE VARIABLE ENTERO RPAREN LPAREN RECUR LPAREN INC LPAREN VARIABLE RPAREN RPAREN VARIABLE RPAREN RPAREN
    (70) sentenciaLoopRecur -> . LPAREN LOOP LCOR VARIABLE ENTERO RCOR operacionesLogicas RPAREN
    (36) cond_ -> . LPAREN COND linecondition linecondition RPAREN
    (37) cond_else -> . LPAREN COND linecondition linecondition DOSPUNTOS ELSE impresion RPAREN
    (62) doseq -> . LPAREN DOSEQ LCOR VARIABLE LPAREN RANGE VARIABLE RPAREN RCOR LPAREN impresion RPAREN RPAREN
    (39) case_expression -> . LPAREN CASE dato case case impresion RPAREN
    (40) lista -> . LPAREN LIST dato dato RPAREN
    (34) sentencia_booleana -> . LPAREN operador_comparadores dato dato RPAREN
    (51) definition -> . LPAREN DEFFUNCION VARIABLE internos

    LPAREN          shift and go to state 18
    VECTORES        shift and go to state 19
    NUMERAL         shift and go to state 20

    body                           shift and go to state 125
    instrucciones                  shift and go to state 85
    asignacion                     shift and go to state 2
    impresion                      shift and go to state 3
    operacion_aritmetica1          shift and go to state 4
    condicional                    shift and go to state 5
    vectores                       shift and go to state 6
    conjuntos                      shift and go to state 7
    defn                           shift and go to state 8
    operacionesLogicas             shift and go to state 9
    sentenciaLoopRecur             shift and go to state 10
    cond_                          shift and go to state 11
    cond_else                      shift and go to state 12
    doseq                          shift and go to state 13
    case_expression                shift and go to state 14
    lista                          shift and go to state 15
    sentencia_booleana             shift and go to state 16
    definition                     shift and go to state 17

state 109

    (42) argumments -> LCOR . dato dato dato RCOR
    (43) argumments -> LCOR . dato dato RCOR
    (44) argumments -> LCOR . dato RCOR
    (17) dato -> . STRING
    (18) dato -> . CHAR
    (19) dato -> . ENTERO
    (20) dato -> . FLOTANTE
    (21) dato -> . BOOLEAN
    (22) dato -> . VARIABLE

    STRING          shift and go to state 47
    CHAR            shift and go to state 48
    ENTERO          shift and go to state 49
    FLOTANTE        shift and go to state 50
    BOOLEAN         shift and go to state 51
    VARIABLE        shift and go to state 52

    dato                           shift and go to state 107

state 110

    (49) internos -> argumments body .

    $end            reduce using rule 49 (internos -> argumments body .)


state 111

    (64) defn -> LPAREN DEFFUNCION INCREASE LCOR VARIABLE . RCOR operacionesLogicas RPAREN

    RCOR            shift and go to state 126


state 112

    (58) operacionesLogicas -> LPAREN IF LPAREN MENORQUE VARIABLE . ENTERO RPAREN LPAREN RECUR LPAREN INC LPAREN VARIABLE RPAREN RPAREN VARIABLE RPAREN RPAREN

    ENTERO          shift and go to state 127


state 113

    (70) sentenciaLoopRecur -> LPAREN LOOP LCOR VARIABLE ENTERO . RCOR operacionesLogicas RPAREN

    RCOR            shift and go to state 128


state 114

    (36) cond_ -> LPAREN COND linecondition linecondition RPAREN .

    $end            reduce using rule 36 (cond_ -> LPAREN COND linecondition linecondition RPAREN .)


state 115

    (37) cond_else -> LPAREN COND linecondition linecondition DOSPUNTOS . ELSE impresion RPAREN

    ELSE            shift and go to state 129


state 116

    (62) doseq -> LPAREN DOSEQ LCOR VARIABLE LPAREN . RANGE VARIABLE RPAREN RCOR LPAREN impresion RPAREN RPAREN

    RANGE           shift and go to state 130


state 117

    (38) case -> dato impresion .

    STRING          reduce using rule 38 (case -> dato impresion .)
    CHAR            reduce using rule 38 (case -> dato impresion .)
    ENTERO          reduce using rule 38 (case -> dato impresion .)
    FLOTANTE        reduce using rule 38 (case -> dato impresion .)
    BOOLEAN         reduce using rule 38 (case -> dato impresion .)
    VARIABLE        reduce using rule 38 (case -> dato impresion .)
    LPAREN          reduce using rule 38 (case -> dato impresion .)


state 118

    (39) case_expression -> LPAREN CASE dato case case . impresion RPAREN
    (52) impresion -> . LPAREN IMPRIMIR dato RPAREN

    LPAREN          shift and go to state 91

    impresion                      shift and go to state 131

state 119

    (40) lista -> LPAREN LIST dato dato RPAREN .

    $end            reduce using rule 40 (lista -> LPAREN LIST dato dato RPAREN .)


state 120

    (34) sentencia_booleana -> LPAREN operador_comparadores dato dato RPAREN .

    $end            reduce using rule 34 (sentencia_booleana -> LPAREN operador_comparadores dato dato RPAREN .)
    LPAREN          reduce using rule 34 (sentencia_booleana -> LPAREN operador_comparadores dato dato RPAREN .)


state 121

    (33) asignacion -> LPAREN LET LCOR VARIABLE dato RCOR . RPAREN

    RPAREN          shift and go to state 132


state 122

    (63) defn -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR . LPAREN expresionDefnElse RPAREN RPAREN

    LPAREN          shift and go to state 133


state 123

    (42) argumments -> LCOR dato dato . dato RCOR
    (43) argumments -> LCOR dato dato . RCOR
    (17) dato -> . STRING
    (18) dato -> . CHAR
    (19) dato -> . ENTERO
    (20) dato -> . FLOTANTE
    (21) dato -> . BOOLEAN
    (22) dato -> . VARIABLE

    RCOR            shift and go to state 135
    STRING          shift and go to state 47
    CHAR            shift and go to state 48
    ENTERO          shift and go to state 49
    FLOTANTE        shift and go to state 50
    BOOLEAN         shift and go to state 51
    VARIABLE        shift and go to state 52

    dato                           shift and go to state 134

state 124

    (44) argumments -> LCOR dato RCOR .

    LPAREN          reduce using rule 44 (argumments -> LCOR dato RCOR .)
    VECTORES        reduce using rule 44 (argumments -> LCOR dato RCOR .)
    NUMERAL         reduce using rule 44 (argumments -> LCOR dato RCOR .)
    $end            reduce using rule 44 (argumments -> LCOR dato RCOR .)


state 125

    (50) internos -> description argumments body .

    $end            reduce using rule 50 (internos -> description argumments body .)


state 126

    (64) defn -> LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR . operacionesLogicas RPAREN
    (58) operacionesLogicas -> . LPAREN IF LPAREN MENORQUE VARIABLE ENTERO RPAREN LPAREN RECUR LPAREN INC LPAREN VARIABLE RPAREN RPAREN VARIABLE RPAREN RPAREN

    LPAREN          shift and go to state 136

    operacionesLogicas             shift and go to state 137

state 127

    (58) operacionesLogicas -> LPAREN IF LPAREN MENORQUE VARIABLE ENTERO . RPAREN LPAREN RECUR LPAREN INC LPAREN VARIABLE RPAREN RPAREN VARIABLE RPAREN RPAREN

    RPAREN          shift and go to state 138


state 128

    (70) sentenciaLoopRecur -> LPAREN LOOP LCOR VARIABLE ENTERO RCOR . operacionesLogicas RPAREN
    (58) operacionesLogicas -> . LPAREN IF LPAREN MENORQUE VARIABLE ENTERO RPAREN LPAREN RECUR LPAREN INC LPAREN VARIABLE RPAREN RPAREN VARIABLE RPAREN RPAREN

    LPAREN          shift and go to state 136

    operacionesLogicas             shift and go to state 139

state 129

    (37) cond_else -> LPAREN COND linecondition linecondition DOSPUNTOS ELSE . impresion RPAREN
    (52) impresion -> . LPAREN IMPRIMIR dato RPAREN

    LPAREN          shift and go to state 91

    impresion                      shift and go to state 140

state 130

    (62) doseq -> LPAREN DOSEQ LCOR VARIABLE LPAREN RANGE . VARIABLE RPAREN RCOR LPAREN impresion RPAREN RPAREN

    VARIABLE        shift and go to state 141


state 131

    (39) case_expression -> LPAREN CASE dato case case impresion . RPAREN

    RPAREN          shift and go to state 142


state 132

    (33) asignacion -> LPAREN LET LCOR VARIABLE dato RCOR RPAREN .

    $end            reduce using rule 33 (asignacion -> LPAREN LET LCOR VARIABLE dato RCOR RPAREN .)


state 133

    (63) defn -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN . expresionDefnElse RPAREN RPAREN
    (65) expresionDefnElse -> . CASE VARIABLE expresionCase DOSPUNTOS ELSE STRING

    CASE            shift and go to state 144

    expresionDefnElse              shift and go to state 143

state 134

    (42) argumments -> LCOR dato dato dato . RCOR

    RCOR            shift and go to state 145


state 135

    (43) argumments -> LCOR dato dato RCOR .

    LPAREN          reduce using rule 43 (argumments -> LCOR dato dato RCOR .)
    VECTORES        reduce using rule 43 (argumments -> LCOR dato dato RCOR .)
    NUMERAL         reduce using rule 43 (argumments -> LCOR dato dato RCOR .)
    $end            reduce using rule 43 (argumments -> LCOR dato dato RCOR .)


state 136

    (58) operacionesLogicas -> LPAREN . IF LPAREN MENORQUE VARIABLE ENTERO RPAREN LPAREN RECUR LPAREN INC LPAREN VARIABLE RPAREN RPAREN VARIABLE RPAREN RPAREN

    IF              shift and go to state 26


state 137

    (64) defn -> LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas . RPAREN

    RPAREN          shift and go to state 146


state 138

    (58) operacionesLogicas -> LPAREN IF LPAREN MENORQUE VARIABLE ENTERO RPAREN . LPAREN RECUR LPAREN INC LPAREN VARIABLE RPAREN RPAREN VARIABLE RPAREN RPAREN

    LPAREN          shift and go to state 147


state 139

    (70) sentenciaLoopRecur -> LPAREN LOOP LCOR VARIABLE ENTERO RCOR operacionesLogicas . RPAREN

    RPAREN          shift and go to state 148


state 140

    (37) cond_else -> LPAREN COND linecondition linecondition DOSPUNTOS ELSE impresion . RPAREN

    RPAREN          shift and go to state 149


state 141

    (62) doseq -> LPAREN DOSEQ LCOR VARIABLE LPAREN RANGE VARIABLE . RPAREN RCOR LPAREN impresion RPAREN RPAREN

    RPAREN          shift and go to state 150


state 142

    (39) case_expression -> LPAREN CASE dato case case impresion RPAREN .

    $end            reduce using rule 39 (case_expression -> LPAREN CASE dato case case impresion RPAREN .)


state 143

    (63) defn -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse . RPAREN RPAREN

    RPAREN          shift and go to state 151


state 144

    (65) expresionDefnElse -> CASE . VARIABLE expresionCase DOSPUNTOS ELSE STRING

    VARIABLE        shift and go to state 152


state 145

    (42) argumments -> LCOR dato dato dato RCOR .

    LPAREN          reduce using rule 42 (argumments -> LCOR dato dato dato RCOR .)
    VECTORES        reduce using rule 42 (argumments -> LCOR dato dato dato RCOR .)
    NUMERAL         reduce using rule 42 (argumments -> LCOR dato dato dato RCOR .)
    $end            reduce using rule 42 (argumments -> LCOR dato dato dato RCOR .)


state 146

    (64) defn -> LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN .

    $end            reduce using rule 64 (defn -> LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN .)


state 147

    (58) operacionesLogicas -> LPAREN IF LPAREN MENORQUE VARIABLE ENTERO RPAREN LPAREN . RECUR LPAREN INC LPAREN VARIABLE RPAREN RPAREN VARIABLE RPAREN RPAREN

    RECUR           shift and go to state 153


state 148

    (70) sentenciaLoopRecur -> LPAREN LOOP LCOR VARIABLE ENTERO RCOR operacionesLogicas RPAREN .

    $end            reduce using rule 70 (sentenciaLoopRecur -> LPAREN LOOP LCOR VARIABLE ENTERO RCOR operacionesLogicas RPAREN .)


state 149

    (37) cond_else -> LPAREN COND linecondition linecondition DOSPUNTOS ELSE impresion RPAREN .

    $end            reduce using rule 37 (cond_else -> LPAREN COND linecondition linecondition DOSPUNTOS ELSE impresion RPAREN .)


state 150

    (62) doseq -> LPAREN DOSEQ LCOR VARIABLE LPAREN RANGE VARIABLE RPAREN . RCOR LPAREN impresion RPAREN RPAREN

    RCOR            shift and go to state 154


state 151

    (63) defn -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN . RPAREN

    RPAREN          shift and go to state 155


state 152

    (65) expresionDefnElse -> CASE VARIABLE . expresionCase DOSPUNTOS ELSE STRING
    (66) expresionCase -> . dato STRING
    (17) dato -> . STRING
    (18) dato -> . CHAR
    (19) dato -> . ENTERO
    (20) dato -> . FLOTANTE
    (21) dato -> . BOOLEAN
    (22) dato -> . VARIABLE

    STRING          shift and go to state 47
    CHAR            shift and go to state 48
    ENTERO          shift and go to state 49
    FLOTANTE        shift and go to state 50
    BOOLEAN         shift and go to state 51
    VARIABLE        shift and go to state 52

    expresionCase                  shift and go to state 156
    dato                           shift and go to state 157

state 153

    (58) operacionesLogicas -> LPAREN IF LPAREN MENORQUE VARIABLE ENTERO RPAREN LPAREN RECUR . LPAREN INC LPAREN VARIABLE RPAREN RPAREN VARIABLE RPAREN RPAREN

    LPAREN          shift and go to state 158


state 154

    (62) doseq -> LPAREN DOSEQ LCOR VARIABLE LPAREN RANGE VARIABLE RPAREN RCOR . LPAREN impresion RPAREN RPAREN

    LPAREN          shift and go to state 159


state 155

    (63) defn -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN .

    $end            reduce using rule 63 (defn -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN .)


state 156

    (65) expresionDefnElse -> CASE VARIABLE expresionCase . DOSPUNTOS ELSE STRING

    DOSPUNTOS       shift and go to state 160


state 157

    (66) expresionCase -> dato . STRING

    STRING          shift and go to state 161


state 158

    (58) operacionesLogicas -> LPAREN IF LPAREN MENORQUE VARIABLE ENTERO RPAREN LPAREN RECUR LPAREN . INC LPAREN VARIABLE RPAREN RPAREN VARIABLE RPAREN RPAREN

    INC             shift and go to state 162


state 159

    (62) doseq -> LPAREN DOSEQ LCOR VARIABLE LPAREN RANGE VARIABLE RPAREN RCOR LPAREN . impresion RPAREN RPAREN
    (52) impresion -> . LPAREN IMPRIMIR dato RPAREN

    LPAREN          shift and go to state 91

    impresion                      shift and go to state 163

state 160

    (65) expresionDefnElse -> CASE VARIABLE expresionCase DOSPUNTOS . ELSE STRING

    ELSE            shift and go to state 164


state 161

    (66) expresionCase -> dato STRING .

    DOSPUNTOS       reduce using rule 66 (expresionCase -> dato STRING .)


state 162

    (58) operacionesLogicas -> LPAREN IF LPAREN MENORQUE VARIABLE ENTERO RPAREN LPAREN RECUR LPAREN INC . LPAREN VARIABLE RPAREN RPAREN VARIABLE RPAREN RPAREN

    LPAREN          shift and go to state 165


state 163

    (62) doseq -> LPAREN DOSEQ LCOR VARIABLE LPAREN RANGE VARIABLE RPAREN RCOR LPAREN impresion . RPAREN RPAREN

    RPAREN          shift and go to state 166


state 164

    (65) expresionDefnElse -> CASE VARIABLE expresionCase DOSPUNTOS ELSE . STRING

    STRING          shift and go to state 167


state 165

    (58) operacionesLogicas -> LPAREN IF LPAREN MENORQUE VARIABLE ENTERO RPAREN LPAREN RECUR LPAREN INC LPAREN . VARIABLE RPAREN RPAREN VARIABLE RPAREN RPAREN

    VARIABLE        shift and go to state 168


state 166

    (62) doseq -> LPAREN DOSEQ LCOR VARIABLE LPAREN RANGE VARIABLE RPAREN RCOR LPAREN impresion RPAREN . RPAREN

    RPAREN          shift and go to state 169


state 167

    (65) expresionDefnElse -> CASE VARIABLE expresionCase DOSPUNTOS ELSE STRING .

    RPAREN          reduce using rule 65 (expresionDefnElse -> CASE VARIABLE expresionCase DOSPUNTOS ELSE STRING .)


state 168

    (58) operacionesLogicas -> LPAREN IF LPAREN MENORQUE VARIABLE ENTERO RPAREN LPAREN RECUR LPAREN INC LPAREN VARIABLE . RPAREN RPAREN VARIABLE RPAREN RPAREN

    RPAREN          shift and go to state 170


state 169

    (62) doseq -> LPAREN DOSEQ LCOR VARIABLE LPAREN RANGE VARIABLE RPAREN RCOR LPAREN impresion RPAREN RPAREN .

    $end            reduce using rule 62 (doseq -> LPAREN DOSEQ LCOR VARIABLE LPAREN RANGE VARIABLE RPAREN RCOR LPAREN impresion RPAREN RPAREN .)


state 170

    (58) operacionesLogicas -> LPAREN IF LPAREN MENORQUE VARIABLE ENTERO RPAREN LPAREN RECUR LPAREN INC LPAREN VARIABLE RPAREN . RPAREN VARIABLE RPAREN RPAREN

    RPAREN          shift and go to state 171


state 171

    (58) operacionesLogicas -> LPAREN IF LPAREN MENORQUE VARIABLE ENTERO RPAREN LPAREN RECUR LPAREN INC LPAREN VARIABLE RPAREN RPAREN . VARIABLE RPAREN RPAREN

    VARIABLE        shift and go to state 172


state 172

    (58) operacionesLogicas -> LPAREN IF LPAREN MENORQUE VARIABLE ENTERO RPAREN LPAREN RECUR LPAREN INC LPAREN VARIABLE RPAREN RPAREN VARIABLE . RPAREN RPAREN

    RPAREN          shift and go to state 173


state 173

    (58) operacionesLogicas -> LPAREN IF LPAREN MENORQUE VARIABLE ENTERO RPAREN LPAREN RECUR LPAREN INC LPAREN VARIABLE RPAREN RPAREN VARIABLE RPAREN . RPAREN

    RPAREN          shift and go to state 174


state 174

    (58) operacionesLogicas -> LPAREN IF LPAREN MENORQUE VARIABLE ENTERO RPAREN LPAREN RECUR LPAREN INC LPAREN VARIABLE RPAREN RPAREN VARIABLE RPAREN RPAREN .

    $end            reduce using rule 58 (operacionesLogicas -> LPAREN IF LPAREN MENORQUE VARIABLE ENTERO RPAREN LPAREN RECUR LPAREN INC LPAREN VARIABLE RPAREN RPAREN VARIABLE RPAREN RPAREN .)
    RPAREN          reduce using rule 58 (operacionesLogicas -> LPAREN IF LPAREN MENORQUE VARIABLE ENTERO RPAREN LPAREN RECUR LPAREN INC LPAREN VARIABLE RPAREN RPAREN VARIABLE RPAREN RPAREN .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for RCOR in state 106 resolved as shift
WARNING: reduce/reduce conflict in state 105 resolved using rule (operacion_aritmetica1 -> LPAREN operacion valor valor RPAREN)
WARNING: rejected rule (condicional -> LPAREN operacion valor valor RPAREN) in state 105
WARNING: Rule (condicional -> LPAREN operacion valor valor RPAREN) is never reduced
