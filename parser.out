Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    CLASE
    CONJUNTOS
    FUNCION
    FUTURE
    IGUAL
    INPUT
    LISTA
    MAPA
    NOT
    NS
    NUEVO
    STR
    VECTOR

Grammar

Rule 0     S' -> instrucciones
Rule 1     instrucciones -> asignacion
Rule 2     instrucciones -> impresion
Rule 3     instrucciones -> operacion_aritmetica
Rule 4     instrucciones -> conjuntos
Rule 5     instrucciones -> vector
Rule 6     instrucciones -> mapa
Rule 7     instrucciones -> if
Rule 8     instrucciones -> do
Rule 9     instrucciones -> if_do
Rule 10    instrucciones -> when
Rule 11    instrucciones -> defn
Rule 12    instrucciones -> defn_with_return
Rule 13    instrucciones -> operacionesLogicas
Rule 14    instrucciones -> sentenciaLoopRecur
Rule 15    instrucciones -> cond_
Rule 16    instrucciones -> cond_else
Rule 17    instrucciones -> doseq
Rule 18    instrucciones -> case_expression
Rule 19    instrucciones -> lista
Rule 20    instrucciones -> sentencia_booleana
Rule 21    instrucciones -> function
Rule 22    instrucciones -> dotimes
Rule 23    instrucciones -> ciclo
Rule 24    instrucciones -> valor
Rule 25    instrucciones -> recur
Rule 26    dato -> STRING
Rule 27    dato -> CHAR
Rule 28    dato -> ENTERO
Rule 29    dato -> FLOTANTE
Rule 30    dato -> BOOLEAN
Rule 31    dato -> VARIABLE
Rule 32    valor -> ENTERO
Rule 33    valor -> FLOTANTE
Rule 34    valor -> BOOLEAN
Rule 35    operador_comparadores -> COMPARA_IGUAL
Rule 36    operador_comparadores -> MENORQUE
Rule 37    operador_comparadores -> MAYORQUE
Rule 38    operador_comparadores -> MAYORIGUALQUE
Rule 39    operador_comparadores -> MENORIGUALQUE
Rule 40    operador_comparadores -> DIFERENTE
Rule 41    operador_aritmetico -> MAS
Rule 42    operador_aritmetico -> MENOS
Rule 43    operador_aritmetico -> PRODUCTO
Rule 44    operador_aritmetico -> DIVISION
Rule 45    asignacion -> LPAREN DEFICION VARIABLE dato RPAREN
Rule 46    asignacion -> LPAREN LET LCOR VARIABLE dato RCOR RPAREN
Rule 47    sentencia_booleana -> LPAREN operador_comparadores dato dato RPAREN
Rule 48    linecondition -> sentencia_booleana impresion
Rule 49    cond_ -> LPAREN COND linecondition linecondition RPAREN
Rule 50    cond_else -> LPAREN COND linecondition linecondition DOSPUNTOS ELSE impresion RPAREN
Rule 51    case -> dato impresion
Rule 52    case -> dato STRING
Rule 53    case -> dato impresion case
Rule 54    case -> dato STRING case
Rule 55    case_expression -> LPAREN CASE dato case impresion RPAREN
Rule 56    case_expression -> LPAREN CASE dato case DOSPUNTOS ELSE STRING RPAREN
Rule 57    argumentos_lista -> dato
Rule 58    argumentos_lista -> dato argumentos_lista
Rule 59    lista -> LPAREN LIST argumentos_lista RPAREN
Rule 60    argumments -> LCOR argumentos_lista RCOR
Rule 61    body -> instrucciones
Rule 62    recur -> LPAREN RECUR LPAREN INC dato RPAREN RPAREN
Rule 63    internos -> STRING
Rule 64    internos -> argumments
Rule 65    internos -> body
Rule 66    internos -> argumments body
Rule 67    internos -> STRING argumments body
Rule 68    function -> LPAREN DEFFUNCION VARIABLE internos RPAREN
Rule 69    function -> LPAREN DEFFUNCION VARIABLE internos LPAREN if body RPAREN
Rule 70    impresion -> LPAREN IMPRIMIR dato RPAREN
Rule 71    secuencia_v -> dato
Rule 72    secuencia_v -> dato secuencia_v
Rule 73    vector -> LCOR secuencia_v RCOR
Rule 74    secuencia_mapa -> DOSPUNTOS VARIABLE dato
Rule 75    secuencia_mapa -> DOSPUNTOS VARIABLE secuencia_mapa
Rule 76    mapa -> L_LLAVE secuencia_mapa R_LLAVE
Rule 77    if -> IF sentencia_booleana
Rule 78    if -> IF sentencia_booleana recur
Rule 79    if -> LPAREN IF instrucciones body RPAREN
Rule 80    do -> LPAREN DO instrucciones RPAREN
Rule 81    if_do -> LPAREN if do RPAREN
Rule 82    when -> LPAREN WHEN sentencia_booleana body RPAREN
Rule 83    ciclo -> LCOR VARIABLE ENTERO RCOR
Rule 84    dotimes -> LPAREN DOTIMES ciclo body RPAREN
Rule 85    operacionesLogicas -> LPAREN if recur VARIABLE RPAREN RPAREN
Rule 86    operacion_aritmetica -> LPAREN operador_aritmetico dato dato RPAREN
Rule 87    doseq_args -> LCOR dato LPAREN RANGE dato RPAREN RCOR
Rule 88    doseq_args -> LCOR dato conjuntos RCOR
Rule 89    doseq_args -> LCOR dato vector dato vector RCOR
Rule 90    doseq_args -> LCOR vector conjuntos RCOR
Rule 91    doseq_prn -> PRN LPAREN dato RPAREN
Rule 92    doseq_prn -> PRN dato dato
Rule 93    doseq_prn -> PRN dato dato dato
Rule 94    doseq_prn -> PRN operacion_aritmetica
Rule 95    doseq -> LPAREN DOSEQ doseq_args impresion RPAREN
Rule 96    doseq -> LPAREN DOSEQ doseq_args LPAREN doseq_prn RPAREN RPAREN
Rule 97    defn -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN
Rule 98    defn -> LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN
Rule 99    defn_with_return -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN defn_return
Rule 100   defn_with_return -> LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN defn_return
Rule 101   expresionDefnElse -> CASE VARIABLE expresionCase DOSPUNTOS ELSE STRING
Rule 102   defn_return -> LPAREN dato dato RPAREN
Rule 103   expresionCase -> dato STRING
Rule 104   conjuntos -> NUMERAL L_LLAVE expresionConjuntoEnteros R_LLAVE
Rule 105   conjuntos -> NUMERAL L_LLAVE expresionConjuntoDouble R_LLAVE
Rule 106   conjuntos -> NUMERAL L_LLAVE expresionConjuntoString R_LLAVE
Rule 107   sentenciaLoopRecur -> LPAREN LOOP argumments LPAREN if dato RPAREN RPAREN
Rule 108   expresionConjuntoEnteros -> ENTERO
Rule 109   expresionConjuntoEnteros -> ENTERO expresionConjuntoEnteros
Rule 110   expresionConjuntoDouble -> FLOTANTE
Rule 111   expresionConjuntoDouble -> FLOTANTE expresionConjuntoDouble
Rule 112   expresionConjuntoString -> STRING
Rule 113   expresionConjuntoString -> STRING expresionConjuntoString

Terminals, with rules where they appear

BOOLEAN              : 30 34
CASE                 : 55 56 101
CHAR                 : 27
CLASE                : 
COMPARA_IGUAL        : 35
COND                 : 49 50
CONJUNTOS            : 
DEFFUNCION           : 68 69 97 98 99 100
DEFICION             : 45
DIFERENTE            : 40
DIVISION             : 44
DO                   : 80
DOSEQ                : 95 96
DOSPUNTOS            : 50 56 74 75 101
DOTIMES              : 84
ELSE                 : 50 56 101
ENTERO               : 28 32 83 108 109
FLOTANTE             : 29 33 110 111
FUNCION              : 
FUTURE               : 
IF                   : 77 78 79
IGUAL                : 
IMPRIMIR             : 70
INC                  : 62
INCREASE             : 98 100
INPUT                : 
LCOR                 : 46 60 73 83 87 88 89 90 97 98 99 100
LET                  : 46
LIST                 : 59
LISTA                : 
LOOP                 : 107
LPAREN               : 45 46 47 49 50 55 56 59 62 62 68 69 69 70 79 80 81 82 84 85 86 87 91 95 96 96 97 97 98 99 99 100 102 107 107
L_LLAVE              : 76 104 105 106
MAPA                 : 
MAS                  : 41
MAYORIGUALQUE        : 38
MAYORQUE             : 37
MENORIGUALQUE        : 39
MENORQUE             : 36
MENOS                : 42
NOT                  : 
NS                   : 
NUEVO                : 
NUMERAL              : 104 105 106
PRN                  : 91 92 93 94
PRODUCTO             : 43
RANGE                : 87
RCOR                 : 46 60 73 83 87 88 89 90 97 98 99 100
RECUR                : 62
RPAREN               : 45 46 47 49 50 55 56 59 62 62 68 69 70 79 80 81 82 84 85 85 86 87 91 95 96 96 97 97 98 99 99 100 102 107 107
R_LLAVE              : 76 104 105 106
STR                  : 
STRING               : 26 52 54 56 63 67 101 103 112 113
VARIABLE             : 31 45 46 68 69 74 75 83 85 97 97 98 99 99 100 101
VECTOR               : 
WHEN                 : 82
error                : 

Nonterminals, with rules where they appear

argumentos_lista     : 58 59 60
argumments           : 64 66 67 107
asignacion           : 1
body                 : 65 66 67 69 79 82 84
case                 : 53 54 55 56
case_expression      : 18
ciclo                : 23 84
cond_                : 15
cond_else            : 16
conjuntos            : 4 88 90
dato                 : 45 46 47 47 51 52 53 54 55 56 57 58 62 70 71 72 74 86 86 87 87 88 89 89 91 92 92 93 93 93 102 102 103 107
defn                 : 11
defn_return          : 99 100
defn_with_return     : 12
do                   : 8 81
doseq                : 17
doseq_args           : 95 96
doseq_prn            : 96
dotimes              : 22
expresionCase        : 101
expresionConjuntoDouble : 105 111
expresionConjuntoEnteros : 104 109
expresionConjuntoString : 106 113
expresionDefnElse    : 97 99
function             : 21
if                   : 7 69 81 85 107
if_do                : 9
impresion            : 2 48 50 51 53 55 95
instrucciones        : 61 79 80 0
internos             : 68 69
linecondition        : 49 49 50 50
lista                : 19
mapa                 : 6
operacion_aritmetica : 3 94
operacionesLogicas   : 13 98 100
operador_aritmetico  : 86
operador_comparadores : 47
recur                : 25 78 85
secuencia_mapa       : 75 76
secuencia_v          : 72 73
sentenciaLoopRecur   : 14
sentencia_booleana   : 20 48 77 78 82
valor                : 24
vector               : 5 89 89 90
when                 : 10

Parsing method: LALR

state 0

    (0) S' -> . instrucciones
    (1) instrucciones -> . asignacion
    (2) instrucciones -> . impresion
    (3) instrucciones -> . operacion_aritmetica
    (4) instrucciones -> . conjuntos
    (5) instrucciones -> . vector
    (6) instrucciones -> . mapa
    (7) instrucciones -> . if
    (8) instrucciones -> . do
    (9) instrucciones -> . if_do
    (10) instrucciones -> . when
    (11) instrucciones -> . defn
    (12) instrucciones -> . defn_with_return
    (13) instrucciones -> . operacionesLogicas
    (14) instrucciones -> . sentenciaLoopRecur
    (15) instrucciones -> . cond_
    (16) instrucciones -> . cond_else
    (17) instrucciones -> . doseq
    (18) instrucciones -> . case_expression
    (19) instrucciones -> . lista
    (20) instrucciones -> . sentencia_booleana
    (21) instrucciones -> . function
    (22) instrucciones -> . dotimes
    (23) instrucciones -> . ciclo
    (24) instrucciones -> . valor
    (25) instrucciones -> . recur
    (45) asignacion -> . LPAREN DEFICION VARIABLE dato RPAREN
    (46) asignacion -> . LPAREN LET LCOR VARIABLE dato RCOR RPAREN
    (70) impresion -> . LPAREN IMPRIMIR dato RPAREN
    (86) operacion_aritmetica -> . LPAREN operador_aritmetico dato dato RPAREN
    (104) conjuntos -> . NUMERAL L_LLAVE expresionConjuntoEnteros R_LLAVE
    (105) conjuntos -> . NUMERAL L_LLAVE expresionConjuntoDouble R_LLAVE
    (106) conjuntos -> . NUMERAL L_LLAVE expresionConjuntoString R_LLAVE
    (73) vector -> . LCOR secuencia_v RCOR
    (76) mapa -> . L_LLAVE secuencia_mapa R_LLAVE
    (77) if -> . IF sentencia_booleana
    (78) if -> . IF sentencia_booleana recur
    (79) if -> . LPAREN IF instrucciones body RPAREN
    (80) do -> . LPAREN DO instrucciones RPAREN
    (81) if_do -> . LPAREN if do RPAREN
    (82) when -> . LPAREN WHEN sentencia_booleana body RPAREN
    (97) defn -> . LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN
    (98) defn -> . LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN
    (99) defn_with_return -> . LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN defn_return
    (100) defn_with_return -> . LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN defn_return
    (85) operacionesLogicas -> . LPAREN if recur VARIABLE RPAREN RPAREN
    (107) sentenciaLoopRecur -> . LPAREN LOOP argumments LPAREN if dato RPAREN RPAREN
    (49) cond_ -> . LPAREN COND linecondition linecondition RPAREN
    (50) cond_else -> . LPAREN COND linecondition linecondition DOSPUNTOS ELSE impresion RPAREN
    (95) doseq -> . LPAREN DOSEQ doseq_args impresion RPAREN
    (96) doseq -> . LPAREN DOSEQ doseq_args LPAREN doseq_prn RPAREN RPAREN
    (55) case_expression -> . LPAREN CASE dato case impresion RPAREN
    (56) case_expression -> . LPAREN CASE dato case DOSPUNTOS ELSE STRING RPAREN
    (59) lista -> . LPAREN LIST argumentos_lista RPAREN
    (47) sentencia_booleana -> . LPAREN operador_comparadores dato dato RPAREN
    (68) function -> . LPAREN DEFFUNCION VARIABLE internos RPAREN
    (69) function -> . LPAREN DEFFUNCION VARIABLE internos LPAREN if body RPAREN
    (84) dotimes -> . LPAREN DOTIMES ciclo body RPAREN
    (83) ciclo -> . LCOR VARIABLE ENTERO RCOR
    (32) valor -> . ENTERO
    (33) valor -> . FLOTANTE
    (34) valor -> . BOOLEAN
    (62) recur -> . LPAREN RECUR LPAREN INC dato RPAREN RPAREN

    LPAREN          shift and go to state 27
    NUMERAL         shift and go to state 29
    LCOR            shift and go to state 28
    L_LLAVE         shift and go to state 30
    IF              shift and go to state 31
    ENTERO          shift and go to state 32
    FLOTANTE        shift and go to state 33
    BOOLEAN         shift and go to state 34

    instrucciones                  shift and go to state 1
    asignacion                     shift and go to state 2
    impresion                      shift and go to state 3
    operacion_aritmetica           shift and go to state 4
    conjuntos                      shift and go to state 5
    vector                         shift and go to state 6
    mapa                           shift and go to state 7
    if                             shift and go to state 8
    do                             shift and go to state 9
    if_do                          shift and go to state 10
    when                           shift and go to state 11
    defn                           shift and go to state 12
    defn_with_return               shift and go to state 13
    operacionesLogicas             shift and go to state 14
    sentenciaLoopRecur             shift and go to state 15
    cond_                          shift and go to state 16
    cond_else                      shift and go to state 17
    doseq                          shift and go to state 18
    case_expression                shift and go to state 19
    lista                          shift and go to state 20
    sentencia_booleana             shift and go to state 21
    function                       shift and go to state 22
    dotimes                        shift and go to state 23
    ciclo                          shift and go to state 24
    valor                          shift and go to state 25
    recur                          shift and go to state 26

state 1

    (0) S' -> instrucciones .



state 2

    (1) instrucciones -> asignacion .

    $end            reduce using rule 1 (instrucciones -> asignacion .)
    LPAREN          reduce using rule 1 (instrucciones -> asignacion .)
    NUMERAL         reduce using rule 1 (instrucciones -> asignacion .)
    LCOR            reduce using rule 1 (instrucciones -> asignacion .)
    L_LLAVE         reduce using rule 1 (instrucciones -> asignacion .)
    IF              reduce using rule 1 (instrucciones -> asignacion .)
    ENTERO          reduce using rule 1 (instrucciones -> asignacion .)
    FLOTANTE        reduce using rule 1 (instrucciones -> asignacion .)
    BOOLEAN         reduce using rule 1 (instrucciones -> asignacion .)
    RPAREN          reduce using rule 1 (instrucciones -> asignacion .)


state 3

    (2) instrucciones -> impresion .

    $end            reduce using rule 2 (instrucciones -> impresion .)
    LPAREN          reduce using rule 2 (instrucciones -> impresion .)
    NUMERAL         reduce using rule 2 (instrucciones -> impresion .)
    LCOR            reduce using rule 2 (instrucciones -> impresion .)
    L_LLAVE         reduce using rule 2 (instrucciones -> impresion .)
    IF              reduce using rule 2 (instrucciones -> impresion .)
    ENTERO          reduce using rule 2 (instrucciones -> impresion .)
    FLOTANTE        reduce using rule 2 (instrucciones -> impresion .)
    BOOLEAN         reduce using rule 2 (instrucciones -> impresion .)
    RPAREN          reduce using rule 2 (instrucciones -> impresion .)


state 4

    (3) instrucciones -> operacion_aritmetica .

    $end            reduce using rule 3 (instrucciones -> operacion_aritmetica .)
    LPAREN          reduce using rule 3 (instrucciones -> operacion_aritmetica .)
    NUMERAL         reduce using rule 3 (instrucciones -> operacion_aritmetica .)
    LCOR            reduce using rule 3 (instrucciones -> operacion_aritmetica .)
    L_LLAVE         reduce using rule 3 (instrucciones -> operacion_aritmetica .)
    IF              reduce using rule 3 (instrucciones -> operacion_aritmetica .)
    ENTERO          reduce using rule 3 (instrucciones -> operacion_aritmetica .)
    FLOTANTE        reduce using rule 3 (instrucciones -> operacion_aritmetica .)
    BOOLEAN         reduce using rule 3 (instrucciones -> operacion_aritmetica .)
    RPAREN          reduce using rule 3 (instrucciones -> operacion_aritmetica .)


state 5

    (4) instrucciones -> conjuntos .

    $end            reduce using rule 4 (instrucciones -> conjuntos .)
    LPAREN          reduce using rule 4 (instrucciones -> conjuntos .)
    NUMERAL         reduce using rule 4 (instrucciones -> conjuntos .)
    LCOR            reduce using rule 4 (instrucciones -> conjuntos .)
    L_LLAVE         reduce using rule 4 (instrucciones -> conjuntos .)
    IF              reduce using rule 4 (instrucciones -> conjuntos .)
    ENTERO          reduce using rule 4 (instrucciones -> conjuntos .)
    FLOTANTE        reduce using rule 4 (instrucciones -> conjuntos .)
    BOOLEAN         reduce using rule 4 (instrucciones -> conjuntos .)
    RPAREN          reduce using rule 4 (instrucciones -> conjuntos .)


state 6

    (5) instrucciones -> vector .

    $end            reduce using rule 5 (instrucciones -> vector .)
    LPAREN          reduce using rule 5 (instrucciones -> vector .)
    NUMERAL         reduce using rule 5 (instrucciones -> vector .)
    LCOR            reduce using rule 5 (instrucciones -> vector .)
    L_LLAVE         reduce using rule 5 (instrucciones -> vector .)
    IF              reduce using rule 5 (instrucciones -> vector .)
    ENTERO          reduce using rule 5 (instrucciones -> vector .)
    FLOTANTE        reduce using rule 5 (instrucciones -> vector .)
    BOOLEAN         reduce using rule 5 (instrucciones -> vector .)
    RPAREN          reduce using rule 5 (instrucciones -> vector .)


state 7

    (6) instrucciones -> mapa .

    $end            reduce using rule 6 (instrucciones -> mapa .)
    LPAREN          reduce using rule 6 (instrucciones -> mapa .)
    NUMERAL         reduce using rule 6 (instrucciones -> mapa .)
    LCOR            reduce using rule 6 (instrucciones -> mapa .)
    L_LLAVE         reduce using rule 6 (instrucciones -> mapa .)
    IF              reduce using rule 6 (instrucciones -> mapa .)
    ENTERO          reduce using rule 6 (instrucciones -> mapa .)
    FLOTANTE        reduce using rule 6 (instrucciones -> mapa .)
    BOOLEAN         reduce using rule 6 (instrucciones -> mapa .)
    RPAREN          reduce using rule 6 (instrucciones -> mapa .)


state 8

    (7) instrucciones -> if .

    $end            reduce using rule 7 (instrucciones -> if .)
    LPAREN          reduce using rule 7 (instrucciones -> if .)
    NUMERAL         reduce using rule 7 (instrucciones -> if .)
    LCOR            reduce using rule 7 (instrucciones -> if .)
    L_LLAVE         reduce using rule 7 (instrucciones -> if .)
    IF              reduce using rule 7 (instrucciones -> if .)
    ENTERO          reduce using rule 7 (instrucciones -> if .)
    FLOTANTE        reduce using rule 7 (instrucciones -> if .)
    BOOLEAN         reduce using rule 7 (instrucciones -> if .)
    RPAREN          reduce using rule 7 (instrucciones -> if .)


state 9

    (8) instrucciones -> do .

    $end            reduce using rule 8 (instrucciones -> do .)
    LPAREN          reduce using rule 8 (instrucciones -> do .)
    NUMERAL         reduce using rule 8 (instrucciones -> do .)
    LCOR            reduce using rule 8 (instrucciones -> do .)
    L_LLAVE         reduce using rule 8 (instrucciones -> do .)
    IF              reduce using rule 8 (instrucciones -> do .)
    ENTERO          reduce using rule 8 (instrucciones -> do .)
    FLOTANTE        reduce using rule 8 (instrucciones -> do .)
    BOOLEAN         reduce using rule 8 (instrucciones -> do .)
    RPAREN          reduce using rule 8 (instrucciones -> do .)


state 10

    (9) instrucciones -> if_do .

    $end            reduce using rule 9 (instrucciones -> if_do .)
    LPAREN          reduce using rule 9 (instrucciones -> if_do .)
    NUMERAL         reduce using rule 9 (instrucciones -> if_do .)
    LCOR            reduce using rule 9 (instrucciones -> if_do .)
    L_LLAVE         reduce using rule 9 (instrucciones -> if_do .)
    IF              reduce using rule 9 (instrucciones -> if_do .)
    ENTERO          reduce using rule 9 (instrucciones -> if_do .)
    FLOTANTE        reduce using rule 9 (instrucciones -> if_do .)
    BOOLEAN         reduce using rule 9 (instrucciones -> if_do .)
    RPAREN          reduce using rule 9 (instrucciones -> if_do .)


state 11

    (10) instrucciones -> when .

    $end            reduce using rule 10 (instrucciones -> when .)
    LPAREN          reduce using rule 10 (instrucciones -> when .)
    NUMERAL         reduce using rule 10 (instrucciones -> when .)
    LCOR            reduce using rule 10 (instrucciones -> when .)
    L_LLAVE         reduce using rule 10 (instrucciones -> when .)
    IF              reduce using rule 10 (instrucciones -> when .)
    ENTERO          reduce using rule 10 (instrucciones -> when .)
    FLOTANTE        reduce using rule 10 (instrucciones -> when .)
    BOOLEAN         reduce using rule 10 (instrucciones -> when .)
    RPAREN          reduce using rule 10 (instrucciones -> when .)


state 12

    (11) instrucciones -> defn .

    $end            reduce using rule 11 (instrucciones -> defn .)
    LPAREN          reduce using rule 11 (instrucciones -> defn .)
    NUMERAL         reduce using rule 11 (instrucciones -> defn .)
    LCOR            reduce using rule 11 (instrucciones -> defn .)
    L_LLAVE         reduce using rule 11 (instrucciones -> defn .)
    IF              reduce using rule 11 (instrucciones -> defn .)
    ENTERO          reduce using rule 11 (instrucciones -> defn .)
    FLOTANTE        reduce using rule 11 (instrucciones -> defn .)
    BOOLEAN         reduce using rule 11 (instrucciones -> defn .)
    RPAREN          reduce using rule 11 (instrucciones -> defn .)


state 13

    (12) instrucciones -> defn_with_return .

    $end            reduce using rule 12 (instrucciones -> defn_with_return .)
    LPAREN          reduce using rule 12 (instrucciones -> defn_with_return .)
    NUMERAL         reduce using rule 12 (instrucciones -> defn_with_return .)
    LCOR            reduce using rule 12 (instrucciones -> defn_with_return .)
    L_LLAVE         reduce using rule 12 (instrucciones -> defn_with_return .)
    IF              reduce using rule 12 (instrucciones -> defn_with_return .)
    ENTERO          reduce using rule 12 (instrucciones -> defn_with_return .)
    FLOTANTE        reduce using rule 12 (instrucciones -> defn_with_return .)
    BOOLEAN         reduce using rule 12 (instrucciones -> defn_with_return .)
    RPAREN          reduce using rule 12 (instrucciones -> defn_with_return .)


state 14

    (13) instrucciones -> operacionesLogicas .

    $end            reduce using rule 13 (instrucciones -> operacionesLogicas .)
    LPAREN          reduce using rule 13 (instrucciones -> operacionesLogicas .)
    NUMERAL         reduce using rule 13 (instrucciones -> operacionesLogicas .)
    LCOR            reduce using rule 13 (instrucciones -> operacionesLogicas .)
    L_LLAVE         reduce using rule 13 (instrucciones -> operacionesLogicas .)
    IF              reduce using rule 13 (instrucciones -> operacionesLogicas .)
    ENTERO          reduce using rule 13 (instrucciones -> operacionesLogicas .)
    FLOTANTE        reduce using rule 13 (instrucciones -> operacionesLogicas .)
    BOOLEAN         reduce using rule 13 (instrucciones -> operacionesLogicas .)
    RPAREN          reduce using rule 13 (instrucciones -> operacionesLogicas .)


state 15

    (14) instrucciones -> sentenciaLoopRecur .

    $end            reduce using rule 14 (instrucciones -> sentenciaLoopRecur .)
    LPAREN          reduce using rule 14 (instrucciones -> sentenciaLoopRecur .)
    NUMERAL         reduce using rule 14 (instrucciones -> sentenciaLoopRecur .)
    LCOR            reduce using rule 14 (instrucciones -> sentenciaLoopRecur .)
    L_LLAVE         reduce using rule 14 (instrucciones -> sentenciaLoopRecur .)
    IF              reduce using rule 14 (instrucciones -> sentenciaLoopRecur .)
    ENTERO          reduce using rule 14 (instrucciones -> sentenciaLoopRecur .)
    FLOTANTE        reduce using rule 14 (instrucciones -> sentenciaLoopRecur .)
    BOOLEAN         reduce using rule 14 (instrucciones -> sentenciaLoopRecur .)
    RPAREN          reduce using rule 14 (instrucciones -> sentenciaLoopRecur .)


state 16

    (15) instrucciones -> cond_ .

    $end            reduce using rule 15 (instrucciones -> cond_ .)
    LPAREN          reduce using rule 15 (instrucciones -> cond_ .)
    NUMERAL         reduce using rule 15 (instrucciones -> cond_ .)
    LCOR            reduce using rule 15 (instrucciones -> cond_ .)
    L_LLAVE         reduce using rule 15 (instrucciones -> cond_ .)
    IF              reduce using rule 15 (instrucciones -> cond_ .)
    ENTERO          reduce using rule 15 (instrucciones -> cond_ .)
    FLOTANTE        reduce using rule 15 (instrucciones -> cond_ .)
    BOOLEAN         reduce using rule 15 (instrucciones -> cond_ .)
    RPAREN          reduce using rule 15 (instrucciones -> cond_ .)


state 17

    (16) instrucciones -> cond_else .

    $end            reduce using rule 16 (instrucciones -> cond_else .)
    LPAREN          reduce using rule 16 (instrucciones -> cond_else .)
    NUMERAL         reduce using rule 16 (instrucciones -> cond_else .)
    LCOR            reduce using rule 16 (instrucciones -> cond_else .)
    L_LLAVE         reduce using rule 16 (instrucciones -> cond_else .)
    IF              reduce using rule 16 (instrucciones -> cond_else .)
    ENTERO          reduce using rule 16 (instrucciones -> cond_else .)
    FLOTANTE        reduce using rule 16 (instrucciones -> cond_else .)
    BOOLEAN         reduce using rule 16 (instrucciones -> cond_else .)
    RPAREN          reduce using rule 16 (instrucciones -> cond_else .)


state 18

    (17) instrucciones -> doseq .

    $end            reduce using rule 17 (instrucciones -> doseq .)
    LPAREN          reduce using rule 17 (instrucciones -> doseq .)
    NUMERAL         reduce using rule 17 (instrucciones -> doseq .)
    LCOR            reduce using rule 17 (instrucciones -> doseq .)
    L_LLAVE         reduce using rule 17 (instrucciones -> doseq .)
    IF              reduce using rule 17 (instrucciones -> doseq .)
    ENTERO          reduce using rule 17 (instrucciones -> doseq .)
    FLOTANTE        reduce using rule 17 (instrucciones -> doseq .)
    BOOLEAN         reduce using rule 17 (instrucciones -> doseq .)
    RPAREN          reduce using rule 17 (instrucciones -> doseq .)


state 19

    (18) instrucciones -> case_expression .

    $end            reduce using rule 18 (instrucciones -> case_expression .)
    LPAREN          reduce using rule 18 (instrucciones -> case_expression .)
    NUMERAL         reduce using rule 18 (instrucciones -> case_expression .)
    LCOR            reduce using rule 18 (instrucciones -> case_expression .)
    L_LLAVE         reduce using rule 18 (instrucciones -> case_expression .)
    IF              reduce using rule 18 (instrucciones -> case_expression .)
    ENTERO          reduce using rule 18 (instrucciones -> case_expression .)
    FLOTANTE        reduce using rule 18 (instrucciones -> case_expression .)
    BOOLEAN         reduce using rule 18 (instrucciones -> case_expression .)
    RPAREN          reduce using rule 18 (instrucciones -> case_expression .)


state 20

    (19) instrucciones -> lista .

    $end            reduce using rule 19 (instrucciones -> lista .)
    LPAREN          reduce using rule 19 (instrucciones -> lista .)
    NUMERAL         reduce using rule 19 (instrucciones -> lista .)
    LCOR            reduce using rule 19 (instrucciones -> lista .)
    L_LLAVE         reduce using rule 19 (instrucciones -> lista .)
    IF              reduce using rule 19 (instrucciones -> lista .)
    ENTERO          reduce using rule 19 (instrucciones -> lista .)
    FLOTANTE        reduce using rule 19 (instrucciones -> lista .)
    BOOLEAN         reduce using rule 19 (instrucciones -> lista .)
    RPAREN          reduce using rule 19 (instrucciones -> lista .)


state 21

    (20) instrucciones -> sentencia_booleana .

    $end            reduce using rule 20 (instrucciones -> sentencia_booleana .)
    RPAREN          reduce using rule 20 (instrucciones -> sentencia_booleana .)
    LPAREN          reduce using rule 20 (instrucciones -> sentencia_booleana .)
    NUMERAL         reduce using rule 20 (instrucciones -> sentencia_booleana .)
    LCOR            reduce using rule 20 (instrucciones -> sentencia_booleana .)
    L_LLAVE         reduce using rule 20 (instrucciones -> sentencia_booleana .)
    IF              reduce using rule 20 (instrucciones -> sentencia_booleana .)
    ENTERO          reduce using rule 20 (instrucciones -> sentencia_booleana .)
    FLOTANTE        reduce using rule 20 (instrucciones -> sentencia_booleana .)
    BOOLEAN         reduce using rule 20 (instrucciones -> sentencia_booleana .)


state 22

    (21) instrucciones -> function .

    $end            reduce using rule 21 (instrucciones -> function .)
    LPAREN          reduce using rule 21 (instrucciones -> function .)
    NUMERAL         reduce using rule 21 (instrucciones -> function .)
    LCOR            reduce using rule 21 (instrucciones -> function .)
    L_LLAVE         reduce using rule 21 (instrucciones -> function .)
    IF              reduce using rule 21 (instrucciones -> function .)
    ENTERO          reduce using rule 21 (instrucciones -> function .)
    FLOTANTE        reduce using rule 21 (instrucciones -> function .)
    BOOLEAN         reduce using rule 21 (instrucciones -> function .)
    RPAREN          reduce using rule 21 (instrucciones -> function .)


state 23

    (22) instrucciones -> dotimes .

    $end            reduce using rule 22 (instrucciones -> dotimes .)
    LPAREN          reduce using rule 22 (instrucciones -> dotimes .)
    NUMERAL         reduce using rule 22 (instrucciones -> dotimes .)
    LCOR            reduce using rule 22 (instrucciones -> dotimes .)
    L_LLAVE         reduce using rule 22 (instrucciones -> dotimes .)
    IF              reduce using rule 22 (instrucciones -> dotimes .)
    ENTERO          reduce using rule 22 (instrucciones -> dotimes .)
    FLOTANTE        reduce using rule 22 (instrucciones -> dotimes .)
    BOOLEAN         reduce using rule 22 (instrucciones -> dotimes .)
    RPAREN          reduce using rule 22 (instrucciones -> dotimes .)


state 24

    (23) instrucciones -> ciclo .

    $end            reduce using rule 23 (instrucciones -> ciclo .)
    LPAREN          reduce using rule 23 (instrucciones -> ciclo .)
    NUMERAL         reduce using rule 23 (instrucciones -> ciclo .)
    LCOR            reduce using rule 23 (instrucciones -> ciclo .)
    L_LLAVE         reduce using rule 23 (instrucciones -> ciclo .)
    IF              reduce using rule 23 (instrucciones -> ciclo .)
    ENTERO          reduce using rule 23 (instrucciones -> ciclo .)
    FLOTANTE        reduce using rule 23 (instrucciones -> ciclo .)
    BOOLEAN         reduce using rule 23 (instrucciones -> ciclo .)
    RPAREN          reduce using rule 23 (instrucciones -> ciclo .)


state 25

    (24) instrucciones -> valor .

    $end            reduce using rule 24 (instrucciones -> valor .)
    LPAREN          reduce using rule 24 (instrucciones -> valor .)
    NUMERAL         reduce using rule 24 (instrucciones -> valor .)
    LCOR            reduce using rule 24 (instrucciones -> valor .)
    L_LLAVE         reduce using rule 24 (instrucciones -> valor .)
    IF              reduce using rule 24 (instrucciones -> valor .)
    ENTERO          reduce using rule 24 (instrucciones -> valor .)
    FLOTANTE        reduce using rule 24 (instrucciones -> valor .)
    BOOLEAN         reduce using rule 24 (instrucciones -> valor .)
    RPAREN          reduce using rule 24 (instrucciones -> valor .)


state 26

    (25) instrucciones -> recur .

    $end            reduce using rule 25 (instrucciones -> recur .)
    LPAREN          reduce using rule 25 (instrucciones -> recur .)
    NUMERAL         reduce using rule 25 (instrucciones -> recur .)
    LCOR            reduce using rule 25 (instrucciones -> recur .)
    L_LLAVE         reduce using rule 25 (instrucciones -> recur .)
    IF              reduce using rule 25 (instrucciones -> recur .)
    ENTERO          reduce using rule 25 (instrucciones -> recur .)
    FLOTANTE        reduce using rule 25 (instrucciones -> recur .)
    BOOLEAN         reduce using rule 25 (instrucciones -> recur .)
    RPAREN          reduce using rule 25 (instrucciones -> recur .)


state 27

    (45) asignacion -> LPAREN . DEFICION VARIABLE dato RPAREN
    (46) asignacion -> LPAREN . LET LCOR VARIABLE dato RCOR RPAREN
    (70) impresion -> LPAREN . IMPRIMIR dato RPAREN
    (86) operacion_aritmetica -> LPAREN . operador_aritmetico dato dato RPAREN
    (79) if -> LPAREN . IF instrucciones body RPAREN
    (80) do -> LPAREN . DO instrucciones RPAREN
    (81) if_do -> LPAREN . if do RPAREN
    (82) when -> LPAREN . WHEN sentencia_booleana body RPAREN
    (97) defn -> LPAREN . DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN
    (98) defn -> LPAREN . DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN
    (99) defn_with_return -> LPAREN . DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN defn_return
    (100) defn_with_return -> LPAREN . DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN defn_return
    (85) operacionesLogicas -> LPAREN . if recur VARIABLE RPAREN RPAREN
    (107) sentenciaLoopRecur -> LPAREN . LOOP argumments LPAREN if dato RPAREN RPAREN
    (49) cond_ -> LPAREN . COND linecondition linecondition RPAREN
    (50) cond_else -> LPAREN . COND linecondition linecondition DOSPUNTOS ELSE impresion RPAREN
    (95) doseq -> LPAREN . DOSEQ doseq_args impresion RPAREN
    (96) doseq -> LPAREN . DOSEQ doseq_args LPAREN doseq_prn RPAREN RPAREN
    (55) case_expression -> LPAREN . CASE dato case impresion RPAREN
    (56) case_expression -> LPAREN . CASE dato case DOSPUNTOS ELSE STRING RPAREN
    (59) lista -> LPAREN . LIST argumentos_lista RPAREN
    (47) sentencia_booleana -> LPAREN . operador_comparadores dato dato RPAREN
    (68) function -> LPAREN . DEFFUNCION VARIABLE internos RPAREN
    (69) function -> LPAREN . DEFFUNCION VARIABLE internos LPAREN if body RPAREN
    (84) dotimes -> LPAREN . DOTIMES ciclo body RPAREN
    (62) recur -> LPAREN . RECUR LPAREN INC dato RPAREN RPAREN
    (41) operador_aritmetico -> . MAS
    (42) operador_aritmetico -> . MENOS
    (43) operador_aritmetico -> . PRODUCTO
    (44) operador_aritmetico -> . DIVISION
    (77) if -> . IF sentencia_booleana
    (78) if -> . IF sentencia_booleana recur
    (79) if -> . LPAREN IF instrucciones body RPAREN
    (35) operador_comparadores -> . COMPARA_IGUAL
    (36) operador_comparadores -> . MENORQUE
    (37) operador_comparadores -> . MAYORQUE
    (38) operador_comparadores -> . MAYORIGUALQUE
    (39) operador_comparadores -> . MENORIGUALQUE
    (40) operador_comparadores -> . DIFERENTE

    DEFICION        shift and go to state 36
    LET             shift and go to state 37
    IMPRIMIR        shift and go to state 38
    IF              shift and go to state 40
    DO              shift and go to state 41
    WHEN            shift and go to state 43
    DEFFUNCION      shift and go to state 44
    LOOP            shift and go to state 45
    COND            shift and go to state 46
    DOSEQ           shift and go to state 47
    CASE            shift and go to state 48
    LIST            shift and go to state 49
    DOTIMES         shift and go to state 51
    RECUR           shift and go to state 52
    MAS             shift and go to state 53
    MENOS           shift and go to state 54
    PRODUCTO        shift and go to state 55
    DIVISION        shift and go to state 56
    LPAREN          shift and go to state 35
    COMPARA_IGUAL   shift and go to state 57
    MENORQUE        shift and go to state 58
    MAYORQUE        shift and go to state 59
    MAYORIGUALQUE   shift and go to state 60
    MENORIGUALQUE   shift and go to state 61
    DIFERENTE       shift and go to state 62

    operador_aritmetico            shift and go to state 39
    if                             shift and go to state 42
    operador_comparadores          shift and go to state 50

state 28

    (73) vector -> LCOR . secuencia_v RCOR
    (83) ciclo -> LCOR . VARIABLE ENTERO RCOR
    (71) secuencia_v -> . dato
    (72) secuencia_v -> . dato secuencia_v
    (26) dato -> . STRING
    (27) dato -> . CHAR
    (28) dato -> . ENTERO
    (29) dato -> . FLOTANTE
    (30) dato -> . BOOLEAN
    (31) dato -> . VARIABLE

    VARIABLE        shift and go to state 64
    STRING          shift and go to state 67
    CHAR            shift and go to state 68
    ENTERO          shift and go to state 65
    FLOTANTE        shift and go to state 69
    BOOLEAN         shift and go to state 70

    secuencia_v                    shift and go to state 63
    dato                           shift and go to state 66

state 29

    (104) conjuntos -> NUMERAL . L_LLAVE expresionConjuntoEnteros R_LLAVE
    (105) conjuntos -> NUMERAL . L_LLAVE expresionConjuntoDouble R_LLAVE
    (106) conjuntos -> NUMERAL . L_LLAVE expresionConjuntoString R_LLAVE

    L_LLAVE         shift and go to state 71


state 30

    (76) mapa -> L_LLAVE . secuencia_mapa R_LLAVE
    (74) secuencia_mapa -> . DOSPUNTOS VARIABLE dato
    (75) secuencia_mapa -> . DOSPUNTOS VARIABLE secuencia_mapa

    DOSPUNTOS       shift and go to state 73

    secuencia_mapa                 shift and go to state 72

state 31

    (77) if -> IF . sentencia_booleana
    (78) if -> IF . sentencia_booleana recur
    (47) sentencia_booleana -> . LPAREN operador_comparadores dato dato RPAREN

    LPAREN          shift and go to state 75

    sentencia_booleana             shift and go to state 74

state 32

    (32) valor -> ENTERO .

    $end            reduce using rule 32 (valor -> ENTERO .)
    LPAREN          reduce using rule 32 (valor -> ENTERO .)
    NUMERAL         reduce using rule 32 (valor -> ENTERO .)
    LCOR            reduce using rule 32 (valor -> ENTERO .)
    L_LLAVE         reduce using rule 32 (valor -> ENTERO .)
    IF              reduce using rule 32 (valor -> ENTERO .)
    ENTERO          reduce using rule 32 (valor -> ENTERO .)
    FLOTANTE        reduce using rule 32 (valor -> ENTERO .)
    BOOLEAN         reduce using rule 32 (valor -> ENTERO .)
    RPAREN          reduce using rule 32 (valor -> ENTERO .)


state 33

    (33) valor -> FLOTANTE .

    $end            reduce using rule 33 (valor -> FLOTANTE .)
    LPAREN          reduce using rule 33 (valor -> FLOTANTE .)
    NUMERAL         reduce using rule 33 (valor -> FLOTANTE .)
    LCOR            reduce using rule 33 (valor -> FLOTANTE .)
    L_LLAVE         reduce using rule 33 (valor -> FLOTANTE .)
    IF              reduce using rule 33 (valor -> FLOTANTE .)
    ENTERO          reduce using rule 33 (valor -> FLOTANTE .)
    FLOTANTE        reduce using rule 33 (valor -> FLOTANTE .)
    BOOLEAN         reduce using rule 33 (valor -> FLOTANTE .)
    RPAREN          reduce using rule 33 (valor -> FLOTANTE .)


state 34

    (34) valor -> BOOLEAN .

    $end            reduce using rule 34 (valor -> BOOLEAN .)
    LPAREN          reduce using rule 34 (valor -> BOOLEAN .)
    NUMERAL         reduce using rule 34 (valor -> BOOLEAN .)
    LCOR            reduce using rule 34 (valor -> BOOLEAN .)
    L_LLAVE         reduce using rule 34 (valor -> BOOLEAN .)
    IF              reduce using rule 34 (valor -> BOOLEAN .)
    ENTERO          reduce using rule 34 (valor -> BOOLEAN .)
    FLOTANTE        reduce using rule 34 (valor -> BOOLEAN .)
    BOOLEAN         reduce using rule 34 (valor -> BOOLEAN .)
    RPAREN          reduce using rule 34 (valor -> BOOLEAN .)


state 35

    (79) if -> LPAREN . IF instrucciones body RPAREN

    IF              shift and go to state 76


state 36

    (45) asignacion -> LPAREN DEFICION . VARIABLE dato RPAREN

    VARIABLE        shift and go to state 77


state 37

    (46) asignacion -> LPAREN LET . LCOR VARIABLE dato RCOR RPAREN

    LCOR            shift and go to state 78


state 38

    (70) impresion -> LPAREN IMPRIMIR . dato RPAREN
    (26) dato -> . STRING
    (27) dato -> . CHAR
    (28) dato -> . ENTERO
    (29) dato -> . FLOTANTE
    (30) dato -> . BOOLEAN
    (31) dato -> . VARIABLE

    STRING          shift and go to state 67
    CHAR            shift and go to state 68
    ENTERO          shift and go to state 65
    FLOTANTE        shift and go to state 69
    BOOLEAN         shift and go to state 70
    VARIABLE        shift and go to state 80

    dato                           shift and go to state 79

state 39

    (86) operacion_aritmetica -> LPAREN operador_aritmetico . dato dato RPAREN
    (26) dato -> . STRING
    (27) dato -> . CHAR
    (28) dato -> . ENTERO
    (29) dato -> . FLOTANTE
    (30) dato -> . BOOLEAN
    (31) dato -> . VARIABLE

    STRING          shift and go to state 67
    CHAR            shift and go to state 68
    ENTERO          shift and go to state 65
    FLOTANTE        shift and go to state 69
    BOOLEAN         shift and go to state 70
    VARIABLE        shift and go to state 80

    dato                           shift and go to state 81

state 40

    (79) if -> LPAREN IF . instrucciones body RPAREN
    (77) if -> IF . sentencia_booleana
    (78) if -> IF . sentencia_booleana recur
    (1) instrucciones -> . asignacion
    (2) instrucciones -> . impresion
    (3) instrucciones -> . operacion_aritmetica
    (4) instrucciones -> . conjuntos
    (5) instrucciones -> . vector
    (6) instrucciones -> . mapa
    (7) instrucciones -> . if
    (8) instrucciones -> . do
    (9) instrucciones -> . if_do
    (10) instrucciones -> . when
    (11) instrucciones -> . defn
    (12) instrucciones -> . defn_with_return
    (13) instrucciones -> . operacionesLogicas
    (14) instrucciones -> . sentenciaLoopRecur
    (15) instrucciones -> . cond_
    (16) instrucciones -> . cond_else
    (17) instrucciones -> . doseq
    (18) instrucciones -> . case_expression
    (19) instrucciones -> . lista
    (20) instrucciones -> . sentencia_booleana
    (21) instrucciones -> . function
    (22) instrucciones -> . dotimes
    (23) instrucciones -> . ciclo
    (24) instrucciones -> . valor
    (25) instrucciones -> . recur
    (47) sentencia_booleana -> . LPAREN operador_comparadores dato dato RPAREN
    (45) asignacion -> . LPAREN DEFICION VARIABLE dato RPAREN
    (46) asignacion -> . LPAREN LET LCOR VARIABLE dato RCOR RPAREN
    (70) impresion -> . LPAREN IMPRIMIR dato RPAREN
    (86) operacion_aritmetica -> . LPAREN operador_aritmetico dato dato RPAREN
    (104) conjuntos -> . NUMERAL L_LLAVE expresionConjuntoEnteros R_LLAVE
    (105) conjuntos -> . NUMERAL L_LLAVE expresionConjuntoDouble R_LLAVE
    (106) conjuntos -> . NUMERAL L_LLAVE expresionConjuntoString R_LLAVE
    (73) vector -> . LCOR secuencia_v RCOR
    (76) mapa -> . L_LLAVE secuencia_mapa R_LLAVE
    (77) if -> . IF sentencia_booleana
    (78) if -> . IF sentencia_booleana recur
    (79) if -> . LPAREN IF instrucciones body RPAREN
    (80) do -> . LPAREN DO instrucciones RPAREN
    (81) if_do -> . LPAREN if do RPAREN
    (82) when -> . LPAREN WHEN sentencia_booleana body RPAREN
    (97) defn -> . LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN
    (98) defn -> . LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN
    (99) defn_with_return -> . LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN defn_return
    (100) defn_with_return -> . LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN defn_return
    (85) operacionesLogicas -> . LPAREN if recur VARIABLE RPAREN RPAREN
    (107) sentenciaLoopRecur -> . LPAREN LOOP argumments LPAREN if dato RPAREN RPAREN
    (49) cond_ -> . LPAREN COND linecondition linecondition RPAREN
    (50) cond_else -> . LPAREN COND linecondition linecondition DOSPUNTOS ELSE impresion RPAREN
    (95) doseq -> . LPAREN DOSEQ doseq_args impresion RPAREN
    (96) doseq -> . LPAREN DOSEQ doseq_args LPAREN doseq_prn RPAREN RPAREN
    (55) case_expression -> . LPAREN CASE dato case impresion RPAREN
    (56) case_expression -> . LPAREN CASE dato case DOSPUNTOS ELSE STRING RPAREN
    (59) lista -> . LPAREN LIST argumentos_lista RPAREN
    (68) function -> . LPAREN DEFFUNCION VARIABLE internos RPAREN
    (69) function -> . LPAREN DEFFUNCION VARIABLE internos LPAREN if body RPAREN
    (84) dotimes -> . LPAREN DOTIMES ciclo body RPAREN
    (83) ciclo -> . LCOR VARIABLE ENTERO RCOR
    (32) valor -> . ENTERO
    (33) valor -> . FLOTANTE
    (34) valor -> . BOOLEAN
    (62) recur -> . LPAREN RECUR LPAREN INC dato RPAREN RPAREN

    LPAREN          shift and go to state 82
    NUMERAL         shift and go to state 29
    LCOR            shift and go to state 28
    L_LLAVE         shift and go to state 30
    IF              shift and go to state 31
    ENTERO          shift and go to state 32
    FLOTANTE        shift and go to state 33
    BOOLEAN         shift and go to state 34

    instrucciones                  shift and go to state 83
    sentencia_booleana             shift and go to state 84
    recur                          shift and go to state 26
    asignacion                     shift and go to state 2
    impresion                      shift and go to state 3
    operacion_aritmetica           shift and go to state 4
    conjuntos                      shift and go to state 5
    vector                         shift and go to state 6
    mapa                           shift and go to state 7
    if                             shift and go to state 8
    do                             shift and go to state 9
    if_do                          shift and go to state 10
    when                           shift and go to state 11
    defn                           shift and go to state 12
    defn_with_return               shift and go to state 13
    operacionesLogicas             shift and go to state 14
    sentenciaLoopRecur             shift and go to state 15
    cond_                          shift and go to state 16
    cond_else                      shift and go to state 17
    doseq                          shift and go to state 18
    case_expression                shift and go to state 19
    lista                          shift and go to state 20
    function                       shift and go to state 22
    dotimes                        shift and go to state 23
    ciclo                          shift and go to state 24
    valor                          shift and go to state 25

state 41

    (80) do -> LPAREN DO . instrucciones RPAREN
    (1) instrucciones -> . asignacion
    (2) instrucciones -> . impresion
    (3) instrucciones -> . operacion_aritmetica
    (4) instrucciones -> . conjuntos
    (5) instrucciones -> . vector
    (6) instrucciones -> . mapa
    (7) instrucciones -> . if
    (8) instrucciones -> . do
    (9) instrucciones -> . if_do
    (10) instrucciones -> . when
    (11) instrucciones -> . defn
    (12) instrucciones -> . defn_with_return
    (13) instrucciones -> . operacionesLogicas
    (14) instrucciones -> . sentenciaLoopRecur
    (15) instrucciones -> . cond_
    (16) instrucciones -> . cond_else
    (17) instrucciones -> . doseq
    (18) instrucciones -> . case_expression
    (19) instrucciones -> . lista
    (20) instrucciones -> . sentencia_booleana
    (21) instrucciones -> . function
    (22) instrucciones -> . dotimes
    (23) instrucciones -> . ciclo
    (24) instrucciones -> . valor
    (25) instrucciones -> . recur
    (45) asignacion -> . LPAREN DEFICION VARIABLE dato RPAREN
    (46) asignacion -> . LPAREN LET LCOR VARIABLE dato RCOR RPAREN
    (70) impresion -> . LPAREN IMPRIMIR dato RPAREN
    (86) operacion_aritmetica -> . LPAREN operador_aritmetico dato dato RPAREN
    (104) conjuntos -> . NUMERAL L_LLAVE expresionConjuntoEnteros R_LLAVE
    (105) conjuntos -> . NUMERAL L_LLAVE expresionConjuntoDouble R_LLAVE
    (106) conjuntos -> . NUMERAL L_LLAVE expresionConjuntoString R_LLAVE
    (73) vector -> . LCOR secuencia_v RCOR
    (76) mapa -> . L_LLAVE secuencia_mapa R_LLAVE
    (77) if -> . IF sentencia_booleana
    (78) if -> . IF sentencia_booleana recur
    (79) if -> . LPAREN IF instrucciones body RPAREN
    (80) do -> . LPAREN DO instrucciones RPAREN
    (81) if_do -> . LPAREN if do RPAREN
    (82) when -> . LPAREN WHEN sentencia_booleana body RPAREN
    (97) defn -> . LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN
    (98) defn -> . LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN
    (99) defn_with_return -> . LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN defn_return
    (100) defn_with_return -> . LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN defn_return
    (85) operacionesLogicas -> . LPAREN if recur VARIABLE RPAREN RPAREN
    (107) sentenciaLoopRecur -> . LPAREN LOOP argumments LPAREN if dato RPAREN RPAREN
    (49) cond_ -> . LPAREN COND linecondition linecondition RPAREN
    (50) cond_else -> . LPAREN COND linecondition linecondition DOSPUNTOS ELSE impresion RPAREN
    (95) doseq -> . LPAREN DOSEQ doseq_args impresion RPAREN
    (96) doseq -> . LPAREN DOSEQ doseq_args LPAREN doseq_prn RPAREN RPAREN
    (55) case_expression -> . LPAREN CASE dato case impresion RPAREN
    (56) case_expression -> . LPAREN CASE dato case DOSPUNTOS ELSE STRING RPAREN
    (59) lista -> . LPAREN LIST argumentos_lista RPAREN
    (47) sentencia_booleana -> . LPAREN operador_comparadores dato dato RPAREN
    (68) function -> . LPAREN DEFFUNCION VARIABLE internos RPAREN
    (69) function -> . LPAREN DEFFUNCION VARIABLE internos LPAREN if body RPAREN
    (84) dotimes -> . LPAREN DOTIMES ciclo body RPAREN
    (83) ciclo -> . LCOR VARIABLE ENTERO RCOR
    (32) valor -> . ENTERO
    (33) valor -> . FLOTANTE
    (34) valor -> . BOOLEAN
    (62) recur -> . LPAREN RECUR LPAREN INC dato RPAREN RPAREN

    LPAREN          shift and go to state 27
    NUMERAL         shift and go to state 29
    LCOR            shift and go to state 28
    L_LLAVE         shift and go to state 30
    IF              shift and go to state 31
    ENTERO          shift and go to state 32
    FLOTANTE        shift and go to state 33
    BOOLEAN         shift and go to state 34

    instrucciones                  shift and go to state 85
    asignacion                     shift and go to state 2
    impresion                      shift and go to state 3
    operacion_aritmetica           shift and go to state 4
    conjuntos                      shift and go to state 5
    vector                         shift and go to state 6
    mapa                           shift and go to state 7
    if                             shift and go to state 8
    do                             shift and go to state 9
    if_do                          shift and go to state 10
    when                           shift and go to state 11
    defn                           shift and go to state 12
    defn_with_return               shift and go to state 13
    operacionesLogicas             shift and go to state 14
    sentenciaLoopRecur             shift and go to state 15
    cond_                          shift and go to state 16
    cond_else                      shift and go to state 17
    doseq                          shift and go to state 18
    case_expression                shift and go to state 19
    lista                          shift and go to state 20
    sentencia_booleana             shift and go to state 21
    function                       shift and go to state 22
    dotimes                        shift and go to state 23
    ciclo                          shift and go to state 24
    valor                          shift and go to state 25
    recur                          shift and go to state 26

state 42

    (81) if_do -> LPAREN if . do RPAREN
    (85) operacionesLogicas -> LPAREN if . recur VARIABLE RPAREN RPAREN
    (80) do -> . LPAREN DO instrucciones RPAREN
    (62) recur -> . LPAREN RECUR LPAREN INC dato RPAREN RPAREN

    LPAREN          shift and go to state 86

    do                             shift and go to state 87
    recur                          shift and go to state 88

state 43

    (82) when -> LPAREN WHEN . sentencia_booleana body RPAREN
    (47) sentencia_booleana -> . LPAREN operador_comparadores dato dato RPAREN

    LPAREN          shift and go to state 75

    sentencia_booleana             shift and go to state 89

state 44

    (97) defn -> LPAREN DEFFUNCION . VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN
    (98) defn -> LPAREN DEFFUNCION . INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN
    (99) defn_with_return -> LPAREN DEFFUNCION . VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN defn_return
    (100) defn_with_return -> LPAREN DEFFUNCION . INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN defn_return
    (68) function -> LPAREN DEFFUNCION . VARIABLE internos RPAREN
    (69) function -> LPAREN DEFFUNCION . VARIABLE internos LPAREN if body RPAREN

    VARIABLE        shift and go to state 90
    INCREASE        shift and go to state 91


state 45

    (107) sentenciaLoopRecur -> LPAREN LOOP . argumments LPAREN if dato RPAREN RPAREN
    (60) argumments -> . LCOR argumentos_lista RCOR

    LCOR            shift and go to state 93

    argumments                     shift and go to state 92

state 46

    (49) cond_ -> LPAREN COND . linecondition linecondition RPAREN
    (50) cond_else -> LPAREN COND . linecondition linecondition DOSPUNTOS ELSE impresion RPAREN
    (48) linecondition -> . sentencia_booleana impresion
    (47) sentencia_booleana -> . LPAREN operador_comparadores dato dato RPAREN

    LPAREN          shift and go to state 75

    linecondition                  shift and go to state 94
    sentencia_booleana             shift and go to state 95

state 47

    (95) doseq -> LPAREN DOSEQ . doseq_args impresion RPAREN
    (96) doseq -> LPAREN DOSEQ . doseq_args LPAREN doseq_prn RPAREN RPAREN
    (87) doseq_args -> . LCOR dato LPAREN RANGE dato RPAREN RCOR
    (88) doseq_args -> . LCOR dato conjuntos RCOR
    (89) doseq_args -> . LCOR dato vector dato vector RCOR
    (90) doseq_args -> . LCOR vector conjuntos RCOR

    LCOR            shift and go to state 97

    doseq_args                     shift and go to state 96

state 48

    (55) case_expression -> LPAREN CASE . dato case impresion RPAREN
    (56) case_expression -> LPAREN CASE . dato case DOSPUNTOS ELSE STRING RPAREN
    (26) dato -> . STRING
    (27) dato -> . CHAR
    (28) dato -> . ENTERO
    (29) dato -> . FLOTANTE
    (30) dato -> . BOOLEAN
    (31) dato -> . VARIABLE

    STRING          shift and go to state 67
    CHAR            shift and go to state 68
    ENTERO          shift and go to state 65
    FLOTANTE        shift and go to state 69
    BOOLEAN         shift and go to state 70
    VARIABLE        shift and go to state 80

    dato                           shift and go to state 98

state 49

    (59) lista -> LPAREN LIST . argumentos_lista RPAREN
    (57) argumentos_lista -> . dato
    (58) argumentos_lista -> . dato argumentos_lista
    (26) dato -> . STRING
    (27) dato -> . CHAR
    (28) dato -> . ENTERO
    (29) dato -> . FLOTANTE
    (30) dato -> . BOOLEAN
    (31) dato -> . VARIABLE

    STRING          shift and go to state 67
    CHAR            shift and go to state 68
    ENTERO          shift and go to state 65
    FLOTANTE        shift and go to state 69
    BOOLEAN         shift and go to state 70
    VARIABLE        shift and go to state 80

    argumentos_lista               shift and go to state 99
    dato                           shift and go to state 100

state 50

    (47) sentencia_booleana -> LPAREN operador_comparadores . dato dato RPAREN
    (26) dato -> . STRING
    (27) dato -> . CHAR
    (28) dato -> . ENTERO
    (29) dato -> . FLOTANTE
    (30) dato -> . BOOLEAN
    (31) dato -> . VARIABLE

    STRING          shift and go to state 67
    CHAR            shift and go to state 68
    ENTERO          shift and go to state 65
    FLOTANTE        shift and go to state 69
    BOOLEAN         shift and go to state 70
    VARIABLE        shift and go to state 80

    dato                           shift and go to state 101

state 51

    (84) dotimes -> LPAREN DOTIMES . ciclo body RPAREN
    (83) ciclo -> . LCOR VARIABLE ENTERO RCOR

    LCOR            shift and go to state 103

    ciclo                          shift and go to state 102

state 52

    (62) recur -> LPAREN RECUR . LPAREN INC dato RPAREN RPAREN

    LPAREN          shift and go to state 104


state 53

    (41) operador_aritmetico -> MAS .

    STRING          reduce using rule 41 (operador_aritmetico -> MAS .)
    CHAR            reduce using rule 41 (operador_aritmetico -> MAS .)
    ENTERO          reduce using rule 41 (operador_aritmetico -> MAS .)
    FLOTANTE        reduce using rule 41 (operador_aritmetico -> MAS .)
    BOOLEAN         reduce using rule 41 (operador_aritmetico -> MAS .)
    VARIABLE        reduce using rule 41 (operador_aritmetico -> MAS .)


state 54

    (42) operador_aritmetico -> MENOS .

    STRING          reduce using rule 42 (operador_aritmetico -> MENOS .)
    CHAR            reduce using rule 42 (operador_aritmetico -> MENOS .)
    ENTERO          reduce using rule 42 (operador_aritmetico -> MENOS .)
    FLOTANTE        reduce using rule 42 (operador_aritmetico -> MENOS .)
    BOOLEAN         reduce using rule 42 (operador_aritmetico -> MENOS .)
    VARIABLE        reduce using rule 42 (operador_aritmetico -> MENOS .)


state 55

    (43) operador_aritmetico -> PRODUCTO .

    STRING          reduce using rule 43 (operador_aritmetico -> PRODUCTO .)
    CHAR            reduce using rule 43 (operador_aritmetico -> PRODUCTO .)
    ENTERO          reduce using rule 43 (operador_aritmetico -> PRODUCTO .)
    FLOTANTE        reduce using rule 43 (operador_aritmetico -> PRODUCTO .)
    BOOLEAN         reduce using rule 43 (operador_aritmetico -> PRODUCTO .)
    VARIABLE        reduce using rule 43 (operador_aritmetico -> PRODUCTO .)


state 56

    (44) operador_aritmetico -> DIVISION .

    STRING          reduce using rule 44 (operador_aritmetico -> DIVISION .)
    CHAR            reduce using rule 44 (operador_aritmetico -> DIVISION .)
    ENTERO          reduce using rule 44 (operador_aritmetico -> DIVISION .)
    FLOTANTE        reduce using rule 44 (operador_aritmetico -> DIVISION .)
    BOOLEAN         reduce using rule 44 (operador_aritmetico -> DIVISION .)
    VARIABLE        reduce using rule 44 (operador_aritmetico -> DIVISION .)


state 57

    (35) operador_comparadores -> COMPARA_IGUAL .

    STRING          reduce using rule 35 (operador_comparadores -> COMPARA_IGUAL .)
    CHAR            reduce using rule 35 (operador_comparadores -> COMPARA_IGUAL .)
    ENTERO          reduce using rule 35 (operador_comparadores -> COMPARA_IGUAL .)
    FLOTANTE        reduce using rule 35 (operador_comparadores -> COMPARA_IGUAL .)
    BOOLEAN         reduce using rule 35 (operador_comparadores -> COMPARA_IGUAL .)
    VARIABLE        reduce using rule 35 (operador_comparadores -> COMPARA_IGUAL .)


state 58

    (36) operador_comparadores -> MENORQUE .

    STRING          reduce using rule 36 (operador_comparadores -> MENORQUE .)
    CHAR            reduce using rule 36 (operador_comparadores -> MENORQUE .)
    ENTERO          reduce using rule 36 (operador_comparadores -> MENORQUE .)
    FLOTANTE        reduce using rule 36 (operador_comparadores -> MENORQUE .)
    BOOLEAN         reduce using rule 36 (operador_comparadores -> MENORQUE .)
    VARIABLE        reduce using rule 36 (operador_comparadores -> MENORQUE .)


state 59

    (37) operador_comparadores -> MAYORQUE .

    STRING          reduce using rule 37 (operador_comparadores -> MAYORQUE .)
    CHAR            reduce using rule 37 (operador_comparadores -> MAYORQUE .)
    ENTERO          reduce using rule 37 (operador_comparadores -> MAYORQUE .)
    FLOTANTE        reduce using rule 37 (operador_comparadores -> MAYORQUE .)
    BOOLEAN         reduce using rule 37 (operador_comparadores -> MAYORQUE .)
    VARIABLE        reduce using rule 37 (operador_comparadores -> MAYORQUE .)


state 60

    (38) operador_comparadores -> MAYORIGUALQUE .

    STRING          reduce using rule 38 (operador_comparadores -> MAYORIGUALQUE .)
    CHAR            reduce using rule 38 (operador_comparadores -> MAYORIGUALQUE .)
    ENTERO          reduce using rule 38 (operador_comparadores -> MAYORIGUALQUE .)
    FLOTANTE        reduce using rule 38 (operador_comparadores -> MAYORIGUALQUE .)
    BOOLEAN         reduce using rule 38 (operador_comparadores -> MAYORIGUALQUE .)
    VARIABLE        reduce using rule 38 (operador_comparadores -> MAYORIGUALQUE .)


state 61

    (39) operador_comparadores -> MENORIGUALQUE .

    STRING          reduce using rule 39 (operador_comparadores -> MENORIGUALQUE .)
    CHAR            reduce using rule 39 (operador_comparadores -> MENORIGUALQUE .)
    ENTERO          reduce using rule 39 (operador_comparadores -> MENORIGUALQUE .)
    FLOTANTE        reduce using rule 39 (operador_comparadores -> MENORIGUALQUE .)
    BOOLEAN         reduce using rule 39 (operador_comparadores -> MENORIGUALQUE .)
    VARIABLE        reduce using rule 39 (operador_comparadores -> MENORIGUALQUE .)


state 62

    (40) operador_comparadores -> DIFERENTE .

    STRING          reduce using rule 40 (operador_comparadores -> DIFERENTE .)
    CHAR            reduce using rule 40 (operador_comparadores -> DIFERENTE .)
    ENTERO          reduce using rule 40 (operador_comparadores -> DIFERENTE .)
    FLOTANTE        reduce using rule 40 (operador_comparadores -> DIFERENTE .)
    BOOLEAN         reduce using rule 40 (operador_comparadores -> DIFERENTE .)
    VARIABLE        reduce using rule 40 (operador_comparadores -> DIFERENTE .)


state 63

    (73) vector -> LCOR secuencia_v . RCOR

    RCOR            shift and go to state 105


state 64

    (83) ciclo -> LCOR VARIABLE . ENTERO RCOR
    (31) dato -> VARIABLE .

  ! shift/reduce conflict for ENTERO resolved as shift
    ENTERO          shift and go to state 106
    STRING          reduce using rule 31 (dato -> VARIABLE .)
    CHAR            reduce using rule 31 (dato -> VARIABLE .)
    FLOTANTE        reduce using rule 31 (dato -> VARIABLE .)
    BOOLEAN         reduce using rule 31 (dato -> VARIABLE .)
    VARIABLE        reduce using rule 31 (dato -> VARIABLE .)
    RCOR            reduce using rule 31 (dato -> VARIABLE .)

  ! ENTERO          [ reduce using rule 31 (dato -> VARIABLE .) ]


state 65

    (28) dato -> ENTERO .

    STRING          reduce using rule 28 (dato -> ENTERO .)
    CHAR            reduce using rule 28 (dato -> ENTERO .)
    ENTERO          reduce using rule 28 (dato -> ENTERO .)
    FLOTANTE        reduce using rule 28 (dato -> ENTERO .)
    BOOLEAN         reduce using rule 28 (dato -> ENTERO .)
    VARIABLE        reduce using rule 28 (dato -> ENTERO .)
    RCOR            reduce using rule 28 (dato -> ENTERO .)
    RPAREN          reduce using rule 28 (dato -> ENTERO .)
    LPAREN          reduce using rule 28 (dato -> ENTERO .)
    NUMERAL         reduce using rule 28 (dato -> ENTERO .)
    LCOR            reduce using rule 28 (dato -> ENTERO .)
    R_LLAVE         reduce using rule 28 (dato -> ENTERO .)


state 66

    (71) secuencia_v -> dato .
    (72) secuencia_v -> dato . secuencia_v
    (71) secuencia_v -> . dato
    (72) secuencia_v -> . dato secuencia_v
    (26) dato -> . STRING
    (27) dato -> . CHAR
    (28) dato -> . ENTERO
    (29) dato -> . FLOTANTE
    (30) dato -> . BOOLEAN
    (31) dato -> . VARIABLE

    RCOR            reduce using rule 71 (secuencia_v -> dato .)
    STRING          shift and go to state 67
    CHAR            shift and go to state 68
    ENTERO          shift and go to state 65
    FLOTANTE        shift and go to state 69
    BOOLEAN         shift and go to state 70
    VARIABLE        shift and go to state 80

    dato                           shift and go to state 66
    secuencia_v                    shift and go to state 107

state 67

    (26) dato -> STRING .

    STRING          reduce using rule 26 (dato -> STRING .)
    CHAR            reduce using rule 26 (dato -> STRING .)
    ENTERO          reduce using rule 26 (dato -> STRING .)
    FLOTANTE        reduce using rule 26 (dato -> STRING .)
    BOOLEAN         reduce using rule 26 (dato -> STRING .)
    VARIABLE        reduce using rule 26 (dato -> STRING .)
    RCOR            reduce using rule 26 (dato -> STRING .)
    RPAREN          reduce using rule 26 (dato -> STRING .)
    LPAREN          reduce using rule 26 (dato -> STRING .)
    NUMERAL         reduce using rule 26 (dato -> STRING .)
    LCOR            reduce using rule 26 (dato -> STRING .)
    R_LLAVE         reduce using rule 26 (dato -> STRING .)


state 68

    (27) dato -> CHAR .

    STRING          reduce using rule 27 (dato -> CHAR .)
    CHAR            reduce using rule 27 (dato -> CHAR .)
    ENTERO          reduce using rule 27 (dato -> CHAR .)
    FLOTANTE        reduce using rule 27 (dato -> CHAR .)
    BOOLEAN         reduce using rule 27 (dato -> CHAR .)
    VARIABLE        reduce using rule 27 (dato -> CHAR .)
    RCOR            reduce using rule 27 (dato -> CHAR .)
    RPAREN          reduce using rule 27 (dato -> CHAR .)
    LPAREN          reduce using rule 27 (dato -> CHAR .)
    NUMERAL         reduce using rule 27 (dato -> CHAR .)
    LCOR            reduce using rule 27 (dato -> CHAR .)
    R_LLAVE         reduce using rule 27 (dato -> CHAR .)


state 69

    (29) dato -> FLOTANTE .

    STRING          reduce using rule 29 (dato -> FLOTANTE .)
    CHAR            reduce using rule 29 (dato -> FLOTANTE .)
    ENTERO          reduce using rule 29 (dato -> FLOTANTE .)
    FLOTANTE        reduce using rule 29 (dato -> FLOTANTE .)
    BOOLEAN         reduce using rule 29 (dato -> FLOTANTE .)
    VARIABLE        reduce using rule 29 (dato -> FLOTANTE .)
    RCOR            reduce using rule 29 (dato -> FLOTANTE .)
    RPAREN          reduce using rule 29 (dato -> FLOTANTE .)
    LPAREN          reduce using rule 29 (dato -> FLOTANTE .)
    NUMERAL         reduce using rule 29 (dato -> FLOTANTE .)
    LCOR            reduce using rule 29 (dato -> FLOTANTE .)
    R_LLAVE         reduce using rule 29 (dato -> FLOTANTE .)


state 70

    (30) dato -> BOOLEAN .

    STRING          reduce using rule 30 (dato -> BOOLEAN .)
    CHAR            reduce using rule 30 (dato -> BOOLEAN .)
    ENTERO          reduce using rule 30 (dato -> BOOLEAN .)
    FLOTANTE        reduce using rule 30 (dato -> BOOLEAN .)
    BOOLEAN         reduce using rule 30 (dato -> BOOLEAN .)
    VARIABLE        reduce using rule 30 (dato -> BOOLEAN .)
    RCOR            reduce using rule 30 (dato -> BOOLEAN .)
    RPAREN          reduce using rule 30 (dato -> BOOLEAN .)
    LPAREN          reduce using rule 30 (dato -> BOOLEAN .)
    NUMERAL         reduce using rule 30 (dato -> BOOLEAN .)
    LCOR            reduce using rule 30 (dato -> BOOLEAN .)
    R_LLAVE         reduce using rule 30 (dato -> BOOLEAN .)


state 71

    (104) conjuntos -> NUMERAL L_LLAVE . expresionConjuntoEnteros R_LLAVE
    (105) conjuntos -> NUMERAL L_LLAVE . expresionConjuntoDouble R_LLAVE
    (106) conjuntos -> NUMERAL L_LLAVE . expresionConjuntoString R_LLAVE
    (108) expresionConjuntoEnteros -> . ENTERO
    (109) expresionConjuntoEnteros -> . ENTERO expresionConjuntoEnteros
    (110) expresionConjuntoDouble -> . FLOTANTE
    (111) expresionConjuntoDouble -> . FLOTANTE expresionConjuntoDouble
    (112) expresionConjuntoString -> . STRING
    (113) expresionConjuntoString -> . STRING expresionConjuntoString

    ENTERO          shift and go to state 111
    FLOTANTE        shift and go to state 112
    STRING          shift and go to state 113

    expresionConjuntoEnteros       shift and go to state 108
    expresionConjuntoDouble        shift and go to state 109
    expresionConjuntoString        shift and go to state 110

state 72

    (76) mapa -> L_LLAVE secuencia_mapa . R_LLAVE

    R_LLAVE         shift and go to state 114


state 73

    (74) secuencia_mapa -> DOSPUNTOS . VARIABLE dato
    (75) secuencia_mapa -> DOSPUNTOS . VARIABLE secuencia_mapa

    VARIABLE        shift and go to state 115


state 74

    (77) if -> IF sentencia_booleana .
    (78) if -> IF sentencia_booleana . recur
    (62) recur -> . LPAREN RECUR LPAREN INC dato RPAREN RPAREN

  ! shift/reduce conflict for LPAREN resolved as shift
    $end            reduce using rule 77 (if -> IF sentencia_booleana .)
    NUMERAL         reduce using rule 77 (if -> IF sentencia_booleana .)
    LCOR            reduce using rule 77 (if -> IF sentencia_booleana .)
    L_LLAVE         reduce using rule 77 (if -> IF sentencia_booleana .)
    IF              reduce using rule 77 (if -> IF sentencia_booleana .)
    ENTERO          reduce using rule 77 (if -> IF sentencia_booleana .)
    FLOTANTE        reduce using rule 77 (if -> IF sentencia_booleana .)
    BOOLEAN         reduce using rule 77 (if -> IF sentencia_booleana .)
    RPAREN          reduce using rule 77 (if -> IF sentencia_booleana .)
    STRING          reduce using rule 77 (if -> IF sentencia_booleana .)
    CHAR            reduce using rule 77 (if -> IF sentencia_booleana .)
    VARIABLE        reduce using rule 77 (if -> IF sentencia_booleana .)
    LPAREN          shift and go to state 117

  ! LPAREN          [ reduce using rule 77 (if -> IF sentencia_booleana .) ]

    recur                          shift and go to state 116

state 75

    (47) sentencia_booleana -> LPAREN . operador_comparadores dato dato RPAREN
    (35) operador_comparadores -> . COMPARA_IGUAL
    (36) operador_comparadores -> . MENORQUE
    (37) operador_comparadores -> . MAYORQUE
    (38) operador_comparadores -> . MAYORIGUALQUE
    (39) operador_comparadores -> . MENORIGUALQUE
    (40) operador_comparadores -> . DIFERENTE

    COMPARA_IGUAL   shift and go to state 57
    MENORQUE        shift and go to state 58
    MAYORQUE        shift and go to state 59
    MAYORIGUALQUE   shift and go to state 60
    MENORIGUALQUE   shift and go to state 61
    DIFERENTE       shift and go to state 62

    operador_comparadores          shift and go to state 50

state 76

    (79) if -> LPAREN IF . instrucciones body RPAREN
    (1) instrucciones -> . asignacion
    (2) instrucciones -> . impresion
    (3) instrucciones -> . operacion_aritmetica
    (4) instrucciones -> . conjuntos
    (5) instrucciones -> . vector
    (6) instrucciones -> . mapa
    (7) instrucciones -> . if
    (8) instrucciones -> . do
    (9) instrucciones -> . if_do
    (10) instrucciones -> . when
    (11) instrucciones -> . defn
    (12) instrucciones -> . defn_with_return
    (13) instrucciones -> . operacionesLogicas
    (14) instrucciones -> . sentenciaLoopRecur
    (15) instrucciones -> . cond_
    (16) instrucciones -> . cond_else
    (17) instrucciones -> . doseq
    (18) instrucciones -> . case_expression
    (19) instrucciones -> . lista
    (20) instrucciones -> . sentencia_booleana
    (21) instrucciones -> . function
    (22) instrucciones -> . dotimes
    (23) instrucciones -> . ciclo
    (24) instrucciones -> . valor
    (25) instrucciones -> . recur
    (45) asignacion -> . LPAREN DEFICION VARIABLE dato RPAREN
    (46) asignacion -> . LPAREN LET LCOR VARIABLE dato RCOR RPAREN
    (70) impresion -> . LPAREN IMPRIMIR dato RPAREN
    (86) operacion_aritmetica -> . LPAREN operador_aritmetico dato dato RPAREN
    (104) conjuntos -> . NUMERAL L_LLAVE expresionConjuntoEnteros R_LLAVE
    (105) conjuntos -> . NUMERAL L_LLAVE expresionConjuntoDouble R_LLAVE
    (106) conjuntos -> . NUMERAL L_LLAVE expresionConjuntoString R_LLAVE
    (73) vector -> . LCOR secuencia_v RCOR
    (76) mapa -> . L_LLAVE secuencia_mapa R_LLAVE
    (77) if -> . IF sentencia_booleana
    (78) if -> . IF sentencia_booleana recur
    (79) if -> . LPAREN IF instrucciones body RPAREN
    (80) do -> . LPAREN DO instrucciones RPAREN
    (81) if_do -> . LPAREN if do RPAREN
    (82) when -> . LPAREN WHEN sentencia_booleana body RPAREN
    (97) defn -> . LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN
    (98) defn -> . LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN
    (99) defn_with_return -> . LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN defn_return
    (100) defn_with_return -> . LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN defn_return
    (85) operacionesLogicas -> . LPAREN if recur VARIABLE RPAREN RPAREN
    (107) sentenciaLoopRecur -> . LPAREN LOOP argumments LPAREN if dato RPAREN RPAREN
    (49) cond_ -> . LPAREN COND linecondition linecondition RPAREN
    (50) cond_else -> . LPAREN COND linecondition linecondition DOSPUNTOS ELSE impresion RPAREN
    (95) doseq -> . LPAREN DOSEQ doseq_args impresion RPAREN
    (96) doseq -> . LPAREN DOSEQ doseq_args LPAREN doseq_prn RPAREN RPAREN
    (55) case_expression -> . LPAREN CASE dato case impresion RPAREN
    (56) case_expression -> . LPAREN CASE dato case DOSPUNTOS ELSE STRING RPAREN
    (59) lista -> . LPAREN LIST argumentos_lista RPAREN
    (47) sentencia_booleana -> . LPAREN operador_comparadores dato dato RPAREN
    (68) function -> . LPAREN DEFFUNCION VARIABLE internos RPAREN
    (69) function -> . LPAREN DEFFUNCION VARIABLE internos LPAREN if body RPAREN
    (84) dotimes -> . LPAREN DOTIMES ciclo body RPAREN
    (83) ciclo -> . LCOR VARIABLE ENTERO RCOR
    (32) valor -> . ENTERO
    (33) valor -> . FLOTANTE
    (34) valor -> . BOOLEAN
    (62) recur -> . LPAREN RECUR LPAREN INC dato RPAREN RPAREN

    LPAREN          shift and go to state 27
    NUMERAL         shift and go to state 29
    LCOR            shift and go to state 28
    L_LLAVE         shift and go to state 30
    IF              shift and go to state 31
    ENTERO          shift and go to state 32
    FLOTANTE        shift and go to state 33
    BOOLEAN         shift and go to state 34

    instrucciones                  shift and go to state 83
    asignacion                     shift and go to state 2
    impresion                      shift and go to state 3
    operacion_aritmetica           shift and go to state 4
    conjuntos                      shift and go to state 5
    vector                         shift and go to state 6
    mapa                           shift and go to state 7
    if                             shift and go to state 8
    do                             shift and go to state 9
    if_do                          shift and go to state 10
    when                           shift and go to state 11
    defn                           shift and go to state 12
    defn_with_return               shift and go to state 13
    operacionesLogicas             shift and go to state 14
    sentenciaLoopRecur             shift and go to state 15
    cond_                          shift and go to state 16
    cond_else                      shift and go to state 17
    doseq                          shift and go to state 18
    case_expression                shift and go to state 19
    lista                          shift and go to state 20
    sentencia_booleana             shift and go to state 21
    function                       shift and go to state 22
    dotimes                        shift and go to state 23
    ciclo                          shift and go to state 24
    valor                          shift and go to state 25
    recur                          shift and go to state 26

state 77

    (45) asignacion -> LPAREN DEFICION VARIABLE . dato RPAREN
    (26) dato -> . STRING
    (27) dato -> . CHAR
    (28) dato -> . ENTERO
    (29) dato -> . FLOTANTE
    (30) dato -> . BOOLEAN
    (31) dato -> . VARIABLE

    STRING          shift and go to state 67
    CHAR            shift and go to state 68
    ENTERO          shift and go to state 65
    FLOTANTE        shift and go to state 69
    BOOLEAN         shift and go to state 70
    VARIABLE        shift and go to state 80

    dato                           shift and go to state 118

state 78

    (46) asignacion -> LPAREN LET LCOR . VARIABLE dato RCOR RPAREN

    VARIABLE        shift and go to state 119


state 79

    (70) impresion -> LPAREN IMPRIMIR dato . RPAREN

    RPAREN          shift and go to state 120


state 80

    (31) dato -> VARIABLE .

    RPAREN          reduce using rule 31 (dato -> VARIABLE .)
    STRING          reduce using rule 31 (dato -> VARIABLE .)
    CHAR            reduce using rule 31 (dato -> VARIABLE .)
    ENTERO          reduce using rule 31 (dato -> VARIABLE .)
    FLOTANTE        reduce using rule 31 (dato -> VARIABLE .)
    BOOLEAN         reduce using rule 31 (dato -> VARIABLE .)
    VARIABLE        reduce using rule 31 (dato -> VARIABLE .)
    RCOR            reduce using rule 31 (dato -> VARIABLE .)
    LPAREN          reduce using rule 31 (dato -> VARIABLE .)
    NUMERAL         reduce using rule 31 (dato -> VARIABLE .)
    LCOR            reduce using rule 31 (dato -> VARIABLE .)
    R_LLAVE         reduce using rule 31 (dato -> VARIABLE .)


state 81

    (86) operacion_aritmetica -> LPAREN operador_aritmetico dato . dato RPAREN
    (26) dato -> . STRING
    (27) dato -> . CHAR
    (28) dato -> . ENTERO
    (29) dato -> . FLOTANTE
    (30) dato -> . BOOLEAN
    (31) dato -> . VARIABLE

    STRING          shift and go to state 67
    CHAR            shift and go to state 68
    ENTERO          shift and go to state 65
    FLOTANTE        shift and go to state 69
    BOOLEAN         shift and go to state 70
    VARIABLE        shift and go to state 80

    dato                           shift and go to state 121

state 82

    (47) sentencia_booleana -> LPAREN . operador_comparadores dato dato RPAREN
    (45) asignacion -> LPAREN . DEFICION VARIABLE dato RPAREN
    (46) asignacion -> LPAREN . LET LCOR VARIABLE dato RCOR RPAREN
    (70) impresion -> LPAREN . IMPRIMIR dato RPAREN
    (86) operacion_aritmetica -> LPAREN . operador_aritmetico dato dato RPAREN
    (79) if -> LPAREN . IF instrucciones body RPAREN
    (80) do -> LPAREN . DO instrucciones RPAREN
    (81) if_do -> LPAREN . if do RPAREN
    (82) when -> LPAREN . WHEN sentencia_booleana body RPAREN
    (97) defn -> LPAREN . DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN
    (98) defn -> LPAREN . DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN
    (99) defn_with_return -> LPAREN . DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN defn_return
    (100) defn_with_return -> LPAREN . DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN defn_return
    (85) operacionesLogicas -> LPAREN . if recur VARIABLE RPAREN RPAREN
    (107) sentenciaLoopRecur -> LPAREN . LOOP argumments LPAREN if dato RPAREN RPAREN
    (49) cond_ -> LPAREN . COND linecondition linecondition RPAREN
    (50) cond_else -> LPAREN . COND linecondition linecondition DOSPUNTOS ELSE impresion RPAREN
    (95) doseq -> LPAREN . DOSEQ doseq_args impresion RPAREN
    (96) doseq -> LPAREN . DOSEQ doseq_args LPAREN doseq_prn RPAREN RPAREN
    (55) case_expression -> LPAREN . CASE dato case impresion RPAREN
    (56) case_expression -> LPAREN . CASE dato case DOSPUNTOS ELSE STRING RPAREN
    (59) lista -> LPAREN . LIST argumentos_lista RPAREN
    (68) function -> LPAREN . DEFFUNCION VARIABLE internos RPAREN
    (69) function -> LPAREN . DEFFUNCION VARIABLE internos LPAREN if body RPAREN
    (84) dotimes -> LPAREN . DOTIMES ciclo body RPAREN
    (62) recur -> LPAREN . RECUR LPAREN INC dato RPAREN RPAREN
    (35) operador_comparadores -> . COMPARA_IGUAL
    (36) operador_comparadores -> . MENORQUE
    (37) operador_comparadores -> . MAYORQUE
    (38) operador_comparadores -> . MAYORIGUALQUE
    (39) operador_comparadores -> . MENORIGUALQUE
    (40) operador_comparadores -> . DIFERENTE
    (41) operador_aritmetico -> . MAS
    (42) operador_aritmetico -> . MENOS
    (43) operador_aritmetico -> . PRODUCTO
    (44) operador_aritmetico -> . DIVISION
    (77) if -> . IF sentencia_booleana
    (78) if -> . IF sentencia_booleana recur
    (79) if -> . LPAREN IF instrucciones body RPAREN

    DEFICION        shift and go to state 36
    LET             shift and go to state 37
    IMPRIMIR        shift and go to state 38
    IF              shift and go to state 40
    DO              shift and go to state 41
    WHEN            shift and go to state 43
    DEFFUNCION      shift and go to state 44
    LOOP            shift and go to state 45
    COND            shift and go to state 46
    DOSEQ           shift and go to state 47
    CASE            shift and go to state 48
    LIST            shift and go to state 49
    DOTIMES         shift and go to state 51
    RECUR           shift and go to state 52
    COMPARA_IGUAL   shift and go to state 57
    MENORQUE        shift and go to state 58
    MAYORQUE        shift and go to state 59
    MAYORIGUALQUE   shift and go to state 60
    MENORIGUALQUE   shift and go to state 61
    DIFERENTE       shift and go to state 62
    MAS             shift and go to state 53
    MENOS           shift and go to state 54
    PRODUCTO        shift and go to state 55
    DIVISION        shift and go to state 56
    LPAREN          shift and go to state 35

    operador_comparadores          shift and go to state 50
    operador_aritmetico            shift and go to state 39
    if                             shift and go to state 42

state 83

    (79) if -> LPAREN IF instrucciones . body RPAREN
    (61) body -> . instrucciones
    (1) instrucciones -> . asignacion
    (2) instrucciones -> . impresion
    (3) instrucciones -> . operacion_aritmetica
    (4) instrucciones -> . conjuntos
    (5) instrucciones -> . vector
    (6) instrucciones -> . mapa
    (7) instrucciones -> . if
    (8) instrucciones -> . do
    (9) instrucciones -> . if_do
    (10) instrucciones -> . when
    (11) instrucciones -> . defn
    (12) instrucciones -> . defn_with_return
    (13) instrucciones -> . operacionesLogicas
    (14) instrucciones -> . sentenciaLoopRecur
    (15) instrucciones -> . cond_
    (16) instrucciones -> . cond_else
    (17) instrucciones -> . doseq
    (18) instrucciones -> . case_expression
    (19) instrucciones -> . lista
    (20) instrucciones -> . sentencia_booleana
    (21) instrucciones -> . function
    (22) instrucciones -> . dotimes
    (23) instrucciones -> . ciclo
    (24) instrucciones -> . valor
    (25) instrucciones -> . recur
    (45) asignacion -> . LPAREN DEFICION VARIABLE dato RPAREN
    (46) asignacion -> . LPAREN LET LCOR VARIABLE dato RCOR RPAREN
    (70) impresion -> . LPAREN IMPRIMIR dato RPAREN
    (86) operacion_aritmetica -> . LPAREN operador_aritmetico dato dato RPAREN
    (104) conjuntos -> . NUMERAL L_LLAVE expresionConjuntoEnteros R_LLAVE
    (105) conjuntos -> . NUMERAL L_LLAVE expresionConjuntoDouble R_LLAVE
    (106) conjuntos -> . NUMERAL L_LLAVE expresionConjuntoString R_LLAVE
    (73) vector -> . LCOR secuencia_v RCOR
    (76) mapa -> . L_LLAVE secuencia_mapa R_LLAVE
    (77) if -> . IF sentencia_booleana
    (78) if -> . IF sentencia_booleana recur
    (79) if -> . LPAREN IF instrucciones body RPAREN
    (80) do -> . LPAREN DO instrucciones RPAREN
    (81) if_do -> . LPAREN if do RPAREN
    (82) when -> . LPAREN WHEN sentencia_booleana body RPAREN
    (97) defn -> . LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN
    (98) defn -> . LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN
    (99) defn_with_return -> . LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN defn_return
    (100) defn_with_return -> . LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN defn_return
    (85) operacionesLogicas -> . LPAREN if recur VARIABLE RPAREN RPAREN
    (107) sentenciaLoopRecur -> . LPAREN LOOP argumments LPAREN if dato RPAREN RPAREN
    (49) cond_ -> . LPAREN COND linecondition linecondition RPAREN
    (50) cond_else -> . LPAREN COND linecondition linecondition DOSPUNTOS ELSE impresion RPAREN
    (95) doseq -> . LPAREN DOSEQ doseq_args impresion RPAREN
    (96) doseq -> . LPAREN DOSEQ doseq_args LPAREN doseq_prn RPAREN RPAREN
    (55) case_expression -> . LPAREN CASE dato case impresion RPAREN
    (56) case_expression -> . LPAREN CASE dato case DOSPUNTOS ELSE STRING RPAREN
    (59) lista -> . LPAREN LIST argumentos_lista RPAREN
    (47) sentencia_booleana -> . LPAREN operador_comparadores dato dato RPAREN
    (68) function -> . LPAREN DEFFUNCION VARIABLE internos RPAREN
    (69) function -> . LPAREN DEFFUNCION VARIABLE internos LPAREN if body RPAREN
    (84) dotimes -> . LPAREN DOTIMES ciclo body RPAREN
    (83) ciclo -> . LCOR VARIABLE ENTERO RCOR
    (32) valor -> . ENTERO
    (33) valor -> . FLOTANTE
    (34) valor -> . BOOLEAN
    (62) recur -> . LPAREN RECUR LPAREN INC dato RPAREN RPAREN

    LPAREN          shift and go to state 27
    NUMERAL         shift and go to state 29
    LCOR            shift and go to state 28
    L_LLAVE         shift and go to state 30
    IF              shift and go to state 31
    ENTERO          shift and go to state 32
    FLOTANTE        shift and go to state 33
    BOOLEAN         shift and go to state 34

    instrucciones                  shift and go to state 122
    body                           shift and go to state 123
    asignacion                     shift and go to state 2
    impresion                      shift and go to state 3
    operacion_aritmetica           shift and go to state 4
    conjuntos                      shift and go to state 5
    vector                         shift and go to state 6
    mapa                           shift and go to state 7
    if                             shift and go to state 8
    do                             shift and go to state 9
    if_do                          shift and go to state 10
    when                           shift and go to state 11
    defn                           shift and go to state 12
    defn_with_return               shift and go to state 13
    operacionesLogicas             shift and go to state 14
    sentenciaLoopRecur             shift and go to state 15
    cond_                          shift and go to state 16
    cond_else                      shift and go to state 17
    doseq                          shift and go to state 18
    case_expression                shift and go to state 19
    lista                          shift and go to state 20
    sentencia_booleana             shift and go to state 21
    function                       shift and go to state 22
    dotimes                        shift and go to state 23
    ciclo                          shift and go to state 24
    valor                          shift and go to state 25
    recur                          shift and go to state 26

state 84

    (77) if -> IF sentencia_booleana .
    (78) if -> IF sentencia_booleana . recur
    (20) instrucciones -> sentencia_booleana .
    (62) recur -> . LPAREN RECUR LPAREN INC dato RPAREN RPAREN

  ! reduce/reduce conflict for LPAREN resolved using rule 20 (instrucciones -> sentencia_booleana .)
  ! shift/reduce conflict for LPAREN resolved as shift
    NUMERAL         reduce using rule 20 (instrucciones -> sentencia_booleana .)
    LCOR            reduce using rule 20 (instrucciones -> sentencia_booleana .)
    L_LLAVE         reduce using rule 20 (instrucciones -> sentencia_booleana .)
    IF              reduce using rule 20 (instrucciones -> sentencia_booleana .)
    ENTERO          reduce using rule 20 (instrucciones -> sentencia_booleana .)
    FLOTANTE        reduce using rule 20 (instrucciones -> sentencia_booleana .)
    BOOLEAN         reduce using rule 20 (instrucciones -> sentencia_booleana .)
    LPAREN          shift and go to state 117

  ! LPAREN          [ reduce using rule 77 (if -> IF sentencia_booleana .) ]
  ! LPAREN          [ reduce using rule 20 (instrucciones -> sentencia_booleana .) ]

    recur                          shift and go to state 116

state 85

    (80) do -> LPAREN DO instrucciones . RPAREN

    RPAREN          shift and go to state 124


state 86

    (80) do -> LPAREN . DO instrucciones RPAREN
    (62) recur -> LPAREN . RECUR LPAREN INC dato RPAREN RPAREN

    DO              shift and go to state 41
    RECUR           shift and go to state 52


state 87

    (81) if_do -> LPAREN if do . RPAREN

    RPAREN          shift and go to state 125


state 88

    (85) operacionesLogicas -> LPAREN if recur . VARIABLE RPAREN RPAREN

    VARIABLE        shift and go to state 126


state 89

    (82) when -> LPAREN WHEN sentencia_booleana . body RPAREN
    (61) body -> . instrucciones
    (1) instrucciones -> . asignacion
    (2) instrucciones -> . impresion
    (3) instrucciones -> . operacion_aritmetica
    (4) instrucciones -> . conjuntos
    (5) instrucciones -> . vector
    (6) instrucciones -> . mapa
    (7) instrucciones -> . if
    (8) instrucciones -> . do
    (9) instrucciones -> . if_do
    (10) instrucciones -> . when
    (11) instrucciones -> . defn
    (12) instrucciones -> . defn_with_return
    (13) instrucciones -> . operacionesLogicas
    (14) instrucciones -> . sentenciaLoopRecur
    (15) instrucciones -> . cond_
    (16) instrucciones -> . cond_else
    (17) instrucciones -> . doseq
    (18) instrucciones -> . case_expression
    (19) instrucciones -> . lista
    (20) instrucciones -> . sentencia_booleana
    (21) instrucciones -> . function
    (22) instrucciones -> . dotimes
    (23) instrucciones -> . ciclo
    (24) instrucciones -> . valor
    (25) instrucciones -> . recur
    (45) asignacion -> . LPAREN DEFICION VARIABLE dato RPAREN
    (46) asignacion -> . LPAREN LET LCOR VARIABLE dato RCOR RPAREN
    (70) impresion -> . LPAREN IMPRIMIR dato RPAREN
    (86) operacion_aritmetica -> . LPAREN operador_aritmetico dato dato RPAREN
    (104) conjuntos -> . NUMERAL L_LLAVE expresionConjuntoEnteros R_LLAVE
    (105) conjuntos -> . NUMERAL L_LLAVE expresionConjuntoDouble R_LLAVE
    (106) conjuntos -> . NUMERAL L_LLAVE expresionConjuntoString R_LLAVE
    (73) vector -> . LCOR secuencia_v RCOR
    (76) mapa -> . L_LLAVE secuencia_mapa R_LLAVE
    (77) if -> . IF sentencia_booleana
    (78) if -> . IF sentencia_booleana recur
    (79) if -> . LPAREN IF instrucciones body RPAREN
    (80) do -> . LPAREN DO instrucciones RPAREN
    (81) if_do -> . LPAREN if do RPAREN
    (82) when -> . LPAREN WHEN sentencia_booleana body RPAREN
    (97) defn -> . LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN
    (98) defn -> . LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN
    (99) defn_with_return -> . LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN defn_return
    (100) defn_with_return -> . LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN defn_return
    (85) operacionesLogicas -> . LPAREN if recur VARIABLE RPAREN RPAREN
    (107) sentenciaLoopRecur -> . LPAREN LOOP argumments LPAREN if dato RPAREN RPAREN
    (49) cond_ -> . LPAREN COND linecondition linecondition RPAREN
    (50) cond_else -> . LPAREN COND linecondition linecondition DOSPUNTOS ELSE impresion RPAREN
    (95) doseq -> . LPAREN DOSEQ doseq_args impresion RPAREN
    (96) doseq -> . LPAREN DOSEQ doseq_args LPAREN doseq_prn RPAREN RPAREN
    (55) case_expression -> . LPAREN CASE dato case impresion RPAREN
    (56) case_expression -> . LPAREN CASE dato case DOSPUNTOS ELSE STRING RPAREN
    (59) lista -> . LPAREN LIST argumentos_lista RPAREN
    (47) sentencia_booleana -> . LPAREN operador_comparadores dato dato RPAREN
    (68) function -> . LPAREN DEFFUNCION VARIABLE internos RPAREN
    (69) function -> . LPAREN DEFFUNCION VARIABLE internos LPAREN if body RPAREN
    (84) dotimes -> . LPAREN DOTIMES ciclo body RPAREN
    (83) ciclo -> . LCOR VARIABLE ENTERO RCOR
    (32) valor -> . ENTERO
    (33) valor -> . FLOTANTE
    (34) valor -> . BOOLEAN
    (62) recur -> . LPAREN RECUR LPAREN INC dato RPAREN RPAREN

    LPAREN          shift and go to state 27
    NUMERAL         shift and go to state 29
    LCOR            shift and go to state 28
    L_LLAVE         shift and go to state 30
    IF              shift and go to state 31
    ENTERO          shift and go to state 32
    FLOTANTE        shift and go to state 33
    BOOLEAN         shift and go to state 34

    sentencia_booleana             shift and go to state 21
    body                           shift and go to state 127
    instrucciones                  shift and go to state 122
    asignacion                     shift and go to state 2
    impresion                      shift and go to state 3
    operacion_aritmetica           shift and go to state 4
    conjuntos                      shift and go to state 5
    vector                         shift and go to state 6
    mapa                           shift and go to state 7
    if                             shift and go to state 8
    do                             shift and go to state 9
    if_do                          shift and go to state 10
    when                           shift and go to state 11
    defn                           shift and go to state 12
    defn_with_return               shift and go to state 13
    operacionesLogicas             shift and go to state 14
    sentenciaLoopRecur             shift and go to state 15
    cond_                          shift and go to state 16
    cond_else                      shift and go to state 17
    doseq                          shift and go to state 18
    case_expression                shift and go to state 19
    lista                          shift and go to state 20
    function                       shift and go to state 22
    dotimes                        shift and go to state 23
    ciclo                          shift and go to state 24
    valor                          shift and go to state 25
    recur                          shift and go to state 26

state 90

    (97) defn -> LPAREN DEFFUNCION VARIABLE . LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN
    (99) defn_with_return -> LPAREN DEFFUNCION VARIABLE . LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN defn_return
    (68) function -> LPAREN DEFFUNCION VARIABLE . internos RPAREN
    (69) function -> LPAREN DEFFUNCION VARIABLE . internos LPAREN if body RPAREN
    (63) internos -> . STRING
    (64) internos -> . argumments
    (65) internos -> . body
    (66) internos -> . argumments body
    (67) internos -> . STRING argumments body
    (60) argumments -> . LCOR argumentos_lista RCOR
    (61) body -> . instrucciones
    (1) instrucciones -> . asignacion
    (2) instrucciones -> . impresion
    (3) instrucciones -> . operacion_aritmetica
    (4) instrucciones -> . conjuntos
    (5) instrucciones -> . vector
    (6) instrucciones -> . mapa
    (7) instrucciones -> . if
    (8) instrucciones -> . do
    (9) instrucciones -> . if_do
    (10) instrucciones -> . when
    (11) instrucciones -> . defn
    (12) instrucciones -> . defn_with_return
    (13) instrucciones -> . operacionesLogicas
    (14) instrucciones -> . sentenciaLoopRecur
    (15) instrucciones -> . cond_
    (16) instrucciones -> . cond_else
    (17) instrucciones -> . doseq
    (18) instrucciones -> . case_expression
    (19) instrucciones -> . lista
    (20) instrucciones -> . sentencia_booleana
    (21) instrucciones -> . function
    (22) instrucciones -> . dotimes
    (23) instrucciones -> . ciclo
    (24) instrucciones -> . valor
    (25) instrucciones -> . recur
    (45) asignacion -> . LPAREN DEFICION VARIABLE dato RPAREN
    (46) asignacion -> . LPAREN LET LCOR VARIABLE dato RCOR RPAREN
    (70) impresion -> . LPAREN IMPRIMIR dato RPAREN
    (86) operacion_aritmetica -> . LPAREN operador_aritmetico dato dato RPAREN
    (104) conjuntos -> . NUMERAL L_LLAVE expresionConjuntoEnteros R_LLAVE
    (105) conjuntos -> . NUMERAL L_LLAVE expresionConjuntoDouble R_LLAVE
    (106) conjuntos -> . NUMERAL L_LLAVE expresionConjuntoString R_LLAVE
    (73) vector -> . LCOR secuencia_v RCOR
    (76) mapa -> . L_LLAVE secuencia_mapa R_LLAVE
    (77) if -> . IF sentencia_booleana
    (78) if -> . IF sentencia_booleana recur
    (79) if -> . LPAREN IF instrucciones body RPAREN
    (80) do -> . LPAREN DO instrucciones RPAREN
    (81) if_do -> . LPAREN if do RPAREN
    (82) when -> . LPAREN WHEN sentencia_booleana body RPAREN
    (97) defn -> . LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN
    (98) defn -> . LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN
    (99) defn_with_return -> . LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN defn_return
    (100) defn_with_return -> . LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN defn_return
    (85) operacionesLogicas -> . LPAREN if recur VARIABLE RPAREN RPAREN
    (107) sentenciaLoopRecur -> . LPAREN LOOP argumments LPAREN if dato RPAREN RPAREN
    (49) cond_ -> . LPAREN COND linecondition linecondition RPAREN
    (50) cond_else -> . LPAREN COND linecondition linecondition DOSPUNTOS ELSE impresion RPAREN
    (95) doseq -> . LPAREN DOSEQ doseq_args impresion RPAREN
    (96) doseq -> . LPAREN DOSEQ doseq_args LPAREN doseq_prn RPAREN RPAREN
    (55) case_expression -> . LPAREN CASE dato case impresion RPAREN
    (56) case_expression -> . LPAREN CASE dato case DOSPUNTOS ELSE STRING RPAREN
    (59) lista -> . LPAREN LIST argumentos_lista RPAREN
    (47) sentencia_booleana -> . LPAREN operador_comparadores dato dato RPAREN
    (68) function -> . LPAREN DEFFUNCION VARIABLE internos RPAREN
    (69) function -> . LPAREN DEFFUNCION VARIABLE internos LPAREN if body RPAREN
    (84) dotimes -> . LPAREN DOTIMES ciclo body RPAREN
    (83) ciclo -> . LCOR VARIABLE ENTERO RCOR
    (32) valor -> . ENTERO
    (33) valor -> . FLOTANTE
    (34) valor -> . BOOLEAN
    (62) recur -> . LPAREN RECUR LPAREN INC dato RPAREN RPAREN

    LCOR            shift and go to state 128
    STRING          shift and go to state 131
    LPAREN          shift and go to state 27
    NUMERAL         shift and go to state 29
    L_LLAVE         shift and go to state 30
    IF              shift and go to state 31
    ENTERO          shift and go to state 32
    FLOTANTE        shift and go to state 33
    BOOLEAN         shift and go to state 34

    internos                       shift and go to state 129
    if                             shift and go to state 8
    body                           shift and go to state 130
    argumments                     shift and go to state 132
    instrucciones                  shift and go to state 122
    asignacion                     shift and go to state 2
    impresion                      shift and go to state 3
    operacion_aritmetica           shift and go to state 4
    conjuntos                      shift and go to state 5
    vector                         shift and go to state 6
    mapa                           shift and go to state 7
    do                             shift and go to state 9
    if_do                          shift and go to state 10
    when                           shift and go to state 11
    defn                           shift and go to state 12
    defn_with_return               shift and go to state 13
    operacionesLogicas             shift and go to state 14
    sentenciaLoopRecur             shift and go to state 15
    cond_                          shift and go to state 16
    cond_else                      shift and go to state 17
    doseq                          shift and go to state 18
    case_expression                shift and go to state 19
    lista                          shift and go to state 20
    sentencia_booleana             shift and go to state 21
    function                       shift and go to state 22
    dotimes                        shift and go to state 23
    ciclo                          shift and go to state 24
    valor                          shift and go to state 25
    recur                          shift and go to state 26

state 91

    (98) defn -> LPAREN DEFFUNCION INCREASE . LCOR VARIABLE RCOR operacionesLogicas RPAREN
    (100) defn_with_return -> LPAREN DEFFUNCION INCREASE . LCOR VARIABLE RCOR operacionesLogicas RPAREN defn_return

    LCOR            shift and go to state 133


state 92

    (107) sentenciaLoopRecur -> LPAREN LOOP argumments . LPAREN if dato RPAREN RPAREN

    LPAREN          shift and go to state 134


state 93

    (60) argumments -> LCOR . argumentos_lista RCOR
    (57) argumentos_lista -> . dato
    (58) argumentos_lista -> . dato argumentos_lista
    (26) dato -> . STRING
    (27) dato -> . CHAR
    (28) dato -> . ENTERO
    (29) dato -> . FLOTANTE
    (30) dato -> . BOOLEAN
    (31) dato -> . VARIABLE

    STRING          shift and go to state 67
    CHAR            shift and go to state 68
    ENTERO          shift and go to state 65
    FLOTANTE        shift and go to state 69
    BOOLEAN         shift and go to state 70
    VARIABLE        shift and go to state 80

    argumentos_lista               shift and go to state 135
    dato                           shift and go to state 100

state 94

    (49) cond_ -> LPAREN COND linecondition . linecondition RPAREN
    (50) cond_else -> LPAREN COND linecondition . linecondition DOSPUNTOS ELSE impresion RPAREN
    (48) linecondition -> . sentencia_booleana impresion
    (47) sentencia_booleana -> . LPAREN operador_comparadores dato dato RPAREN

    LPAREN          shift and go to state 75

    linecondition                  shift and go to state 136
    sentencia_booleana             shift and go to state 95

state 95

    (48) linecondition -> sentencia_booleana . impresion
    (70) impresion -> . LPAREN IMPRIMIR dato RPAREN

    LPAREN          shift and go to state 138

    impresion                      shift and go to state 137

state 96

    (95) doseq -> LPAREN DOSEQ doseq_args . impresion RPAREN
    (96) doseq -> LPAREN DOSEQ doseq_args . LPAREN doseq_prn RPAREN RPAREN
    (70) impresion -> . LPAREN IMPRIMIR dato RPAREN

    LPAREN          shift and go to state 139

    impresion                      shift and go to state 140

state 97

    (87) doseq_args -> LCOR . dato LPAREN RANGE dato RPAREN RCOR
    (88) doseq_args -> LCOR . dato conjuntos RCOR
    (89) doseq_args -> LCOR . dato vector dato vector RCOR
    (90) doseq_args -> LCOR . vector conjuntos RCOR
    (26) dato -> . STRING
    (27) dato -> . CHAR
    (28) dato -> . ENTERO
    (29) dato -> . FLOTANTE
    (30) dato -> . BOOLEAN
    (31) dato -> . VARIABLE
    (73) vector -> . LCOR secuencia_v RCOR

    STRING          shift and go to state 67
    CHAR            shift and go to state 68
    ENTERO          shift and go to state 65
    FLOTANTE        shift and go to state 69
    BOOLEAN         shift and go to state 70
    VARIABLE        shift and go to state 80
    LCOR            shift and go to state 141

    dato                           shift and go to state 142
    vector                         shift and go to state 143

state 98

    (55) case_expression -> LPAREN CASE dato . case impresion RPAREN
    (56) case_expression -> LPAREN CASE dato . case DOSPUNTOS ELSE STRING RPAREN
    (51) case -> . dato impresion
    (52) case -> . dato STRING
    (53) case -> . dato impresion case
    (54) case -> . dato STRING case
    (26) dato -> . STRING
    (27) dato -> . CHAR
    (28) dato -> . ENTERO
    (29) dato -> . FLOTANTE
    (30) dato -> . BOOLEAN
    (31) dato -> . VARIABLE

    STRING          shift and go to state 67
    CHAR            shift and go to state 68
    ENTERO          shift and go to state 65
    FLOTANTE        shift and go to state 69
    BOOLEAN         shift and go to state 70
    VARIABLE        shift and go to state 80

    dato                           shift and go to state 144
    case                           shift and go to state 145

state 99

    (59) lista -> LPAREN LIST argumentos_lista . RPAREN

    RPAREN          shift and go to state 146


state 100

    (57) argumentos_lista -> dato .
    (58) argumentos_lista -> dato . argumentos_lista
    (57) argumentos_lista -> . dato
    (58) argumentos_lista -> . dato argumentos_lista
    (26) dato -> . STRING
    (27) dato -> . CHAR
    (28) dato -> . ENTERO
    (29) dato -> . FLOTANTE
    (30) dato -> . BOOLEAN
    (31) dato -> . VARIABLE

    RPAREN          reduce using rule 57 (argumentos_lista -> dato .)
    RCOR            reduce using rule 57 (argumentos_lista -> dato .)
    STRING          shift and go to state 67
    CHAR            shift and go to state 68
    ENTERO          shift and go to state 65
    FLOTANTE        shift and go to state 69
    BOOLEAN         shift and go to state 70
    VARIABLE        shift and go to state 80

    dato                           shift and go to state 100
    argumentos_lista               shift and go to state 147

state 101

    (47) sentencia_booleana -> LPAREN operador_comparadores dato . dato RPAREN
    (26) dato -> . STRING
    (27) dato -> . CHAR
    (28) dato -> . ENTERO
    (29) dato -> . FLOTANTE
    (30) dato -> . BOOLEAN
    (31) dato -> . VARIABLE

    STRING          shift and go to state 67
    CHAR            shift and go to state 68
    ENTERO          shift and go to state 65
    FLOTANTE        shift and go to state 69
    BOOLEAN         shift and go to state 70
    VARIABLE        shift and go to state 80

    dato                           shift and go to state 148

state 102

    (84) dotimes -> LPAREN DOTIMES ciclo . body RPAREN
    (61) body -> . instrucciones
    (1) instrucciones -> . asignacion
    (2) instrucciones -> . impresion
    (3) instrucciones -> . operacion_aritmetica
    (4) instrucciones -> . conjuntos
    (5) instrucciones -> . vector
    (6) instrucciones -> . mapa
    (7) instrucciones -> . if
    (8) instrucciones -> . do
    (9) instrucciones -> . if_do
    (10) instrucciones -> . when
    (11) instrucciones -> . defn
    (12) instrucciones -> . defn_with_return
    (13) instrucciones -> . operacionesLogicas
    (14) instrucciones -> . sentenciaLoopRecur
    (15) instrucciones -> . cond_
    (16) instrucciones -> . cond_else
    (17) instrucciones -> . doseq
    (18) instrucciones -> . case_expression
    (19) instrucciones -> . lista
    (20) instrucciones -> . sentencia_booleana
    (21) instrucciones -> . function
    (22) instrucciones -> . dotimes
    (23) instrucciones -> . ciclo
    (24) instrucciones -> . valor
    (25) instrucciones -> . recur
    (45) asignacion -> . LPAREN DEFICION VARIABLE dato RPAREN
    (46) asignacion -> . LPAREN LET LCOR VARIABLE dato RCOR RPAREN
    (70) impresion -> . LPAREN IMPRIMIR dato RPAREN
    (86) operacion_aritmetica -> . LPAREN operador_aritmetico dato dato RPAREN
    (104) conjuntos -> . NUMERAL L_LLAVE expresionConjuntoEnteros R_LLAVE
    (105) conjuntos -> . NUMERAL L_LLAVE expresionConjuntoDouble R_LLAVE
    (106) conjuntos -> . NUMERAL L_LLAVE expresionConjuntoString R_LLAVE
    (73) vector -> . LCOR secuencia_v RCOR
    (76) mapa -> . L_LLAVE secuencia_mapa R_LLAVE
    (77) if -> . IF sentencia_booleana
    (78) if -> . IF sentencia_booleana recur
    (79) if -> . LPAREN IF instrucciones body RPAREN
    (80) do -> . LPAREN DO instrucciones RPAREN
    (81) if_do -> . LPAREN if do RPAREN
    (82) when -> . LPAREN WHEN sentencia_booleana body RPAREN
    (97) defn -> . LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN
    (98) defn -> . LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN
    (99) defn_with_return -> . LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN defn_return
    (100) defn_with_return -> . LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN defn_return
    (85) operacionesLogicas -> . LPAREN if recur VARIABLE RPAREN RPAREN
    (107) sentenciaLoopRecur -> . LPAREN LOOP argumments LPAREN if dato RPAREN RPAREN
    (49) cond_ -> . LPAREN COND linecondition linecondition RPAREN
    (50) cond_else -> . LPAREN COND linecondition linecondition DOSPUNTOS ELSE impresion RPAREN
    (95) doseq -> . LPAREN DOSEQ doseq_args impresion RPAREN
    (96) doseq -> . LPAREN DOSEQ doseq_args LPAREN doseq_prn RPAREN RPAREN
    (55) case_expression -> . LPAREN CASE dato case impresion RPAREN
    (56) case_expression -> . LPAREN CASE dato case DOSPUNTOS ELSE STRING RPAREN
    (59) lista -> . LPAREN LIST argumentos_lista RPAREN
    (47) sentencia_booleana -> . LPAREN operador_comparadores dato dato RPAREN
    (68) function -> . LPAREN DEFFUNCION VARIABLE internos RPAREN
    (69) function -> . LPAREN DEFFUNCION VARIABLE internos LPAREN if body RPAREN
    (84) dotimes -> . LPAREN DOTIMES ciclo body RPAREN
    (83) ciclo -> . LCOR VARIABLE ENTERO RCOR
    (32) valor -> . ENTERO
    (33) valor -> . FLOTANTE
    (34) valor -> . BOOLEAN
    (62) recur -> . LPAREN RECUR LPAREN INC dato RPAREN RPAREN

    LPAREN          shift and go to state 27
    NUMERAL         shift and go to state 29
    LCOR            shift and go to state 28
    L_LLAVE         shift and go to state 30
    IF              shift and go to state 31
    ENTERO          shift and go to state 32
    FLOTANTE        shift and go to state 33
    BOOLEAN         shift and go to state 34

    ciclo                          shift and go to state 24
    body                           shift and go to state 149
    instrucciones                  shift and go to state 122
    asignacion                     shift and go to state 2
    impresion                      shift and go to state 3
    operacion_aritmetica           shift and go to state 4
    conjuntos                      shift and go to state 5
    vector                         shift and go to state 6
    mapa                           shift and go to state 7
    if                             shift and go to state 8
    do                             shift and go to state 9
    if_do                          shift and go to state 10
    when                           shift and go to state 11
    defn                           shift and go to state 12
    defn_with_return               shift and go to state 13
    operacionesLogicas             shift and go to state 14
    sentenciaLoopRecur             shift and go to state 15
    cond_                          shift and go to state 16
    cond_else                      shift and go to state 17
    doseq                          shift and go to state 18
    case_expression                shift and go to state 19
    lista                          shift and go to state 20
    sentencia_booleana             shift and go to state 21
    function                       shift and go to state 22
    dotimes                        shift and go to state 23
    valor                          shift and go to state 25
    recur                          shift and go to state 26

state 103

    (83) ciclo -> LCOR . VARIABLE ENTERO RCOR

    VARIABLE        shift and go to state 150


state 104

    (62) recur -> LPAREN RECUR LPAREN . INC dato RPAREN RPAREN

    INC             shift and go to state 151


state 105

    (73) vector -> LCOR secuencia_v RCOR .

    $end            reduce using rule 73 (vector -> LCOR secuencia_v RCOR .)
    LPAREN          reduce using rule 73 (vector -> LCOR secuencia_v RCOR .)
    NUMERAL         reduce using rule 73 (vector -> LCOR secuencia_v RCOR .)
    LCOR            reduce using rule 73 (vector -> LCOR secuencia_v RCOR .)
    L_LLAVE         reduce using rule 73 (vector -> LCOR secuencia_v RCOR .)
    IF              reduce using rule 73 (vector -> LCOR secuencia_v RCOR .)
    ENTERO          reduce using rule 73 (vector -> LCOR secuencia_v RCOR .)
    FLOTANTE        reduce using rule 73 (vector -> LCOR secuencia_v RCOR .)
    BOOLEAN         reduce using rule 73 (vector -> LCOR secuencia_v RCOR .)
    RPAREN          reduce using rule 73 (vector -> LCOR secuencia_v RCOR .)
    STRING          reduce using rule 73 (vector -> LCOR secuencia_v RCOR .)
    CHAR            reduce using rule 73 (vector -> LCOR secuencia_v RCOR .)
    VARIABLE        reduce using rule 73 (vector -> LCOR secuencia_v RCOR .)
    RCOR            reduce using rule 73 (vector -> LCOR secuencia_v RCOR .)


state 106

    (83) ciclo -> LCOR VARIABLE ENTERO . RCOR

    RCOR            shift and go to state 152


state 107

    (72) secuencia_v -> dato secuencia_v .

    RCOR            reduce using rule 72 (secuencia_v -> dato secuencia_v .)


state 108

    (104) conjuntos -> NUMERAL L_LLAVE expresionConjuntoEnteros . R_LLAVE

    R_LLAVE         shift and go to state 153


state 109

    (105) conjuntos -> NUMERAL L_LLAVE expresionConjuntoDouble . R_LLAVE

    R_LLAVE         shift and go to state 154


state 110

    (106) conjuntos -> NUMERAL L_LLAVE expresionConjuntoString . R_LLAVE

    R_LLAVE         shift and go to state 155


state 111

    (108) expresionConjuntoEnteros -> ENTERO .
    (109) expresionConjuntoEnteros -> ENTERO . expresionConjuntoEnteros
    (108) expresionConjuntoEnteros -> . ENTERO
    (109) expresionConjuntoEnteros -> . ENTERO expresionConjuntoEnteros

    R_LLAVE         reduce using rule 108 (expresionConjuntoEnteros -> ENTERO .)
    ENTERO          shift and go to state 111

    expresionConjuntoEnteros       shift and go to state 156

state 112

    (110) expresionConjuntoDouble -> FLOTANTE .
    (111) expresionConjuntoDouble -> FLOTANTE . expresionConjuntoDouble
    (110) expresionConjuntoDouble -> . FLOTANTE
    (111) expresionConjuntoDouble -> . FLOTANTE expresionConjuntoDouble

    R_LLAVE         reduce using rule 110 (expresionConjuntoDouble -> FLOTANTE .)
    FLOTANTE        shift and go to state 112

    expresionConjuntoDouble        shift and go to state 157

state 113

    (112) expresionConjuntoString -> STRING .
    (113) expresionConjuntoString -> STRING . expresionConjuntoString
    (112) expresionConjuntoString -> . STRING
    (113) expresionConjuntoString -> . STRING expresionConjuntoString

    R_LLAVE         reduce using rule 112 (expresionConjuntoString -> STRING .)
    STRING          shift and go to state 113

    expresionConjuntoString        shift and go to state 158

state 114

    (76) mapa -> L_LLAVE secuencia_mapa R_LLAVE .

    $end            reduce using rule 76 (mapa -> L_LLAVE secuencia_mapa R_LLAVE .)
    LPAREN          reduce using rule 76 (mapa -> L_LLAVE secuencia_mapa R_LLAVE .)
    NUMERAL         reduce using rule 76 (mapa -> L_LLAVE secuencia_mapa R_LLAVE .)
    LCOR            reduce using rule 76 (mapa -> L_LLAVE secuencia_mapa R_LLAVE .)
    L_LLAVE         reduce using rule 76 (mapa -> L_LLAVE secuencia_mapa R_LLAVE .)
    IF              reduce using rule 76 (mapa -> L_LLAVE secuencia_mapa R_LLAVE .)
    ENTERO          reduce using rule 76 (mapa -> L_LLAVE secuencia_mapa R_LLAVE .)
    FLOTANTE        reduce using rule 76 (mapa -> L_LLAVE secuencia_mapa R_LLAVE .)
    BOOLEAN         reduce using rule 76 (mapa -> L_LLAVE secuencia_mapa R_LLAVE .)
    RPAREN          reduce using rule 76 (mapa -> L_LLAVE secuencia_mapa R_LLAVE .)


state 115

    (74) secuencia_mapa -> DOSPUNTOS VARIABLE . dato
    (75) secuencia_mapa -> DOSPUNTOS VARIABLE . secuencia_mapa
    (26) dato -> . STRING
    (27) dato -> . CHAR
    (28) dato -> . ENTERO
    (29) dato -> . FLOTANTE
    (30) dato -> . BOOLEAN
    (31) dato -> . VARIABLE
    (74) secuencia_mapa -> . DOSPUNTOS VARIABLE dato
    (75) secuencia_mapa -> . DOSPUNTOS VARIABLE secuencia_mapa

    STRING          shift and go to state 67
    CHAR            shift and go to state 68
    ENTERO          shift and go to state 65
    FLOTANTE        shift and go to state 69
    BOOLEAN         shift and go to state 70
    VARIABLE        shift and go to state 80
    DOSPUNTOS       shift and go to state 73

    dato                           shift and go to state 159
    secuencia_mapa                 shift and go to state 160

state 116

    (78) if -> IF sentencia_booleana recur .

    $end            reduce using rule 78 (if -> IF sentencia_booleana recur .)
    LPAREN          reduce using rule 78 (if -> IF sentencia_booleana recur .)
    NUMERAL         reduce using rule 78 (if -> IF sentencia_booleana recur .)
    LCOR            reduce using rule 78 (if -> IF sentencia_booleana recur .)
    L_LLAVE         reduce using rule 78 (if -> IF sentencia_booleana recur .)
    IF              reduce using rule 78 (if -> IF sentencia_booleana recur .)
    ENTERO          reduce using rule 78 (if -> IF sentencia_booleana recur .)
    FLOTANTE        reduce using rule 78 (if -> IF sentencia_booleana recur .)
    BOOLEAN         reduce using rule 78 (if -> IF sentencia_booleana recur .)
    RPAREN          reduce using rule 78 (if -> IF sentencia_booleana recur .)
    STRING          reduce using rule 78 (if -> IF sentencia_booleana recur .)
    CHAR            reduce using rule 78 (if -> IF sentencia_booleana recur .)
    VARIABLE        reduce using rule 78 (if -> IF sentencia_booleana recur .)


state 117

    (62) recur -> LPAREN . RECUR LPAREN INC dato RPAREN RPAREN

    RECUR           shift and go to state 52


state 118

    (45) asignacion -> LPAREN DEFICION VARIABLE dato . RPAREN

    RPAREN          shift and go to state 161


state 119

    (46) asignacion -> LPAREN LET LCOR VARIABLE . dato RCOR RPAREN
    (26) dato -> . STRING
    (27) dato -> . CHAR
    (28) dato -> . ENTERO
    (29) dato -> . FLOTANTE
    (30) dato -> . BOOLEAN
    (31) dato -> . VARIABLE

    STRING          shift and go to state 67
    CHAR            shift and go to state 68
    ENTERO          shift and go to state 65
    FLOTANTE        shift and go to state 69
    BOOLEAN         shift and go to state 70
    VARIABLE        shift and go to state 80

    dato                           shift and go to state 162

state 120

    (70) impresion -> LPAREN IMPRIMIR dato RPAREN .

    $end            reduce using rule 70 (impresion -> LPAREN IMPRIMIR dato RPAREN .)
    LPAREN          reduce using rule 70 (impresion -> LPAREN IMPRIMIR dato RPAREN .)
    NUMERAL         reduce using rule 70 (impresion -> LPAREN IMPRIMIR dato RPAREN .)
    LCOR            reduce using rule 70 (impresion -> LPAREN IMPRIMIR dato RPAREN .)
    L_LLAVE         reduce using rule 70 (impresion -> LPAREN IMPRIMIR dato RPAREN .)
    IF              reduce using rule 70 (impresion -> LPAREN IMPRIMIR dato RPAREN .)
    ENTERO          reduce using rule 70 (impresion -> LPAREN IMPRIMIR dato RPAREN .)
    FLOTANTE        reduce using rule 70 (impresion -> LPAREN IMPRIMIR dato RPAREN .)
    BOOLEAN         reduce using rule 70 (impresion -> LPAREN IMPRIMIR dato RPAREN .)
    RPAREN          reduce using rule 70 (impresion -> LPAREN IMPRIMIR dato RPAREN .)
    DOSPUNTOS       reduce using rule 70 (impresion -> LPAREN IMPRIMIR dato RPAREN .)
    STRING          reduce using rule 70 (impresion -> LPAREN IMPRIMIR dato RPAREN .)
    CHAR            reduce using rule 70 (impresion -> LPAREN IMPRIMIR dato RPAREN .)
    VARIABLE        reduce using rule 70 (impresion -> LPAREN IMPRIMIR dato RPAREN .)


state 121

    (86) operacion_aritmetica -> LPAREN operador_aritmetico dato dato . RPAREN

    RPAREN          shift and go to state 163


state 122

    (61) body -> instrucciones .

    RPAREN          reduce using rule 61 (body -> instrucciones .)
    LPAREN          reduce using rule 61 (body -> instrucciones .)


state 123

    (79) if -> LPAREN IF instrucciones body . RPAREN

    RPAREN          shift and go to state 164


state 124

    (80) do -> LPAREN DO instrucciones RPAREN .

    $end            reduce using rule 80 (do -> LPAREN DO instrucciones RPAREN .)
    LPAREN          reduce using rule 80 (do -> LPAREN DO instrucciones RPAREN .)
    NUMERAL         reduce using rule 80 (do -> LPAREN DO instrucciones RPAREN .)
    LCOR            reduce using rule 80 (do -> LPAREN DO instrucciones RPAREN .)
    L_LLAVE         reduce using rule 80 (do -> LPAREN DO instrucciones RPAREN .)
    IF              reduce using rule 80 (do -> LPAREN DO instrucciones RPAREN .)
    ENTERO          reduce using rule 80 (do -> LPAREN DO instrucciones RPAREN .)
    FLOTANTE        reduce using rule 80 (do -> LPAREN DO instrucciones RPAREN .)
    BOOLEAN         reduce using rule 80 (do -> LPAREN DO instrucciones RPAREN .)
    RPAREN          reduce using rule 80 (do -> LPAREN DO instrucciones RPAREN .)


state 125

    (81) if_do -> LPAREN if do RPAREN .

    $end            reduce using rule 81 (if_do -> LPAREN if do RPAREN .)
    LPAREN          reduce using rule 81 (if_do -> LPAREN if do RPAREN .)
    NUMERAL         reduce using rule 81 (if_do -> LPAREN if do RPAREN .)
    LCOR            reduce using rule 81 (if_do -> LPAREN if do RPAREN .)
    L_LLAVE         reduce using rule 81 (if_do -> LPAREN if do RPAREN .)
    IF              reduce using rule 81 (if_do -> LPAREN if do RPAREN .)
    ENTERO          reduce using rule 81 (if_do -> LPAREN if do RPAREN .)
    FLOTANTE        reduce using rule 81 (if_do -> LPAREN if do RPAREN .)
    BOOLEAN         reduce using rule 81 (if_do -> LPAREN if do RPAREN .)
    RPAREN          reduce using rule 81 (if_do -> LPAREN if do RPAREN .)


state 126

    (85) operacionesLogicas -> LPAREN if recur VARIABLE . RPAREN RPAREN

    RPAREN          shift and go to state 165


state 127

    (82) when -> LPAREN WHEN sentencia_booleana body . RPAREN

    RPAREN          shift and go to state 166


state 128

    (97) defn -> LPAREN DEFFUNCION VARIABLE LCOR . VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN
    (99) defn_with_return -> LPAREN DEFFUNCION VARIABLE LCOR . VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN defn_return
    (60) argumments -> LCOR . argumentos_lista RCOR
    (73) vector -> LCOR . secuencia_v RCOR
    (83) ciclo -> LCOR . VARIABLE ENTERO RCOR
    (57) argumentos_lista -> . dato
    (58) argumentos_lista -> . dato argumentos_lista
    (71) secuencia_v -> . dato
    (72) secuencia_v -> . dato secuencia_v
    (26) dato -> . STRING
    (27) dato -> . CHAR
    (28) dato -> . ENTERO
    (29) dato -> . FLOTANTE
    (30) dato -> . BOOLEAN
    (31) dato -> . VARIABLE

    VARIABLE        shift and go to state 167
    STRING          shift and go to state 67
    CHAR            shift and go to state 68
    ENTERO          shift and go to state 65
    FLOTANTE        shift and go to state 69
    BOOLEAN         shift and go to state 70

    argumentos_lista               shift and go to state 135
    secuencia_v                    shift and go to state 63
    dato                           shift and go to state 168

state 129

    (68) function -> LPAREN DEFFUNCION VARIABLE internos . RPAREN
    (69) function -> LPAREN DEFFUNCION VARIABLE internos . LPAREN if body RPAREN

    RPAREN          shift and go to state 170
    LPAREN          shift and go to state 169


state 130

    (65) internos -> body .

    RPAREN          reduce using rule 65 (internos -> body .)
    LPAREN          reduce using rule 65 (internos -> body .)


state 131

    (63) internos -> STRING .
    (67) internos -> STRING . argumments body
    (60) argumments -> . LCOR argumentos_lista RCOR

    RPAREN          reduce using rule 63 (internos -> STRING .)
    LPAREN          reduce using rule 63 (internos -> STRING .)
    LCOR            shift and go to state 93

    argumments                     shift and go to state 171

state 132

    (64) internos -> argumments .
    (66) internos -> argumments . body
    (61) body -> . instrucciones
    (1) instrucciones -> . asignacion
    (2) instrucciones -> . impresion
    (3) instrucciones -> . operacion_aritmetica
    (4) instrucciones -> . conjuntos
    (5) instrucciones -> . vector
    (6) instrucciones -> . mapa
    (7) instrucciones -> . if
    (8) instrucciones -> . do
    (9) instrucciones -> . if_do
    (10) instrucciones -> . when
    (11) instrucciones -> . defn
    (12) instrucciones -> . defn_with_return
    (13) instrucciones -> . operacionesLogicas
    (14) instrucciones -> . sentenciaLoopRecur
    (15) instrucciones -> . cond_
    (16) instrucciones -> . cond_else
    (17) instrucciones -> . doseq
    (18) instrucciones -> . case_expression
    (19) instrucciones -> . lista
    (20) instrucciones -> . sentencia_booleana
    (21) instrucciones -> . function
    (22) instrucciones -> . dotimes
    (23) instrucciones -> . ciclo
    (24) instrucciones -> . valor
    (25) instrucciones -> . recur
    (45) asignacion -> . LPAREN DEFICION VARIABLE dato RPAREN
    (46) asignacion -> . LPAREN LET LCOR VARIABLE dato RCOR RPAREN
    (70) impresion -> . LPAREN IMPRIMIR dato RPAREN
    (86) operacion_aritmetica -> . LPAREN operador_aritmetico dato dato RPAREN
    (104) conjuntos -> . NUMERAL L_LLAVE expresionConjuntoEnteros R_LLAVE
    (105) conjuntos -> . NUMERAL L_LLAVE expresionConjuntoDouble R_LLAVE
    (106) conjuntos -> . NUMERAL L_LLAVE expresionConjuntoString R_LLAVE
    (73) vector -> . LCOR secuencia_v RCOR
    (76) mapa -> . L_LLAVE secuencia_mapa R_LLAVE
    (77) if -> . IF sentencia_booleana
    (78) if -> . IF sentencia_booleana recur
    (79) if -> . LPAREN IF instrucciones body RPAREN
    (80) do -> . LPAREN DO instrucciones RPAREN
    (81) if_do -> . LPAREN if do RPAREN
    (82) when -> . LPAREN WHEN sentencia_booleana body RPAREN
    (97) defn -> . LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN
    (98) defn -> . LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN
    (99) defn_with_return -> . LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN defn_return
    (100) defn_with_return -> . LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN defn_return
    (85) operacionesLogicas -> . LPAREN if recur VARIABLE RPAREN RPAREN
    (107) sentenciaLoopRecur -> . LPAREN LOOP argumments LPAREN if dato RPAREN RPAREN
    (49) cond_ -> . LPAREN COND linecondition linecondition RPAREN
    (50) cond_else -> . LPAREN COND linecondition linecondition DOSPUNTOS ELSE impresion RPAREN
    (95) doseq -> . LPAREN DOSEQ doseq_args impresion RPAREN
    (96) doseq -> . LPAREN DOSEQ doseq_args LPAREN doseq_prn RPAREN RPAREN
    (55) case_expression -> . LPAREN CASE dato case impresion RPAREN
    (56) case_expression -> . LPAREN CASE dato case DOSPUNTOS ELSE STRING RPAREN
    (59) lista -> . LPAREN LIST argumentos_lista RPAREN
    (47) sentencia_booleana -> . LPAREN operador_comparadores dato dato RPAREN
    (68) function -> . LPAREN DEFFUNCION VARIABLE internos RPAREN
    (69) function -> . LPAREN DEFFUNCION VARIABLE internos LPAREN if body RPAREN
    (84) dotimes -> . LPAREN DOTIMES ciclo body RPAREN
    (83) ciclo -> . LCOR VARIABLE ENTERO RCOR
    (32) valor -> . ENTERO
    (33) valor -> . FLOTANTE
    (34) valor -> . BOOLEAN
    (62) recur -> . LPAREN RECUR LPAREN INC dato RPAREN RPAREN

  ! shift/reduce conflict for LPAREN resolved as shift
    RPAREN          reduce using rule 64 (internos -> argumments .)
    LPAREN          shift and go to state 27
    NUMERAL         shift and go to state 29
    LCOR            shift and go to state 28
    L_LLAVE         shift and go to state 30
    IF              shift and go to state 31
    ENTERO          shift and go to state 32
    FLOTANTE        shift and go to state 33
    BOOLEAN         shift and go to state 34

  ! LPAREN          [ reduce using rule 64 (internos -> argumments .) ]

    body                           shift and go to state 172
    instrucciones                  shift and go to state 122
    asignacion                     shift and go to state 2
    impresion                      shift and go to state 3
    operacion_aritmetica           shift and go to state 4
    conjuntos                      shift and go to state 5
    vector                         shift and go to state 6
    mapa                           shift and go to state 7
    if                             shift and go to state 8
    do                             shift and go to state 9
    if_do                          shift and go to state 10
    when                           shift and go to state 11
    defn                           shift and go to state 12
    defn_with_return               shift and go to state 13
    operacionesLogicas             shift and go to state 14
    sentenciaLoopRecur             shift and go to state 15
    cond_                          shift and go to state 16
    cond_else                      shift and go to state 17
    doseq                          shift and go to state 18
    case_expression                shift and go to state 19
    lista                          shift and go to state 20
    sentencia_booleana             shift and go to state 21
    function                       shift and go to state 22
    dotimes                        shift and go to state 23
    ciclo                          shift and go to state 24
    valor                          shift and go to state 25
    recur                          shift and go to state 26

state 133

    (98) defn -> LPAREN DEFFUNCION INCREASE LCOR . VARIABLE RCOR operacionesLogicas RPAREN
    (100) defn_with_return -> LPAREN DEFFUNCION INCREASE LCOR . VARIABLE RCOR operacionesLogicas RPAREN defn_return

    VARIABLE        shift and go to state 173


state 134

    (107) sentenciaLoopRecur -> LPAREN LOOP argumments LPAREN . if dato RPAREN RPAREN
    (77) if -> . IF sentencia_booleana
    (78) if -> . IF sentencia_booleana recur
    (79) if -> . LPAREN IF instrucciones body RPAREN

    IF              shift and go to state 31
    LPAREN          shift and go to state 35

    if                             shift and go to state 174

state 135

    (60) argumments -> LCOR argumentos_lista . RCOR

    RCOR            shift and go to state 175


state 136

    (49) cond_ -> LPAREN COND linecondition linecondition . RPAREN
    (50) cond_else -> LPAREN COND linecondition linecondition . DOSPUNTOS ELSE impresion RPAREN

    RPAREN          shift and go to state 176
    DOSPUNTOS       shift and go to state 177


state 137

    (48) linecondition -> sentencia_booleana impresion .

    LPAREN          reduce using rule 48 (linecondition -> sentencia_booleana impresion .)
    RPAREN          reduce using rule 48 (linecondition -> sentencia_booleana impresion .)
    DOSPUNTOS       reduce using rule 48 (linecondition -> sentencia_booleana impresion .)


state 138

    (70) impresion -> LPAREN . IMPRIMIR dato RPAREN

    IMPRIMIR        shift and go to state 38


state 139

    (96) doseq -> LPAREN DOSEQ doseq_args LPAREN . doseq_prn RPAREN RPAREN
    (70) impresion -> LPAREN . IMPRIMIR dato RPAREN
    (91) doseq_prn -> . PRN LPAREN dato RPAREN
    (92) doseq_prn -> . PRN dato dato
    (93) doseq_prn -> . PRN dato dato dato
    (94) doseq_prn -> . PRN operacion_aritmetica

    IMPRIMIR        shift and go to state 38
    PRN             shift and go to state 179

    doseq_prn                      shift and go to state 178

state 140

    (95) doseq -> LPAREN DOSEQ doseq_args impresion . RPAREN

    RPAREN          shift and go to state 180


state 141

    (73) vector -> LCOR . secuencia_v RCOR
    (71) secuencia_v -> . dato
    (72) secuencia_v -> . dato secuencia_v
    (26) dato -> . STRING
    (27) dato -> . CHAR
    (28) dato -> . ENTERO
    (29) dato -> . FLOTANTE
    (30) dato -> . BOOLEAN
    (31) dato -> . VARIABLE

    STRING          shift and go to state 67
    CHAR            shift and go to state 68
    ENTERO          shift and go to state 65
    FLOTANTE        shift and go to state 69
    BOOLEAN         shift and go to state 70
    VARIABLE        shift and go to state 80

    secuencia_v                    shift and go to state 63
    dato                           shift and go to state 66

state 142

    (87) doseq_args -> LCOR dato . LPAREN RANGE dato RPAREN RCOR
    (88) doseq_args -> LCOR dato . conjuntos RCOR
    (89) doseq_args -> LCOR dato . vector dato vector RCOR
    (104) conjuntos -> . NUMERAL L_LLAVE expresionConjuntoEnteros R_LLAVE
    (105) conjuntos -> . NUMERAL L_LLAVE expresionConjuntoDouble R_LLAVE
    (106) conjuntos -> . NUMERAL L_LLAVE expresionConjuntoString R_LLAVE
    (73) vector -> . LCOR secuencia_v RCOR

    LPAREN          shift and go to state 181
    NUMERAL         shift and go to state 29
    LCOR            shift and go to state 141

    conjuntos                      shift and go to state 182
    vector                         shift and go to state 183

state 143

    (90) doseq_args -> LCOR vector . conjuntos RCOR
    (104) conjuntos -> . NUMERAL L_LLAVE expresionConjuntoEnteros R_LLAVE
    (105) conjuntos -> . NUMERAL L_LLAVE expresionConjuntoDouble R_LLAVE
    (106) conjuntos -> . NUMERAL L_LLAVE expresionConjuntoString R_LLAVE

    NUMERAL         shift and go to state 29

    conjuntos                      shift and go to state 184

state 144

    (51) case -> dato . impresion
    (52) case -> dato . STRING
    (53) case -> dato . impresion case
    (54) case -> dato . STRING case
    (70) impresion -> . LPAREN IMPRIMIR dato RPAREN

    STRING          shift and go to state 186
    LPAREN          shift and go to state 138

    impresion                      shift and go to state 185

state 145

    (55) case_expression -> LPAREN CASE dato case . impresion RPAREN
    (56) case_expression -> LPAREN CASE dato case . DOSPUNTOS ELSE STRING RPAREN
    (70) impresion -> . LPAREN IMPRIMIR dato RPAREN

    DOSPUNTOS       shift and go to state 188
    LPAREN          shift and go to state 138

    impresion                      shift and go to state 187

state 146

    (59) lista -> LPAREN LIST argumentos_lista RPAREN .

    $end            reduce using rule 59 (lista -> LPAREN LIST argumentos_lista RPAREN .)
    LPAREN          reduce using rule 59 (lista -> LPAREN LIST argumentos_lista RPAREN .)
    NUMERAL         reduce using rule 59 (lista -> LPAREN LIST argumentos_lista RPAREN .)
    LCOR            reduce using rule 59 (lista -> LPAREN LIST argumentos_lista RPAREN .)
    L_LLAVE         reduce using rule 59 (lista -> LPAREN LIST argumentos_lista RPAREN .)
    IF              reduce using rule 59 (lista -> LPAREN LIST argumentos_lista RPAREN .)
    ENTERO          reduce using rule 59 (lista -> LPAREN LIST argumentos_lista RPAREN .)
    FLOTANTE        reduce using rule 59 (lista -> LPAREN LIST argumentos_lista RPAREN .)
    BOOLEAN         reduce using rule 59 (lista -> LPAREN LIST argumentos_lista RPAREN .)
    RPAREN          reduce using rule 59 (lista -> LPAREN LIST argumentos_lista RPAREN .)


state 147

    (58) argumentos_lista -> dato argumentos_lista .

    RPAREN          reduce using rule 58 (argumentos_lista -> dato argumentos_lista .)
    RCOR            reduce using rule 58 (argumentos_lista -> dato argumentos_lista .)


state 148

    (47) sentencia_booleana -> LPAREN operador_comparadores dato dato . RPAREN

    RPAREN          shift and go to state 189


state 149

    (84) dotimes -> LPAREN DOTIMES ciclo body . RPAREN

    RPAREN          shift and go to state 190


state 150

    (83) ciclo -> LCOR VARIABLE . ENTERO RCOR

    ENTERO          shift and go to state 106


state 151

    (62) recur -> LPAREN RECUR LPAREN INC . dato RPAREN RPAREN
    (26) dato -> . STRING
    (27) dato -> . CHAR
    (28) dato -> . ENTERO
    (29) dato -> . FLOTANTE
    (30) dato -> . BOOLEAN
    (31) dato -> . VARIABLE

    STRING          shift and go to state 67
    CHAR            shift and go to state 68
    ENTERO          shift and go to state 65
    FLOTANTE        shift and go to state 69
    BOOLEAN         shift and go to state 70
    VARIABLE        shift and go to state 80

    dato                           shift and go to state 191

state 152

    (83) ciclo -> LCOR VARIABLE ENTERO RCOR .

    $end            reduce using rule 83 (ciclo -> LCOR VARIABLE ENTERO RCOR .)
    LPAREN          reduce using rule 83 (ciclo -> LCOR VARIABLE ENTERO RCOR .)
    NUMERAL         reduce using rule 83 (ciclo -> LCOR VARIABLE ENTERO RCOR .)
    LCOR            reduce using rule 83 (ciclo -> LCOR VARIABLE ENTERO RCOR .)
    L_LLAVE         reduce using rule 83 (ciclo -> LCOR VARIABLE ENTERO RCOR .)
    IF              reduce using rule 83 (ciclo -> LCOR VARIABLE ENTERO RCOR .)
    ENTERO          reduce using rule 83 (ciclo -> LCOR VARIABLE ENTERO RCOR .)
    FLOTANTE        reduce using rule 83 (ciclo -> LCOR VARIABLE ENTERO RCOR .)
    BOOLEAN         reduce using rule 83 (ciclo -> LCOR VARIABLE ENTERO RCOR .)
    RPAREN          reduce using rule 83 (ciclo -> LCOR VARIABLE ENTERO RCOR .)


state 153

    (104) conjuntos -> NUMERAL L_LLAVE expresionConjuntoEnteros R_LLAVE .

    $end            reduce using rule 104 (conjuntos -> NUMERAL L_LLAVE expresionConjuntoEnteros R_LLAVE .)
    LPAREN          reduce using rule 104 (conjuntos -> NUMERAL L_LLAVE expresionConjuntoEnteros R_LLAVE .)
    NUMERAL         reduce using rule 104 (conjuntos -> NUMERAL L_LLAVE expresionConjuntoEnteros R_LLAVE .)
    LCOR            reduce using rule 104 (conjuntos -> NUMERAL L_LLAVE expresionConjuntoEnteros R_LLAVE .)
    L_LLAVE         reduce using rule 104 (conjuntos -> NUMERAL L_LLAVE expresionConjuntoEnteros R_LLAVE .)
    IF              reduce using rule 104 (conjuntos -> NUMERAL L_LLAVE expresionConjuntoEnteros R_LLAVE .)
    ENTERO          reduce using rule 104 (conjuntos -> NUMERAL L_LLAVE expresionConjuntoEnteros R_LLAVE .)
    FLOTANTE        reduce using rule 104 (conjuntos -> NUMERAL L_LLAVE expresionConjuntoEnteros R_LLAVE .)
    BOOLEAN         reduce using rule 104 (conjuntos -> NUMERAL L_LLAVE expresionConjuntoEnteros R_LLAVE .)
    RPAREN          reduce using rule 104 (conjuntos -> NUMERAL L_LLAVE expresionConjuntoEnteros R_LLAVE .)
    RCOR            reduce using rule 104 (conjuntos -> NUMERAL L_LLAVE expresionConjuntoEnteros R_LLAVE .)


state 154

    (105) conjuntos -> NUMERAL L_LLAVE expresionConjuntoDouble R_LLAVE .

    $end            reduce using rule 105 (conjuntos -> NUMERAL L_LLAVE expresionConjuntoDouble R_LLAVE .)
    LPAREN          reduce using rule 105 (conjuntos -> NUMERAL L_LLAVE expresionConjuntoDouble R_LLAVE .)
    NUMERAL         reduce using rule 105 (conjuntos -> NUMERAL L_LLAVE expresionConjuntoDouble R_LLAVE .)
    LCOR            reduce using rule 105 (conjuntos -> NUMERAL L_LLAVE expresionConjuntoDouble R_LLAVE .)
    L_LLAVE         reduce using rule 105 (conjuntos -> NUMERAL L_LLAVE expresionConjuntoDouble R_LLAVE .)
    IF              reduce using rule 105 (conjuntos -> NUMERAL L_LLAVE expresionConjuntoDouble R_LLAVE .)
    ENTERO          reduce using rule 105 (conjuntos -> NUMERAL L_LLAVE expresionConjuntoDouble R_LLAVE .)
    FLOTANTE        reduce using rule 105 (conjuntos -> NUMERAL L_LLAVE expresionConjuntoDouble R_LLAVE .)
    BOOLEAN         reduce using rule 105 (conjuntos -> NUMERAL L_LLAVE expresionConjuntoDouble R_LLAVE .)
    RPAREN          reduce using rule 105 (conjuntos -> NUMERAL L_LLAVE expresionConjuntoDouble R_LLAVE .)
    RCOR            reduce using rule 105 (conjuntos -> NUMERAL L_LLAVE expresionConjuntoDouble R_LLAVE .)


state 155

    (106) conjuntos -> NUMERAL L_LLAVE expresionConjuntoString R_LLAVE .

    $end            reduce using rule 106 (conjuntos -> NUMERAL L_LLAVE expresionConjuntoString R_LLAVE .)
    LPAREN          reduce using rule 106 (conjuntos -> NUMERAL L_LLAVE expresionConjuntoString R_LLAVE .)
    NUMERAL         reduce using rule 106 (conjuntos -> NUMERAL L_LLAVE expresionConjuntoString R_LLAVE .)
    LCOR            reduce using rule 106 (conjuntos -> NUMERAL L_LLAVE expresionConjuntoString R_LLAVE .)
    L_LLAVE         reduce using rule 106 (conjuntos -> NUMERAL L_LLAVE expresionConjuntoString R_LLAVE .)
    IF              reduce using rule 106 (conjuntos -> NUMERAL L_LLAVE expresionConjuntoString R_LLAVE .)
    ENTERO          reduce using rule 106 (conjuntos -> NUMERAL L_LLAVE expresionConjuntoString R_LLAVE .)
    FLOTANTE        reduce using rule 106 (conjuntos -> NUMERAL L_LLAVE expresionConjuntoString R_LLAVE .)
    BOOLEAN         reduce using rule 106 (conjuntos -> NUMERAL L_LLAVE expresionConjuntoString R_LLAVE .)
    RPAREN          reduce using rule 106 (conjuntos -> NUMERAL L_LLAVE expresionConjuntoString R_LLAVE .)
    RCOR            reduce using rule 106 (conjuntos -> NUMERAL L_LLAVE expresionConjuntoString R_LLAVE .)


state 156

    (109) expresionConjuntoEnteros -> ENTERO expresionConjuntoEnteros .

    R_LLAVE         reduce using rule 109 (expresionConjuntoEnteros -> ENTERO expresionConjuntoEnteros .)


state 157

    (111) expresionConjuntoDouble -> FLOTANTE expresionConjuntoDouble .

    R_LLAVE         reduce using rule 111 (expresionConjuntoDouble -> FLOTANTE expresionConjuntoDouble .)


state 158

    (113) expresionConjuntoString -> STRING expresionConjuntoString .

    R_LLAVE         reduce using rule 113 (expresionConjuntoString -> STRING expresionConjuntoString .)


state 159

    (74) secuencia_mapa -> DOSPUNTOS VARIABLE dato .

    R_LLAVE         reduce using rule 74 (secuencia_mapa -> DOSPUNTOS VARIABLE dato .)


state 160

    (75) secuencia_mapa -> DOSPUNTOS VARIABLE secuencia_mapa .

    R_LLAVE         reduce using rule 75 (secuencia_mapa -> DOSPUNTOS VARIABLE secuencia_mapa .)


state 161

    (45) asignacion -> LPAREN DEFICION VARIABLE dato RPAREN .

    $end            reduce using rule 45 (asignacion -> LPAREN DEFICION VARIABLE dato RPAREN .)
    LPAREN          reduce using rule 45 (asignacion -> LPAREN DEFICION VARIABLE dato RPAREN .)
    NUMERAL         reduce using rule 45 (asignacion -> LPAREN DEFICION VARIABLE dato RPAREN .)
    LCOR            reduce using rule 45 (asignacion -> LPAREN DEFICION VARIABLE dato RPAREN .)
    L_LLAVE         reduce using rule 45 (asignacion -> LPAREN DEFICION VARIABLE dato RPAREN .)
    IF              reduce using rule 45 (asignacion -> LPAREN DEFICION VARIABLE dato RPAREN .)
    ENTERO          reduce using rule 45 (asignacion -> LPAREN DEFICION VARIABLE dato RPAREN .)
    FLOTANTE        reduce using rule 45 (asignacion -> LPAREN DEFICION VARIABLE dato RPAREN .)
    BOOLEAN         reduce using rule 45 (asignacion -> LPAREN DEFICION VARIABLE dato RPAREN .)
    RPAREN          reduce using rule 45 (asignacion -> LPAREN DEFICION VARIABLE dato RPAREN .)


state 162

    (46) asignacion -> LPAREN LET LCOR VARIABLE dato . RCOR RPAREN

    RCOR            shift and go to state 192


state 163

    (86) operacion_aritmetica -> LPAREN operador_aritmetico dato dato RPAREN .

    $end            reduce using rule 86 (operacion_aritmetica -> LPAREN operador_aritmetico dato dato RPAREN .)
    LPAREN          reduce using rule 86 (operacion_aritmetica -> LPAREN operador_aritmetico dato dato RPAREN .)
    NUMERAL         reduce using rule 86 (operacion_aritmetica -> LPAREN operador_aritmetico dato dato RPAREN .)
    LCOR            reduce using rule 86 (operacion_aritmetica -> LPAREN operador_aritmetico dato dato RPAREN .)
    L_LLAVE         reduce using rule 86 (operacion_aritmetica -> LPAREN operador_aritmetico dato dato RPAREN .)
    IF              reduce using rule 86 (operacion_aritmetica -> LPAREN operador_aritmetico dato dato RPAREN .)
    ENTERO          reduce using rule 86 (operacion_aritmetica -> LPAREN operador_aritmetico dato dato RPAREN .)
    FLOTANTE        reduce using rule 86 (operacion_aritmetica -> LPAREN operador_aritmetico dato dato RPAREN .)
    BOOLEAN         reduce using rule 86 (operacion_aritmetica -> LPAREN operador_aritmetico dato dato RPAREN .)
    RPAREN          reduce using rule 86 (operacion_aritmetica -> LPAREN operador_aritmetico dato dato RPAREN .)


state 164

    (79) if -> LPAREN IF instrucciones body RPAREN .

    $end            reduce using rule 79 (if -> LPAREN IF instrucciones body RPAREN .)
    LPAREN          reduce using rule 79 (if -> LPAREN IF instrucciones body RPAREN .)
    NUMERAL         reduce using rule 79 (if -> LPAREN IF instrucciones body RPAREN .)
    LCOR            reduce using rule 79 (if -> LPAREN IF instrucciones body RPAREN .)
    L_LLAVE         reduce using rule 79 (if -> LPAREN IF instrucciones body RPAREN .)
    IF              reduce using rule 79 (if -> LPAREN IF instrucciones body RPAREN .)
    ENTERO          reduce using rule 79 (if -> LPAREN IF instrucciones body RPAREN .)
    FLOTANTE        reduce using rule 79 (if -> LPAREN IF instrucciones body RPAREN .)
    BOOLEAN         reduce using rule 79 (if -> LPAREN IF instrucciones body RPAREN .)
    RPAREN          reduce using rule 79 (if -> LPAREN IF instrucciones body RPAREN .)
    STRING          reduce using rule 79 (if -> LPAREN IF instrucciones body RPAREN .)
    CHAR            reduce using rule 79 (if -> LPAREN IF instrucciones body RPAREN .)
    VARIABLE        reduce using rule 79 (if -> LPAREN IF instrucciones body RPAREN .)


state 165

    (85) operacionesLogicas -> LPAREN if recur VARIABLE RPAREN . RPAREN

    RPAREN          shift and go to state 193


state 166

    (82) when -> LPAREN WHEN sentencia_booleana body RPAREN .

    $end            reduce using rule 82 (when -> LPAREN WHEN sentencia_booleana body RPAREN .)
    LPAREN          reduce using rule 82 (when -> LPAREN WHEN sentencia_booleana body RPAREN .)
    NUMERAL         reduce using rule 82 (when -> LPAREN WHEN sentencia_booleana body RPAREN .)
    LCOR            reduce using rule 82 (when -> LPAREN WHEN sentencia_booleana body RPAREN .)
    L_LLAVE         reduce using rule 82 (when -> LPAREN WHEN sentencia_booleana body RPAREN .)
    IF              reduce using rule 82 (when -> LPAREN WHEN sentencia_booleana body RPAREN .)
    ENTERO          reduce using rule 82 (when -> LPAREN WHEN sentencia_booleana body RPAREN .)
    FLOTANTE        reduce using rule 82 (when -> LPAREN WHEN sentencia_booleana body RPAREN .)
    BOOLEAN         reduce using rule 82 (when -> LPAREN WHEN sentencia_booleana body RPAREN .)
    RPAREN          reduce using rule 82 (when -> LPAREN WHEN sentencia_booleana body RPAREN .)


state 167

    (97) defn -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE . RCOR LPAREN expresionDefnElse RPAREN RPAREN
    (99) defn_with_return -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE . RCOR LPAREN expresionDefnElse RPAREN RPAREN defn_return
    (83) ciclo -> LCOR VARIABLE . ENTERO RCOR
    (31) dato -> VARIABLE .

  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for RCOR resolved as shift
    RCOR            shift and go to state 194
    ENTERO          shift and go to state 106
    STRING          reduce using rule 31 (dato -> VARIABLE .)
    CHAR            reduce using rule 31 (dato -> VARIABLE .)
    FLOTANTE        reduce using rule 31 (dato -> VARIABLE .)
    BOOLEAN         reduce using rule 31 (dato -> VARIABLE .)
    VARIABLE        reduce using rule 31 (dato -> VARIABLE .)

  ! ENTERO          [ reduce using rule 31 (dato -> VARIABLE .) ]
  ! RCOR            [ reduce using rule 31 (dato -> VARIABLE .) ]


state 168

    (57) argumentos_lista -> dato .
    (58) argumentos_lista -> dato . argumentos_lista
    (71) secuencia_v -> dato .
    (72) secuencia_v -> dato . secuencia_v
    (57) argumentos_lista -> . dato
    (58) argumentos_lista -> . dato argumentos_lista
    (71) secuencia_v -> . dato
    (72) secuencia_v -> . dato secuencia_v
    (26) dato -> . STRING
    (27) dato -> . CHAR
    (28) dato -> . ENTERO
    (29) dato -> . FLOTANTE
    (30) dato -> . BOOLEAN
    (31) dato -> . VARIABLE

  ! reduce/reduce conflict for RCOR resolved using rule 57 (argumentos_lista -> dato .)
    RCOR            reduce using rule 57 (argumentos_lista -> dato .)
    STRING          shift and go to state 67
    CHAR            shift and go to state 68
    ENTERO          shift and go to state 65
    FLOTANTE        shift and go to state 69
    BOOLEAN         shift and go to state 70
    VARIABLE        shift and go to state 80

  ! RCOR            [ reduce using rule 71 (secuencia_v -> dato .) ]

    dato                           shift and go to state 168
    argumentos_lista               shift and go to state 147
    secuencia_v                    shift and go to state 107

state 169

    (69) function -> LPAREN DEFFUNCION VARIABLE internos LPAREN . if body RPAREN
    (77) if -> . IF sentencia_booleana
    (78) if -> . IF sentencia_booleana recur
    (79) if -> . LPAREN IF instrucciones body RPAREN

    IF              shift and go to state 31
    LPAREN          shift and go to state 35

    if                             shift and go to state 195

state 170

    (68) function -> LPAREN DEFFUNCION VARIABLE internos RPAREN .

    $end            reduce using rule 68 (function -> LPAREN DEFFUNCION VARIABLE internos RPAREN .)
    LPAREN          reduce using rule 68 (function -> LPAREN DEFFUNCION VARIABLE internos RPAREN .)
    NUMERAL         reduce using rule 68 (function -> LPAREN DEFFUNCION VARIABLE internos RPAREN .)
    LCOR            reduce using rule 68 (function -> LPAREN DEFFUNCION VARIABLE internos RPAREN .)
    L_LLAVE         reduce using rule 68 (function -> LPAREN DEFFUNCION VARIABLE internos RPAREN .)
    IF              reduce using rule 68 (function -> LPAREN DEFFUNCION VARIABLE internos RPAREN .)
    ENTERO          reduce using rule 68 (function -> LPAREN DEFFUNCION VARIABLE internos RPAREN .)
    FLOTANTE        reduce using rule 68 (function -> LPAREN DEFFUNCION VARIABLE internos RPAREN .)
    BOOLEAN         reduce using rule 68 (function -> LPAREN DEFFUNCION VARIABLE internos RPAREN .)
    RPAREN          reduce using rule 68 (function -> LPAREN DEFFUNCION VARIABLE internos RPAREN .)


state 171

    (67) internos -> STRING argumments . body
    (61) body -> . instrucciones
    (1) instrucciones -> . asignacion
    (2) instrucciones -> . impresion
    (3) instrucciones -> . operacion_aritmetica
    (4) instrucciones -> . conjuntos
    (5) instrucciones -> . vector
    (6) instrucciones -> . mapa
    (7) instrucciones -> . if
    (8) instrucciones -> . do
    (9) instrucciones -> . if_do
    (10) instrucciones -> . when
    (11) instrucciones -> . defn
    (12) instrucciones -> . defn_with_return
    (13) instrucciones -> . operacionesLogicas
    (14) instrucciones -> . sentenciaLoopRecur
    (15) instrucciones -> . cond_
    (16) instrucciones -> . cond_else
    (17) instrucciones -> . doseq
    (18) instrucciones -> . case_expression
    (19) instrucciones -> . lista
    (20) instrucciones -> . sentencia_booleana
    (21) instrucciones -> . function
    (22) instrucciones -> . dotimes
    (23) instrucciones -> . ciclo
    (24) instrucciones -> . valor
    (25) instrucciones -> . recur
    (45) asignacion -> . LPAREN DEFICION VARIABLE dato RPAREN
    (46) asignacion -> . LPAREN LET LCOR VARIABLE dato RCOR RPAREN
    (70) impresion -> . LPAREN IMPRIMIR dato RPAREN
    (86) operacion_aritmetica -> . LPAREN operador_aritmetico dato dato RPAREN
    (104) conjuntos -> . NUMERAL L_LLAVE expresionConjuntoEnteros R_LLAVE
    (105) conjuntos -> . NUMERAL L_LLAVE expresionConjuntoDouble R_LLAVE
    (106) conjuntos -> . NUMERAL L_LLAVE expresionConjuntoString R_LLAVE
    (73) vector -> . LCOR secuencia_v RCOR
    (76) mapa -> . L_LLAVE secuencia_mapa R_LLAVE
    (77) if -> . IF sentencia_booleana
    (78) if -> . IF sentencia_booleana recur
    (79) if -> . LPAREN IF instrucciones body RPAREN
    (80) do -> . LPAREN DO instrucciones RPAREN
    (81) if_do -> . LPAREN if do RPAREN
    (82) when -> . LPAREN WHEN sentencia_booleana body RPAREN
    (97) defn -> . LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN
    (98) defn -> . LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN
    (99) defn_with_return -> . LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN defn_return
    (100) defn_with_return -> . LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN defn_return
    (85) operacionesLogicas -> . LPAREN if recur VARIABLE RPAREN RPAREN
    (107) sentenciaLoopRecur -> . LPAREN LOOP argumments LPAREN if dato RPAREN RPAREN
    (49) cond_ -> . LPAREN COND linecondition linecondition RPAREN
    (50) cond_else -> . LPAREN COND linecondition linecondition DOSPUNTOS ELSE impresion RPAREN
    (95) doseq -> . LPAREN DOSEQ doseq_args impresion RPAREN
    (96) doseq -> . LPAREN DOSEQ doseq_args LPAREN doseq_prn RPAREN RPAREN
    (55) case_expression -> . LPAREN CASE dato case impresion RPAREN
    (56) case_expression -> . LPAREN CASE dato case DOSPUNTOS ELSE STRING RPAREN
    (59) lista -> . LPAREN LIST argumentos_lista RPAREN
    (47) sentencia_booleana -> . LPAREN operador_comparadores dato dato RPAREN
    (68) function -> . LPAREN DEFFUNCION VARIABLE internos RPAREN
    (69) function -> . LPAREN DEFFUNCION VARIABLE internos LPAREN if body RPAREN
    (84) dotimes -> . LPAREN DOTIMES ciclo body RPAREN
    (83) ciclo -> . LCOR VARIABLE ENTERO RCOR
    (32) valor -> . ENTERO
    (33) valor -> . FLOTANTE
    (34) valor -> . BOOLEAN
    (62) recur -> . LPAREN RECUR LPAREN INC dato RPAREN RPAREN

    LPAREN          shift and go to state 27
    NUMERAL         shift and go to state 29
    LCOR            shift and go to state 28
    L_LLAVE         shift and go to state 30
    IF              shift and go to state 31
    ENTERO          shift and go to state 32
    FLOTANTE        shift and go to state 33
    BOOLEAN         shift and go to state 34

    body                           shift and go to state 196
    instrucciones                  shift and go to state 122
    asignacion                     shift and go to state 2
    impresion                      shift and go to state 3
    operacion_aritmetica           shift and go to state 4
    conjuntos                      shift and go to state 5
    vector                         shift and go to state 6
    mapa                           shift and go to state 7
    if                             shift and go to state 8
    do                             shift and go to state 9
    if_do                          shift and go to state 10
    when                           shift and go to state 11
    defn                           shift and go to state 12
    defn_with_return               shift and go to state 13
    operacionesLogicas             shift and go to state 14
    sentenciaLoopRecur             shift and go to state 15
    cond_                          shift and go to state 16
    cond_else                      shift and go to state 17
    doseq                          shift and go to state 18
    case_expression                shift and go to state 19
    lista                          shift and go to state 20
    sentencia_booleana             shift and go to state 21
    function                       shift and go to state 22
    dotimes                        shift and go to state 23
    ciclo                          shift and go to state 24
    valor                          shift and go to state 25
    recur                          shift and go to state 26

state 172

    (66) internos -> argumments body .

    RPAREN          reduce using rule 66 (internos -> argumments body .)
    LPAREN          reduce using rule 66 (internos -> argumments body .)


state 173

    (98) defn -> LPAREN DEFFUNCION INCREASE LCOR VARIABLE . RCOR operacionesLogicas RPAREN
    (100) defn_with_return -> LPAREN DEFFUNCION INCREASE LCOR VARIABLE . RCOR operacionesLogicas RPAREN defn_return

    RCOR            shift and go to state 197


state 174

    (107) sentenciaLoopRecur -> LPAREN LOOP argumments LPAREN if . dato RPAREN RPAREN
    (26) dato -> . STRING
    (27) dato -> . CHAR
    (28) dato -> . ENTERO
    (29) dato -> . FLOTANTE
    (30) dato -> . BOOLEAN
    (31) dato -> . VARIABLE

    STRING          shift and go to state 67
    CHAR            shift and go to state 68
    ENTERO          shift and go to state 65
    FLOTANTE        shift and go to state 69
    BOOLEAN         shift and go to state 70
    VARIABLE        shift and go to state 80

    dato                           shift and go to state 198

state 175

    (60) argumments -> LCOR argumentos_lista RCOR .

    LPAREN          reduce using rule 60 (argumments -> LCOR argumentos_lista RCOR .)
    NUMERAL         reduce using rule 60 (argumments -> LCOR argumentos_lista RCOR .)
    LCOR            reduce using rule 60 (argumments -> LCOR argumentos_lista RCOR .)
    L_LLAVE         reduce using rule 60 (argumments -> LCOR argumentos_lista RCOR .)
    IF              reduce using rule 60 (argumments -> LCOR argumentos_lista RCOR .)
    ENTERO          reduce using rule 60 (argumments -> LCOR argumentos_lista RCOR .)
    FLOTANTE        reduce using rule 60 (argumments -> LCOR argumentos_lista RCOR .)
    BOOLEAN         reduce using rule 60 (argumments -> LCOR argumentos_lista RCOR .)
    RPAREN          reduce using rule 60 (argumments -> LCOR argumentos_lista RCOR .)


state 176

    (49) cond_ -> LPAREN COND linecondition linecondition RPAREN .

    $end            reduce using rule 49 (cond_ -> LPAREN COND linecondition linecondition RPAREN .)
    LPAREN          reduce using rule 49 (cond_ -> LPAREN COND linecondition linecondition RPAREN .)
    NUMERAL         reduce using rule 49 (cond_ -> LPAREN COND linecondition linecondition RPAREN .)
    LCOR            reduce using rule 49 (cond_ -> LPAREN COND linecondition linecondition RPAREN .)
    L_LLAVE         reduce using rule 49 (cond_ -> LPAREN COND linecondition linecondition RPAREN .)
    IF              reduce using rule 49 (cond_ -> LPAREN COND linecondition linecondition RPAREN .)
    ENTERO          reduce using rule 49 (cond_ -> LPAREN COND linecondition linecondition RPAREN .)
    FLOTANTE        reduce using rule 49 (cond_ -> LPAREN COND linecondition linecondition RPAREN .)
    BOOLEAN         reduce using rule 49 (cond_ -> LPAREN COND linecondition linecondition RPAREN .)
    RPAREN          reduce using rule 49 (cond_ -> LPAREN COND linecondition linecondition RPAREN .)


state 177

    (50) cond_else -> LPAREN COND linecondition linecondition DOSPUNTOS . ELSE impresion RPAREN

    ELSE            shift and go to state 199


state 178

    (96) doseq -> LPAREN DOSEQ doseq_args LPAREN doseq_prn . RPAREN RPAREN

    RPAREN          shift and go to state 200


state 179

    (91) doseq_prn -> PRN . LPAREN dato RPAREN
    (92) doseq_prn -> PRN . dato dato
    (93) doseq_prn -> PRN . dato dato dato
    (94) doseq_prn -> PRN . operacion_aritmetica
    (26) dato -> . STRING
    (27) dato -> . CHAR
    (28) dato -> . ENTERO
    (29) dato -> . FLOTANTE
    (30) dato -> . BOOLEAN
    (31) dato -> . VARIABLE
    (86) operacion_aritmetica -> . LPAREN operador_aritmetico dato dato RPAREN

    LPAREN          shift and go to state 201
    STRING          shift and go to state 67
    CHAR            shift and go to state 68
    ENTERO          shift and go to state 65
    FLOTANTE        shift and go to state 69
    BOOLEAN         shift and go to state 70
    VARIABLE        shift and go to state 80

    dato                           shift and go to state 202
    operacion_aritmetica           shift and go to state 203

state 180

    (95) doseq -> LPAREN DOSEQ doseq_args impresion RPAREN .

    $end            reduce using rule 95 (doseq -> LPAREN DOSEQ doseq_args impresion RPAREN .)
    LPAREN          reduce using rule 95 (doseq -> LPAREN DOSEQ doseq_args impresion RPAREN .)
    NUMERAL         reduce using rule 95 (doseq -> LPAREN DOSEQ doseq_args impresion RPAREN .)
    LCOR            reduce using rule 95 (doseq -> LPAREN DOSEQ doseq_args impresion RPAREN .)
    L_LLAVE         reduce using rule 95 (doseq -> LPAREN DOSEQ doseq_args impresion RPAREN .)
    IF              reduce using rule 95 (doseq -> LPAREN DOSEQ doseq_args impresion RPAREN .)
    ENTERO          reduce using rule 95 (doseq -> LPAREN DOSEQ doseq_args impresion RPAREN .)
    FLOTANTE        reduce using rule 95 (doseq -> LPAREN DOSEQ doseq_args impresion RPAREN .)
    BOOLEAN         reduce using rule 95 (doseq -> LPAREN DOSEQ doseq_args impresion RPAREN .)
    RPAREN          reduce using rule 95 (doseq -> LPAREN DOSEQ doseq_args impresion RPAREN .)


state 181

    (87) doseq_args -> LCOR dato LPAREN . RANGE dato RPAREN RCOR

    RANGE           shift and go to state 204


state 182

    (88) doseq_args -> LCOR dato conjuntos . RCOR

    RCOR            shift and go to state 205


state 183

    (89) doseq_args -> LCOR dato vector . dato vector RCOR
    (26) dato -> . STRING
    (27) dato -> . CHAR
    (28) dato -> . ENTERO
    (29) dato -> . FLOTANTE
    (30) dato -> . BOOLEAN
    (31) dato -> . VARIABLE

    STRING          shift and go to state 67
    CHAR            shift and go to state 68
    ENTERO          shift and go to state 65
    FLOTANTE        shift and go to state 69
    BOOLEAN         shift and go to state 70
    VARIABLE        shift and go to state 80

    dato                           shift and go to state 206

state 184

    (90) doseq_args -> LCOR vector conjuntos . RCOR

    RCOR            shift and go to state 207


state 185

    (51) case -> dato impresion .
    (53) case -> dato impresion . case
    (51) case -> . dato impresion
    (52) case -> . dato STRING
    (53) case -> . dato impresion case
    (54) case -> . dato STRING case
    (26) dato -> . STRING
    (27) dato -> . CHAR
    (28) dato -> . ENTERO
    (29) dato -> . FLOTANTE
    (30) dato -> . BOOLEAN
    (31) dato -> . VARIABLE

    DOSPUNTOS       reduce using rule 51 (case -> dato impresion .)
    LPAREN          reduce using rule 51 (case -> dato impresion .)
    STRING          shift and go to state 67
    CHAR            shift and go to state 68
    ENTERO          shift and go to state 65
    FLOTANTE        shift and go to state 69
    BOOLEAN         shift and go to state 70
    VARIABLE        shift and go to state 80

    dato                           shift and go to state 144
    case                           shift and go to state 208

state 186

    (52) case -> dato STRING .
    (54) case -> dato STRING . case
    (51) case -> . dato impresion
    (52) case -> . dato STRING
    (53) case -> . dato impresion case
    (54) case -> . dato STRING case
    (26) dato -> . STRING
    (27) dato -> . CHAR
    (28) dato -> . ENTERO
    (29) dato -> . FLOTANTE
    (30) dato -> . BOOLEAN
    (31) dato -> . VARIABLE

    DOSPUNTOS       reduce using rule 52 (case -> dato STRING .)
    LPAREN          reduce using rule 52 (case -> dato STRING .)
    STRING          shift and go to state 67
    CHAR            shift and go to state 68
    ENTERO          shift and go to state 65
    FLOTANTE        shift and go to state 69
    BOOLEAN         shift and go to state 70
    VARIABLE        shift and go to state 80

    dato                           shift and go to state 144
    case                           shift and go to state 209

state 187

    (55) case_expression -> LPAREN CASE dato case impresion . RPAREN

    RPAREN          shift and go to state 210


state 188

    (56) case_expression -> LPAREN CASE dato case DOSPUNTOS . ELSE STRING RPAREN

    ELSE            shift and go to state 211


state 189

    (47) sentencia_booleana -> LPAREN operador_comparadores dato dato RPAREN .

    $end            reduce using rule 47 (sentencia_booleana -> LPAREN operador_comparadores dato dato RPAREN .)
    LPAREN          reduce using rule 47 (sentencia_booleana -> LPAREN operador_comparadores dato dato RPAREN .)
    NUMERAL         reduce using rule 47 (sentencia_booleana -> LPAREN operador_comparadores dato dato RPAREN .)
    LCOR            reduce using rule 47 (sentencia_booleana -> LPAREN operador_comparadores dato dato RPAREN .)
    L_LLAVE         reduce using rule 47 (sentencia_booleana -> LPAREN operador_comparadores dato dato RPAREN .)
    IF              reduce using rule 47 (sentencia_booleana -> LPAREN operador_comparadores dato dato RPAREN .)
    ENTERO          reduce using rule 47 (sentencia_booleana -> LPAREN operador_comparadores dato dato RPAREN .)
    FLOTANTE        reduce using rule 47 (sentencia_booleana -> LPAREN operador_comparadores dato dato RPAREN .)
    BOOLEAN         reduce using rule 47 (sentencia_booleana -> LPAREN operador_comparadores dato dato RPAREN .)
    RPAREN          reduce using rule 47 (sentencia_booleana -> LPAREN operador_comparadores dato dato RPAREN .)
    STRING          reduce using rule 47 (sentencia_booleana -> LPAREN operador_comparadores dato dato RPAREN .)
    CHAR            reduce using rule 47 (sentencia_booleana -> LPAREN operador_comparadores dato dato RPAREN .)
    VARIABLE        reduce using rule 47 (sentencia_booleana -> LPAREN operador_comparadores dato dato RPAREN .)


state 190

    (84) dotimes -> LPAREN DOTIMES ciclo body RPAREN .

    $end            reduce using rule 84 (dotimes -> LPAREN DOTIMES ciclo body RPAREN .)
    LPAREN          reduce using rule 84 (dotimes -> LPAREN DOTIMES ciclo body RPAREN .)
    NUMERAL         reduce using rule 84 (dotimes -> LPAREN DOTIMES ciclo body RPAREN .)
    LCOR            reduce using rule 84 (dotimes -> LPAREN DOTIMES ciclo body RPAREN .)
    L_LLAVE         reduce using rule 84 (dotimes -> LPAREN DOTIMES ciclo body RPAREN .)
    IF              reduce using rule 84 (dotimes -> LPAREN DOTIMES ciclo body RPAREN .)
    ENTERO          reduce using rule 84 (dotimes -> LPAREN DOTIMES ciclo body RPAREN .)
    FLOTANTE        reduce using rule 84 (dotimes -> LPAREN DOTIMES ciclo body RPAREN .)
    BOOLEAN         reduce using rule 84 (dotimes -> LPAREN DOTIMES ciclo body RPAREN .)
    RPAREN          reduce using rule 84 (dotimes -> LPAREN DOTIMES ciclo body RPAREN .)


state 191

    (62) recur -> LPAREN RECUR LPAREN INC dato . RPAREN RPAREN

    RPAREN          shift and go to state 212


state 192

    (46) asignacion -> LPAREN LET LCOR VARIABLE dato RCOR . RPAREN

    RPAREN          shift and go to state 213


state 193

    (85) operacionesLogicas -> LPAREN if recur VARIABLE RPAREN RPAREN .

    $end            reduce using rule 85 (operacionesLogicas -> LPAREN if recur VARIABLE RPAREN RPAREN .)
    LPAREN          reduce using rule 85 (operacionesLogicas -> LPAREN if recur VARIABLE RPAREN RPAREN .)
    NUMERAL         reduce using rule 85 (operacionesLogicas -> LPAREN if recur VARIABLE RPAREN RPAREN .)
    LCOR            reduce using rule 85 (operacionesLogicas -> LPAREN if recur VARIABLE RPAREN RPAREN .)
    L_LLAVE         reduce using rule 85 (operacionesLogicas -> LPAREN if recur VARIABLE RPAREN RPAREN .)
    IF              reduce using rule 85 (operacionesLogicas -> LPAREN if recur VARIABLE RPAREN RPAREN .)
    ENTERO          reduce using rule 85 (operacionesLogicas -> LPAREN if recur VARIABLE RPAREN RPAREN .)
    FLOTANTE        reduce using rule 85 (operacionesLogicas -> LPAREN if recur VARIABLE RPAREN RPAREN .)
    BOOLEAN         reduce using rule 85 (operacionesLogicas -> LPAREN if recur VARIABLE RPAREN RPAREN .)
    RPAREN          reduce using rule 85 (operacionesLogicas -> LPAREN if recur VARIABLE RPAREN RPAREN .)


state 194

    (97) defn -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR . LPAREN expresionDefnElse RPAREN RPAREN
    (99) defn_with_return -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR . LPAREN expresionDefnElse RPAREN RPAREN defn_return

    LPAREN          shift and go to state 214


state 195

    (69) function -> LPAREN DEFFUNCION VARIABLE internos LPAREN if . body RPAREN
    (61) body -> . instrucciones
    (1) instrucciones -> . asignacion
    (2) instrucciones -> . impresion
    (3) instrucciones -> . operacion_aritmetica
    (4) instrucciones -> . conjuntos
    (5) instrucciones -> . vector
    (6) instrucciones -> . mapa
    (7) instrucciones -> . if
    (8) instrucciones -> . do
    (9) instrucciones -> . if_do
    (10) instrucciones -> . when
    (11) instrucciones -> . defn
    (12) instrucciones -> . defn_with_return
    (13) instrucciones -> . operacionesLogicas
    (14) instrucciones -> . sentenciaLoopRecur
    (15) instrucciones -> . cond_
    (16) instrucciones -> . cond_else
    (17) instrucciones -> . doseq
    (18) instrucciones -> . case_expression
    (19) instrucciones -> . lista
    (20) instrucciones -> . sentencia_booleana
    (21) instrucciones -> . function
    (22) instrucciones -> . dotimes
    (23) instrucciones -> . ciclo
    (24) instrucciones -> . valor
    (25) instrucciones -> . recur
    (45) asignacion -> . LPAREN DEFICION VARIABLE dato RPAREN
    (46) asignacion -> . LPAREN LET LCOR VARIABLE dato RCOR RPAREN
    (70) impresion -> . LPAREN IMPRIMIR dato RPAREN
    (86) operacion_aritmetica -> . LPAREN operador_aritmetico dato dato RPAREN
    (104) conjuntos -> . NUMERAL L_LLAVE expresionConjuntoEnteros R_LLAVE
    (105) conjuntos -> . NUMERAL L_LLAVE expresionConjuntoDouble R_LLAVE
    (106) conjuntos -> . NUMERAL L_LLAVE expresionConjuntoString R_LLAVE
    (73) vector -> . LCOR secuencia_v RCOR
    (76) mapa -> . L_LLAVE secuencia_mapa R_LLAVE
    (77) if -> . IF sentencia_booleana
    (78) if -> . IF sentencia_booleana recur
    (79) if -> . LPAREN IF instrucciones body RPAREN
    (80) do -> . LPAREN DO instrucciones RPAREN
    (81) if_do -> . LPAREN if do RPAREN
    (82) when -> . LPAREN WHEN sentencia_booleana body RPAREN
    (97) defn -> . LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN
    (98) defn -> . LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN
    (99) defn_with_return -> . LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN defn_return
    (100) defn_with_return -> . LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN defn_return
    (85) operacionesLogicas -> . LPAREN if recur VARIABLE RPAREN RPAREN
    (107) sentenciaLoopRecur -> . LPAREN LOOP argumments LPAREN if dato RPAREN RPAREN
    (49) cond_ -> . LPAREN COND linecondition linecondition RPAREN
    (50) cond_else -> . LPAREN COND linecondition linecondition DOSPUNTOS ELSE impresion RPAREN
    (95) doseq -> . LPAREN DOSEQ doseq_args impresion RPAREN
    (96) doseq -> . LPAREN DOSEQ doseq_args LPAREN doseq_prn RPAREN RPAREN
    (55) case_expression -> . LPAREN CASE dato case impresion RPAREN
    (56) case_expression -> . LPAREN CASE dato case DOSPUNTOS ELSE STRING RPAREN
    (59) lista -> . LPAREN LIST argumentos_lista RPAREN
    (47) sentencia_booleana -> . LPAREN operador_comparadores dato dato RPAREN
    (68) function -> . LPAREN DEFFUNCION VARIABLE internos RPAREN
    (69) function -> . LPAREN DEFFUNCION VARIABLE internos LPAREN if body RPAREN
    (84) dotimes -> . LPAREN DOTIMES ciclo body RPAREN
    (83) ciclo -> . LCOR VARIABLE ENTERO RCOR
    (32) valor -> . ENTERO
    (33) valor -> . FLOTANTE
    (34) valor -> . BOOLEAN
    (62) recur -> . LPAREN RECUR LPAREN INC dato RPAREN RPAREN

    LPAREN          shift and go to state 27
    NUMERAL         shift and go to state 29
    LCOR            shift and go to state 28
    L_LLAVE         shift and go to state 30
    IF              shift and go to state 31
    ENTERO          shift and go to state 32
    FLOTANTE        shift and go to state 33
    BOOLEAN         shift and go to state 34

    if                             shift and go to state 8
    body                           shift and go to state 215
    instrucciones                  shift and go to state 122
    asignacion                     shift and go to state 2
    impresion                      shift and go to state 3
    operacion_aritmetica           shift and go to state 4
    conjuntos                      shift and go to state 5
    vector                         shift and go to state 6
    mapa                           shift and go to state 7
    do                             shift and go to state 9
    if_do                          shift and go to state 10
    when                           shift and go to state 11
    defn                           shift and go to state 12
    defn_with_return               shift and go to state 13
    operacionesLogicas             shift and go to state 14
    sentenciaLoopRecur             shift and go to state 15
    cond_                          shift and go to state 16
    cond_else                      shift and go to state 17
    doseq                          shift and go to state 18
    case_expression                shift and go to state 19
    lista                          shift and go to state 20
    sentencia_booleana             shift and go to state 21
    function                       shift and go to state 22
    dotimes                        shift and go to state 23
    ciclo                          shift and go to state 24
    valor                          shift and go to state 25
    recur                          shift and go to state 26

state 196

    (67) internos -> STRING argumments body .

    RPAREN          reduce using rule 67 (internos -> STRING argumments body .)
    LPAREN          reduce using rule 67 (internos -> STRING argumments body .)


state 197

    (98) defn -> LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR . operacionesLogicas RPAREN
    (100) defn_with_return -> LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR . operacionesLogicas RPAREN defn_return
    (85) operacionesLogicas -> . LPAREN if recur VARIABLE RPAREN RPAREN

    LPAREN          shift and go to state 216

    operacionesLogicas             shift and go to state 217

state 198

    (107) sentenciaLoopRecur -> LPAREN LOOP argumments LPAREN if dato . RPAREN RPAREN

    RPAREN          shift and go to state 218


state 199

    (50) cond_else -> LPAREN COND linecondition linecondition DOSPUNTOS ELSE . impresion RPAREN
    (70) impresion -> . LPAREN IMPRIMIR dato RPAREN

    LPAREN          shift and go to state 138

    impresion                      shift and go to state 219

state 200

    (96) doseq -> LPAREN DOSEQ doseq_args LPAREN doseq_prn RPAREN . RPAREN

    RPAREN          shift and go to state 220


state 201

    (91) doseq_prn -> PRN LPAREN . dato RPAREN
    (86) operacion_aritmetica -> LPAREN . operador_aritmetico dato dato RPAREN
    (26) dato -> . STRING
    (27) dato -> . CHAR
    (28) dato -> . ENTERO
    (29) dato -> . FLOTANTE
    (30) dato -> . BOOLEAN
    (31) dato -> . VARIABLE
    (41) operador_aritmetico -> . MAS
    (42) operador_aritmetico -> . MENOS
    (43) operador_aritmetico -> . PRODUCTO
    (44) operador_aritmetico -> . DIVISION

    STRING          shift and go to state 67
    CHAR            shift and go to state 68
    ENTERO          shift and go to state 65
    FLOTANTE        shift and go to state 69
    BOOLEAN         shift and go to state 70
    VARIABLE        shift and go to state 80
    MAS             shift and go to state 53
    MENOS           shift and go to state 54
    PRODUCTO        shift and go to state 55
    DIVISION        shift and go to state 56

    dato                           shift and go to state 221
    operador_aritmetico            shift and go to state 39

state 202

    (92) doseq_prn -> PRN dato . dato
    (93) doseq_prn -> PRN dato . dato dato
    (26) dato -> . STRING
    (27) dato -> . CHAR
    (28) dato -> . ENTERO
    (29) dato -> . FLOTANTE
    (30) dato -> . BOOLEAN
    (31) dato -> . VARIABLE

    STRING          shift and go to state 67
    CHAR            shift and go to state 68
    ENTERO          shift and go to state 65
    FLOTANTE        shift and go to state 69
    BOOLEAN         shift and go to state 70
    VARIABLE        shift and go to state 80

    dato                           shift and go to state 222

state 203

    (94) doseq_prn -> PRN operacion_aritmetica .

    RPAREN          reduce using rule 94 (doseq_prn -> PRN operacion_aritmetica .)


state 204

    (87) doseq_args -> LCOR dato LPAREN RANGE . dato RPAREN RCOR
    (26) dato -> . STRING
    (27) dato -> . CHAR
    (28) dato -> . ENTERO
    (29) dato -> . FLOTANTE
    (30) dato -> . BOOLEAN
    (31) dato -> . VARIABLE

    STRING          shift and go to state 67
    CHAR            shift and go to state 68
    ENTERO          shift and go to state 65
    FLOTANTE        shift and go to state 69
    BOOLEAN         shift and go to state 70
    VARIABLE        shift and go to state 80

    dato                           shift and go to state 223

state 205

    (88) doseq_args -> LCOR dato conjuntos RCOR .

    LPAREN          reduce using rule 88 (doseq_args -> LCOR dato conjuntos RCOR .)


state 206

    (89) doseq_args -> LCOR dato vector dato . vector RCOR
    (73) vector -> . LCOR secuencia_v RCOR

    LCOR            shift and go to state 141

    vector                         shift and go to state 224

state 207

    (90) doseq_args -> LCOR vector conjuntos RCOR .

    LPAREN          reduce using rule 90 (doseq_args -> LCOR vector conjuntos RCOR .)


state 208

    (53) case -> dato impresion case .

    DOSPUNTOS       reduce using rule 53 (case -> dato impresion case .)
    LPAREN          reduce using rule 53 (case -> dato impresion case .)


state 209

    (54) case -> dato STRING case .

    DOSPUNTOS       reduce using rule 54 (case -> dato STRING case .)
    LPAREN          reduce using rule 54 (case -> dato STRING case .)


state 210

    (55) case_expression -> LPAREN CASE dato case impresion RPAREN .

    $end            reduce using rule 55 (case_expression -> LPAREN CASE dato case impresion RPAREN .)
    LPAREN          reduce using rule 55 (case_expression -> LPAREN CASE dato case impresion RPAREN .)
    NUMERAL         reduce using rule 55 (case_expression -> LPAREN CASE dato case impresion RPAREN .)
    LCOR            reduce using rule 55 (case_expression -> LPAREN CASE dato case impresion RPAREN .)
    L_LLAVE         reduce using rule 55 (case_expression -> LPAREN CASE dato case impresion RPAREN .)
    IF              reduce using rule 55 (case_expression -> LPAREN CASE dato case impresion RPAREN .)
    ENTERO          reduce using rule 55 (case_expression -> LPAREN CASE dato case impresion RPAREN .)
    FLOTANTE        reduce using rule 55 (case_expression -> LPAREN CASE dato case impresion RPAREN .)
    BOOLEAN         reduce using rule 55 (case_expression -> LPAREN CASE dato case impresion RPAREN .)
    RPAREN          reduce using rule 55 (case_expression -> LPAREN CASE dato case impresion RPAREN .)


state 211

    (56) case_expression -> LPAREN CASE dato case DOSPUNTOS ELSE . STRING RPAREN

    STRING          shift and go to state 225


state 212

    (62) recur -> LPAREN RECUR LPAREN INC dato RPAREN . RPAREN

    RPAREN          shift and go to state 226


state 213

    (46) asignacion -> LPAREN LET LCOR VARIABLE dato RCOR RPAREN .

    $end            reduce using rule 46 (asignacion -> LPAREN LET LCOR VARIABLE dato RCOR RPAREN .)
    LPAREN          reduce using rule 46 (asignacion -> LPAREN LET LCOR VARIABLE dato RCOR RPAREN .)
    NUMERAL         reduce using rule 46 (asignacion -> LPAREN LET LCOR VARIABLE dato RCOR RPAREN .)
    LCOR            reduce using rule 46 (asignacion -> LPAREN LET LCOR VARIABLE dato RCOR RPAREN .)
    L_LLAVE         reduce using rule 46 (asignacion -> LPAREN LET LCOR VARIABLE dato RCOR RPAREN .)
    IF              reduce using rule 46 (asignacion -> LPAREN LET LCOR VARIABLE dato RCOR RPAREN .)
    ENTERO          reduce using rule 46 (asignacion -> LPAREN LET LCOR VARIABLE dato RCOR RPAREN .)
    FLOTANTE        reduce using rule 46 (asignacion -> LPAREN LET LCOR VARIABLE dato RCOR RPAREN .)
    BOOLEAN         reduce using rule 46 (asignacion -> LPAREN LET LCOR VARIABLE dato RCOR RPAREN .)
    RPAREN          reduce using rule 46 (asignacion -> LPAREN LET LCOR VARIABLE dato RCOR RPAREN .)


state 214

    (97) defn -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN . expresionDefnElse RPAREN RPAREN
    (99) defn_with_return -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN . expresionDefnElse RPAREN RPAREN defn_return
    (101) expresionDefnElse -> . CASE VARIABLE expresionCase DOSPUNTOS ELSE STRING

    CASE            shift and go to state 228

    expresionDefnElse              shift and go to state 227

state 215

    (69) function -> LPAREN DEFFUNCION VARIABLE internos LPAREN if body . RPAREN

    RPAREN          shift and go to state 229


state 216

    (85) operacionesLogicas -> LPAREN . if recur VARIABLE RPAREN RPAREN
    (77) if -> . IF sentencia_booleana
    (78) if -> . IF sentencia_booleana recur
    (79) if -> . LPAREN IF instrucciones body RPAREN

    IF              shift and go to state 31
    LPAREN          shift and go to state 35

    if                             shift and go to state 230

state 217

    (98) defn -> LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas . RPAREN
    (100) defn_with_return -> LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas . RPAREN defn_return

    RPAREN          shift and go to state 231


state 218

    (107) sentenciaLoopRecur -> LPAREN LOOP argumments LPAREN if dato RPAREN . RPAREN

    RPAREN          shift and go to state 232


state 219

    (50) cond_else -> LPAREN COND linecondition linecondition DOSPUNTOS ELSE impresion . RPAREN

    RPAREN          shift and go to state 233


state 220

    (96) doseq -> LPAREN DOSEQ doseq_args LPAREN doseq_prn RPAREN RPAREN .

    $end            reduce using rule 96 (doseq -> LPAREN DOSEQ doseq_args LPAREN doseq_prn RPAREN RPAREN .)
    LPAREN          reduce using rule 96 (doseq -> LPAREN DOSEQ doseq_args LPAREN doseq_prn RPAREN RPAREN .)
    NUMERAL         reduce using rule 96 (doseq -> LPAREN DOSEQ doseq_args LPAREN doseq_prn RPAREN RPAREN .)
    LCOR            reduce using rule 96 (doseq -> LPAREN DOSEQ doseq_args LPAREN doseq_prn RPAREN RPAREN .)
    L_LLAVE         reduce using rule 96 (doseq -> LPAREN DOSEQ doseq_args LPAREN doseq_prn RPAREN RPAREN .)
    IF              reduce using rule 96 (doseq -> LPAREN DOSEQ doseq_args LPAREN doseq_prn RPAREN RPAREN .)
    ENTERO          reduce using rule 96 (doseq -> LPAREN DOSEQ doseq_args LPAREN doseq_prn RPAREN RPAREN .)
    FLOTANTE        reduce using rule 96 (doseq -> LPAREN DOSEQ doseq_args LPAREN doseq_prn RPAREN RPAREN .)
    BOOLEAN         reduce using rule 96 (doseq -> LPAREN DOSEQ doseq_args LPAREN doseq_prn RPAREN RPAREN .)
    RPAREN          reduce using rule 96 (doseq -> LPAREN DOSEQ doseq_args LPAREN doseq_prn RPAREN RPAREN .)


state 221

    (91) doseq_prn -> PRN LPAREN dato . RPAREN

    RPAREN          shift and go to state 234


state 222

    (92) doseq_prn -> PRN dato dato .
    (93) doseq_prn -> PRN dato dato . dato
    (26) dato -> . STRING
    (27) dato -> . CHAR
    (28) dato -> . ENTERO
    (29) dato -> . FLOTANTE
    (30) dato -> . BOOLEAN
    (31) dato -> . VARIABLE

    RPAREN          reduce using rule 92 (doseq_prn -> PRN dato dato .)
    STRING          shift and go to state 67
    CHAR            shift and go to state 68
    ENTERO          shift and go to state 65
    FLOTANTE        shift and go to state 69
    BOOLEAN         shift and go to state 70
    VARIABLE        shift and go to state 80

    dato                           shift and go to state 235

state 223

    (87) doseq_args -> LCOR dato LPAREN RANGE dato . RPAREN RCOR

    RPAREN          shift and go to state 236


state 224

    (89) doseq_args -> LCOR dato vector dato vector . RCOR

    RCOR            shift and go to state 237


state 225

    (56) case_expression -> LPAREN CASE dato case DOSPUNTOS ELSE STRING . RPAREN

    RPAREN          shift and go to state 238


state 226

    (62) recur -> LPAREN RECUR LPAREN INC dato RPAREN RPAREN .

    $end            reduce using rule 62 (recur -> LPAREN RECUR LPAREN INC dato RPAREN RPAREN .)
    LPAREN          reduce using rule 62 (recur -> LPAREN RECUR LPAREN INC dato RPAREN RPAREN .)
    NUMERAL         reduce using rule 62 (recur -> LPAREN RECUR LPAREN INC dato RPAREN RPAREN .)
    LCOR            reduce using rule 62 (recur -> LPAREN RECUR LPAREN INC dato RPAREN RPAREN .)
    L_LLAVE         reduce using rule 62 (recur -> LPAREN RECUR LPAREN INC dato RPAREN RPAREN .)
    IF              reduce using rule 62 (recur -> LPAREN RECUR LPAREN INC dato RPAREN RPAREN .)
    ENTERO          reduce using rule 62 (recur -> LPAREN RECUR LPAREN INC dato RPAREN RPAREN .)
    FLOTANTE        reduce using rule 62 (recur -> LPAREN RECUR LPAREN INC dato RPAREN RPAREN .)
    BOOLEAN         reduce using rule 62 (recur -> LPAREN RECUR LPAREN INC dato RPAREN RPAREN .)
    RPAREN          reduce using rule 62 (recur -> LPAREN RECUR LPAREN INC dato RPAREN RPAREN .)
    VARIABLE        reduce using rule 62 (recur -> LPAREN RECUR LPAREN INC dato RPAREN RPAREN .)
    STRING          reduce using rule 62 (recur -> LPAREN RECUR LPAREN INC dato RPAREN RPAREN .)
    CHAR            reduce using rule 62 (recur -> LPAREN RECUR LPAREN INC dato RPAREN RPAREN .)


state 227

    (97) defn -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse . RPAREN RPAREN
    (99) defn_with_return -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse . RPAREN RPAREN defn_return

    RPAREN          shift and go to state 239


state 228

    (101) expresionDefnElse -> CASE . VARIABLE expresionCase DOSPUNTOS ELSE STRING

    VARIABLE        shift and go to state 240


state 229

    (69) function -> LPAREN DEFFUNCION VARIABLE internos LPAREN if body RPAREN .

    $end            reduce using rule 69 (function -> LPAREN DEFFUNCION VARIABLE internos LPAREN if body RPAREN .)
    LPAREN          reduce using rule 69 (function -> LPAREN DEFFUNCION VARIABLE internos LPAREN if body RPAREN .)
    NUMERAL         reduce using rule 69 (function -> LPAREN DEFFUNCION VARIABLE internos LPAREN if body RPAREN .)
    LCOR            reduce using rule 69 (function -> LPAREN DEFFUNCION VARIABLE internos LPAREN if body RPAREN .)
    L_LLAVE         reduce using rule 69 (function -> LPAREN DEFFUNCION VARIABLE internos LPAREN if body RPAREN .)
    IF              reduce using rule 69 (function -> LPAREN DEFFUNCION VARIABLE internos LPAREN if body RPAREN .)
    ENTERO          reduce using rule 69 (function -> LPAREN DEFFUNCION VARIABLE internos LPAREN if body RPAREN .)
    FLOTANTE        reduce using rule 69 (function -> LPAREN DEFFUNCION VARIABLE internos LPAREN if body RPAREN .)
    BOOLEAN         reduce using rule 69 (function -> LPAREN DEFFUNCION VARIABLE internos LPAREN if body RPAREN .)
    RPAREN          reduce using rule 69 (function -> LPAREN DEFFUNCION VARIABLE internos LPAREN if body RPAREN .)


state 230

    (85) operacionesLogicas -> LPAREN if . recur VARIABLE RPAREN RPAREN
    (62) recur -> . LPAREN RECUR LPAREN INC dato RPAREN RPAREN

    LPAREN          shift and go to state 117

    recur                          shift and go to state 88

state 231

    (98) defn -> LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN .
    (100) defn_with_return -> LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN . defn_return
    (102) defn_return -> . LPAREN dato dato RPAREN

  ! shift/reduce conflict for LPAREN resolved as shift
    $end            reduce using rule 98 (defn -> LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN .)
    NUMERAL         reduce using rule 98 (defn -> LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN .)
    LCOR            reduce using rule 98 (defn -> LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN .)
    L_LLAVE         reduce using rule 98 (defn -> LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN .)
    IF              reduce using rule 98 (defn -> LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN .)
    ENTERO          reduce using rule 98 (defn -> LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN .)
    FLOTANTE        reduce using rule 98 (defn -> LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN .)
    BOOLEAN         reduce using rule 98 (defn -> LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN .)
    RPAREN          reduce using rule 98 (defn -> LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN .)
    LPAREN          shift and go to state 241

  ! LPAREN          [ reduce using rule 98 (defn -> LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN .) ]

    defn_return                    shift and go to state 242

state 232

    (107) sentenciaLoopRecur -> LPAREN LOOP argumments LPAREN if dato RPAREN RPAREN .

    $end            reduce using rule 107 (sentenciaLoopRecur -> LPAREN LOOP argumments LPAREN if dato RPAREN RPAREN .)
    LPAREN          reduce using rule 107 (sentenciaLoopRecur -> LPAREN LOOP argumments LPAREN if dato RPAREN RPAREN .)
    NUMERAL         reduce using rule 107 (sentenciaLoopRecur -> LPAREN LOOP argumments LPAREN if dato RPAREN RPAREN .)
    LCOR            reduce using rule 107 (sentenciaLoopRecur -> LPAREN LOOP argumments LPAREN if dato RPAREN RPAREN .)
    L_LLAVE         reduce using rule 107 (sentenciaLoopRecur -> LPAREN LOOP argumments LPAREN if dato RPAREN RPAREN .)
    IF              reduce using rule 107 (sentenciaLoopRecur -> LPAREN LOOP argumments LPAREN if dato RPAREN RPAREN .)
    ENTERO          reduce using rule 107 (sentenciaLoopRecur -> LPAREN LOOP argumments LPAREN if dato RPAREN RPAREN .)
    FLOTANTE        reduce using rule 107 (sentenciaLoopRecur -> LPAREN LOOP argumments LPAREN if dato RPAREN RPAREN .)
    BOOLEAN         reduce using rule 107 (sentenciaLoopRecur -> LPAREN LOOP argumments LPAREN if dato RPAREN RPAREN .)
    RPAREN          reduce using rule 107 (sentenciaLoopRecur -> LPAREN LOOP argumments LPAREN if dato RPAREN RPAREN .)


state 233

    (50) cond_else -> LPAREN COND linecondition linecondition DOSPUNTOS ELSE impresion RPAREN .

    $end            reduce using rule 50 (cond_else -> LPAREN COND linecondition linecondition DOSPUNTOS ELSE impresion RPAREN .)
    LPAREN          reduce using rule 50 (cond_else -> LPAREN COND linecondition linecondition DOSPUNTOS ELSE impresion RPAREN .)
    NUMERAL         reduce using rule 50 (cond_else -> LPAREN COND linecondition linecondition DOSPUNTOS ELSE impresion RPAREN .)
    LCOR            reduce using rule 50 (cond_else -> LPAREN COND linecondition linecondition DOSPUNTOS ELSE impresion RPAREN .)
    L_LLAVE         reduce using rule 50 (cond_else -> LPAREN COND linecondition linecondition DOSPUNTOS ELSE impresion RPAREN .)
    IF              reduce using rule 50 (cond_else -> LPAREN COND linecondition linecondition DOSPUNTOS ELSE impresion RPAREN .)
    ENTERO          reduce using rule 50 (cond_else -> LPAREN COND linecondition linecondition DOSPUNTOS ELSE impresion RPAREN .)
    FLOTANTE        reduce using rule 50 (cond_else -> LPAREN COND linecondition linecondition DOSPUNTOS ELSE impresion RPAREN .)
    BOOLEAN         reduce using rule 50 (cond_else -> LPAREN COND linecondition linecondition DOSPUNTOS ELSE impresion RPAREN .)
    RPAREN          reduce using rule 50 (cond_else -> LPAREN COND linecondition linecondition DOSPUNTOS ELSE impresion RPAREN .)


state 234

    (91) doseq_prn -> PRN LPAREN dato RPAREN .

    RPAREN          reduce using rule 91 (doseq_prn -> PRN LPAREN dato RPAREN .)


state 235

    (93) doseq_prn -> PRN dato dato dato .

    RPAREN          reduce using rule 93 (doseq_prn -> PRN dato dato dato .)


state 236

    (87) doseq_args -> LCOR dato LPAREN RANGE dato RPAREN . RCOR

    RCOR            shift and go to state 243


state 237

    (89) doseq_args -> LCOR dato vector dato vector RCOR .

    LPAREN          reduce using rule 89 (doseq_args -> LCOR dato vector dato vector RCOR .)


state 238

    (56) case_expression -> LPAREN CASE dato case DOSPUNTOS ELSE STRING RPAREN .

    $end            reduce using rule 56 (case_expression -> LPAREN CASE dato case DOSPUNTOS ELSE STRING RPAREN .)
    LPAREN          reduce using rule 56 (case_expression -> LPAREN CASE dato case DOSPUNTOS ELSE STRING RPAREN .)
    NUMERAL         reduce using rule 56 (case_expression -> LPAREN CASE dato case DOSPUNTOS ELSE STRING RPAREN .)
    LCOR            reduce using rule 56 (case_expression -> LPAREN CASE dato case DOSPUNTOS ELSE STRING RPAREN .)
    L_LLAVE         reduce using rule 56 (case_expression -> LPAREN CASE dato case DOSPUNTOS ELSE STRING RPAREN .)
    IF              reduce using rule 56 (case_expression -> LPAREN CASE dato case DOSPUNTOS ELSE STRING RPAREN .)
    ENTERO          reduce using rule 56 (case_expression -> LPAREN CASE dato case DOSPUNTOS ELSE STRING RPAREN .)
    FLOTANTE        reduce using rule 56 (case_expression -> LPAREN CASE dato case DOSPUNTOS ELSE STRING RPAREN .)
    BOOLEAN         reduce using rule 56 (case_expression -> LPAREN CASE dato case DOSPUNTOS ELSE STRING RPAREN .)
    RPAREN          reduce using rule 56 (case_expression -> LPAREN CASE dato case DOSPUNTOS ELSE STRING RPAREN .)


state 239

    (97) defn -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN . RPAREN
    (99) defn_with_return -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN . RPAREN defn_return

    RPAREN          shift and go to state 244


state 240

    (101) expresionDefnElse -> CASE VARIABLE . expresionCase DOSPUNTOS ELSE STRING
    (103) expresionCase -> . dato STRING
    (26) dato -> . STRING
    (27) dato -> . CHAR
    (28) dato -> . ENTERO
    (29) dato -> . FLOTANTE
    (30) dato -> . BOOLEAN
    (31) dato -> . VARIABLE

    STRING          shift and go to state 67
    CHAR            shift and go to state 68
    ENTERO          shift and go to state 65
    FLOTANTE        shift and go to state 69
    BOOLEAN         shift and go to state 70
    VARIABLE        shift and go to state 80

    expresionCase                  shift and go to state 245
    dato                           shift and go to state 246

state 241

    (102) defn_return -> LPAREN . dato dato RPAREN
    (26) dato -> . STRING
    (27) dato -> . CHAR
    (28) dato -> . ENTERO
    (29) dato -> . FLOTANTE
    (30) dato -> . BOOLEAN
    (31) dato -> . VARIABLE

    STRING          shift and go to state 67
    CHAR            shift and go to state 68
    ENTERO          shift and go to state 65
    FLOTANTE        shift and go to state 69
    BOOLEAN         shift and go to state 70
    VARIABLE        shift and go to state 80

    dato                           shift and go to state 247

state 242

    (100) defn_with_return -> LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN defn_return .

    $end            reduce using rule 100 (defn_with_return -> LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN defn_return .)
    LPAREN          reduce using rule 100 (defn_with_return -> LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN defn_return .)
    NUMERAL         reduce using rule 100 (defn_with_return -> LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN defn_return .)
    LCOR            reduce using rule 100 (defn_with_return -> LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN defn_return .)
    L_LLAVE         reduce using rule 100 (defn_with_return -> LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN defn_return .)
    IF              reduce using rule 100 (defn_with_return -> LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN defn_return .)
    ENTERO          reduce using rule 100 (defn_with_return -> LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN defn_return .)
    FLOTANTE        reduce using rule 100 (defn_with_return -> LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN defn_return .)
    BOOLEAN         reduce using rule 100 (defn_with_return -> LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN defn_return .)
    RPAREN          reduce using rule 100 (defn_with_return -> LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN defn_return .)


state 243

    (87) doseq_args -> LCOR dato LPAREN RANGE dato RPAREN RCOR .

    LPAREN          reduce using rule 87 (doseq_args -> LCOR dato LPAREN RANGE dato RPAREN RCOR .)


state 244

    (97) defn -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN .
    (99) defn_with_return -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN . defn_return
    (102) defn_return -> . LPAREN dato dato RPAREN

  ! shift/reduce conflict for LPAREN resolved as shift
    $end            reduce using rule 97 (defn -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN .)
    NUMERAL         reduce using rule 97 (defn -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN .)
    LCOR            reduce using rule 97 (defn -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN .)
    L_LLAVE         reduce using rule 97 (defn -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN .)
    IF              reduce using rule 97 (defn -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN .)
    ENTERO          reduce using rule 97 (defn -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN .)
    FLOTANTE        reduce using rule 97 (defn -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN .)
    BOOLEAN         reduce using rule 97 (defn -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN .)
    RPAREN          reduce using rule 97 (defn -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN .)
    LPAREN          shift and go to state 241

  ! LPAREN          [ reduce using rule 97 (defn -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN .) ]

    defn_return                    shift and go to state 248

state 245

    (101) expresionDefnElse -> CASE VARIABLE expresionCase . DOSPUNTOS ELSE STRING

    DOSPUNTOS       shift and go to state 249


state 246

    (103) expresionCase -> dato . STRING

    STRING          shift and go to state 250


state 247

    (102) defn_return -> LPAREN dato . dato RPAREN
    (26) dato -> . STRING
    (27) dato -> . CHAR
    (28) dato -> . ENTERO
    (29) dato -> . FLOTANTE
    (30) dato -> . BOOLEAN
    (31) dato -> . VARIABLE

    STRING          shift and go to state 67
    CHAR            shift and go to state 68
    ENTERO          shift and go to state 65
    FLOTANTE        shift and go to state 69
    BOOLEAN         shift and go to state 70
    VARIABLE        shift and go to state 80

    dato                           shift and go to state 251

state 248

    (99) defn_with_return -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN defn_return .

    $end            reduce using rule 99 (defn_with_return -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN defn_return .)
    LPAREN          reduce using rule 99 (defn_with_return -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN defn_return .)
    NUMERAL         reduce using rule 99 (defn_with_return -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN defn_return .)
    LCOR            reduce using rule 99 (defn_with_return -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN defn_return .)
    L_LLAVE         reduce using rule 99 (defn_with_return -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN defn_return .)
    IF              reduce using rule 99 (defn_with_return -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN defn_return .)
    ENTERO          reduce using rule 99 (defn_with_return -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN defn_return .)
    FLOTANTE        reduce using rule 99 (defn_with_return -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN defn_return .)
    BOOLEAN         reduce using rule 99 (defn_with_return -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN defn_return .)
    RPAREN          reduce using rule 99 (defn_with_return -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN defn_return .)


state 249

    (101) expresionDefnElse -> CASE VARIABLE expresionCase DOSPUNTOS . ELSE STRING

    ELSE            shift and go to state 252


state 250

    (103) expresionCase -> dato STRING .

    DOSPUNTOS       reduce using rule 103 (expresionCase -> dato STRING .)


state 251

    (102) defn_return -> LPAREN dato dato . RPAREN

    RPAREN          shift and go to state 253


state 252

    (101) expresionDefnElse -> CASE VARIABLE expresionCase DOSPUNTOS ELSE . STRING

    STRING          shift and go to state 254


state 253

    (102) defn_return -> LPAREN dato dato RPAREN .

    $end            reduce using rule 102 (defn_return -> LPAREN dato dato RPAREN .)
    LPAREN          reduce using rule 102 (defn_return -> LPAREN dato dato RPAREN .)
    NUMERAL         reduce using rule 102 (defn_return -> LPAREN dato dato RPAREN .)
    LCOR            reduce using rule 102 (defn_return -> LPAREN dato dato RPAREN .)
    L_LLAVE         reduce using rule 102 (defn_return -> LPAREN dato dato RPAREN .)
    IF              reduce using rule 102 (defn_return -> LPAREN dato dato RPAREN .)
    ENTERO          reduce using rule 102 (defn_return -> LPAREN dato dato RPAREN .)
    FLOTANTE        reduce using rule 102 (defn_return -> LPAREN dato dato RPAREN .)
    BOOLEAN         reduce using rule 102 (defn_return -> LPAREN dato dato RPAREN .)
    RPAREN          reduce using rule 102 (defn_return -> LPAREN dato dato RPAREN .)


state 254

    (101) expresionDefnElse -> CASE VARIABLE expresionCase DOSPUNTOS ELSE STRING .

    RPAREN          reduce using rule 101 (expresionDefnElse -> CASE VARIABLE expresionCase DOSPUNTOS ELSE STRING .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ENTERO in state 64 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 74 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 84 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 132 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 167 resolved as shift
WARNING: shift/reduce conflict for RCOR in state 167 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 231 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 244 resolved as shift
WARNING: reduce/reduce conflict in state 84 resolved using rule (instrucciones -> sentencia_booleana)
WARNING: rejected rule (if -> IF sentencia_booleana) in state 84
WARNING: reduce/reduce conflict in state 168 resolved using rule (argumentos_lista -> dato)
WARNING: rejected rule (secuencia_v -> dato) in state 168
