Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    CLASE
    CONJUNTOS
    DO
    DOTIMES
    FUNCION
    FUTURE
    IGUAL
    INPUT
    LISTA
    MAPAS
    NOT
    NS
    NUEVO
    STR
    WHEN

Grammar

Rule 0     S' -> instrucciones
Rule 1     instrucciones -> asignacion
Rule 2     instrucciones -> impresion
Rule 3     instrucciones -> operacion_aritmetica1
Rule 4     instrucciones -> condicional
Rule 5     instrucciones -> vectores
Rule 6     instrucciones -> conjuntos
Rule 7     instrucciones -> defn
Rule 8     instrucciones -> operacionesLogicas
Rule 9     instrucciones -> sentenciaLoopRecur
Rule 10    instrucciones -> doseq
Rule 11    instrucciones -> cond_
Rule 12    instrucciones -> sentencia_booleana
Rule 13    instrucciones -> operador_comparadores
Rule 14    dato -> STRING
Rule 15    dato -> CHAR
Rule 16    dato -> ENTERO
Rule 17    dato -> FLOTANTE
Rule 18    dato -> BOOLEAN
Rule 19    valor -> ENTERO
Rule 20    valor -> FLOTANTE
Rule 21    valor -> BOOLEAN
Rule 22    operador_comparadores -> COMPARA_IGUAL
Rule 23    operador_comparadores -> MENORQUE
Rule 24    operador_comparadores -> MAYORQUE
Rule 25    operador_comparadores -> MAYORIGUALQUE
Rule 26    operador_comparadores -> MENORIGUALQUE
Rule 27    operador_comparadores -> DIFERENTE
Rule 28    asignacion -> LPAREN DEFICION VARIABLE dato RPAREN
Rule 29    asignacion -> LPAREN LET LCOR VARIABLE dato RCOR RPAREN
Rule 30    sentencia_booleana -> LPAREN operador_comparadores dato dato RPAREN
Rule 31    linecondition -> sentencia_booleana impresion
Rule 32    linecondition -> sentencia_booleana dato
Rule 33    cond_ -> LPAREN COND linecondition RPAREN
Rule 34    impresion -> LPAREN IMPRIMIR dato RPAREN
Rule 35    valor -> VARIABLE
Rule 36    operacion -> MAS
Rule 37    operacion -> MENOS
Rule 38    operacion -> PRODUCTO
Rule 39    operacion -> DIVISION
Rule 40    operacionesLogicas -> LPAREN IF LPAREN MENORQUE VARIABLE ENTERO RPAREN LPAREN RECUR LPAREN INC LPAREN VARIABLE RPAREN RPAREN VARIABLE RPAREN RPAREN
Rule 41    operacion_aritmetica1 -> LPAREN operacion valor valor RPAREN
Rule 42    condicional -> LPAREN operacion valor valor RPAREN
Rule 43    vectores -> VECTORES
Rule 44    doseq -> LPAREN DOSEQ LCOR VARIABLE LPAREN RANGE VARIABLE RPAREN RCOR LPAREN impresion RPAREN RPAREN
Rule 45    defn -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN
Rule 46    defn -> LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN
Rule 47    expresionDefnElse -> CASE VARIABLE expresionCase DOSPUNTOS ELSE STRING
Rule 48    expresionCase -> dato STRING
Rule 49    conjuntos -> NUMERAL L_LLAVE expresionConjuntoEnteros R_LLAVE
Rule 50    conjuntos -> NUMERAL L_LLAVE expresionConjuntoDouble R_LLAVE
Rule 51    conjuntos -> NUMERAL L_LLAVE expresionConjuntoString R_LLAVE
Rule 52    sentenciaLoopRecur -> LPAREN LOOP LCOR VARIABLE ENTERO RCOR operacionesLogicas RPAREN
Rule 53    expresionConjuntoEnteros -> ENTERO
Rule 54    expresionConjuntoEnteros -> ENTERO expresionConjuntoEnteros
Rule 55    expresionConjuntoDouble -> FLOTANTE
Rule 56    expresionConjuntoDouble -> FLOTANTE expresionConjuntoDouble
Rule 57    expresionConjuntoString -> STRING
Rule 58    expresionConjuntoString -> STRING expresionConjuntoString

Terminals, with rules where they appear

BOOLEAN              : 18 21
CASE                 : 47
CHAR                 : 15
CLASE                : 
COMPARA_IGUAL        : 22
COND                 : 33
CONJUNTOS            : 
DEFFUNCION           : 45 46
DEFICION             : 28
DIFERENTE            : 27
DIVISION             : 39
DO                   : 
DOSEQ                : 44
DOSPUNTOS            : 47
DOTIMES              : 
ELSE                 : 47
ENTERO               : 16 19 40 52 53 54
FLOTANTE             : 17 20 55 56
FUNCION              : 
FUTURE               : 
IF                   : 40
IGUAL                : 
IMPRIMIR             : 34
INC                  : 40
INCREASE             : 46
INPUT                : 
LCOR                 : 29 44 45 46 52
LET                  : 29
LISTA                : 
LOOP                 : 52
LPAREN               : 28 29 30 33 34 40 40 40 40 40 41 42 44 44 44 45 45 46 52
L_LLAVE              : 49 50 51
MAPAS                : 
MAS                  : 36
MAYORIGUALQUE        : 25
MAYORQUE             : 24
MENORIGUALQUE        : 26
MENORQUE             : 23 40
MENOS                : 37
NOT                  : 
NS                   : 
NUEVO                : 
NUMERAL              : 49 50 51
PRODUCTO             : 38
RANGE                : 44
RCOR                 : 29 44 45 46 52
RECUR                : 40
RPAREN               : 28 29 30 33 34 40 40 40 40 40 41 42 44 44 44 45 45 46 52
R_LLAVE              : 49 50 51
STR                  : 
STRING               : 14 47 48 57 58
VARIABLE             : 28 29 35 40 40 40 44 44 45 45 46 47 52
VECTORES             : 43
WHEN                 : 
error                : 

Nonterminals, with rules where they appear

asignacion           : 1
cond_                : 11
condicional          : 4
conjuntos            : 6
dato                 : 28 29 30 30 32 34 48
defn                 : 7
doseq                : 10
expresionCase        : 47
expresionConjuntoDouble : 50 56
expresionConjuntoEnteros : 49 54
expresionConjuntoString : 51 58
expresionDefnElse    : 45
impresion            : 2 31 44
instrucciones        : 0
linecondition        : 33
operacion            : 41 42
operacion_aritmetica1 : 3
operacionesLogicas   : 8 46 52
operador_comparadores : 13 30
sentenciaLoopRecur   : 9
sentencia_booleana   : 12 31 32
valor                : 41 41 42 42
vectores             : 5

Parsing method: LALR

state 0

    (0) S' -> . instrucciones
    (1) instrucciones -> . asignacion
    (2) instrucciones -> . impresion
    (3) instrucciones -> . operacion_aritmetica1
    (4) instrucciones -> . condicional
    (5) instrucciones -> . vectores
    (6) instrucciones -> . conjuntos
    (7) instrucciones -> . defn
    (8) instrucciones -> . operacionesLogicas
    (9) instrucciones -> . sentenciaLoopRecur
    (10) instrucciones -> . doseq
    (11) instrucciones -> . cond_
    (12) instrucciones -> . sentencia_booleana
    (13) instrucciones -> . operador_comparadores
    (28) asignacion -> . LPAREN DEFICION VARIABLE dato RPAREN
    (29) asignacion -> . LPAREN LET LCOR VARIABLE dato RCOR RPAREN
    (34) impresion -> . LPAREN IMPRIMIR dato RPAREN
    (41) operacion_aritmetica1 -> . LPAREN operacion valor valor RPAREN
    (42) condicional -> . LPAREN operacion valor valor RPAREN
    (43) vectores -> . VECTORES
    (49) conjuntos -> . NUMERAL L_LLAVE expresionConjuntoEnteros R_LLAVE
    (50) conjuntos -> . NUMERAL L_LLAVE expresionConjuntoDouble R_LLAVE
    (51) conjuntos -> . NUMERAL L_LLAVE expresionConjuntoString R_LLAVE
    (45) defn -> . LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN
    (46) defn -> . LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN
    (40) operacionesLogicas -> . LPAREN IF LPAREN MENORQUE VARIABLE ENTERO RPAREN LPAREN RECUR LPAREN INC LPAREN VARIABLE RPAREN RPAREN VARIABLE RPAREN RPAREN
    (52) sentenciaLoopRecur -> . LPAREN LOOP LCOR VARIABLE ENTERO RCOR operacionesLogicas RPAREN
    (44) doseq -> . LPAREN DOSEQ LCOR VARIABLE LPAREN RANGE VARIABLE RPAREN RCOR LPAREN impresion RPAREN RPAREN
    (33) cond_ -> . LPAREN COND linecondition RPAREN
    (30) sentencia_booleana -> . LPAREN operador_comparadores dato dato RPAREN
    (22) operador_comparadores -> . COMPARA_IGUAL
    (23) operador_comparadores -> . MENORQUE
    (24) operador_comparadores -> . MAYORQUE
    (25) operador_comparadores -> . MAYORIGUALQUE
    (26) operador_comparadores -> . MENORIGUALQUE
    (27) operador_comparadores -> . DIFERENTE

    LPAREN          shift and go to state 15
    VECTORES        shift and go to state 16
    NUMERAL         shift and go to state 17
    COMPARA_IGUAL   shift and go to state 19
    MENORQUE        shift and go to state 18
    MAYORQUE        shift and go to state 20
    MAYORIGUALQUE   shift and go to state 21
    MENORIGUALQUE   shift and go to state 22
    DIFERENTE       shift and go to state 23

    instrucciones                  shift and go to state 1
    asignacion                     shift and go to state 2
    impresion                      shift and go to state 3
    operacion_aritmetica1          shift and go to state 4
    condicional                    shift and go to state 5
    vectores                       shift and go to state 6
    conjuntos                      shift and go to state 7
    defn                           shift and go to state 8
    operacionesLogicas             shift and go to state 9
    sentenciaLoopRecur             shift and go to state 10
    doseq                          shift and go to state 11
    cond_                          shift and go to state 12
    sentencia_booleana             shift and go to state 13
    operador_comparadores          shift and go to state 14

state 1

    (0) S' -> instrucciones .



state 2

    (1) instrucciones -> asignacion .

    $end            reduce using rule 1 (instrucciones -> asignacion .)


state 3

    (2) instrucciones -> impresion .

    $end            reduce using rule 2 (instrucciones -> impresion .)


state 4

    (3) instrucciones -> operacion_aritmetica1 .

    $end            reduce using rule 3 (instrucciones -> operacion_aritmetica1 .)


state 5

    (4) instrucciones -> condicional .

    $end            reduce using rule 4 (instrucciones -> condicional .)


state 6

    (5) instrucciones -> vectores .

    $end            reduce using rule 5 (instrucciones -> vectores .)


state 7

    (6) instrucciones -> conjuntos .

    $end            reduce using rule 6 (instrucciones -> conjuntos .)


state 8

    (7) instrucciones -> defn .

    $end            reduce using rule 7 (instrucciones -> defn .)


state 9

    (8) instrucciones -> operacionesLogicas .

    $end            reduce using rule 8 (instrucciones -> operacionesLogicas .)


state 10

    (9) instrucciones -> sentenciaLoopRecur .

    $end            reduce using rule 9 (instrucciones -> sentenciaLoopRecur .)


state 11

    (10) instrucciones -> doseq .

    $end            reduce using rule 10 (instrucciones -> doseq .)


state 12

    (11) instrucciones -> cond_ .

    $end            reduce using rule 11 (instrucciones -> cond_ .)


state 13

    (12) instrucciones -> sentencia_booleana .

    $end            reduce using rule 12 (instrucciones -> sentencia_booleana .)


state 14

    (13) instrucciones -> operador_comparadores .

    $end            reduce using rule 13 (instrucciones -> operador_comparadores .)


state 15

    (28) asignacion -> LPAREN . DEFICION VARIABLE dato RPAREN
    (29) asignacion -> LPAREN . LET LCOR VARIABLE dato RCOR RPAREN
    (34) impresion -> LPAREN . IMPRIMIR dato RPAREN
    (41) operacion_aritmetica1 -> LPAREN . operacion valor valor RPAREN
    (42) condicional -> LPAREN . operacion valor valor RPAREN
    (45) defn -> LPAREN . DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN
    (46) defn -> LPAREN . DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN
    (40) operacionesLogicas -> LPAREN . IF LPAREN MENORQUE VARIABLE ENTERO RPAREN LPAREN RECUR LPAREN INC LPAREN VARIABLE RPAREN RPAREN VARIABLE RPAREN RPAREN
    (52) sentenciaLoopRecur -> LPAREN . LOOP LCOR VARIABLE ENTERO RCOR operacionesLogicas RPAREN
    (44) doseq -> LPAREN . DOSEQ LCOR VARIABLE LPAREN RANGE VARIABLE RPAREN RCOR LPAREN impresion RPAREN RPAREN
    (33) cond_ -> LPAREN . COND linecondition RPAREN
    (30) sentencia_booleana -> LPAREN . operador_comparadores dato dato RPAREN
    (36) operacion -> . MAS
    (37) operacion -> . MENOS
    (38) operacion -> . PRODUCTO
    (39) operacion -> . DIVISION
    (22) operador_comparadores -> . COMPARA_IGUAL
    (23) operador_comparadores -> . MENORQUE
    (24) operador_comparadores -> . MAYORQUE
    (25) operador_comparadores -> . MAYORIGUALQUE
    (26) operador_comparadores -> . MENORIGUALQUE
    (27) operador_comparadores -> . DIFERENTE

    DEFICION        shift and go to state 24
    LET             shift and go to state 25
    IMPRIMIR        shift and go to state 26
    DEFFUNCION      shift and go to state 28
    IF              shift and go to state 29
    LOOP            shift and go to state 30
    DOSEQ           shift and go to state 31
    COND            shift and go to state 32
    MAS             shift and go to state 34
    MENOS           shift and go to state 35
    PRODUCTO        shift and go to state 36
    DIVISION        shift and go to state 37
    COMPARA_IGUAL   shift and go to state 19
    MENORQUE        shift and go to state 18
    MAYORQUE        shift and go to state 20
    MAYORIGUALQUE   shift and go to state 21
    MENORIGUALQUE   shift and go to state 22
    DIFERENTE       shift and go to state 23

    operacion                      shift and go to state 27
    operador_comparadores          shift and go to state 33

state 16

    (43) vectores -> VECTORES .

    $end            reduce using rule 43 (vectores -> VECTORES .)


state 17

    (49) conjuntos -> NUMERAL . L_LLAVE expresionConjuntoEnteros R_LLAVE
    (50) conjuntos -> NUMERAL . L_LLAVE expresionConjuntoDouble R_LLAVE
    (51) conjuntos -> NUMERAL . L_LLAVE expresionConjuntoString R_LLAVE

    L_LLAVE         shift and go to state 38


state 18

    (23) operador_comparadores -> MENORQUE .

    $end            reduce using rule 23 (operador_comparadores -> MENORQUE .)
    STRING          reduce using rule 23 (operador_comparadores -> MENORQUE .)
    CHAR            reduce using rule 23 (operador_comparadores -> MENORQUE .)
    ENTERO          reduce using rule 23 (operador_comparadores -> MENORQUE .)
    FLOTANTE        reduce using rule 23 (operador_comparadores -> MENORQUE .)
    BOOLEAN         reduce using rule 23 (operador_comparadores -> MENORQUE .)


state 19

    (22) operador_comparadores -> COMPARA_IGUAL .

    $end            reduce using rule 22 (operador_comparadores -> COMPARA_IGUAL .)
    STRING          reduce using rule 22 (operador_comparadores -> COMPARA_IGUAL .)
    CHAR            reduce using rule 22 (operador_comparadores -> COMPARA_IGUAL .)
    ENTERO          reduce using rule 22 (operador_comparadores -> COMPARA_IGUAL .)
    FLOTANTE        reduce using rule 22 (operador_comparadores -> COMPARA_IGUAL .)
    BOOLEAN         reduce using rule 22 (operador_comparadores -> COMPARA_IGUAL .)


state 20

    (24) operador_comparadores -> MAYORQUE .

    $end            reduce using rule 24 (operador_comparadores -> MAYORQUE .)
    STRING          reduce using rule 24 (operador_comparadores -> MAYORQUE .)
    CHAR            reduce using rule 24 (operador_comparadores -> MAYORQUE .)
    ENTERO          reduce using rule 24 (operador_comparadores -> MAYORQUE .)
    FLOTANTE        reduce using rule 24 (operador_comparadores -> MAYORQUE .)
    BOOLEAN         reduce using rule 24 (operador_comparadores -> MAYORQUE .)


state 21

    (25) operador_comparadores -> MAYORIGUALQUE .

    $end            reduce using rule 25 (operador_comparadores -> MAYORIGUALQUE .)
    STRING          reduce using rule 25 (operador_comparadores -> MAYORIGUALQUE .)
    CHAR            reduce using rule 25 (operador_comparadores -> MAYORIGUALQUE .)
    ENTERO          reduce using rule 25 (operador_comparadores -> MAYORIGUALQUE .)
    FLOTANTE        reduce using rule 25 (operador_comparadores -> MAYORIGUALQUE .)
    BOOLEAN         reduce using rule 25 (operador_comparadores -> MAYORIGUALQUE .)


state 22

    (26) operador_comparadores -> MENORIGUALQUE .

    $end            reduce using rule 26 (operador_comparadores -> MENORIGUALQUE .)
    STRING          reduce using rule 26 (operador_comparadores -> MENORIGUALQUE .)
    CHAR            reduce using rule 26 (operador_comparadores -> MENORIGUALQUE .)
    ENTERO          reduce using rule 26 (operador_comparadores -> MENORIGUALQUE .)
    FLOTANTE        reduce using rule 26 (operador_comparadores -> MENORIGUALQUE .)
    BOOLEAN         reduce using rule 26 (operador_comparadores -> MENORIGUALQUE .)


state 23

    (27) operador_comparadores -> DIFERENTE .

    $end            reduce using rule 27 (operador_comparadores -> DIFERENTE .)
    STRING          reduce using rule 27 (operador_comparadores -> DIFERENTE .)
    CHAR            reduce using rule 27 (operador_comparadores -> DIFERENTE .)
    ENTERO          reduce using rule 27 (operador_comparadores -> DIFERENTE .)
    FLOTANTE        reduce using rule 27 (operador_comparadores -> DIFERENTE .)
    BOOLEAN         reduce using rule 27 (operador_comparadores -> DIFERENTE .)


state 24

    (28) asignacion -> LPAREN DEFICION . VARIABLE dato RPAREN

    VARIABLE        shift and go to state 39


state 25

    (29) asignacion -> LPAREN LET . LCOR VARIABLE dato RCOR RPAREN

    LCOR            shift and go to state 40


state 26

    (34) impresion -> LPAREN IMPRIMIR . dato RPAREN
    (14) dato -> . STRING
    (15) dato -> . CHAR
    (16) dato -> . ENTERO
    (17) dato -> . FLOTANTE
    (18) dato -> . BOOLEAN

    STRING          shift and go to state 42
    CHAR            shift and go to state 43
    ENTERO          shift and go to state 44
    FLOTANTE        shift and go to state 45
    BOOLEAN         shift and go to state 46

    dato                           shift and go to state 41

state 27

    (41) operacion_aritmetica1 -> LPAREN operacion . valor valor RPAREN
    (42) condicional -> LPAREN operacion . valor valor RPAREN
    (19) valor -> . ENTERO
    (20) valor -> . FLOTANTE
    (21) valor -> . BOOLEAN
    (35) valor -> . VARIABLE

    ENTERO          shift and go to state 48
    FLOTANTE        shift and go to state 49
    BOOLEAN         shift and go to state 50
    VARIABLE        shift and go to state 51

    valor                          shift and go to state 47

state 28

    (45) defn -> LPAREN DEFFUNCION . VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN
    (46) defn -> LPAREN DEFFUNCION . INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN

    VARIABLE        shift and go to state 52
    INCREASE        shift and go to state 53


state 29

    (40) operacionesLogicas -> LPAREN IF . LPAREN MENORQUE VARIABLE ENTERO RPAREN LPAREN RECUR LPAREN INC LPAREN VARIABLE RPAREN RPAREN VARIABLE RPAREN RPAREN

    LPAREN          shift and go to state 54


state 30

    (52) sentenciaLoopRecur -> LPAREN LOOP . LCOR VARIABLE ENTERO RCOR operacionesLogicas RPAREN

    LCOR            shift and go to state 55


state 31

    (44) doseq -> LPAREN DOSEQ . LCOR VARIABLE LPAREN RANGE VARIABLE RPAREN RCOR LPAREN impresion RPAREN RPAREN

    LCOR            shift and go to state 56


state 32

    (33) cond_ -> LPAREN COND . linecondition RPAREN
    (31) linecondition -> . sentencia_booleana impresion
    (32) linecondition -> . sentencia_booleana dato
    (30) sentencia_booleana -> . LPAREN operador_comparadores dato dato RPAREN

    LPAREN          shift and go to state 57

    linecondition                  shift and go to state 58
    sentencia_booleana             shift and go to state 59

state 33

    (30) sentencia_booleana -> LPAREN operador_comparadores . dato dato RPAREN
    (14) dato -> . STRING
    (15) dato -> . CHAR
    (16) dato -> . ENTERO
    (17) dato -> . FLOTANTE
    (18) dato -> . BOOLEAN

    STRING          shift and go to state 42
    CHAR            shift and go to state 43
    ENTERO          shift and go to state 44
    FLOTANTE        shift and go to state 45
    BOOLEAN         shift and go to state 46

    dato                           shift and go to state 60

state 34

    (36) operacion -> MAS .

    ENTERO          reduce using rule 36 (operacion -> MAS .)
    FLOTANTE        reduce using rule 36 (operacion -> MAS .)
    BOOLEAN         reduce using rule 36 (operacion -> MAS .)
    VARIABLE        reduce using rule 36 (operacion -> MAS .)


state 35

    (37) operacion -> MENOS .

    ENTERO          reduce using rule 37 (operacion -> MENOS .)
    FLOTANTE        reduce using rule 37 (operacion -> MENOS .)
    BOOLEAN         reduce using rule 37 (operacion -> MENOS .)
    VARIABLE        reduce using rule 37 (operacion -> MENOS .)


state 36

    (38) operacion -> PRODUCTO .

    ENTERO          reduce using rule 38 (operacion -> PRODUCTO .)
    FLOTANTE        reduce using rule 38 (operacion -> PRODUCTO .)
    BOOLEAN         reduce using rule 38 (operacion -> PRODUCTO .)
    VARIABLE        reduce using rule 38 (operacion -> PRODUCTO .)


state 37

    (39) operacion -> DIVISION .

    ENTERO          reduce using rule 39 (operacion -> DIVISION .)
    FLOTANTE        reduce using rule 39 (operacion -> DIVISION .)
    BOOLEAN         reduce using rule 39 (operacion -> DIVISION .)
    VARIABLE        reduce using rule 39 (operacion -> DIVISION .)


state 38

    (49) conjuntos -> NUMERAL L_LLAVE . expresionConjuntoEnteros R_LLAVE
    (50) conjuntos -> NUMERAL L_LLAVE . expresionConjuntoDouble R_LLAVE
    (51) conjuntos -> NUMERAL L_LLAVE . expresionConjuntoString R_LLAVE
    (53) expresionConjuntoEnteros -> . ENTERO
    (54) expresionConjuntoEnteros -> . ENTERO expresionConjuntoEnteros
    (55) expresionConjuntoDouble -> . FLOTANTE
    (56) expresionConjuntoDouble -> . FLOTANTE expresionConjuntoDouble
    (57) expresionConjuntoString -> . STRING
    (58) expresionConjuntoString -> . STRING expresionConjuntoString

    ENTERO          shift and go to state 64
    FLOTANTE        shift and go to state 65
    STRING          shift and go to state 66

    expresionConjuntoEnteros       shift and go to state 61
    expresionConjuntoDouble        shift and go to state 62
    expresionConjuntoString        shift and go to state 63

state 39

    (28) asignacion -> LPAREN DEFICION VARIABLE . dato RPAREN
    (14) dato -> . STRING
    (15) dato -> . CHAR
    (16) dato -> . ENTERO
    (17) dato -> . FLOTANTE
    (18) dato -> . BOOLEAN

    STRING          shift and go to state 42
    CHAR            shift and go to state 43
    ENTERO          shift and go to state 44
    FLOTANTE        shift and go to state 45
    BOOLEAN         shift and go to state 46

    dato                           shift and go to state 67

state 40

    (29) asignacion -> LPAREN LET LCOR . VARIABLE dato RCOR RPAREN

    VARIABLE        shift and go to state 68


state 41

    (34) impresion -> LPAREN IMPRIMIR dato . RPAREN

    RPAREN          shift and go to state 69


state 42

    (14) dato -> STRING .

    RPAREN          reduce using rule 14 (dato -> STRING .)
    STRING          reduce using rule 14 (dato -> STRING .)
    CHAR            reduce using rule 14 (dato -> STRING .)
    ENTERO          reduce using rule 14 (dato -> STRING .)
    FLOTANTE        reduce using rule 14 (dato -> STRING .)
    BOOLEAN         reduce using rule 14 (dato -> STRING .)
    RCOR            reduce using rule 14 (dato -> STRING .)


state 43

    (15) dato -> CHAR .

    RPAREN          reduce using rule 15 (dato -> CHAR .)
    STRING          reduce using rule 15 (dato -> CHAR .)
    CHAR            reduce using rule 15 (dato -> CHAR .)
    ENTERO          reduce using rule 15 (dato -> CHAR .)
    FLOTANTE        reduce using rule 15 (dato -> CHAR .)
    BOOLEAN         reduce using rule 15 (dato -> CHAR .)
    RCOR            reduce using rule 15 (dato -> CHAR .)


state 44

    (16) dato -> ENTERO .

    RPAREN          reduce using rule 16 (dato -> ENTERO .)
    STRING          reduce using rule 16 (dato -> ENTERO .)
    CHAR            reduce using rule 16 (dato -> ENTERO .)
    ENTERO          reduce using rule 16 (dato -> ENTERO .)
    FLOTANTE        reduce using rule 16 (dato -> ENTERO .)
    BOOLEAN         reduce using rule 16 (dato -> ENTERO .)
    RCOR            reduce using rule 16 (dato -> ENTERO .)


state 45

    (17) dato -> FLOTANTE .

    RPAREN          reduce using rule 17 (dato -> FLOTANTE .)
    STRING          reduce using rule 17 (dato -> FLOTANTE .)
    CHAR            reduce using rule 17 (dato -> FLOTANTE .)
    ENTERO          reduce using rule 17 (dato -> FLOTANTE .)
    FLOTANTE        reduce using rule 17 (dato -> FLOTANTE .)
    BOOLEAN         reduce using rule 17 (dato -> FLOTANTE .)
    RCOR            reduce using rule 17 (dato -> FLOTANTE .)


state 46

    (18) dato -> BOOLEAN .

    RPAREN          reduce using rule 18 (dato -> BOOLEAN .)
    STRING          reduce using rule 18 (dato -> BOOLEAN .)
    CHAR            reduce using rule 18 (dato -> BOOLEAN .)
    ENTERO          reduce using rule 18 (dato -> BOOLEAN .)
    FLOTANTE        reduce using rule 18 (dato -> BOOLEAN .)
    BOOLEAN         reduce using rule 18 (dato -> BOOLEAN .)
    RCOR            reduce using rule 18 (dato -> BOOLEAN .)


state 47

    (41) operacion_aritmetica1 -> LPAREN operacion valor . valor RPAREN
    (42) condicional -> LPAREN operacion valor . valor RPAREN
    (19) valor -> . ENTERO
    (20) valor -> . FLOTANTE
    (21) valor -> . BOOLEAN
    (35) valor -> . VARIABLE

    ENTERO          shift and go to state 48
    FLOTANTE        shift and go to state 49
    BOOLEAN         shift and go to state 50
    VARIABLE        shift and go to state 51

    valor                          shift and go to state 70

state 48

    (19) valor -> ENTERO .

    ENTERO          reduce using rule 19 (valor -> ENTERO .)
    FLOTANTE        reduce using rule 19 (valor -> ENTERO .)
    BOOLEAN         reduce using rule 19 (valor -> ENTERO .)
    VARIABLE        reduce using rule 19 (valor -> ENTERO .)
    RPAREN          reduce using rule 19 (valor -> ENTERO .)


state 49

    (20) valor -> FLOTANTE .

    ENTERO          reduce using rule 20 (valor -> FLOTANTE .)
    FLOTANTE        reduce using rule 20 (valor -> FLOTANTE .)
    BOOLEAN         reduce using rule 20 (valor -> FLOTANTE .)
    VARIABLE        reduce using rule 20 (valor -> FLOTANTE .)
    RPAREN          reduce using rule 20 (valor -> FLOTANTE .)


state 50

    (21) valor -> BOOLEAN .

    ENTERO          reduce using rule 21 (valor -> BOOLEAN .)
    FLOTANTE        reduce using rule 21 (valor -> BOOLEAN .)
    BOOLEAN         reduce using rule 21 (valor -> BOOLEAN .)
    VARIABLE        reduce using rule 21 (valor -> BOOLEAN .)
    RPAREN          reduce using rule 21 (valor -> BOOLEAN .)


state 51

    (35) valor -> VARIABLE .

    ENTERO          reduce using rule 35 (valor -> VARIABLE .)
    FLOTANTE        reduce using rule 35 (valor -> VARIABLE .)
    BOOLEAN         reduce using rule 35 (valor -> VARIABLE .)
    VARIABLE        reduce using rule 35 (valor -> VARIABLE .)
    RPAREN          reduce using rule 35 (valor -> VARIABLE .)


state 52

    (45) defn -> LPAREN DEFFUNCION VARIABLE . LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN

    LCOR            shift and go to state 71


state 53

    (46) defn -> LPAREN DEFFUNCION INCREASE . LCOR VARIABLE RCOR operacionesLogicas RPAREN

    LCOR            shift and go to state 72


state 54

    (40) operacionesLogicas -> LPAREN IF LPAREN . MENORQUE VARIABLE ENTERO RPAREN LPAREN RECUR LPAREN INC LPAREN VARIABLE RPAREN RPAREN VARIABLE RPAREN RPAREN

    MENORQUE        shift and go to state 73


state 55

    (52) sentenciaLoopRecur -> LPAREN LOOP LCOR . VARIABLE ENTERO RCOR operacionesLogicas RPAREN

    VARIABLE        shift and go to state 74


state 56

    (44) doseq -> LPAREN DOSEQ LCOR . VARIABLE LPAREN RANGE VARIABLE RPAREN RCOR LPAREN impresion RPAREN RPAREN

    VARIABLE        shift and go to state 75


state 57

    (30) sentencia_booleana -> LPAREN . operador_comparadores dato dato RPAREN
    (22) operador_comparadores -> . COMPARA_IGUAL
    (23) operador_comparadores -> . MENORQUE
    (24) operador_comparadores -> . MAYORQUE
    (25) operador_comparadores -> . MAYORIGUALQUE
    (26) operador_comparadores -> . MENORIGUALQUE
    (27) operador_comparadores -> . DIFERENTE

    COMPARA_IGUAL   shift and go to state 19
    MENORQUE        shift and go to state 18
    MAYORQUE        shift and go to state 20
    MAYORIGUALQUE   shift and go to state 21
    MENORIGUALQUE   shift and go to state 22
    DIFERENTE       shift and go to state 23

    operador_comparadores          shift and go to state 33

state 58

    (33) cond_ -> LPAREN COND linecondition . RPAREN

    RPAREN          shift and go to state 76


state 59

    (31) linecondition -> sentencia_booleana . impresion
    (32) linecondition -> sentencia_booleana . dato
    (34) impresion -> . LPAREN IMPRIMIR dato RPAREN
    (14) dato -> . STRING
    (15) dato -> . CHAR
    (16) dato -> . ENTERO
    (17) dato -> . FLOTANTE
    (18) dato -> . BOOLEAN

    LPAREN          shift and go to state 79
    STRING          shift and go to state 42
    CHAR            shift and go to state 43
    ENTERO          shift and go to state 44
    FLOTANTE        shift and go to state 45
    BOOLEAN         shift and go to state 46

    impresion                      shift and go to state 77
    dato                           shift and go to state 78

state 60

    (30) sentencia_booleana -> LPAREN operador_comparadores dato . dato RPAREN
    (14) dato -> . STRING
    (15) dato -> . CHAR
    (16) dato -> . ENTERO
    (17) dato -> . FLOTANTE
    (18) dato -> . BOOLEAN

    STRING          shift and go to state 42
    CHAR            shift and go to state 43
    ENTERO          shift and go to state 44
    FLOTANTE        shift and go to state 45
    BOOLEAN         shift and go to state 46

    dato                           shift and go to state 80

state 61

    (49) conjuntos -> NUMERAL L_LLAVE expresionConjuntoEnteros . R_LLAVE

    R_LLAVE         shift and go to state 81


state 62

    (50) conjuntos -> NUMERAL L_LLAVE expresionConjuntoDouble . R_LLAVE

    R_LLAVE         shift and go to state 82


state 63

    (51) conjuntos -> NUMERAL L_LLAVE expresionConjuntoString . R_LLAVE

    R_LLAVE         shift and go to state 83


state 64

    (53) expresionConjuntoEnteros -> ENTERO .
    (54) expresionConjuntoEnteros -> ENTERO . expresionConjuntoEnteros
    (53) expresionConjuntoEnteros -> . ENTERO
    (54) expresionConjuntoEnteros -> . ENTERO expresionConjuntoEnteros

    R_LLAVE         reduce using rule 53 (expresionConjuntoEnteros -> ENTERO .)
    ENTERO          shift and go to state 64

    expresionConjuntoEnteros       shift and go to state 84

state 65

    (55) expresionConjuntoDouble -> FLOTANTE .
    (56) expresionConjuntoDouble -> FLOTANTE . expresionConjuntoDouble
    (55) expresionConjuntoDouble -> . FLOTANTE
    (56) expresionConjuntoDouble -> . FLOTANTE expresionConjuntoDouble

    R_LLAVE         reduce using rule 55 (expresionConjuntoDouble -> FLOTANTE .)
    FLOTANTE        shift and go to state 65

    expresionConjuntoDouble        shift and go to state 85

state 66

    (57) expresionConjuntoString -> STRING .
    (58) expresionConjuntoString -> STRING . expresionConjuntoString
    (57) expresionConjuntoString -> . STRING
    (58) expresionConjuntoString -> . STRING expresionConjuntoString

    R_LLAVE         reduce using rule 57 (expresionConjuntoString -> STRING .)
    STRING          shift and go to state 66

    expresionConjuntoString        shift and go to state 86

state 67

    (28) asignacion -> LPAREN DEFICION VARIABLE dato . RPAREN

    RPAREN          shift and go to state 87


state 68

    (29) asignacion -> LPAREN LET LCOR VARIABLE . dato RCOR RPAREN
    (14) dato -> . STRING
    (15) dato -> . CHAR
    (16) dato -> . ENTERO
    (17) dato -> . FLOTANTE
    (18) dato -> . BOOLEAN

    STRING          shift and go to state 42
    CHAR            shift and go to state 43
    ENTERO          shift and go to state 44
    FLOTANTE        shift and go to state 45
    BOOLEAN         shift and go to state 46

    dato                           shift and go to state 88

state 69

    (34) impresion -> LPAREN IMPRIMIR dato RPAREN .

    $end            reduce using rule 34 (impresion -> LPAREN IMPRIMIR dato RPAREN .)
    RPAREN          reduce using rule 34 (impresion -> LPAREN IMPRIMIR dato RPAREN .)


state 70

    (41) operacion_aritmetica1 -> LPAREN operacion valor valor . RPAREN
    (42) condicional -> LPAREN operacion valor valor . RPAREN

    RPAREN          shift and go to state 89


state 71

    (45) defn -> LPAREN DEFFUNCION VARIABLE LCOR . VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN

    VARIABLE        shift and go to state 90


state 72

    (46) defn -> LPAREN DEFFUNCION INCREASE LCOR . VARIABLE RCOR operacionesLogicas RPAREN

    VARIABLE        shift and go to state 91


state 73

    (40) operacionesLogicas -> LPAREN IF LPAREN MENORQUE . VARIABLE ENTERO RPAREN LPAREN RECUR LPAREN INC LPAREN VARIABLE RPAREN RPAREN VARIABLE RPAREN RPAREN

    VARIABLE        shift and go to state 92


state 74

    (52) sentenciaLoopRecur -> LPAREN LOOP LCOR VARIABLE . ENTERO RCOR operacionesLogicas RPAREN

    ENTERO          shift and go to state 93


state 75

    (44) doseq -> LPAREN DOSEQ LCOR VARIABLE . LPAREN RANGE VARIABLE RPAREN RCOR LPAREN impresion RPAREN RPAREN

    LPAREN          shift and go to state 94


state 76

    (33) cond_ -> LPAREN COND linecondition RPAREN .

    $end            reduce using rule 33 (cond_ -> LPAREN COND linecondition RPAREN .)


state 77

    (31) linecondition -> sentencia_booleana impresion .

    RPAREN          reduce using rule 31 (linecondition -> sentencia_booleana impresion .)


state 78

    (32) linecondition -> sentencia_booleana dato .

    RPAREN          reduce using rule 32 (linecondition -> sentencia_booleana dato .)


state 79

    (34) impresion -> LPAREN . IMPRIMIR dato RPAREN

    IMPRIMIR        shift and go to state 26


state 80

    (30) sentencia_booleana -> LPAREN operador_comparadores dato dato . RPAREN

    RPAREN          shift and go to state 95


state 81

    (49) conjuntos -> NUMERAL L_LLAVE expresionConjuntoEnteros R_LLAVE .

    $end            reduce using rule 49 (conjuntos -> NUMERAL L_LLAVE expresionConjuntoEnteros R_LLAVE .)


state 82

    (50) conjuntos -> NUMERAL L_LLAVE expresionConjuntoDouble R_LLAVE .

    $end            reduce using rule 50 (conjuntos -> NUMERAL L_LLAVE expresionConjuntoDouble R_LLAVE .)


state 83

    (51) conjuntos -> NUMERAL L_LLAVE expresionConjuntoString R_LLAVE .

    $end            reduce using rule 51 (conjuntos -> NUMERAL L_LLAVE expresionConjuntoString R_LLAVE .)


state 84

    (54) expresionConjuntoEnteros -> ENTERO expresionConjuntoEnteros .

    R_LLAVE         reduce using rule 54 (expresionConjuntoEnteros -> ENTERO expresionConjuntoEnteros .)


state 85

    (56) expresionConjuntoDouble -> FLOTANTE expresionConjuntoDouble .

    R_LLAVE         reduce using rule 56 (expresionConjuntoDouble -> FLOTANTE expresionConjuntoDouble .)


state 86

    (58) expresionConjuntoString -> STRING expresionConjuntoString .

    R_LLAVE         reduce using rule 58 (expresionConjuntoString -> STRING expresionConjuntoString .)


state 87

    (28) asignacion -> LPAREN DEFICION VARIABLE dato RPAREN .

    $end            reduce using rule 28 (asignacion -> LPAREN DEFICION VARIABLE dato RPAREN .)


state 88

    (29) asignacion -> LPAREN LET LCOR VARIABLE dato . RCOR RPAREN

    RCOR            shift and go to state 96


state 89

    (41) operacion_aritmetica1 -> LPAREN operacion valor valor RPAREN .
    (42) condicional -> LPAREN operacion valor valor RPAREN .

  ! reduce/reduce conflict for $end resolved using rule 41 (operacion_aritmetica1 -> LPAREN operacion valor valor RPAREN .)
    $end            reduce using rule 41 (operacion_aritmetica1 -> LPAREN operacion valor valor RPAREN .)

  ! $end            [ reduce using rule 42 (condicional -> LPAREN operacion valor valor RPAREN .) ]


state 90

    (45) defn -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE . RCOR LPAREN expresionDefnElse RPAREN RPAREN

    RCOR            shift and go to state 97


state 91

    (46) defn -> LPAREN DEFFUNCION INCREASE LCOR VARIABLE . RCOR operacionesLogicas RPAREN

    RCOR            shift and go to state 98


state 92

    (40) operacionesLogicas -> LPAREN IF LPAREN MENORQUE VARIABLE . ENTERO RPAREN LPAREN RECUR LPAREN INC LPAREN VARIABLE RPAREN RPAREN VARIABLE RPAREN RPAREN

    ENTERO          shift and go to state 99


state 93

    (52) sentenciaLoopRecur -> LPAREN LOOP LCOR VARIABLE ENTERO . RCOR operacionesLogicas RPAREN

    RCOR            shift and go to state 100


state 94

    (44) doseq -> LPAREN DOSEQ LCOR VARIABLE LPAREN . RANGE VARIABLE RPAREN RCOR LPAREN impresion RPAREN RPAREN

    RANGE           shift and go to state 101


state 95

    (30) sentencia_booleana -> LPAREN operador_comparadores dato dato RPAREN .

    $end            reduce using rule 30 (sentencia_booleana -> LPAREN operador_comparadores dato dato RPAREN .)
    LPAREN          reduce using rule 30 (sentencia_booleana -> LPAREN operador_comparadores dato dato RPAREN .)
    STRING          reduce using rule 30 (sentencia_booleana -> LPAREN operador_comparadores dato dato RPAREN .)
    CHAR            reduce using rule 30 (sentencia_booleana -> LPAREN operador_comparadores dato dato RPAREN .)
    ENTERO          reduce using rule 30 (sentencia_booleana -> LPAREN operador_comparadores dato dato RPAREN .)
    FLOTANTE        reduce using rule 30 (sentencia_booleana -> LPAREN operador_comparadores dato dato RPAREN .)
    BOOLEAN         reduce using rule 30 (sentencia_booleana -> LPAREN operador_comparadores dato dato RPAREN .)


state 96

    (29) asignacion -> LPAREN LET LCOR VARIABLE dato RCOR . RPAREN

    RPAREN          shift and go to state 102


state 97

    (45) defn -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR . LPAREN expresionDefnElse RPAREN RPAREN

    LPAREN          shift and go to state 103


state 98

    (46) defn -> LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR . operacionesLogicas RPAREN
    (40) operacionesLogicas -> . LPAREN IF LPAREN MENORQUE VARIABLE ENTERO RPAREN LPAREN RECUR LPAREN INC LPAREN VARIABLE RPAREN RPAREN VARIABLE RPAREN RPAREN

    LPAREN          shift and go to state 104

    operacionesLogicas             shift and go to state 105

state 99

    (40) operacionesLogicas -> LPAREN IF LPAREN MENORQUE VARIABLE ENTERO . RPAREN LPAREN RECUR LPAREN INC LPAREN VARIABLE RPAREN RPAREN VARIABLE RPAREN RPAREN

    RPAREN          shift and go to state 106


state 100

    (52) sentenciaLoopRecur -> LPAREN LOOP LCOR VARIABLE ENTERO RCOR . operacionesLogicas RPAREN
    (40) operacionesLogicas -> . LPAREN IF LPAREN MENORQUE VARIABLE ENTERO RPAREN LPAREN RECUR LPAREN INC LPAREN VARIABLE RPAREN RPAREN VARIABLE RPAREN RPAREN

    LPAREN          shift and go to state 104

    operacionesLogicas             shift and go to state 107

state 101

    (44) doseq -> LPAREN DOSEQ LCOR VARIABLE LPAREN RANGE . VARIABLE RPAREN RCOR LPAREN impresion RPAREN RPAREN

    VARIABLE        shift and go to state 108


state 102

    (29) asignacion -> LPAREN LET LCOR VARIABLE dato RCOR RPAREN .

    $end            reduce using rule 29 (asignacion -> LPAREN LET LCOR VARIABLE dato RCOR RPAREN .)


state 103

    (45) defn -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN . expresionDefnElse RPAREN RPAREN
    (47) expresionDefnElse -> . CASE VARIABLE expresionCase DOSPUNTOS ELSE STRING

    CASE            shift and go to state 110

    expresionDefnElse              shift and go to state 109

state 104

    (40) operacionesLogicas -> LPAREN . IF LPAREN MENORQUE VARIABLE ENTERO RPAREN LPAREN RECUR LPAREN INC LPAREN VARIABLE RPAREN RPAREN VARIABLE RPAREN RPAREN

    IF              shift and go to state 29


state 105

    (46) defn -> LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas . RPAREN

    RPAREN          shift and go to state 111


state 106

    (40) operacionesLogicas -> LPAREN IF LPAREN MENORQUE VARIABLE ENTERO RPAREN . LPAREN RECUR LPAREN INC LPAREN VARIABLE RPAREN RPAREN VARIABLE RPAREN RPAREN

    LPAREN          shift and go to state 112


state 107

    (52) sentenciaLoopRecur -> LPAREN LOOP LCOR VARIABLE ENTERO RCOR operacionesLogicas . RPAREN

    RPAREN          shift and go to state 113


state 108

    (44) doseq -> LPAREN DOSEQ LCOR VARIABLE LPAREN RANGE VARIABLE . RPAREN RCOR LPAREN impresion RPAREN RPAREN

    RPAREN          shift and go to state 114


state 109

    (45) defn -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse . RPAREN RPAREN

    RPAREN          shift and go to state 115


state 110

    (47) expresionDefnElse -> CASE . VARIABLE expresionCase DOSPUNTOS ELSE STRING

    VARIABLE        shift and go to state 116


state 111

    (46) defn -> LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN .

    $end            reduce using rule 46 (defn -> LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN .)


state 112

    (40) operacionesLogicas -> LPAREN IF LPAREN MENORQUE VARIABLE ENTERO RPAREN LPAREN . RECUR LPAREN INC LPAREN VARIABLE RPAREN RPAREN VARIABLE RPAREN RPAREN

    RECUR           shift and go to state 117


state 113

    (52) sentenciaLoopRecur -> LPAREN LOOP LCOR VARIABLE ENTERO RCOR operacionesLogicas RPAREN .

    $end            reduce using rule 52 (sentenciaLoopRecur -> LPAREN LOOP LCOR VARIABLE ENTERO RCOR operacionesLogicas RPAREN .)


state 114

    (44) doseq -> LPAREN DOSEQ LCOR VARIABLE LPAREN RANGE VARIABLE RPAREN . RCOR LPAREN impresion RPAREN RPAREN

    RCOR            shift and go to state 118


state 115

    (45) defn -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN . RPAREN

    RPAREN          shift and go to state 119


state 116

    (47) expresionDefnElse -> CASE VARIABLE . expresionCase DOSPUNTOS ELSE STRING
    (48) expresionCase -> . dato STRING
    (14) dato -> . STRING
    (15) dato -> . CHAR
    (16) dato -> . ENTERO
    (17) dato -> . FLOTANTE
    (18) dato -> . BOOLEAN

    STRING          shift and go to state 42
    CHAR            shift and go to state 43
    ENTERO          shift and go to state 44
    FLOTANTE        shift and go to state 45
    BOOLEAN         shift and go to state 46

    expresionCase                  shift and go to state 120
    dato                           shift and go to state 121

state 117

    (40) operacionesLogicas -> LPAREN IF LPAREN MENORQUE VARIABLE ENTERO RPAREN LPAREN RECUR . LPAREN INC LPAREN VARIABLE RPAREN RPAREN VARIABLE RPAREN RPAREN

    LPAREN          shift and go to state 122


state 118

    (44) doseq -> LPAREN DOSEQ LCOR VARIABLE LPAREN RANGE VARIABLE RPAREN RCOR . LPAREN impresion RPAREN RPAREN

    LPAREN          shift and go to state 123


state 119

    (45) defn -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN .

    $end            reduce using rule 45 (defn -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN .)


state 120

    (47) expresionDefnElse -> CASE VARIABLE expresionCase . DOSPUNTOS ELSE STRING

    DOSPUNTOS       shift and go to state 124


state 121

    (48) expresionCase -> dato . STRING

    STRING          shift and go to state 125


state 122

    (40) operacionesLogicas -> LPAREN IF LPAREN MENORQUE VARIABLE ENTERO RPAREN LPAREN RECUR LPAREN . INC LPAREN VARIABLE RPAREN RPAREN VARIABLE RPAREN RPAREN

    INC             shift and go to state 126


state 123

    (44) doseq -> LPAREN DOSEQ LCOR VARIABLE LPAREN RANGE VARIABLE RPAREN RCOR LPAREN . impresion RPAREN RPAREN
    (34) impresion -> . LPAREN IMPRIMIR dato RPAREN

    LPAREN          shift and go to state 79

    impresion                      shift and go to state 127

state 124

    (47) expresionDefnElse -> CASE VARIABLE expresionCase DOSPUNTOS . ELSE STRING

    ELSE            shift and go to state 128


state 125

    (48) expresionCase -> dato STRING .

    DOSPUNTOS       reduce using rule 48 (expresionCase -> dato STRING .)


state 126

    (40) operacionesLogicas -> LPAREN IF LPAREN MENORQUE VARIABLE ENTERO RPAREN LPAREN RECUR LPAREN INC . LPAREN VARIABLE RPAREN RPAREN VARIABLE RPAREN RPAREN

    LPAREN          shift and go to state 129


state 127

    (44) doseq -> LPAREN DOSEQ LCOR VARIABLE LPAREN RANGE VARIABLE RPAREN RCOR LPAREN impresion . RPAREN RPAREN

    RPAREN          shift and go to state 130


state 128

    (47) expresionDefnElse -> CASE VARIABLE expresionCase DOSPUNTOS ELSE . STRING

    STRING          shift and go to state 131


state 129

    (40) operacionesLogicas -> LPAREN IF LPAREN MENORQUE VARIABLE ENTERO RPAREN LPAREN RECUR LPAREN INC LPAREN . VARIABLE RPAREN RPAREN VARIABLE RPAREN RPAREN

    VARIABLE        shift and go to state 132


state 130

    (44) doseq -> LPAREN DOSEQ LCOR VARIABLE LPAREN RANGE VARIABLE RPAREN RCOR LPAREN impresion RPAREN . RPAREN

    RPAREN          shift and go to state 133


state 131

    (47) expresionDefnElse -> CASE VARIABLE expresionCase DOSPUNTOS ELSE STRING .

    RPAREN          reduce using rule 47 (expresionDefnElse -> CASE VARIABLE expresionCase DOSPUNTOS ELSE STRING .)


state 132

    (40) operacionesLogicas -> LPAREN IF LPAREN MENORQUE VARIABLE ENTERO RPAREN LPAREN RECUR LPAREN INC LPAREN VARIABLE . RPAREN RPAREN VARIABLE RPAREN RPAREN

    RPAREN          shift and go to state 134


state 133

    (44) doseq -> LPAREN DOSEQ LCOR VARIABLE LPAREN RANGE VARIABLE RPAREN RCOR LPAREN impresion RPAREN RPAREN .

    $end            reduce using rule 44 (doseq -> LPAREN DOSEQ LCOR VARIABLE LPAREN RANGE VARIABLE RPAREN RCOR LPAREN impresion RPAREN RPAREN .)


state 134

    (40) operacionesLogicas -> LPAREN IF LPAREN MENORQUE VARIABLE ENTERO RPAREN LPAREN RECUR LPAREN INC LPAREN VARIABLE RPAREN . RPAREN VARIABLE RPAREN RPAREN

    RPAREN          shift and go to state 135


state 135

    (40) operacionesLogicas -> LPAREN IF LPAREN MENORQUE VARIABLE ENTERO RPAREN LPAREN RECUR LPAREN INC LPAREN VARIABLE RPAREN RPAREN . VARIABLE RPAREN RPAREN

    VARIABLE        shift and go to state 136


state 136

    (40) operacionesLogicas -> LPAREN IF LPAREN MENORQUE VARIABLE ENTERO RPAREN LPAREN RECUR LPAREN INC LPAREN VARIABLE RPAREN RPAREN VARIABLE . RPAREN RPAREN

    RPAREN          shift and go to state 137


state 137

    (40) operacionesLogicas -> LPAREN IF LPAREN MENORQUE VARIABLE ENTERO RPAREN LPAREN RECUR LPAREN INC LPAREN VARIABLE RPAREN RPAREN VARIABLE RPAREN . RPAREN

    RPAREN          shift and go to state 138


state 138

    (40) operacionesLogicas -> LPAREN IF LPAREN MENORQUE VARIABLE ENTERO RPAREN LPAREN RECUR LPAREN INC LPAREN VARIABLE RPAREN RPAREN VARIABLE RPAREN RPAREN .

    $end            reduce using rule 40 (operacionesLogicas -> LPAREN IF LPAREN MENORQUE VARIABLE ENTERO RPAREN LPAREN RECUR LPAREN INC LPAREN VARIABLE RPAREN RPAREN VARIABLE RPAREN RPAREN .)
    RPAREN          reduce using rule 40 (operacionesLogicas -> LPAREN IF LPAREN MENORQUE VARIABLE ENTERO RPAREN LPAREN RECUR LPAREN INC LPAREN VARIABLE RPAREN RPAREN VARIABLE RPAREN RPAREN .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: reduce/reduce conflict in state 89 resolved using rule (operacion_aritmetica1 -> LPAREN operacion valor valor RPAREN)
WARNING: rejected rule (condicional -> LPAREN operacion valor valor RPAREN) in state 89
WARNING: Rule (condicional -> LPAREN operacion valor valor RPAREN) is never reduced
