Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    CLASE
    CONJUNTOS
    FUNCION
    FUTURE
    IGUAL
    INPUT
    LISTA
    MAPA
    NOT
    NS
    NUEVO
    STR
    VECTOR

Grammar

Rule 0     S' -> instrucciones
Rule 1     instrucciones -> asignacion
Rule 2     instrucciones -> impresion
Rule 3     instrucciones -> operacion_aritmetica
Rule 4     instrucciones -> conjuntos
Rule 5     instrucciones -> vector
Rule 6     instrucciones -> mapa
Rule 7     instrucciones -> if
Rule 8     instrucciones -> do
Rule 9     instrucciones -> if_do
Rule 10    instrucciones -> when
Rule 11    instrucciones -> defn
Rule 12    instrucciones -> defn_with_return
Rule 13    instrucciones -> operacionesLogicas
Rule 14    instrucciones -> sentenciaLoopRecur
Rule 15    instrucciones -> cond_
Rule 16    instrucciones -> cond_else
Rule 17    instrucciones -> doseq
Rule 18    instrucciones -> case_expression
Rule 19    instrucciones -> lista
Rule 20    instrucciones -> sentencia_booleana
Rule 21    instrucciones -> function
Rule 22    instrucciones -> dotimes
Rule 23    instrucciones -> ciclo
Rule 24    instrucciones -> valor
Rule 25    instrucciones -> recur
Rule 26    instrucciones -> dato
Rule 27    dato -> STRING
Rule 28    dato -> CHAR
Rule 29    dato -> ENTERO
Rule 30    dato -> FLOTANTE
Rule 31    dato -> BOOLEAN
Rule 32    dato -> VARIABLE
Rule 33    valor -> ENTERO
Rule 34    valor -> FLOTANTE
Rule 35    valor -> BOOLEAN
Rule 36    operador_comparadores -> COMPARA_IGUAL
Rule 37    operador_comparadores -> MENORQUE
Rule 38    operador_comparadores -> MAYORQUE
Rule 39    operador_comparadores -> MAYORIGUALQUE
Rule 40    operador_comparadores -> MENORIGUALQUE
Rule 41    operador_comparadores -> DIFERENTE
Rule 42    operador_aritmetico -> MAS
Rule 43    operador_aritmetico -> MENOS
Rule 44    operador_aritmetico -> PRODUCTO
Rule 45    operador_aritmetico -> DIVISION
Rule 46    asignacion -> LPAREN DEFICION VARIABLE dato RPAREN
Rule 47    asignacion -> LPAREN LET LCOR VARIABLE dato RCOR RPAREN
Rule 48    sentencia_booleana -> LPAREN operador_comparadores dato dato RPAREN
Rule 49    linecondition -> sentencia_booleana impresion
Rule 50    cond_ -> LPAREN COND linecondition linecondition RPAREN
Rule 51    cond_else -> LPAREN COND linecondition linecondition DOSPUNTOS ELSE impresion RPAREN
Rule 52    case -> dato impresion
Rule 53    case -> dato STRING
Rule 54    case -> dato impresion case
Rule 55    case -> dato STRING case
Rule 56    case_expression -> LPAREN CASE dato case impresion RPAREN
Rule 57    case_expression -> LPAREN CASE dato case DOSPUNTOS ELSE STRING RPAREN
Rule 58    argumentos_lista -> dato
Rule 59    argumentos_lista -> dato argumentos_lista
Rule 60    lista -> LPAREN LIST argumentos_lista RPAREN
Rule 61    argumments -> LCOR argumentos_lista RCOR
Rule 62    description -> STRING
Rule 63    nombre_funct -> VARIABLE
Rule 64    body -> instrucciones
Rule 65    recur -> LPAREN RECUR LPAREN INC dato RPAREN RPAREN
Rule 66    internos -> description
Rule 67    internos -> argumments
Rule 68    internos -> body
Rule 69    internos -> argumments body
Rule 70    internos -> description argumments body
Rule 71    function -> LPAREN DEFFUNCION nombre_funct internos RPAREN
Rule 72    function -> LPAREN DEFFUNCION nombre_funct internos LPAREN if body RPAREN
Rule 73    info_imprimir -> dato
Rule 74    info_imprimir -> dato info_imprimir
Rule 75    impresion -> LPAREN IMPRIMIR info_imprimir RPAREN
Rule 76    secuencia_v -> dato
Rule 77    secuencia_v -> dato secuencia_v
Rule 78    vector -> LCOR secuencia_v RCOR
Rule 79    secuencia_mapa -> DOSPUNTOS VARIABLE dato
Rule 80    secuencia_mapa -> DOSPUNTOS VARIABLE dato secuencia_mapa
Rule 81    mapa -> L_LLAVE secuencia_mapa R_LLAVE
Rule 82    if -> IF sentencia_booleana
Rule 83    if -> IF sentencia_booleana recur
Rule 84    if -> LPAREN IF instrucciones body RPAREN
Rule 85    do -> LPAREN DO instrucciones RPAREN
Rule 86    if_do -> LPAREN if do RPAREN
Rule 87    when -> LPAREN WHEN sentencia_booleana body RPAREN
Rule 88    ciclo -> LCOR VARIABLE ENTERO RCOR
Rule 89    dotimes -> LPAREN DOTIMES ciclo body RPAREN
Rule 90    operacionesLogicas -> LPAREN if recur VARIABLE RPAREN RPAREN
Rule 91    operacion_aritmetica -> LPAREN operador_aritmetico dato dato RPAREN
Rule 92    doseq_args -> LCOR dato LPAREN RANGE dato RPAREN RCOR
Rule 93    doseq_args -> LCOR dato conjuntos RCOR
Rule 94    doseq_args -> LCOR dato vector dato vector RCOR
Rule 95    doseq_args -> LCOR vector conjuntos RCOR
Rule 96    doseq_args -> LCOR dato vector RCOR
Rule 97    pnr_dato -> dato
Rule 98    pnr_dato -> dato pnr_dato
Rule 99    doseq_prn -> PRN LPAREN dato RPAREN
Rule 100   doseq_prn -> PRN pnr_dato
Rule 101   doseq_prn -> PRN operacion_aritmetica
Rule 102   doseq -> LPAREN DOSEQ doseq_args impresion RPAREN
Rule 103   doseq -> LPAREN DOSEQ doseq_args LPAREN doseq_prn RPAREN RPAREN
Rule 104   defn -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN
Rule 105   defn -> LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN
Rule 106   defn_with_return -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN defn_return
Rule 107   defn_with_return -> LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN defn_return
Rule 108   expresionDefnElse -> CASE VARIABLE expresionCase DOSPUNTOS ELSE STRING
Rule 109   defn_return -> LPAREN dato dato RPAREN
Rule 110   expresionCase -> dato STRING
Rule 111   conjuntos -> NUMERAL L_LLAVE expresionConjuntoEnteros R_LLAVE
Rule 112   conjuntos -> NUMERAL L_LLAVE expresionConjuntoDouble R_LLAVE
Rule 113   conjuntos -> NUMERAL L_LLAVE expresionConjuntoString R_LLAVE
Rule 114   sentenciaLoopRecur -> LPAREN LOOP argumments LPAREN if dato RPAREN RPAREN
Rule 115   expresionConjuntoEnteros -> ENTERO
Rule 116   expresionConjuntoEnteros -> ENTERO expresionConjuntoEnteros
Rule 117   expresionConjuntoDouble -> FLOTANTE
Rule 118   expresionConjuntoDouble -> FLOTANTE expresionConjuntoDouble
Rule 119   expresionConjuntoString -> STRING
Rule 120   expresionConjuntoString -> STRING expresionConjuntoString

Terminals, with rules where they appear

BOOLEAN              : 31 35
CASE                 : 56 57 108
CHAR                 : 28
CLASE                : 
COMPARA_IGUAL        : 36
COND                 : 50 51
CONJUNTOS            : 
DEFFUNCION           : 71 72 104 105 106 107
DEFICION             : 46
DIFERENTE            : 41
DIVISION             : 45
DO                   : 85
DOSEQ                : 102 103
DOSPUNTOS            : 51 57 79 80 108
DOTIMES              : 89
ELSE                 : 51 57 108
ENTERO               : 29 33 88 115 116
FLOTANTE             : 30 34 117 118
FUNCION              : 
FUTURE               : 
IF                   : 82 83 84
IGUAL                : 
IMPRIMIR             : 75
INC                  : 65
INCREASE             : 105 107
INPUT                : 
LCOR                 : 47 61 78 88 92 93 94 95 96 104 105 106 107
LET                  : 47
LIST                 : 60
LISTA                : 
LOOP                 : 114
LPAREN               : 46 47 48 50 51 56 57 60 65 65 71 72 72 75 84 85 86 87 89 90 91 92 99 102 103 103 104 104 105 106 106 107 109 114 114
L_LLAVE              : 81 111 112 113
MAPA                 : 
MAS                  : 42
MAYORIGUALQUE        : 39
MAYORQUE             : 38
MENORIGUALQUE        : 40
MENORQUE             : 37
MENOS                : 43
NOT                  : 
NS                   : 
NUEVO                : 
NUMERAL              : 111 112 113
PRN                  : 99 100 101
PRODUCTO             : 44
RANGE                : 92
RCOR                 : 47 61 78 88 92 93 94 95 96 104 105 106 107
RECUR                : 65
RPAREN               : 46 47 48 50 51 56 57 60 65 65 71 72 75 84 85 86 87 89 90 90 91 92 99 102 103 103 104 104 105 106 106 107 109 114 114
R_LLAVE              : 81 111 112 113
STR                  : 
STRING               : 27 53 55 57 62 108 110 119 120
VARIABLE             : 32 46 47 63 79 80 88 90 104 104 105 106 106 107 108
VECTOR               : 
WHEN                 : 87
error                : 

Nonterminals, with rules where they appear

argumentos_lista     : 59 60 61
argumments           : 67 69 70 114
asignacion           : 1
body                 : 68 69 70 72 84 87 89
case                 : 54 55 56 57
case_expression      : 18
ciclo                : 23 89
cond_                : 15
cond_else            : 16
conjuntos            : 4 93 95
dato                 : 26 46 47 48 48 52 53 54 55 56 57 58 59 65 73 74 76 77 79 80 91 91 92 92 93 94 94 96 97 98 99 109 109 110 114
defn                 : 11
defn_return          : 106 107
defn_with_return     : 12
description          : 66 70
do                   : 8 86
doseq                : 17
doseq_args           : 102 103
doseq_prn            : 103
dotimes              : 22
expresionCase        : 108
expresionConjuntoDouble : 112 118
expresionConjuntoEnteros : 111 116
expresionConjuntoString : 113 120
expresionDefnElse    : 104 106
function             : 21
if                   : 7 72 86 90 114
if_do                : 9
impresion            : 2 49 51 52 54 56 102
info_imprimir        : 74 75
instrucciones        : 64 84 85 0
internos             : 71 72
linecondition        : 50 50 51 51
lista                : 19
mapa                 : 6
nombre_funct         : 71 72
operacion_aritmetica : 3 101
operacionesLogicas   : 13 105 107
operador_aritmetico  : 91
operador_comparadores : 48
pnr_dato             : 98 100
recur                : 25 83 90
secuencia_mapa       : 80 81
secuencia_v          : 77 78
sentenciaLoopRecur   : 14
sentencia_booleana   : 20 49 82 83 87
valor                : 24
vector               : 5 94 94 95 96
when                 : 10

Parsing method: LALR

state 0

    (0) S' -> . instrucciones
    (1) instrucciones -> . asignacion
    (2) instrucciones -> . impresion
    (3) instrucciones -> . operacion_aritmetica
    (4) instrucciones -> . conjuntos
    (5) instrucciones -> . vector
    (6) instrucciones -> . mapa
    (7) instrucciones -> . if
    (8) instrucciones -> . do
    (9) instrucciones -> . if_do
    (10) instrucciones -> . when
    (11) instrucciones -> . defn
    (12) instrucciones -> . defn_with_return
    (13) instrucciones -> . operacionesLogicas
    (14) instrucciones -> . sentenciaLoopRecur
    (15) instrucciones -> . cond_
    (16) instrucciones -> . cond_else
    (17) instrucciones -> . doseq
    (18) instrucciones -> . case_expression
    (19) instrucciones -> . lista
    (20) instrucciones -> . sentencia_booleana
    (21) instrucciones -> . function
    (22) instrucciones -> . dotimes
    (23) instrucciones -> . ciclo
    (24) instrucciones -> . valor
    (25) instrucciones -> . recur
    (26) instrucciones -> . dato
    (46) asignacion -> . LPAREN DEFICION VARIABLE dato RPAREN
    (47) asignacion -> . LPAREN LET LCOR VARIABLE dato RCOR RPAREN
    (75) impresion -> . LPAREN IMPRIMIR info_imprimir RPAREN
    (91) operacion_aritmetica -> . LPAREN operador_aritmetico dato dato RPAREN
    (111) conjuntos -> . NUMERAL L_LLAVE expresionConjuntoEnteros R_LLAVE
    (112) conjuntos -> . NUMERAL L_LLAVE expresionConjuntoDouble R_LLAVE
    (113) conjuntos -> . NUMERAL L_LLAVE expresionConjuntoString R_LLAVE
    (78) vector -> . LCOR secuencia_v RCOR
    (81) mapa -> . L_LLAVE secuencia_mapa R_LLAVE
    (82) if -> . IF sentencia_booleana
    (83) if -> . IF sentencia_booleana recur
    (84) if -> . LPAREN IF instrucciones body RPAREN
    (85) do -> . LPAREN DO instrucciones RPAREN
    (86) if_do -> . LPAREN if do RPAREN
    (87) when -> . LPAREN WHEN sentencia_booleana body RPAREN
    (104) defn -> . LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN
    (105) defn -> . LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN
    (106) defn_with_return -> . LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN defn_return
    (107) defn_with_return -> . LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN defn_return
    (90) operacionesLogicas -> . LPAREN if recur VARIABLE RPAREN RPAREN
    (114) sentenciaLoopRecur -> . LPAREN LOOP argumments LPAREN if dato RPAREN RPAREN
    (50) cond_ -> . LPAREN COND linecondition linecondition RPAREN
    (51) cond_else -> . LPAREN COND linecondition linecondition DOSPUNTOS ELSE impresion RPAREN
    (102) doseq -> . LPAREN DOSEQ doseq_args impresion RPAREN
    (103) doseq -> . LPAREN DOSEQ doseq_args LPAREN doseq_prn RPAREN RPAREN
    (56) case_expression -> . LPAREN CASE dato case impresion RPAREN
    (57) case_expression -> . LPAREN CASE dato case DOSPUNTOS ELSE STRING RPAREN
    (60) lista -> . LPAREN LIST argumentos_lista RPAREN
    (48) sentencia_booleana -> . LPAREN operador_comparadores dato dato RPAREN
    (71) function -> . LPAREN DEFFUNCION nombre_funct internos RPAREN
    (72) function -> . LPAREN DEFFUNCION nombre_funct internos LPAREN if body RPAREN
    (89) dotimes -> . LPAREN DOTIMES ciclo body RPAREN
    (88) ciclo -> . LCOR VARIABLE ENTERO RCOR
    (33) valor -> . ENTERO
    (34) valor -> . FLOTANTE
    (35) valor -> . BOOLEAN
    (65) recur -> . LPAREN RECUR LPAREN INC dato RPAREN RPAREN
    (27) dato -> . STRING
    (28) dato -> . CHAR
    (29) dato -> . ENTERO
    (30) dato -> . FLOTANTE
    (31) dato -> . BOOLEAN
    (32) dato -> . VARIABLE

    LPAREN          shift and go to state 28
    NUMERAL         shift and go to state 31
    LCOR            shift and go to state 30
    L_LLAVE         shift and go to state 32
    IF              shift and go to state 33
    ENTERO          shift and go to state 35
    FLOTANTE        shift and go to state 36
    BOOLEAN         shift and go to state 37
    STRING          shift and go to state 34
    CHAR            shift and go to state 38
    VARIABLE        shift and go to state 29

    instrucciones                  shift and go to state 1
    asignacion                     shift and go to state 2
    impresion                      shift and go to state 3
    operacion_aritmetica           shift and go to state 4
    conjuntos                      shift and go to state 5
    vector                         shift and go to state 6
    mapa                           shift and go to state 7
    if                             shift and go to state 8
    do                             shift and go to state 9
    if_do                          shift and go to state 10
    when                           shift and go to state 11
    defn                           shift and go to state 12
    defn_with_return               shift and go to state 13
    operacionesLogicas             shift and go to state 14
    sentenciaLoopRecur             shift and go to state 15
    cond_                          shift and go to state 16
    cond_else                      shift and go to state 17
    doseq                          shift and go to state 18
    case_expression                shift and go to state 19
    lista                          shift and go to state 20
    sentencia_booleana             shift and go to state 21
    function                       shift and go to state 22
    dotimes                        shift and go to state 23
    ciclo                          shift and go to state 24
    valor                          shift and go to state 25
    recur                          shift and go to state 26
    dato                           shift and go to state 27

state 1

    (0) S' -> instrucciones .



state 2

    (1) instrucciones -> asignacion .

    $end            reduce using rule 1 (instrucciones -> asignacion .)
    LPAREN          reduce using rule 1 (instrucciones -> asignacion .)
    NUMERAL         reduce using rule 1 (instrucciones -> asignacion .)
    LCOR            reduce using rule 1 (instrucciones -> asignacion .)
    L_LLAVE         reduce using rule 1 (instrucciones -> asignacion .)
    IF              reduce using rule 1 (instrucciones -> asignacion .)
    ENTERO          reduce using rule 1 (instrucciones -> asignacion .)
    FLOTANTE        reduce using rule 1 (instrucciones -> asignacion .)
    BOOLEAN         reduce using rule 1 (instrucciones -> asignacion .)
    STRING          reduce using rule 1 (instrucciones -> asignacion .)
    CHAR            reduce using rule 1 (instrucciones -> asignacion .)
    VARIABLE        reduce using rule 1 (instrucciones -> asignacion .)
    RPAREN          reduce using rule 1 (instrucciones -> asignacion .)


state 3

    (2) instrucciones -> impresion .

    $end            reduce using rule 2 (instrucciones -> impresion .)
    LPAREN          reduce using rule 2 (instrucciones -> impresion .)
    NUMERAL         reduce using rule 2 (instrucciones -> impresion .)
    LCOR            reduce using rule 2 (instrucciones -> impresion .)
    L_LLAVE         reduce using rule 2 (instrucciones -> impresion .)
    IF              reduce using rule 2 (instrucciones -> impresion .)
    ENTERO          reduce using rule 2 (instrucciones -> impresion .)
    FLOTANTE        reduce using rule 2 (instrucciones -> impresion .)
    BOOLEAN         reduce using rule 2 (instrucciones -> impresion .)
    STRING          reduce using rule 2 (instrucciones -> impresion .)
    CHAR            reduce using rule 2 (instrucciones -> impresion .)
    VARIABLE        reduce using rule 2 (instrucciones -> impresion .)
    RPAREN          reduce using rule 2 (instrucciones -> impresion .)


state 4

    (3) instrucciones -> operacion_aritmetica .

    $end            reduce using rule 3 (instrucciones -> operacion_aritmetica .)
    LPAREN          reduce using rule 3 (instrucciones -> operacion_aritmetica .)
    NUMERAL         reduce using rule 3 (instrucciones -> operacion_aritmetica .)
    LCOR            reduce using rule 3 (instrucciones -> operacion_aritmetica .)
    L_LLAVE         reduce using rule 3 (instrucciones -> operacion_aritmetica .)
    IF              reduce using rule 3 (instrucciones -> operacion_aritmetica .)
    ENTERO          reduce using rule 3 (instrucciones -> operacion_aritmetica .)
    FLOTANTE        reduce using rule 3 (instrucciones -> operacion_aritmetica .)
    BOOLEAN         reduce using rule 3 (instrucciones -> operacion_aritmetica .)
    STRING          reduce using rule 3 (instrucciones -> operacion_aritmetica .)
    CHAR            reduce using rule 3 (instrucciones -> operacion_aritmetica .)
    VARIABLE        reduce using rule 3 (instrucciones -> operacion_aritmetica .)
    RPAREN          reduce using rule 3 (instrucciones -> operacion_aritmetica .)


state 5

    (4) instrucciones -> conjuntos .

    $end            reduce using rule 4 (instrucciones -> conjuntos .)
    LPAREN          reduce using rule 4 (instrucciones -> conjuntos .)
    NUMERAL         reduce using rule 4 (instrucciones -> conjuntos .)
    LCOR            reduce using rule 4 (instrucciones -> conjuntos .)
    L_LLAVE         reduce using rule 4 (instrucciones -> conjuntos .)
    IF              reduce using rule 4 (instrucciones -> conjuntos .)
    ENTERO          reduce using rule 4 (instrucciones -> conjuntos .)
    FLOTANTE        reduce using rule 4 (instrucciones -> conjuntos .)
    BOOLEAN         reduce using rule 4 (instrucciones -> conjuntos .)
    STRING          reduce using rule 4 (instrucciones -> conjuntos .)
    CHAR            reduce using rule 4 (instrucciones -> conjuntos .)
    VARIABLE        reduce using rule 4 (instrucciones -> conjuntos .)
    RPAREN          reduce using rule 4 (instrucciones -> conjuntos .)


state 6

    (5) instrucciones -> vector .

    $end            reduce using rule 5 (instrucciones -> vector .)
    LPAREN          reduce using rule 5 (instrucciones -> vector .)
    NUMERAL         reduce using rule 5 (instrucciones -> vector .)
    LCOR            reduce using rule 5 (instrucciones -> vector .)
    L_LLAVE         reduce using rule 5 (instrucciones -> vector .)
    IF              reduce using rule 5 (instrucciones -> vector .)
    ENTERO          reduce using rule 5 (instrucciones -> vector .)
    FLOTANTE        reduce using rule 5 (instrucciones -> vector .)
    BOOLEAN         reduce using rule 5 (instrucciones -> vector .)
    STRING          reduce using rule 5 (instrucciones -> vector .)
    CHAR            reduce using rule 5 (instrucciones -> vector .)
    VARIABLE        reduce using rule 5 (instrucciones -> vector .)
    RPAREN          reduce using rule 5 (instrucciones -> vector .)


state 7

    (6) instrucciones -> mapa .

    $end            reduce using rule 6 (instrucciones -> mapa .)
    LPAREN          reduce using rule 6 (instrucciones -> mapa .)
    NUMERAL         reduce using rule 6 (instrucciones -> mapa .)
    LCOR            reduce using rule 6 (instrucciones -> mapa .)
    L_LLAVE         reduce using rule 6 (instrucciones -> mapa .)
    IF              reduce using rule 6 (instrucciones -> mapa .)
    ENTERO          reduce using rule 6 (instrucciones -> mapa .)
    FLOTANTE        reduce using rule 6 (instrucciones -> mapa .)
    BOOLEAN         reduce using rule 6 (instrucciones -> mapa .)
    STRING          reduce using rule 6 (instrucciones -> mapa .)
    CHAR            reduce using rule 6 (instrucciones -> mapa .)
    VARIABLE        reduce using rule 6 (instrucciones -> mapa .)
    RPAREN          reduce using rule 6 (instrucciones -> mapa .)


state 8

    (7) instrucciones -> if .

    $end            reduce using rule 7 (instrucciones -> if .)
    LPAREN          reduce using rule 7 (instrucciones -> if .)
    NUMERAL         reduce using rule 7 (instrucciones -> if .)
    LCOR            reduce using rule 7 (instrucciones -> if .)
    L_LLAVE         reduce using rule 7 (instrucciones -> if .)
    IF              reduce using rule 7 (instrucciones -> if .)
    ENTERO          reduce using rule 7 (instrucciones -> if .)
    FLOTANTE        reduce using rule 7 (instrucciones -> if .)
    BOOLEAN         reduce using rule 7 (instrucciones -> if .)
    STRING          reduce using rule 7 (instrucciones -> if .)
    CHAR            reduce using rule 7 (instrucciones -> if .)
    VARIABLE        reduce using rule 7 (instrucciones -> if .)
    RPAREN          reduce using rule 7 (instrucciones -> if .)


state 9

    (8) instrucciones -> do .

    $end            reduce using rule 8 (instrucciones -> do .)
    LPAREN          reduce using rule 8 (instrucciones -> do .)
    NUMERAL         reduce using rule 8 (instrucciones -> do .)
    LCOR            reduce using rule 8 (instrucciones -> do .)
    L_LLAVE         reduce using rule 8 (instrucciones -> do .)
    IF              reduce using rule 8 (instrucciones -> do .)
    ENTERO          reduce using rule 8 (instrucciones -> do .)
    FLOTANTE        reduce using rule 8 (instrucciones -> do .)
    BOOLEAN         reduce using rule 8 (instrucciones -> do .)
    STRING          reduce using rule 8 (instrucciones -> do .)
    CHAR            reduce using rule 8 (instrucciones -> do .)
    VARIABLE        reduce using rule 8 (instrucciones -> do .)
    RPAREN          reduce using rule 8 (instrucciones -> do .)


state 10

    (9) instrucciones -> if_do .

    $end            reduce using rule 9 (instrucciones -> if_do .)
    LPAREN          reduce using rule 9 (instrucciones -> if_do .)
    NUMERAL         reduce using rule 9 (instrucciones -> if_do .)
    LCOR            reduce using rule 9 (instrucciones -> if_do .)
    L_LLAVE         reduce using rule 9 (instrucciones -> if_do .)
    IF              reduce using rule 9 (instrucciones -> if_do .)
    ENTERO          reduce using rule 9 (instrucciones -> if_do .)
    FLOTANTE        reduce using rule 9 (instrucciones -> if_do .)
    BOOLEAN         reduce using rule 9 (instrucciones -> if_do .)
    STRING          reduce using rule 9 (instrucciones -> if_do .)
    CHAR            reduce using rule 9 (instrucciones -> if_do .)
    VARIABLE        reduce using rule 9 (instrucciones -> if_do .)
    RPAREN          reduce using rule 9 (instrucciones -> if_do .)


state 11

    (10) instrucciones -> when .

    $end            reduce using rule 10 (instrucciones -> when .)
    LPAREN          reduce using rule 10 (instrucciones -> when .)
    NUMERAL         reduce using rule 10 (instrucciones -> when .)
    LCOR            reduce using rule 10 (instrucciones -> when .)
    L_LLAVE         reduce using rule 10 (instrucciones -> when .)
    IF              reduce using rule 10 (instrucciones -> when .)
    ENTERO          reduce using rule 10 (instrucciones -> when .)
    FLOTANTE        reduce using rule 10 (instrucciones -> when .)
    BOOLEAN         reduce using rule 10 (instrucciones -> when .)
    STRING          reduce using rule 10 (instrucciones -> when .)
    CHAR            reduce using rule 10 (instrucciones -> when .)
    VARIABLE        reduce using rule 10 (instrucciones -> when .)
    RPAREN          reduce using rule 10 (instrucciones -> when .)


state 12

    (11) instrucciones -> defn .

    $end            reduce using rule 11 (instrucciones -> defn .)
    LPAREN          reduce using rule 11 (instrucciones -> defn .)
    NUMERAL         reduce using rule 11 (instrucciones -> defn .)
    LCOR            reduce using rule 11 (instrucciones -> defn .)
    L_LLAVE         reduce using rule 11 (instrucciones -> defn .)
    IF              reduce using rule 11 (instrucciones -> defn .)
    ENTERO          reduce using rule 11 (instrucciones -> defn .)
    FLOTANTE        reduce using rule 11 (instrucciones -> defn .)
    BOOLEAN         reduce using rule 11 (instrucciones -> defn .)
    STRING          reduce using rule 11 (instrucciones -> defn .)
    CHAR            reduce using rule 11 (instrucciones -> defn .)
    VARIABLE        reduce using rule 11 (instrucciones -> defn .)
    RPAREN          reduce using rule 11 (instrucciones -> defn .)


state 13

    (12) instrucciones -> defn_with_return .

    $end            reduce using rule 12 (instrucciones -> defn_with_return .)
    LPAREN          reduce using rule 12 (instrucciones -> defn_with_return .)
    NUMERAL         reduce using rule 12 (instrucciones -> defn_with_return .)
    LCOR            reduce using rule 12 (instrucciones -> defn_with_return .)
    L_LLAVE         reduce using rule 12 (instrucciones -> defn_with_return .)
    IF              reduce using rule 12 (instrucciones -> defn_with_return .)
    ENTERO          reduce using rule 12 (instrucciones -> defn_with_return .)
    FLOTANTE        reduce using rule 12 (instrucciones -> defn_with_return .)
    BOOLEAN         reduce using rule 12 (instrucciones -> defn_with_return .)
    STRING          reduce using rule 12 (instrucciones -> defn_with_return .)
    CHAR            reduce using rule 12 (instrucciones -> defn_with_return .)
    VARIABLE        reduce using rule 12 (instrucciones -> defn_with_return .)
    RPAREN          reduce using rule 12 (instrucciones -> defn_with_return .)


state 14

    (13) instrucciones -> operacionesLogicas .

    $end            reduce using rule 13 (instrucciones -> operacionesLogicas .)
    LPAREN          reduce using rule 13 (instrucciones -> operacionesLogicas .)
    NUMERAL         reduce using rule 13 (instrucciones -> operacionesLogicas .)
    LCOR            reduce using rule 13 (instrucciones -> operacionesLogicas .)
    L_LLAVE         reduce using rule 13 (instrucciones -> operacionesLogicas .)
    IF              reduce using rule 13 (instrucciones -> operacionesLogicas .)
    ENTERO          reduce using rule 13 (instrucciones -> operacionesLogicas .)
    FLOTANTE        reduce using rule 13 (instrucciones -> operacionesLogicas .)
    BOOLEAN         reduce using rule 13 (instrucciones -> operacionesLogicas .)
    STRING          reduce using rule 13 (instrucciones -> operacionesLogicas .)
    CHAR            reduce using rule 13 (instrucciones -> operacionesLogicas .)
    VARIABLE        reduce using rule 13 (instrucciones -> operacionesLogicas .)
    RPAREN          reduce using rule 13 (instrucciones -> operacionesLogicas .)


state 15

    (14) instrucciones -> sentenciaLoopRecur .

    $end            reduce using rule 14 (instrucciones -> sentenciaLoopRecur .)
    LPAREN          reduce using rule 14 (instrucciones -> sentenciaLoopRecur .)
    NUMERAL         reduce using rule 14 (instrucciones -> sentenciaLoopRecur .)
    LCOR            reduce using rule 14 (instrucciones -> sentenciaLoopRecur .)
    L_LLAVE         reduce using rule 14 (instrucciones -> sentenciaLoopRecur .)
    IF              reduce using rule 14 (instrucciones -> sentenciaLoopRecur .)
    ENTERO          reduce using rule 14 (instrucciones -> sentenciaLoopRecur .)
    FLOTANTE        reduce using rule 14 (instrucciones -> sentenciaLoopRecur .)
    BOOLEAN         reduce using rule 14 (instrucciones -> sentenciaLoopRecur .)
    STRING          reduce using rule 14 (instrucciones -> sentenciaLoopRecur .)
    CHAR            reduce using rule 14 (instrucciones -> sentenciaLoopRecur .)
    VARIABLE        reduce using rule 14 (instrucciones -> sentenciaLoopRecur .)
    RPAREN          reduce using rule 14 (instrucciones -> sentenciaLoopRecur .)


state 16

    (15) instrucciones -> cond_ .

    $end            reduce using rule 15 (instrucciones -> cond_ .)
    LPAREN          reduce using rule 15 (instrucciones -> cond_ .)
    NUMERAL         reduce using rule 15 (instrucciones -> cond_ .)
    LCOR            reduce using rule 15 (instrucciones -> cond_ .)
    L_LLAVE         reduce using rule 15 (instrucciones -> cond_ .)
    IF              reduce using rule 15 (instrucciones -> cond_ .)
    ENTERO          reduce using rule 15 (instrucciones -> cond_ .)
    FLOTANTE        reduce using rule 15 (instrucciones -> cond_ .)
    BOOLEAN         reduce using rule 15 (instrucciones -> cond_ .)
    STRING          reduce using rule 15 (instrucciones -> cond_ .)
    CHAR            reduce using rule 15 (instrucciones -> cond_ .)
    VARIABLE        reduce using rule 15 (instrucciones -> cond_ .)
    RPAREN          reduce using rule 15 (instrucciones -> cond_ .)


state 17

    (16) instrucciones -> cond_else .

    $end            reduce using rule 16 (instrucciones -> cond_else .)
    LPAREN          reduce using rule 16 (instrucciones -> cond_else .)
    NUMERAL         reduce using rule 16 (instrucciones -> cond_else .)
    LCOR            reduce using rule 16 (instrucciones -> cond_else .)
    L_LLAVE         reduce using rule 16 (instrucciones -> cond_else .)
    IF              reduce using rule 16 (instrucciones -> cond_else .)
    ENTERO          reduce using rule 16 (instrucciones -> cond_else .)
    FLOTANTE        reduce using rule 16 (instrucciones -> cond_else .)
    BOOLEAN         reduce using rule 16 (instrucciones -> cond_else .)
    STRING          reduce using rule 16 (instrucciones -> cond_else .)
    CHAR            reduce using rule 16 (instrucciones -> cond_else .)
    VARIABLE        reduce using rule 16 (instrucciones -> cond_else .)
    RPAREN          reduce using rule 16 (instrucciones -> cond_else .)


state 18

    (17) instrucciones -> doseq .

    $end            reduce using rule 17 (instrucciones -> doseq .)
    LPAREN          reduce using rule 17 (instrucciones -> doseq .)
    NUMERAL         reduce using rule 17 (instrucciones -> doseq .)
    LCOR            reduce using rule 17 (instrucciones -> doseq .)
    L_LLAVE         reduce using rule 17 (instrucciones -> doseq .)
    IF              reduce using rule 17 (instrucciones -> doseq .)
    ENTERO          reduce using rule 17 (instrucciones -> doseq .)
    FLOTANTE        reduce using rule 17 (instrucciones -> doseq .)
    BOOLEAN         reduce using rule 17 (instrucciones -> doseq .)
    STRING          reduce using rule 17 (instrucciones -> doseq .)
    CHAR            reduce using rule 17 (instrucciones -> doseq .)
    VARIABLE        reduce using rule 17 (instrucciones -> doseq .)
    RPAREN          reduce using rule 17 (instrucciones -> doseq .)


state 19

    (18) instrucciones -> case_expression .

    $end            reduce using rule 18 (instrucciones -> case_expression .)
    LPAREN          reduce using rule 18 (instrucciones -> case_expression .)
    NUMERAL         reduce using rule 18 (instrucciones -> case_expression .)
    LCOR            reduce using rule 18 (instrucciones -> case_expression .)
    L_LLAVE         reduce using rule 18 (instrucciones -> case_expression .)
    IF              reduce using rule 18 (instrucciones -> case_expression .)
    ENTERO          reduce using rule 18 (instrucciones -> case_expression .)
    FLOTANTE        reduce using rule 18 (instrucciones -> case_expression .)
    BOOLEAN         reduce using rule 18 (instrucciones -> case_expression .)
    STRING          reduce using rule 18 (instrucciones -> case_expression .)
    CHAR            reduce using rule 18 (instrucciones -> case_expression .)
    VARIABLE        reduce using rule 18 (instrucciones -> case_expression .)
    RPAREN          reduce using rule 18 (instrucciones -> case_expression .)


state 20

    (19) instrucciones -> lista .

    $end            reduce using rule 19 (instrucciones -> lista .)
    LPAREN          reduce using rule 19 (instrucciones -> lista .)
    NUMERAL         reduce using rule 19 (instrucciones -> lista .)
    LCOR            reduce using rule 19 (instrucciones -> lista .)
    L_LLAVE         reduce using rule 19 (instrucciones -> lista .)
    IF              reduce using rule 19 (instrucciones -> lista .)
    ENTERO          reduce using rule 19 (instrucciones -> lista .)
    FLOTANTE        reduce using rule 19 (instrucciones -> lista .)
    BOOLEAN         reduce using rule 19 (instrucciones -> lista .)
    STRING          reduce using rule 19 (instrucciones -> lista .)
    CHAR            reduce using rule 19 (instrucciones -> lista .)
    VARIABLE        reduce using rule 19 (instrucciones -> lista .)
    RPAREN          reduce using rule 19 (instrucciones -> lista .)


state 21

    (20) instrucciones -> sentencia_booleana .

    $end            reduce using rule 20 (instrucciones -> sentencia_booleana .)
    RPAREN          reduce using rule 20 (instrucciones -> sentencia_booleana .)
    LPAREN          reduce using rule 20 (instrucciones -> sentencia_booleana .)
    NUMERAL         reduce using rule 20 (instrucciones -> sentencia_booleana .)
    LCOR            reduce using rule 20 (instrucciones -> sentencia_booleana .)
    L_LLAVE         reduce using rule 20 (instrucciones -> sentencia_booleana .)
    IF              reduce using rule 20 (instrucciones -> sentencia_booleana .)
    ENTERO          reduce using rule 20 (instrucciones -> sentencia_booleana .)
    FLOTANTE        reduce using rule 20 (instrucciones -> sentencia_booleana .)
    BOOLEAN         reduce using rule 20 (instrucciones -> sentencia_booleana .)
    STRING          reduce using rule 20 (instrucciones -> sentencia_booleana .)
    CHAR            reduce using rule 20 (instrucciones -> sentencia_booleana .)
    VARIABLE        reduce using rule 20 (instrucciones -> sentencia_booleana .)


state 22

    (21) instrucciones -> function .

    $end            reduce using rule 21 (instrucciones -> function .)
    LPAREN          reduce using rule 21 (instrucciones -> function .)
    NUMERAL         reduce using rule 21 (instrucciones -> function .)
    LCOR            reduce using rule 21 (instrucciones -> function .)
    L_LLAVE         reduce using rule 21 (instrucciones -> function .)
    IF              reduce using rule 21 (instrucciones -> function .)
    ENTERO          reduce using rule 21 (instrucciones -> function .)
    FLOTANTE        reduce using rule 21 (instrucciones -> function .)
    BOOLEAN         reduce using rule 21 (instrucciones -> function .)
    STRING          reduce using rule 21 (instrucciones -> function .)
    CHAR            reduce using rule 21 (instrucciones -> function .)
    VARIABLE        reduce using rule 21 (instrucciones -> function .)
    RPAREN          reduce using rule 21 (instrucciones -> function .)


state 23

    (22) instrucciones -> dotimes .

    $end            reduce using rule 22 (instrucciones -> dotimes .)
    LPAREN          reduce using rule 22 (instrucciones -> dotimes .)
    NUMERAL         reduce using rule 22 (instrucciones -> dotimes .)
    LCOR            reduce using rule 22 (instrucciones -> dotimes .)
    L_LLAVE         reduce using rule 22 (instrucciones -> dotimes .)
    IF              reduce using rule 22 (instrucciones -> dotimes .)
    ENTERO          reduce using rule 22 (instrucciones -> dotimes .)
    FLOTANTE        reduce using rule 22 (instrucciones -> dotimes .)
    BOOLEAN         reduce using rule 22 (instrucciones -> dotimes .)
    STRING          reduce using rule 22 (instrucciones -> dotimes .)
    CHAR            reduce using rule 22 (instrucciones -> dotimes .)
    VARIABLE        reduce using rule 22 (instrucciones -> dotimes .)
    RPAREN          reduce using rule 22 (instrucciones -> dotimes .)


state 24

    (23) instrucciones -> ciclo .

    $end            reduce using rule 23 (instrucciones -> ciclo .)
    LPAREN          reduce using rule 23 (instrucciones -> ciclo .)
    NUMERAL         reduce using rule 23 (instrucciones -> ciclo .)
    LCOR            reduce using rule 23 (instrucciones -> ciclo .)
    L_LLAVE         reduce using rule 23 (instrucciones -> ciclo .)
    IF              reduce using rule 23 (instrucciones -> ciclo .)
    ENTERO          reduce using rule 23 (instrucciones -> ciclo .)
    FLOTANTE        reduce using rule 23 (instrucciones -> ciclo .)
    BOOLEAN         reduce using rule 23 (instrucciones -> ciclo .)
    STRING          reduce using rule 23 (instrucciones -> ciclo .)
    CHAR            reduce using rule 23 (instrucciones -> ciclo .)
    VARIABLE        reduce using rule 23 (instrucciones -> ciclo .)
    RPAREN          reduce using rule 23 (instrucciones -> ciclo .)


state 25

    (24) instrucciones -> valor .

    $end            reduce using rule 24 (instrucciones -> valor .)
    LPAREN          reduce using rule 24 (instrucciones -> valor .)
    NUMERAL         reduce using rule 24 (instrucciones -> valor .)
    LCOR            reduce using rule 24 (instrucciones -> valor .)
    L_LLAVE         reduce using rule 24 (instrucciones -> valor .)
    IF              reduce using rule 24 (instrucciones -> valor .)
    ENTERO          reduce using rule 24 (instrucciones -> valor .)
    FLOTANTE        reduce using rule 24 (instrucciones -> valor .)
    BOOLEAN         reduce using rule 24 (instrucciones -> valor .)
    STRING          reduce using rule 24 (instrucciones -> valor .)
    CHAR            reduce using rule 24 (instrucciones -> valor .)
    VARIABLE        reduce using rule 24 (instrucciones -> valor .)
    RPAREN          reduce using rule 24 (instrucciones -> valor .)


state 26

    (25) instrucciones -> recur .

    $end            reduce using rule 25 (instrucciones -> recur .)
    LPAREN          reduce using rule 25 (instrucciones -> recur .)
    NUMERAL         reduce using rule 25 (instrucciones -> recur .)
    LCOR            reduce using rule 25 (instrucciones -> recur .)
    L_LLAVE         reduce using rule 25 (instrucciones -> recur .)
    IF              reduce using rule 25 (instrucciones -> recur .)
    ENTERO          reduce using rule 25 (instrucciones -> recur .)
    FLOTANTE        reduce using rule 25 (instrucciones -> recur .)
    BOOLEAN         reduce using rule 25 (instrucciones -> recur .)
    STRING          reduce using rule 25 (instrucciones -> recur .)
    CHAR            reduce using rule 25 (instrucciones -> recur .)
    VARIABLE        reduce using rule 25 (instrucciones -> recur .)
    RPAREN          reduce using rule 25 (instrucciones -> recur .)


state 27

    (26) instrucciones -> dato .

    $end            reduce using rule 26 (instrucciones -> dato .)
    LPAREN          reduce using rule 26 (instrucciones -> dato .)
    NUMERAL         reduce using rule 26 (instrucciones -> dato .)
    LCOR            reduce using rule 26 (instrucciones -> dato .)
    L_LLAVE         reduce using rule 26 (instrucciones -> dato .)
    IF              reduce using rule 26 (instrucciones -> dato .)
    ENTERO          reduce using rule 26 (instrucciones -> dato .)
    FLOTANTE        reduce using rule 26 (instrucciones -> dato .)
    BOOLEAN         reduce using rule 26 (instrucciones -> dato .)
    STRING          reduce using rule 26 (instrucciones -> dato .)
    CHAR            reduce using rule 26 (instrucciones -> dato .)
    VARIABLE        reduce using rule 26 (instrucciones -> dato .)
    RPAREN          reduce using rule 26 (instrucciones -> dato .)


state 28

    (46) asignacion -> LPAREN . DEFICION VARIABLE dato RPAREN
    (47) asignacion -> LPAREN . LET LCOR VARIABLE dato RCOR RPAREN
    (75) impresion -> LPAREN . IMPRIMIR info_imprimir RPAREN
    (91) operacion_aritmetica -> LPAREN . operador_aritmetico dato dato RPAREN
    (84) if -> LPAREN . IF instrucciones body RPAREN
    (85) do -> LPAREN . DO instrucciones RPAREN
    (86) if_do -> LPAREN . if do RPAREN
    (87) when -> LPAREN . WHEN sentencia_booleana body RPAREN
    (104) defn -> LPAREN . DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN
    (105) defn -> LPAREN . DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN
    (106) defn_with_return -> LPAREN . DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN defn_return
    (107) defn_with_return -> LPAREN . DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN defn_return
    (90) operacionesLogicas -> LPAREN . if recur VARIABLE RPAREN RPAREN
    (114) sentenciaLoopRecur -> LPAREN . LOOP argumments LPAREN if dato RPAREN RPAREN
    (50) cond_ -> LPAREN . COND linecondition linecondition RPAREN
    (51) cond_else -> LPAREN . COND linecondition linecondition DOSPUNTOS ELSE impresion RPAREN
    (102) doseq -> LPAREN . DOSEQ doseq_args impresion RPAREN
    (103) doseq -> LPAREN . DOSEQ doseq_args LPAREN doseq_prn RPAREN RPAREN
    (56) case_expression -> LPAREN . CASE dato case impresion RPAREN
    (57) case_expression -> LPAREN . CASE dato case DOSPUNTOS ELSE STRING RPAREN
    (60) lista -> LPAREN . LIST argumentos_lista RPAREN
    (48) sentencia_booleana -> LPAREN . operador_comparadores dato dato RPAREN
    (71) function -> LPAREN . DEFFUNCION nombre_funct internos RPAREN
    (72) function -> LPAREN . DEFFUNCION nombre_funct internos LPAREN if body RPAREN
    (89) dotimes -> LPAREN . DOTIMES ciclo body RPAREN
    (65) recur -> LPAREN . RECUR LPAREN INC dato RPAREN RPAREN
    (42) operador_aritmetico -> . MAS
    (43) operador_aritmetico -> . MENOS
    (44) operador_aritmetico -> . PRODUCTO
    (45) operador_aritmetico -> . DIVISION
    (82) if -> . IF sentencia_booleana
    (83) if -> . IF sentencia_booleana recur
    (84) if -> . LPAREN IF instrucciones body RPAREN
    (36) operador_comparadores -> . COMPARA_IGUAL
    (37) operador_comparadores -> . MENORQUE
    (38) operador_comparadores -> . MAYORQUE
    (39) operador_comparadores -> . MAYORIGUALQUE
    (40) operador_comparadores -> . MENORIGUALQUE
    (41) operador_comparadores -> . DIFERENTE

    DEFICION        shift and go to state 40
    LET             shift and go to state 41
    IMPRIMIR        shift and go to state 42
    IF              shift and go to state 44
    DO              shift and go to state 45
    WHEN            shift and go to state 47
    DEFFUNCION      shift and go to state 48
    LOOP            shift and go to state 49
    COND            shift and go to state 50
    DOSEQ           shift and go to state 51
    CASE            shift and go to state 52
    LIST            shift and go to state 53
    DOTIMES         shift and go to state 55
    RECUR           shift and go to state 56
    MAS             shift and go to state 57
    MENOS           shift and go to state 58
    PRODUCTO        shift and go to state 59
    DIVISION        shift and go to state 60
    LPAREN          shift and go to state 39
    COMPARA_IGUAL   shift and go to state 61
    MENORQUE        shift and go to state 62
    MAYORQUE        shift and go to state 63
    MAYORIGUALQUE   shift and go to state 64
    MENORIGUALQUE   shift and go to state 65
    DIFERENTE       shift and go to state 66

    operador_aritmetico            shift and go to state 43
    if                             shift and go to state 46
    operador_comparadores          shift and go to state 54

state 29

    (32) dato -> VARIABLE .

    $end            reduce using rule 32 (dato -> VARIABLE .)
    STRING          reduce using rule 32 (dato -> VARIABLE .)
    CHAR            reduce using rule 32 (dato -> VARIABLE .)
    ENTERO          reduce using rule 32 (dato -> VARIABLE .)
    FLOTANTE        reduce using rule 32 (dato -> VARIABLE .)
    BOOLEAN         reduce using rule 32 (dato -> VARIABLE .)
    VARIABLE        reduce using rule 32 (dato -> VARIABLE .)
    RPAREN          reduce using rule 32 (dato -> VARIABLE .)
    LPAREN          reduce using rule 32 (dato -> VARIABLE .)
    NUMERAL         reduce using rule 32 (dato -> VARIABLE .)
    LCOR            reduce using rule 32 (dato -> VARIABLE .)
    L_LLAVE         reduce using rule 32 (dato -> VARIABLE .)
    IF              reduce using rule 32 (dato -> VARIABLE .)
    RCOR            reduce using rule 32 (dato -> VARIABLE .)
    DOSPUNTOS       reduce using rule 32 (dato -> VARIABLE .)
    R_LLAVE         reduce using rule 32 (dato -> VARIABLE .)


state 30

    (78) vector -> LCOR . secuencia_v RCOR
    (88) ciclo -> LCOR . VARIABLE ENTERO RCOR
    (76) secuencia_v -> . dato
    (77) secuencia_v -> . dato secuencia_v
    (27) dato -> . STRING
    (28) dato -> . CHAR
    (29) dato -> . ENTERO
    (30) dato -> . FLOTANTE
    (31) dato -> . BOOLEAN
    (32) dato -> . VARIABLE

    VARIABLE        shift and go to state 68
    STRING          shift and go to state 34
    CHAR            shift and go to state 38
    ENTERO          shift and go to state 69
    FLOTANTE        shift and go to state 71
    BOOLEAN         shift and go to state 72

    secuencia_v                    shift and go to state 67
    dato                           shift and go to state 70

state 31

    (111) conjuntos -> NUMERAL . L_LLAVE expresionConjuntoEnteros R_LLAVE
    (112) conjuntos -> NUMERAL . L_LLAVE expresionConjuntoDouble R_LLAVE
    (113) conjuntos -> NUMERAL . L_LLAVE expresionConjuntoString R_LLAVE

    L_LLAVE         shift and go to state 73


state 32

    (81) mapa -> L_LLAVE . secuencia_mapa R_LLAVE
    (79) secuencia_mapa -> . DOSPUNTOS VARIABLE dato
    (80) secuencia_mapa -> . DOSPUNTOS VARIABLE dato secuencia_mapa

    DOSPUNTOS       shift and go to state 75

    secuencia_mapa                 shift and go to state 74

state 33

    (82) if -> IF . sentencia_booleana
    (83) if -> IF . sentencia_booleana recur
    (48) sentencia_booleana -> . LPAREN operador_comparadores dato dato RPAREN

    LPAREN          shift and go to state 77

    sentencia_booleana             shift and go to state 76

state 34

    (27) dato -> STRING .

    $end            reduce using rule 27 (dato -> STRING .)
    STRING          reduce using rule 27 (dato -> STRING .)
    CHAR            reduce using rule 27 (dato -> STRING .)
    ENTERO          reduce using rule 27 (dato -> STRING .)
    FLOTANTE        reduce using rule 27 (dato -> STRING .)
    BOOLEAN         reduce using rule 27 (dato -> STRING .)
    VARIABLE        reduce using rule 27 (dato -> STRING .)
    RCOR            reduce using rule 27 (dato -> STRING .)
    RPAREN          reduce using rule 27 (dato -> STRING .)
    LPAREN          reduce using rule 27 (dato -> STRING .)
    NUMERAL         reduce using rule 27 (dato -> STRING .)
    LCOR            reduce using rule 27 (dato -> STRING .)
    L_LLAVE         reduce using rule 27 (dato -> STRING .)
    IF              reduce using rule 27 (dato -> STRING .)
    DOSPUNTOS       reduce using rule 27 (dato -> STRING .)
    R_LLAVE         reduce using rule 27 (dato -> STRING .)


state 35

    (33) valor -> ENTERO .
    (29) dato -> ENTERO .

  ! reduce/reduce conflict for $end resolved using rule 29 (dato -> ENTERO .)
  ! reduce/reduce conflict for LPAREN resolved using rule 29 (dato -> ENTERO .)
  ! reduce/reduce conflict for NUMERAL resolved using rule 29 (dato -> ENTERO .)
  ! reduce/reduce conflict for LCOR resolved using rule 29 (dato -> ENTERO .)
  ! reduce/reduce conflict for L_LLAVE resolved using rule 29 (dato -> ENTERO .)
  ! reduce/reduce conflict for IF resolved using rule 29 (dato -> ENTERO .)
  ! reduce/reduce conflict for ENTERO resolved using rule 29 (dato -> ENTERO .)
  ! reduce/reduce conflict for FLOTANTE resolved using rule 29 (dato -> ENTERO .)
  ! reduce/reduce conflict for BOOLEAN resolved using rule 29 (dato -> ENTERO .)
  ! reduce/reduce conflict for STRING resolved using rule 29 (dato -> ENTERO .)
  ! reduce/reduce conflict for CHAR resolved using rule 29 (dato -> ENTERO .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 29 (dato -> ENTERO .)
  ! reduce/reduce conflict for RPAREN resolved using rule 29 (dato -> ENTERO .)
    $end            reduce using rule 29 (dato -> ENTERO .)
    LPAREN          reduce using rule 29 (dato -> ENTERO .)
    NUMERAL         reduce using rule 29 (dato -> ENTERO .)
    LCOR            reduce using rule 29 (dato -> ENTERO .)
    L_LLAVE         reduce using rule 29 (dato -> ENTERO .)
    IF              reduce using rule 29 (dato -> ENTERO .)
    ENTERO          reduce using rule 29 (dato -> ENTERO .)
    FLOTANTE        reduce using rule 29 (dato -> ENTERO .)
    BOOLEAN         reduce using rule 29 (dato -> ENTERO .)
    STRING          reduce using rule 29 (dato -> ENTERO .)
    CHAR            reduce using rule 29 (dato -> ENTERO .)
    VARIABLE        reduce using rule 29 (dato -> ENTERO .)
    RPAREN          reduce using rule 29 (dato -> ENTERO .)

  ! $end            [ reduce using rule 33 (valor -> ENTERO .) ]
  ! LPAREN          [ reduce using rule 33 (valor -> ENTERO .) ]
  ! NUMERAL         [ reduce using rule 33 (valor -> ENTERO .) ]
  ! LCOR            [ reduce using rule 33 (valor -> ENTERO .) ]
  ! L_LLAVE         [ reduce using rule 33 (valor -> ENTERO .) ]
  ! IF              [ reduce using rule 33 (valor -> ENTERO .) ]
  ! ENTERO          [ reduce using rule 33 (valor -> ENTERO .) ]
  ! FLOTANTE        [ reduce using rule 33 (valor -> ENTERO .) ]
  ! BOOLEAN         [ reduce using rule 33 (valor -> ENTERO .) ]
  ! STRING          [ reduce using rule 33 (valor -> ENTERO .) ]
  ! CHAR            [ reduce using rule 33 (valor -> ENTERO .) ]
  ! VARIABLE        [ reduce using rule 33 (valor -> ENTERO .) ]
  ! RPAREN          [ reduce using rule 33 (valor -> ENTERO .) ]


state 36

    (34) valor -> FLOTANTE .
    (30) dato -> FLOTANTE .

  ! reduce/reduce conflict for $end resolved using rule 30 (dato -> FLOTANTE .)
  ! reduce/reduce conflict for LPAREN resolved using rule 30 (dato -> FLOTANTE .)
  ! reduce/reduce conflict for NUMERAL resolved using rule 30 (dato -> FLOTANTE .)
  ! reduce/reduce conflict for LCOR resolved using rule 30 (dato -> FLOTANTE .)
  ! reduce/reduce conflict for L_LLAVE resolved using rule 30 (dato -> FLOTANTE .)
  ! reduce/reduce conflict for IF resolved using rule 30 (dato -> FLOTANTE .)
  ! reduce/reduce conflict for ENTERO resolved using rule 30 (dato -> FLOTANTE .)
  ! reduce/reduce conflict for FLOTANTE resolved using rule 30 (dato -> FLOTANTE .)
  ! reduce/reduce conflict for BOOLEAN resolved using rule 30 (dato -> FLOTANTE .)
  ! reduce/reduce conflict for STRING resolved using rule 30 (dato -> FLOTANTE .)
  ! reduce/reduce conflict for CHAR resolved using rule 30 (dato -> FLOTANTE .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 30 (dato -> FLOTANTE .)
  ! reduce/reduce conflict for RPAREN resolved using rule 30 (dato -> FLOTANTE .)
    $end            reduce using rule 30 (dato -> FLOTANTE .)
    LPAREN          reduce using rule 30 (dato -> FLOTANTE .)
    NUMERAL         reduce using rule 30 (dato -> FLOTANTE .)
    LCOR            reduce using rule 30 (dato -> FLOTANTE .)
    L_LLAVE         reduce using rule 30 (dato -> FLOTANTE .)
    IF              reduce using rule 30 (dato -> FLOTANTE .)
    ENTERO          reduce using rule 30 (dato -> FLOTANTE .)
    FLOTANTE        reduce using rule 30 (dato -> FLOTANTE .)
    BOOLEAN         reduce using rule 30 (dato -> FLOTANTE .)
    STRING          reduce using rule 30 (dato -> FLOTANTE .)
    CHAR            reduce using rule 30 (dato -> FLOTANTE .)
    VARIABLE        reduce using rule 30 (dato -> FLOTANTE .)
    RPAREN          reduce using rule 30 (dato -> FLOTANTE .)

  ! $end            [ reduce using rule 34 (valor -> FLOTANTE .) ]
  ! LPAREN          [ reduce using rule 34 (valor -> FLOTANTE .) ]
  ! NUMERAL         [ reduce using rule 34 (valor -> FLOTANTE .) ]
  ! LCOR            [ reduce using rule 34 (valor -> FLOTANTE .) ]
  ! L_LLAVE         [ reduce using rule 34 (valor -> FLOTANTE .) ]
  ! IF              [ reduce using rule 34 (valor -> FLOTANTE .) ]
  ! ENTERO          [ reduce using rule 34 (valor -> FLOTANTE .) ]
  ! FLOTANTE        [ reduce using rule 34 (valor -> FLOTANTE .) ]
  ! BOOLEAN         [ reduce using rule 34 (valor -> FLOTANTE .) ]
  ! STRING          [ reduce using rule 34 (valor -> FLOTANTE .) ]
  ! CHAR            [ reduce using rule 34 (valor -> FLOTANTE .) ]
  ! VARIABLE        [ reduce using rule 34 (valor -> FLOTANTE .) ]
  ! RPAREN          [ reduce using rule 34 (valor -> FLOTANTE .) ]


state 37

    (35) valor -> BOOLEAN .
    (31) dato -> BOOLEAN .

  ! reduce/reduce conflict for $end resolved using rule 31 (dato -> BOOLEAN .)
  ! reduce/reduce conflict for LPAREN resolved using rule 31 (dato -> BOOLEAN .)
  ! reduce/reduce conflict for NUMERAL resolved using rule 31 (dato -> BOOLEAN .)
  ! reduce/reduce conflict for LCOR resolved using rule 31 (dato -> BOOLEAN .)
  ! reduce/reduce conflict for L_LLAVE resolved using rule 31 (dato -> BOOLEAN .)
  ! reduce/reduce conflict for IF resolved using rule 31 (dato -> BOOLEAN .)
  ! reduce/reduce conflict for ENTERO resolved using rule 31 (dato -> BOOLEAN .)
  ! reduce/reduce conflict for FLOTANTE resolved using rule 31 (dato -> BOOLEAN .)
  ! reduce/reduce conflict for BOOLEAN resolved using rule 31 (dato -> BOOLEAN .)
  ! reduce/reduce conflict for STRING resolved using rule 31 (dato -> BOOLEAN .)
  ! reduce/reduce conflict for CHAR resolved using rule 31 (dato -> BOOLEAN .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 31 (dato -> BOOLEAN .)
  ! reduce/reduce conflict for RPAREN resolved using rule 31 (dato -> BOOLEAN .)
    $end            reduce using rule 31 (dato -> BOOLEAN .)
    LPAREN          reduce using rule 31 (dato -> BOOLEAN .)
    NUMERAL         reduce using rule 31 (dato -> BOOLEAN .)
    LCOR            reduce using rule 31 (dato -> BOOLEAN .)
    L_LLAVE         reduce using rule 31 (dato -> BOOLEAN .)
    IF              reduce using rule 31 (dato -> BOOLEAN .)
    ENTERO          reduce using rule 31 (dato -> BOOLEAN .)
    FLOTANTE        reduce using rule 31 (dato -> BOOLEAN .)
    BOOLEAN         reduce using rule 31 (dato -> BOOLEAN .)
    STRING          reduce using rule 31 (dato -> BOOLEAN .)
    CHAR            reduce using rule 31 (dato -> BOOLEAN .)
    VARIABLE        reduce using rule 31 (dato -> BOOLEAN .)
    RPAREN          reduce using rule 31 (dato -> BOOLEAN .)

  ! $end            [ reduce using rule 35 (valor -> BOOLEAN .) ]
  ! LPAREN          [ reduce using rule 35 (valor -> BOOLEAN .) ]
  ! NUMERAL         [ reduce using rule 35 (valor -> BOOLEAN .) ]
  ! LCOR            [ reduce using rule 35 (valor -> BOOLEAN .) ]
  ! L_LLAVE         [ reduce using rule 35 (valor -> BOOLEAN .) ]
  ! IF              [ reduce using rule 35 (valor -> BOOLEAN .) ]
  ! ENTERO          [ reduce using rule 35 (valor -> BOOLEAN .) ]
  ! FLOTANTE        [ reduce using rule 35 (valor -> BOOLEAN .) ]
  ! BOOLEAN         [ reduce using rule 35 (valor -> BOOLEAN .) ]
  ! STRING          [ reduce using rule 35 (valor -> BOOLEAN .) ]
  ! CHAR            [ reduce using rule 35 (valor -> BOOLEAN .) ]
  ! VARIABLE        [ reduce using rule 35 (valor -> BOOLEAN .) ]
  ! RPAREN          [ reduce using rule 35 (valor -> BOOLEAN .) ]


state 38

    (28) dato -> CHAR .

    $end            reduce using rule 28 (dato -> CHAR .)
    STRING          reduce using rule 28 (dato -> CHAR .)
    CHAR            reduce using rule 28 (dato -> CHAR .)
    ENTERO          reduce using rule 28 (dato -> CHAR .)
    FLOTANTE        reduce using rule 28 (dato -> CHAR .)
    BOOLEAN         reduce using rule 28 (dato -> CHAR .)
    VARIABLE        reduce using rule 28 (dato -> CHAR .)
    RCOR            reduce using rule 28 (dato -> CHAR .)
    RPAREN          reduce using rule 28 (dato -> CHAR .)
    LPAREN          reduce using rule 28 (dato -> CHAR .)
    NUMERAL         reduce using rule 28 (dato -> CHAR .)
    LCOR            reduce using rule 28 (dato -> CHAR .)
    L_LLAVE         reduce using rule 28 (dato -> CHAR .)
    IF              reduce using rule 28 (dato -> CHAR .)
    DOSPUNTOS       reduce using rule 28 (dato -> CHAR .)
    R_LLAVE         reduce using rule 28 (dato -> CHAR .)


state 39

    (84) if -> LPAREN . IF instrucciones body RPAREN

    IF              shift and go to state 78


state 40

    (46) asignacion -> LPAREN DEFICION . VARIABLE dato RPAREN

    VARIABLE        shift and go to state 79


state 41

    (47) asignacion -> LPAREN LET . LCOR VARIABLE dato RCOR RPAREN

    LCOR            shift and go to state 80


state 42

    (75) impresion -> LPAREN IMPRIMIR . info_imprimir RPAREN
    (73) info_imprimir -> . dato
    (74) info_imprimir -> . dato info_imprimir
    (27) dato -> . STRING
    (28) dato -> . CHAR
    (29) dato -> . ENTERO
    (30) dato -> . FLOTANTE
    (31) dato -> . BOOLEAN
    (32) dato -> . VARIABLE

    STRING          shift and go to state 34
    CHAR            shift and go to state 38
    ENTERO          shift and go to state 69
    FLOTANTE        shift and go to state 71
    BOOLEAN         shift and go to state 72
    VARIABLE        shift and go to state 29

    info_imprimir                  shift and go to state 81
    dato                           shift and go to state 82

state 43

    (91) operacion_aritmetica -> LPAREN operador_aritmetico . dato dato RPAREN
    (27) dato -> . STRING
    (28) dato -> . CHAR
    (29) dato -> . ENTERO
    (30) dato -> . FLOTANTE
    (31) dato -> . BOOLEAN
    (32) dato -> . VARIABLE

    STRING          shift and go to state 34
    CHAR            shift and go to state 38
    ENTERO          shift and go to state 69
    FLOTANTE        shift and go to state 71
    BOOLEAN         shift and go to state 72
    VARIABLE        shift and go to state 29

    dato                           shift and go to state 83

state 44

    (84) if -> LPAREN IF . instrucciones body RPAREN
    (82) if -> IF . sentencia_booleana
    (83) if -> IF . sentencia_booleana recur
    (1) instrucciones -> . asignacion
    (2) instrucciones -> . impresion
    (3) instrucciones -> . operacion_aritmetica
    (4) instrucciones -> . conjuntos
    (5) instrucciones -> . vector
    (6) instrucciones -> . mapa
    (7) instrucciones -> . if
    (8) instrucciones -> . do
    (9) instrucciones -> . if_do
    (10) instrucciones -> . when
    (11) instrucciones -> . defn
    (12) instrucciones -> . defn_with_return
    (13) instrucciones -> . operacionesLogicas
    (14) instrucciones -> . sentenciaLoopRecur
    (15) instrucciones -> . cond_
    (16) instrucciones -> . cond_else
    (17) instrucciones -> . doseq
    (18) instrucciones -> . case_expression
    (19) instrucciones -> . lista
    (20) instrucciones -> . sentencia_booleana
    (21) instrucciones -> . function
    (22) instrucciones -> . dotimes
    (23) instrucciones -> . ciclo
    (24) instrucciones -> . valor
    (25) instrucciones -> . recur
    (26) instrucciones -> . dato
    (48) sentencia_booleana -> . LPAREN operador_comparadores dato dato RPAREN
    (46) asignacion -> . LPAREN DEFICION VARIABLE dato RPAREN
    (47) asignacion -> . LPAREN LET LCOR VARIABLE dato RCOR RPAREN
    (75) impresion -> . LPAREN IMPRIMIR info_imprimir RPAREN
    (91) operacion_aritmetica -> . LPAREN operador_aritmetico dato dato RPAREN
    (111) conjuntos -> . NUMERAL L_LLAVE expresionConjuntoEnteros R_LLAVE
    (112) conjuntos -> . NUMERAL L_LLAVE expresionConjuntoDouble R_LLAVE
    (113) conjuntos -> . NUMERAL L_LLAVE expresionConjuntoString R_LLAVE
    (78) vector -> . LCOR secuencia_v RCOR
    (81) mapa -> . L_LLAVE secuencia_mapa R_LLAVE
    (82) if -> . IF sentencia_booleana
    (83) if -> . IF sentencia_booleana recur
    (84) if -> . LPAREN IF instrucciones body RPAREN
    (85) do -> . LPAREN DO instrucciones RPAREN
    (86) if_do -> . LPAREN if do RPAREN
    (87) when -> . LPAREN WHEN sentencia_booleana body RPAREN
    (104) defn -> . LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN
    (105) defn -> . LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN
    (106) defn_with_return -> . LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN defn_return
    (107) defn_with_return -> . LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN defn_return
    (90) operacionesLogicas -> . LPAREN if recur VARIABLE RPAREN RPAREN
    (114) sentenciaLoopRecur -> . LPAREN LOOP argumments LPAREN if dato RPAREN RPAREN
    (50) cond_ -> . LPAREN COND linecondition linecondition RPAREN
    (51) cond_else -> . LPAREN COND linecondition linecondition DOSPUNTOS ELSE impresion RPAREN
    (102) doseq -> . LPAREN DOSEQ doseq_args impresion RPAREN
    (103) doseq -> . LPAREN DOSEQ doseq_args LPAREN doseq_prn RPAREN RPAREN
    (56) case_expression -> . LPAREN CASE dato case impresion RPAREN
    (57) case_expression -> . LPAREN CASE dato case DOSPUNTOS ELSE STRING RPAREN
    (60) lista -> . LPAREN LIST argumentos_lista RPAREN
    (71) function -> . LPAREN DEFFUNCION nombre_funct internos RPAREN
    (72) function -> . LPAREN DEFFUNCION nombre_funct internos LPAREN if body RPAREN
    (89) dotimes -> . LPAREN DOTIMES ciclo body RPAREN
    (88) ciclo -> . LCOR VARIABLE ENTERO RCOR
    (33) valor -> . ENTERO
    (34) valor -> . FLOTANTE
    (35) valor -> . BOOLEAN
    (65) recur -> . LPAREN RECUR LPAREN INC dato RPAREN RPAREN
    (27) dato -> . STRING
    (28) dato -> . CHAR
    (29) dato -> . ENTERO
    (30) dato -> . FLOTANTE
    (31) dato -> . BOOLEAN
    (32) dato -> . VARIABLE

    LPAREN          shift and go to state 84
    NUMERAL         shift and go to state 31
    LCOR            shift and go to state 30
    L_LLAVE         shift and go to state 32
    IF              shift and go to state 33
    ENTERO          shift and go to state 35
    FLOTANTE        shift and go to state 36
    BOOLEAN         shift and go to state 37
    STRING          shift and go to state 34
    CHAR            shift and go to state 38
    VARIABLE        shift and go to state 29

    instrucciones                  shift and go to state 85
    sentencia_booleana             shift and go to state 86
    recur                          shift and go to state 26
    asignacion                     shift and go to state 2
    impresion                      shift and go to state 3
    operacion_aritmetica           shift and go to state 4
    conjuntos                      shift and go to state 5
    vector                         shift and go to state 6
    mapa                           shift and go to state 7
    if                             shift and go to state 8
    do                             shift and go to state 9
    if_do                          shift and go to state 10
    when                           shift and go to state 11
    defn                           shift and go to state 12
    defn_with_return               shift and go to state 13
    operacionesLogicas             shift and go to state 14
    sentenciaLoopRecur             shift and go to state 15
    cond_                          shift and go to state 16
    cond_else                      shift and go to state 17
    doseq                          shift and go to state 18
    case_expression                shift and go to state 19
    lista                          shift and go to state 20
    function                       shift and go to state 22
    dotimes                        shift and go to state 23
    ciclo                          shift and go to state 24
    valor                          shift and go to state 25
    dato                           shift and go to state 27

state 45

    (85) do -> LPAREN DO . instrucciones RPAREN
    (1) instrucciones -> . asignacion
    (2) instrucciones -> . impresion
    (3) instrucciones -> . operacion_aritmetica
    (4) instrucciones -> . conjuntos
    (5) instrucciones -> . vector
    (6) instrucciones -> . mapa
    (7) instrucciones -> . if
    (8) instrucciones -> . do
    (9) instrucciones -> . if_do
    (10) instrucciones -> . when
    (11) instrucciones -> . defn
    (12) instrucciones -> . defn_with_return
    (13) instrucciones -> . operacionesLogicas
    (14) instrucciones -> . sentenciaLoopRecur
    (15) instrucciones -> . cond_
    (16) instrucciones -> . cond_else
    (17) instrucciones -> . doseq
    (18) instrucciones -> . case_expression
    (19) instrucciones -> . lista
    (20) instrucciones -> . sentencia_booleana
    (21) instrucciones -> . function
    (22) instrucciones -> . dotimes
    (23) instrucciones -> . ciclo
    (24) instrucciones -> . valor
    (25) instrucciones -> . recur
    (26) instrucciones -> . dato
    (46) asignacion -> . LPAREN DEFICION VARIABLE dato RPAREN
    (47) asignacion -> . LPAREN LET LCOR VARIABLE dato RCOR RPAREN
    (75) impresion -> . LPAREN IMPRIMIR info_imprimir RPAREN
    (91) operacion_aritmetica -> . LPAREN operador_aritmetico dato dato RPAREN
    (111) conjuntos -> . NUMERAL L_LLAVE expresionConjuntoEnteros R_LLAVE
    (112) conjuntos -> . NUMERAL L_LLAVE expresionConjuntoDouble R_LLAVE
    (113) conjuntos -> . NUMERAL L_LLAVE expresionConjuntoString R_LLAVE
    (78) vector -> . LCOR secuencia_v RCOR
    (81) mapa -> . L_LLAVE secuencia_mapa R_LLAVE
    (82) if -> . IF sentencia_booleana
    (83) if -> . IF sentencia_booleana recur
    (84) if -> . LPAREN IF instrucciones body RPAREN
    (85) do -> . LPAREN DO instrucciones RPAREN
    (86) if_do -> . LPAREN if do RPAREN
    (87) when -> . LPAREN WHEN sentencia_booleana body RPAREN
    (104) defn -> . LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN
    (105) defn -> . LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN
    (106) defn_with_return -> . LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN defn_return
    (107) defn_with_return -> . LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN defn_return
    (90) operacionesLogicas -> . LPAREN if recur VARIABLE RPAREN RPAREN
    (114) sentenciaLoopRecur -> . LPAREN LOOP argumments LPAREN if dato RPAREN RPAREN
    (50) cond_ -> . LPAREN COND linecondition linecondition RPAREN
    (51) cond_else -> . LPAREN COND linecondition linecondition DOSPUNTOS ELSE impresion RPAREN
    (102) doseq -> . LPAREN DOSEQ doseq_args impresion RPAREN
    (103) doseq -> . LPAREN DOSEQ doseq_args LPAREN doseq_prn RPAREN RPAREN
    (56) case_expression -> . LPAREN CASE dato case impresion RPAREN
    (57) case_expression -> . LPAREN CASE dato case DOSPUNTOS ELSE STRING RPAREN
    (60) lista -> . LPAREN LIST argumentos_lista RPAREN
    (48) sentencia_booleana -> . LPAREN operador_comparadores dato dato RPAREN
    (71) function -> . LPAREN DEFFUNCION nombre_funct internos RPAREN
    (72) function -> . LPAREN DEFFUNCION nombre_funct internos LPAREN if body RPAREN
    (89) dotimes -> . LPAREN DOTIMES ciclo body RPAREN
    (88) ciclo -> . LCOR VARIABLE ENTERO RCOR
    (33) valor -> . ENTERO
    (34) valor -> . FLOTANTE
    (35) valor -> . BOOLEAN
    (65) recur -> . LPAREN RECUR LPAREN INC dato RPAREN RPAREN
    (27) dato -> . STRING
    (28) dato -> . CHAR
    (29) dato -> . ENTERO
    (30) dato -> . FLOTANTE
    (31) dato -> . BOOLEAN
    (32) dato -> . VARIABLE

    LPAREN          shift and go to state 28
    NUMERAL         shift and go to state 31
    LCOR            shift and go to state 30
    L_LLAVE         shift and go to state 32
    IF              shift and go to state 33
    ENTERO          shift and go to state 35
    FLOTANTE        shift and go to state 36
    BOOLEAN         shift and go to state 37
    STRING          shift and go to state 34
    CHAR            shift and go to state 38
    VARIABLE        shift and go to state 29

    instrucciones                  shift and go to state 87
    asignacion                     shift and go to state 2
    impresion                      shift and go to state 3
    operacion_aritmetica           shift and go to state 4
    conjuntos                      shift and go to state 5
    vector                         shift and go to state 6
    mapa                           shift and go to state 7
    if                             shift and go to state 8
    do                             shift and go to state 9
    if_do                          shift and go to state 10
    when                           shift and go to state 11
    defn                           shift and go to state 12
    defn_with_return               shift and go to state 13
    operacionesLogicas             shift and go to state 14
    sentenciaLoopRecur             shift and go to state 15
    cond_                          shift and go to state 16
    cond_else                      shift and go to state 17
    doseq                          shift and go to state 18
    case_expression                shift and go to state 19
    lista                          shift and go to state 20
    sentencia_booleana             shift and go to state 21
    function                       shift and go to state 22
    dotimes                        shift and go to state 23
    ciclo                          shift and go to state 24
    valor                          shift and go to state 25
    recur                          shift and go to state 26
    dato                           shift and go to state 27

state 46

    (86) if_do -> LPAREN if . do RPAREN
    (90) operacionesLogicas -> LPAREN if . recur VARIABLE RPAREN RPAREN
    (85) do -> . LPAREN DO instrucciones RPAREN
    (65) recur -> . LPAREN RECUR LPAREN INC dato RPAREN RPAREN

    LPAREN          shift and go to state 88

    do                             shift and go to state 89
    recur                          shift and go to state 90

state 47

    (87) when -> LPAREN WHEN . sentencia_booleana body RPAREN
    (48) sentencia_booleana -> . LPAREN operador_comparadores dato dato RPAREN

    LPAREN          shift and go to state 77

    sentencia_booleana             shift and go to state 91

state 48

    (104) defn -> LPAREN DEFFUNCION . VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN
    (105) defn -> LPAREN DEFFUNCION . INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN
    (106) defn_with_return -> LPAREN DEFFUNCION . VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN defn_return
    (107) defn_with_return -> LPAREN DEFFUNCION . INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN defn_return
    (71) function -> LPAREN DEFFUNCION . nombre_funct internos RPAREN
    (72) function -> LPAREN DEFFUNCION . nombre_funct internos LPAREN if body RPAREN
    (63) nombre_funct -> . VARIABLE

    VARIABLE        shift and go to state 92
    INCREASE        shift and go to state 93

    nombre_funct                   shift and go to state 94

state 49

    (114) sentenciaLoopRecur -> LPAREN LOOP . argumments LPAREN if dato RPAREN RPAREN
    (61) argumments -> . LCOR argumentos_lista RCOR

    LCOR            shift and go to state 96

    argumments                     shift and go to state 95

state 50

    (50) cond_ -> LPAREN COND . linecondition linecondition RPAREN
    (51) cond_else -> LPAREN COND . linecondition linecondition DOSPUNTOS ELSE impresion RPAREN
    (49) linecondition -> . sentencia_booleana impresion
    (48) sentencia_booleana -> . LPAREN operador_comparadores dato dato RPAREN

    LPAREN          shift and go to state 77

    linecondition                  shift and go to state 97
    sentencia_booleana             shift and go to state 98

state 51

    (102) doseq -> LPAREN DOSEQ . doseq_args impresion RPAREN
    (103) doseq -> LPAREN DOSEQ . doseq_args LPAREN doseq_prn RPAREN RPAREN
    (92) doseq_args -> . LCOR dato LPAREN RANGE dato RPAREN RCOR
    (93) doseq_args -> . LCOR dato conjuntos RCOR
    (94) doseq_args -> . LCOR dato vector dato vector RCOR
    (95) doseq_args -> . LCOR vector conjuntos RCOR
    (96) doseq_args -> . LCOR dato vector RCOR

    LCOR            shift and go to state 100

    doseq_args                     shift and go to state 99

state 52

    (56) case_expression -> LPAREN CASE . dato case impresion RPAREN
    (57) case_expression -> LPAREN CASE . dato case DOSPUNTOS ELSE STRING RPAREN
    (27) dato -> . STRING
    (28) dato -> . CHAR
    (29) dato -> . ENTERO
    (30) dato -> . FLOTANTE
    (31) dato -> . BOOLEAN
    (32) dato -> . VARIABLE

    STRING          shift and go to state 34
    CHAR            shift and go to state 38
    ENTERO          shift and go to state 69
    FLOTANTE        shift and go to state 71
    BOOLEAN         shift and go to state 72
    VARIABLE        shift and go to state 29

    dato                           shift and go to state 101

state 53

    (60) lista -> LPAREN LIST . argumentos_lista RPAREN
    (58) argumentos_lista -> . dato
    (59) argumentos_lista -> . dato argumentos_lista
    (27) dato -> . STRING
    (28) dato -> . CHAR
    (29) dato -> . ENTERO
    (30) dato -> . FLOTANTE
    (31) dato -> . BOOLEAN
    (32) dato -> . VARIABLE

    STRING          shift and go to state 34
    CHAR            shift and go to state 38
    ENTERO          shift and go to state 69
    FLOTANTE        shift and go to state 71
    BOOLEAN         shift and go to state 72
    VARIABLE        shift and go to state 29

    argumentos_lista               shift and go to state 102
    dato                           shift and go to state 103

state 54

    (48) sentencia_booleana -> LPAREN operador_comparadores . dato dato RPAREN
    (27) dato -> . STRING
    (28) dato -> . CHAR
    (29) dato -> . ENTERO
    (30) dato -> . FLOTANTE
    (31) dato -> . BOOLEAN
    (32) dato -> . VARIABLE

    STRING          shift and go to state 34
    CHAR            shift and go to state 38
    ENTERO          shift and go to state 69
    FLOTANTE        shift and go to state 71
    BOOLEAN         shift and go to state 72
    VARIABLE        shift and go to state 29

    dato                           shift and go to state 104

state 55

    (89) dotimes -> LPAREN DOTIMES . ciclo body RPAREN
    (88) ciclo -> . LCOR VARIABLE ENTERO RCOR

    LCOR            shift and go to state 106

    ciclo                          shift and go to state 105

state 56

    (65) recur -> LPAREN RECUR . LPAREN INC dato RPAREN RPAREN

    LPAREN          shift and go to state 107


state 57

    (42) operador_aritmetico -> MAS .

    STRING          reduce using rule 42 (operador_aritmetico -> MAS .)
    CHAR            reduce using rule 42 (operador_aritmetico -> MAS .)
    ENTERO          reduce using rule 42 (operador_aritmetico -> MAS .)
    FLOTANTE        reduce using rule 42 (operador_aritmetico -> MAS .)
    BOOLEAN         reduce using rule 42 (operador_aritmetico -> MAS .)
    VARIABLE        reduce using rule 42 (operador_aritmetico -> MAS .)


state 58

    (43) operador_aritmetico -> MENOS .

    STRING          reduce using rule 43 (operador_aritmetico -> MENOS .)
    CHAR            reduce using rule 43 (operador_aritmetico -> MENOS .)
    ENTERO          reduce using rule 43 (operador_aritmetico -> MENOS .)
    FLOTANTE        reduce using rule 43 (operador_aritmetico -> MENOS .)
    BOOLEAN         reduce using rule 43 (operador_aritmetico -> MENOS .)
    VARIABLE        reduce using rule 43 (operador_aritmetico -> MENOS .)


state 59

    (44) operador_aritmetico -> PRODUCTO .

    STRING          reduce using rule 44 (operador_aritmetico -> PRODUCTO .)
    CHAR            reduce using rule 44 (operador_aritmetico -> PRODUCTO .)
    ENTERO          reduce using rule 44 (operador_aritmetico -> PRODUCTO .)
    FLOTANTE        reduce using rule 44 (operador_aritmetico -> PRODUCTO .)
    BOOLEAN         reduce using rule 44 (operador_aritmetico -> PRODUCTO .)
    VARIABLE        reduce using rule 44 (operador_aritmetico -> PRODUCTO .)


state 60

    (45) operador_aritmetico -> DIVISION .

    STRING          reduce using rule 45 (operador_aritmetico -> DIVISION .)
    CHAR            reduce using rule 45 (operador_aritmetico -> DIVISION .)
    ENTERO          reduce using rule 45 (operador_aritmetico -> DIVISION .)
    FLOTANTE        reduce using rule 45 (operador_aritmetico -> DIVISION .)
    BOOLEAN         reduce using rule 45 (operador_aritmetico -> DIVISION .)
    VARIABLE        reduce using rule 45 (operador_aritmetico -> DIVISION .)


state 61

    (36) operador_comparadores -> COMPARA_IGUAL .

    STRING          reduce using rule 36 (operador_comparadores -> COMPARA_IGUAL .)
    CHAR            reduce using rule 36 (operador_comparadores -> COMPARA_IGUAL .)
    ENTERO          reduce using rule 36 (operador_comparadores -> COMPARA_IGUAL .)
    FLOTANTE        reduce using rule 36 (operador_comparadores -> COMPARA_IGUAL .)
    BOOLEAN         reduce using rule 36 (operador_comparadores -> COMPARA_IGUAL .)
    VARIABLE        reduce using rule 36 (operador_comparadores -> COMPARA_IGUAL .)


state 62

    (37) operador_comparadores -> MENORQUE .

    STRING          reduce using rule 37 (operador_comparadores -> MENORQUE .)
    CHAR            reduce using rule 37 (operador_comparadores -> MENORQUE .)
    ENTERO          reduce using rule 37 (operador_comparadores -> MENORQUE .)
    FLOTANTE        reduce using rule 37 (operador_comparadores -> MENORQUE .)
    BOOLEAN         reduce using rule 37 (operador_comparadores -> MENORQUE .)
    VARIABLE        reduce using rule 37 (operador_comparadores -> MENORQUE .)


state 63

    (38) operador_comparadores -> MAYORQUE .

    STRING          reduce using rule 38 (operador_comparadores -> MAYORQUE .)
    CHAR            reduce using rule 38 (operador_comparadores -> MAYORQUE .)
    ENTERO          reduce using rule 38 (operador_comparadores -> MAYORQUE .)
    FLOTANTE        reduce using rule 38 (operador_comparadores -> MAYORQUE .)
    BOOLEAN         reduce using rule 38 (operador_comparadores -> MAYORQUE .)
    VARIABLE        reduce using rule 38 (operador_comparadores -> MAYORQUE .)


state 64

    (39) operador_comparadores -> MAYORIGUALQUE .

    STRING          reduce using rule 39 (operador_comparadores -> MAYORIGUALQUE .)
    CHAR            reduce using rule 39 (operador_comparadores -> MAYORIGUALQUE .)
    ENTERO          reduce using rule 39 (operador_comparadores -> MAYORIGUALQUE .)
    FLOTANTE        reduce using rule 39 (operador_comparadores -> MAYORIGUALQUE .)
    BOOLEAN         reduce using rule 39 (operador_comparadores -> MAYORIGUALQUE .)
    VARIABLE        reduce using rule 39 (operador_comparadores -> MAYORIGUALQUE .)


state 65

    (40) operador_comparadores -> MENORIGUALQUE .

    STRING          reduce using rule 40 (operador_comparadores -> MENORIGUALQUE .)
    CHAR            reduce using rule 40 (operador_comparadores -> MENORIGUALQUE .)
    ENTERO          reduce using rule 40 (operador_comparadores -> MENORIGUALQUE .)
    FLOTANTE        reduce using rule 40 (operador_comparadores -> MENORIGUALQUE .)
    BOOLEAN         reduce using rule 40 (operador_comparadores -> MENORIGUALQUE .)
    VARIABLE        reduce using rule 40 (operador_comparadores -> MENORIGUALQUE .)


state 66

    (41) operador_comparadores -> DIFERENTE .

    STRING          reduce using rule 41 (operador_comparadores -> DIFERENTE .)
    CHAR            reduce using rule 41 (operador_comparadores -> DIFERENTE .)
    ENTERO          reduce using rule 41 (operador_comparadores -> DIFERENTE .)
    FLOTANTE        reduce using rule 41 (operador_comparadores -> DIFERENTE .)
    BOOLEAN         reduce using rule 41 (operador_comparadores -> DIFERENTE .)
    VARIABLE        reduce using rule 41 (operador_comparadores -> DIFERENTE .)


state 67

    (78) vector -> LCOR secuencia_v . RCOR

    RCOR            shift and go to state 108


state 68

    (88) ciclo -> LCOR VARIABLE . ENTERO RCOR
    (32) dato -> VARIABLE .

  ! shift/reduce conflict for ENTERO resolved as shift
    ENTERO          shift and go to state 109
    STRING          reduce using rule 32 (dato -> VARIABLE .)
    CHAR            reduce using rule 32 (dato -> VARIABLE .)
    FLOTANTE        reduce using rule 32 (dato -> VARIABLE .)
    BOOLEAN         reduce using rule 32 (dato -> VARIABLE .)
    VARIABLE        reduce using rule 32 (dato -> VARIABLE .)
    RCOR            reduce using rule 32 (dato -> VARIABLE .)

  ! ENTERO          [ reduce using rule 32 (dato -> VARIABLE .) ]


state 69

    (29) dato -> ENTERO .

    STRING          reduce using rule 29 (dato -> ENTERO .)
    CHAR            reduce using rule 29 (dato -> ENTERO .)
    ENTERO          reduce using rule 29 (dato -> ENTERO .)
    FLOTANTE        reduce using rule 29 (dato -> ENTERO .)
    BOOLEAN         reduce using rule 29 (dato -> ENTERO .)
    VARIABLE        reduce using rule 29 (dato -> ENTERO .)
    RCOR            reduce using rule 29 (dato -> ENTERO .)
    RPAREN          reduce using rule 29 (dato -> ENTERO .)
    LPAREN          reduce using rule 29 (dato -> ENTERO .)
    NUMERAL         reduce using rule 29 (dato -> ENTERO .)
    LCOR            reduce using rule 29 (dato -> ENTERO .)
    DOSPUNTOS       reduce using rule 29 (dato -> ENTERO .)
    R_LLAVE         reduce using rule 29 (dato -> ENTERO .)


state 70

    (76) secuencia_v -> dato .
    (77) secuencia_v -> dato . secuencia_v
    (76) secuencia_v -> . dato
    (77) secuencia_v -> . dato secuencia_v
    (27) dato -> . STRING
    (28) dato -> . CHAR
    (29) dato -> . ENTERO
    (30) dato -> . FLOTANTE
    (31) dato -> . BOOLEAN
    (32) dato -> . VARIABLE

    RCOR            reduce using rule 76 (secuencia_v -> dato .)
    STRING          shift and go to state 34
    CHAR            shift and go to state 38
    ENTERO          shift and go to state 69
    FLOTANTE        shift and go to state 71
    BOOLEAN         shift and go to state 72
    VARIABLE        shift and go to state 29

    dato                           shift and go to state 70
    secuencia_v                    shift and go to state 110

state 71

    (30) dato -> FLOTANTE .

    STRING          reduce using rule 30 (dato -> FLOTANTE .)
    CHAR            reduce using rule 30 (dato -> FLOTANTE .)
    ENTERO          reduce using rule 30 (dato -> FLOTANTE .)
    FLOTANTE        reduce using rule 30 (dato -> FLOTANTE .)
    BOOLEAN         reduce using rule 30 (dato -> FLOTANTE .)
    VARIABLE        reduce using rule 30 (dato -> FLOTANTE .)
    RCOR            reduce using rule 30 (dato -> FLOTANTE .)
    RPAREN          reduce using rule 30 (dato -> FLOTANTE .)
    LPAREN          reduce using rule 30 (dato -> FLOTANTE .)
    NUMERAL         reduce using rule 30 (dato -> FLOTANTE .)
    LCOR            reduce using rule 30 (dato -> FLOTANTE .)
    DOSPUNTOS       reduce using rule 30 (dato -> FLOTANTE .)
    R_LLAVE         reduce using rule 30 (dato -> FLOTANTE .)


state 72

    (31) dato -> BOOLEAN .

    STRING          reduce using rule 31 (dato -> BOOLEAN .)
    CHAR            reduce using rule 31 (dato -> BOOLEAN .)
    ENTERO          reduce using rule 31 (dato -> BOOLEAN .)
    FLOTANTE        reduce using rule 31 (dato -> BOOLEAN .)
    BOOLEAN         reduce using rule 31 (dato -> BOOLEAN .)
    VARIABLE        reduce using rule 31 (dato -> BOOLEAN .)
    RCOR            reduce using rule 31 (dato -> BOOLEAN .)
    RPAREN          reduce using rule 31 (dato -> BOOLEAN .)
    LPAREN          reduce using rule 31 (dato -> BOOLEAN .)
    NUMERAL         reduce using rule 31 (dato -> BOOLEAN .)
    LCOR            reduce using rule 31 (dato -> BOOLEAN .)
    DOSPUNTOS       reduce using rule 31 (dato -> BOOLEAN .)
    R_LLAVE         reduce using rule 31 (dato -> BOOLEAN .)


state 73

    (111) conjuntos -> NUMERAL L_LLAVE . expresionConjuntoEnteros R_LLAVE
    (112) conjuntos -> NUMERAL L_LLAVE . expresionConjuntoDouble R_LLAVE
    (113) conjuntos -> NUMERAL L_LLAVE . expresionConjuntoString R_LLAVE
    (115) expresionConjuntoEnteros -> . ENTERO
    (116) expresionConjuntoEnteros -> . ENTERO expresionConjuntoEnteros
    (117) expresionConjuntoDouble -> . FLOTANTE
    (118) expresionConjuntoDouble -> . FLOTANTE expresionConjuntoDouble
    (119) expresionConjuntoString -> . STRING
    (120) expresionConjuntoString -> . STRING expresionConjuntoString

    ENTERO          shift and go to state 114
    FLOTANTE        shift and go to state 115
    STRING          shift and go to state 116

    expresionConjuntoEnteros       shift and go to state 111
    expresionConjuntoDouble        shift and go to state 112
    expresionConjuntoString        shift and go to state 113

state 74

    (81) mapa -> L_LLAVE secuencia_mapa . R_LLAVE

    R_LLAVE         shift and go to state 117


state 75

    (79) secuencia_mapa -> DOSPUNTOS . VARIABLE dato
    (80) secuencia_mapa -> DOSPUNTOS . VARIABLE dato secuencia_mapa

    VARIABLE        shift and go to state 118


state 76

    (82) if -> IF sentencia_booleana .
    (83) if -> IF sentencia_booleana . recur
    (65) recur -> . LPAREN RECUR LPAREN INC dato RPAREN RPAREN

  ! shift/reduce conflict for LPAREN resolved as shift
    $end            reduce using rule 82 (if -> IF sentencia_booleana .)
    NUMERAL         reduce using rule 82 (if -> IF sentencia_booleana .)
    LCOR            reduce using rule 82 (if -> IF sentencia_booleana .)
    L_LLAVE         reduce using rule 82 (if -> IF sentencia_booleana .)
    IF              reduce using rule 82 (if -> IF sentencia_booleana .)
    ENTERO          reduce using rule 82 (if -> IF sentencia_booleana .)
    FLOTANTE        reduce using rule 82 (if -> IF sentencia_booleana .)
    BOOLEAN         reduce using rule 82 (if -> IF sentencia_booleana .)
    STRING          reduce using rule 82 (if -> IF sentencia_booleana .)
    CHAR            reduce using rule 82 (if -> IF sentencia_booleana .)
    VARIABLE        reduce using rule 82 (if -> IF sentencia_booleana .)
    RPAREN          reduce using rule 82 (if -> IF sentencia_booleana .)
    LPAREN          shift and go to state 120

  ! LPAREN          [ reduce using rule 82 (if -> IF sentencia_booleana .) ]

    recur                          shift and go to state 119

state 77

    (48) sentencia_booleana -> LPAREN . operador_comparadores dato dato RPAREN
    (36) operador_comparadores -> . COMPARA_IGUAL
    (37) operador_comparadores -> . MENORQUE
    (38) operador_comparadores -> . MAYORQUE
    (39) operador_comparadores -> . MAYORIGUALQUE
    (40) operador_comparadores -> . MENORIGUALQUE
    (41) operador_comparadores -> . DIFERENTE

    COMPARA_IGUAL   shift and go to state 61
    MENORQUE        shift and go to state 62
    MAYORQUE        shift and go to state 63
    MAYORIGUALQUE   shift and go to state 64
    MENORIGUALQUE   shift and go to state 65
    DIFERENTE       shift and go to state 66

    operador_comparadores          shift and go to state 54

state 78

    (84) if -> LPAREN IF . instrucciones body RPAREN
    (1) instrucciones -> . asignacion
    (2) instrucciones -> . impresion
    (3) instrucciones -> . operacion_aritmetica
    (4) instrucciones -> . conjuntos
    (5) instrucciones -> . vector
    (6) instrucciones -> . mapa
    (7) instrucciones -> . if
    (8) instrucciones -> . do
    (9) instrucciones -> . if_do
    (10) instrucciones -> . when
    (11) instrucciones -> . defn
    (12) instrucciones -> . defn_with_return
    (13) instrucciones -> . operacionesLogicas
    (14) instrucciones -> . sentenciaLoopRecur
    (15) instrucciones -> . cond_
    (16) instrucciones -> . cond_else
    (17) instrucciones -> . doseq
    (18) instrucciones -> . case_expression
    (19) instrucciones -> . lista
    (20) instrucciones -> . sentencia_booleana
    (21) instrucciones -> . function
    (22) instrucciones -> . dotimes
    (23) instrucciones -> . ciclo
    (24) instrucciones -> . valor
    (25) instrucciones -> . recur
    (26) instrucciones -> . dato
    (46) asignacion -> . LPAREN DEFICION VARIABLE dato RPAREN
    (47) asignacion -> . LPAREN LET LCOR VARIABLE dato RCOR RPAREN
    (75) impresion -> . LPAREN IMPRIMIR info_imprimir RPAREN
    (91) operacion_aritmetica -> . LPAREN operador_aritmetico dato dato RPAREN
    (111) conjuntos -> . NUMERAL L_LLAVE expresionConjuntoEnteros R_LLAVE
    (112) conjuntos -> . NUMERAL L_LLAVE expresionConjuntoDouble R_LLAVE
    (113) conjuntos -> . NUMERAL L_LLAVE expresionConjuntoString R_LLAVE
    (78) vector -> . LCOR secuencia_v RCOR
    (81) mapa -> . L_LLAVE secuencia_mapa R_LLAVE
    (82) if -> . IF sentencia_booleana
    (83) if -> . IF sentencia_booleana recur
    (84) if -> . LPAREN IF instrucciones body RPAREN
    (85) do -> . LPAREN DO instrucciones RPAREN
    (86) if_do -> . LPAREN if do RPAREN
    (87) when -> . LPAREN WHEN sentencia_booleana body RPAREN
    (104) defn -> . LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN
    (105) defn -> . LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN
    (106) defn_with_return -> . LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN defn_return
    (107) defn_with_return -> . LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN defn_return
    (90) operacionesLogicas -> . LPAREN if recur VARIABLE RPAREN RPAREN
    (114) sentenciaLoopRecur -> . LPAREN LOOP argumments LPAREN if dato RPAREN RPAREN
    (50) cond_ -> . LPAREN COND linecondition linecondition RPAREN
    (51) cond_else -> . LPAREN COND linecondition linecondition DOSPUNTOS ELSE impresion RPAREN
    (102) doseq -> . LPAREN DOSEQ doseq_args impresion RPAREN
    (103) doseq -> . LPAREN DOSEQ doseq_args LPAREN doseq_prn RPAREN RPAREN
    (56) case_expression -> . LPAREN CASE dato case impresion RPAREN
    (57) case_expression -> . LPAREN CASE dato case DOSPUNTOS ELSE STRING RPAREN
    (60) lista -> . LPAREN LIST argumentos_lista RPAREN
    (48) sentencia_booleana -> . LPAREN operador_comparadores dato dato RPAREN
    (71) function -> . LPAREN DEFFUNCION nombre_funct internos RPAREN
    (72) function -> . LPAREN DEFFUNCION nombre_funct internos LPAREN if body RPAREN
    (89) dotimes -> . LPAREN DOTIMES ciclo body RPAREN
    (88) ciclo -> . LCOR VARIABLE ENTERO RCOR
    (33) valor -> . ENTERO
    (34) valor -> . FLOTANTE
    (35) valor -> . BOOLEAN
    (65) recur -> . LPAREN RECUR LPAREN INC dato RPAREN RPAREN
    (27) dato -> . STRING
    (28) dato -> . CHAR
    (29) dato -> . ENTERO
    (30) dato -> . FLOTANTE
    (31) dato -> . BOOLEAN
    (32) dato -> . VARIABLE

    LPAREN          shift and go to state 28
    NUMERAL         shift and go to state 31
    LCOR            shift and go to state 30
    L_LLAVE         shift and go to state 32
    IF              shift and go to state 33
    ENTERO          shift and go to state 35
    FLOTANTE        shift and go to state 36
    BOOLEAN         shift and go to state 37
    STRING          shift and go to state 34
    CHAR            shift and go to state 38
    VARIABLE        shift and go to state 29

    instrucciones                  shift and go to state 85
    asignacion                     shift and go to state 2
    impresion                      shift and go to state 3
    operacion_aritmetica           shift and go to state 4
    conjuntos                      shift and go to state 5
    vector                         shift and go to state 6
    mapa                           shift and go to state 7
    if                             shift and go to state 8
    do                             shift and go to state 9
    if_do                          shift and go to state 10
    when                           shift and go to state 11
    defn                           shift and go to state 12
    defn_with_return               shift and go to state 13
    operacionesLogicas             shift and go to state 14
    sentenciaLoopRecur             shift and go to state 15
    cond_                          shift and go to state 16
    cond_else                      shift and go to state 17
    doseq                          shift and go to state 18
    case_expression                shift and go to state 19
    lista                          shift and go to state 20
    sentencia_booleana             shift and go to state 21
    function                       shift and go to state 22
    dotimes                        shift and go to state 23
    ciclo                          shift and go to state 24
    valor                          shift and go to state 25
    recur                          shift and go to state 26
    dato                           shift and go to state 27

state 79

    (46) asignacion -> LPAREN DEFICION VARIABLE . dato RPAREN
    (27) dato -> . STRING
    (28) dato -> . CHAR
    (29) dato -> . ENTERO
    (30) dato -> . FLOTANTE
    (31) dato -> . BOOLEAN
    (32) dato -> . VARIABLE

    STRING          shift and go to state 34
    CHAR            shift and go to state 38
    ENTERO          shift and go to state 69
    FLOTANTE        shift and go to state 71
    BOOLEAN         shift and go to state 72
    VARIABLE        shift and go to state 29

    dato                           shift and go to state 121

state 80

    (47) asignacion -> LPAREN LET LCOR . VARIABLE dato RCOR RPAREN

    VARIABLE        shift and go to state 122


state 81

    (75) impresion -> LPAREN IMPRIMIR info_imprimir . RPAREN

    RPAREN          shift and go to state 123


state 82

    (73) info_imprimir -> dato .
    (74) info_imprimir -> dato . info_imprimir
    (73) info_imprimir -> . dato
    (74) info_imprimir -> . dato info_imprimir
    (27) dato -> . STRING
    (28) dato -> . CHAR
    (29) dato -> . ENTERO
    (30) dato -> . FLOTANTE
    (31) dato -> . BOOLEAN
    (32) dato -> . VARIABLE

    RPAREN          reduce using rule 73 (info_imprimir -> dato .)
    STRING          shift and go to state 34
    CHAR            shift and go to state 38
    ENTERO          shift and go to state 69
    FLOTANTE        shift and go to state 71
    BOOLEAN         shift and go to state 72
    VARIABLE        shift and go to state 29

    dato                           shift and go to state 82
    info_imprimir                  shift and go to state 124

state 83

    (91) operacion_aritmetica -> LPAREN operador_aritmetico dato . dato RPAREN
    (27) dato -> . STRING
    (28) dato -> . CHAR
    (29) dato -> . ENTERO
    (30) dato -> . FLOTANTE
    (31) dato -> . BOOLEAN
    (32) dato -> . VARIABLE

    STRING          shift and go to state 34
    CHAR            shift and go to state 38
    ENTERO          shift and go to state 69
    FLOTANTE        shift and go to state 71
    BOOLEAN         shift and go to state 72
    VARIABLE        shift and go to state 29

    dato                           shift and go to state 125

state 84

    (48) sentencia_booleana -> LPAREN . operador_comparadores dato dato RPAREN
    (46) asignacion -> LPAREN . DEFICION VARIABLE dato RPAREN
    (47) asignacion -> LPAREN . LET LCOR VARIABLE dato RCOR RPAREN
    (75) impresion -> LPAREN . IMPRIMIR info_imprimir RPAREN
    (91) operacion_aritmetica -> LPAREN . operador_aritmetico dato dato RPAREN
    (84) if -> LPAREN . IF instrucciones body RPAREN
    (85) do -> LPAREN . DO instrucciones RPAREN
    (86) if_do -> LPAREN . if do RPAREN
    (87) when -> LPAREN . WHEN sentencia_booleana body RPAREN
    (104) defn -> LPAREN . DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN
    (105) defn -> LPAREN . DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN
    (106) defn_with_return -> LPAREN . DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN defn_return
    (107) defn_with_return -> LPAREN . DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN defn_return
    (90) operacionesLogicas -> LPAREN . if recur VARIABLE RPAREN RPAREN
    (114) sentenciaLoopRecur -> LPAREN . LOOP argumments LPAREN if dato RPAREN RPAREN
    (50) cond_ -> LPAREN . COND linecondition linecondition RPAREN
    (51) cond_else -> LPAREN . COND linecondition linecondition DOSPUNTOS ELSE impresion RPAREN
    (102) doseq -> LPAREN . DOSEQ doseq_args impresion RPAREN
    (103) doseq -> LPAREN . DOSEQ doseq_args LPAREN doseq_prn RPAREN RPAREN
    (56) case_expression -> LPAREN . CASE dato case impresion RPAREN
    (57) case_expression -> LPAREN . CASE dato case DOSPUNTOS ELSE STRING RPAREN
    (60) lista -> LPAREN . LIST argumentos_lista RPAREN
    (71) function -> LPAREN . DEFFUNCION nombre_funct internos RPAREN
    (72) function -> LPAREN . DEFFUNCION nombre_funct internos LPAREN if body RPAREN
    (89) dotimes -> LPAREN . DOTIMES ciclo body RPAREN
    (65) recur -> LPAREN . RECUR LPAREN INC dato RPAREN RPAREN
    (36) operador_comparadores -> . COMPARA_IGUAL
    (37) operador_comparadores -> . MENORQUE
    (38) operador_comparadores -> . MAYORQUE
    (39) operador_comparadores -> . MAYORIGUALQUE
    (40) operador_comparadores -> . MENORIGUALQUE
    (41) operador_comparadores -> . DIFERENTE
    (42) operador_aritmetico -> . MAS
    (43) operador_aritmetico -> . MENOS
    (44) operador_aritmetico -> . PRODUCTO
    (45) operador_aritmetico -> . DIVISION
    (82) if -> . IF sentencia_booleana
    (83) if -> . IF sentencia_booleana recur
    (84) if -> . LPAREN IF instrucciones body RPAREN

    DEFICION        shift and go to state 40
    LET             shift and go to state 41
    IMPRIMIR        shift and go to state 42
    IF              shift and go to state 44
    DO              shift and go to state 45
    WHEN            shift and go to state 47
    DEFFUNCION      shift and go to state 48
    LOOP            shift and go to state 49
    COND            shift and go to state 50
    DOSEQ           shift and go to state 51
    CASE            shift and go to state 52
    LIST            shift and go to state 53
    DOTIMES         shift and go to state 55
    RECUR           shift and go to state 56
    COMPARA_IGUAL   shift and go to state 61
    MENORQUE        shift and go to state 62
    MAYORQUE        shift and go to state 63
    MAYORIGUALQUE   shift and go to state 64
    MENORIGUALQUE   shift and go to state 65
    DIFERENTE       shift and go to state 66
    MAS             shift and go to state 57
    MENOS           shift and go to state 58
    PRODUCTO        shift and go to state 59
    DIVISION        shift and go to state 60
    LPAREN          shift and go to state 39

    operador_comparadores          shift and go to state 54
    operador_aritmetico            shift and go to state 43
    if                             shift and go to state 46

state 85

    (84) if -> LPAREN IF instrucciones . body RPAREN
    (64) body -> . instrucciones
    (1) instrucciones -> . asignacion
    (2) instrucciones -> . impresion
    (3) instrucciones -> . operacion_aritmetica
    (4) instrucciones -> . conjuntos
    (5) instrucciones -> . vector
    (6) instrucciones -> . mapa
    (7) instrucciones -> . if
    (8) instrucciones -> . do
    (9) instrucciones -> . if_do
    (10) instrucciones -> . when
    (11) instrucciones -> . defn
    (12) instrucciones -> . defn_with_return
    (13) instrucciones -> . operacionesLogicas
    (14) instrucciones -> . sentenciaLoopRecur
    (15) instrucciones -> . cond_
    (16) instrucciones -> . cond_else
    (17) instrucciones -> . doseq
    (18) instrucciones -> . case_expression
    (19) instrucciones -> . lista
    (20) instrucciones -> . sentencia_booleana
    (21) instrucciones -> . function
    (22) instrucciones -> . dotimes
    (23) instrucciones -> . ciclo
    (24) instrucciones -> . valor
    (25) instrucciones -> . recur
    (26) instrucciones -> . dato
    (46) asignacion -> . LPAREN DEFICION VARIABLE dato RPAREN
    (47) asignacion -> . LPAREN LET LCOR VARIABLE dato RCOR RPAREN
    (75) impresion -> . LPAREN IMPRIMIR info_imprimir RPAREN
    (91) operacion_aritmetica -> . LPAREN operador_aritmetico dato dato RPAREN
    (111) conjuntos -> . NUMERAL L_LLAVE expresionConjuntoEnteros R_LLAVE
    (112) conjuntos -> . NUMERAL L_LLAVE expresionConjuntoDouble R_LLAVE
    (113) conjuntos -> . NUMERAL L_LLAVE expresionConjuntoString R_LLAVE
    (78) vector -> . LCOR secuencia_v RCOR
    (81) mapa -> . L_LLAVE secuencia_mapa R_LLAVE
    (82) if -> . IF sentencia_booleana
    (83) if -> . IF sentencia_booleana recur
    (84) if -> . LPAREN IF instrucciones body RPAREN
    (85) do -> . LPAREN DO instrucciones RPAREN
    (86) if_do -> . LPAREN if do RPAREN
    (87) when -> . LPAREN WHEN sentencia_booleana body RPAREN
    (104) defn -> . LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN
    (105) defn -> . LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN
    (106) defn_with_return -> . LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN defn_return
    (107) defn_with_return -> . LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN defn_return
    (90) operacionesLogicas -> . LPAREN if recur VARIABLE RPAREN RPAREN
    (114) sentenciaLoopRecur -> . LPAREN LOOP argumments LPAREN if dato RPAREN RPAREN
    (50) cond_ -> . LPAREN COND linecondition linecondition RPAREN
    (51) cond_else -> . LPAREN COND linecondition linecondition DOSPUNTOS ELSE impresion RPAREN
    (102) doseq -> . LPAREN DOSEQ doseq_args impresion RPAREN
    (103) doseq -> . LPAREN DOSEQ doseq_args LPAREN doseq_prn RPAREN RPAREN
    (56) case_expression -> . LPAREN CASE dato case impresion RPAREN
    (57) case_expression -> . LPAREN CASE dato case DOSPUNTOS ELSE STRING RPAREN
    (60) lista -> . LPAREN LIST argumentos_lista RPAREN
    (48) sentencia_booleana -> . LPAREN operador_comparadores dato dato RPAREN
    (71) function -> . LPAREN DEFFUNCION nombre_funct internos RPAREN
    (72) function -> . LPAREN DEFFUNCION nombre_funct internos LPAREN if body RPAREN
    (89) dotimes -> . LPAREN DOTIMES ciclo body RPAREN
    (88) ciclo -> . LCOR VARIABLE ENTERO RCOR
    (33) valor -> . ENTERO
    (34) valor -> . FLOTANTE
    (35) valor -> . BOOLEAN
    (65) recur -> . LPAREN RECUR LPAREN INC dato RPAREN RPAREN
    (27) dato -> . STRING
    (28) dato -> . CHAR
    (29) dato -> . ENTERO
    (30) dato -> . FLOTANTE
    (31) dato -> . BOOLEAN
    (32) dato -> . VARIABLE

    LPAREN          shift and go to state 28
    NUMERAL         shift and go to state 31
    LCOR            shift and go to state 30
    L_LLAVE         shift and go to state 32
    IF              shift and go to state 33
    ENTERO          shift and go to state 35
    FLOTANTE        shift and go to state 36
    BOOLEAN         shift and go to state 37
    STRING          shift and go to state 34
    CHAR            shift and go to state 38
    VARIABLE        shift and go to state 29

    instrucciones                  shift and go to state 126
    body                           shift and go to state 127
    asignacion                     shift and go to state 2
    impresion                      shift and go to state 3
    operacion_aritmetica           shift and go to state 4
    conjuntos                      shift and go to state 5
    vector                         shift and go to state 6
    mapa                           shift and go to state 7
    if                             shift and go to state 8
    do                             shift and go to state 9
    if_do                          shift and go to state 10
    when                           shift and go to state 11
    defn                           shift and go to state 12
    defn_with_return               shift and go to state 13
    operacionesLogicas             shift and go to state 14
    sentenciaLoopRecur             shift and go to state 15
    cond_                          shift and go to state 16
    cond_else                      shift and go to state 17
    doseq                          shift and go to state 18
    case_expression                shift and go to state 19
    lista                          shift and go to state 20
    sentencia_booleana             shift and go to state 21
    function                       shift and go to state 22
    dotimes                        shift and go to state 23
    ciclo                          shift and go to state 24
    valor                          shift and go to state 25
    recur                          shift and go to state 26
    dato                           shift and go to state 27

state 86

    (82) if -> IF sentencia_booleana .
    (83) if -> IF sentencia_booleana . recur
    (20) instrucciones -> sentencia_booleana .
    (65) recur -> . LPAREN RECUR LPAREN INC dato RPAREN RPAREN

  ! reduce/reduce conflict for LPAREN resolved using rule 20 (instrucciones -> sentencia_booleana .)
  ! shift/reduce conflict for LPAREN resolved as shift
    NUMERAL         reduce using rule 20 (instrucciones -> sentencia_booleana .)
    LCOR            reduce using rule 20 (instrucciones -> sentencia_booleana .)
    L_LLAVE         reduce using rule 20 (instrucciones -> sentencia_booleana .)
    IF              reduce using rule 20 (instrucciones -> sentencia_booleana .)
    ENTERO          reduce using rule 20 (instrucciones -> sentencia_booleana .)
    FLOTANTE        reduce using rule 20 (instrucciones -> sentencia_booleana .)
    BOOLEAN         reduce using rule 20 (instrucciones -> sentencia_booleana .)
    STRING          reduce using rule 20 (instrucciones -> sentencia_booleana .)
    CHAR            reduce using rule 20 (instrucciones -> sentencia_booleana .)
    VARIABLE        reduce using rule 20 (instrucciones -> sentencia_booleana .)
    LPAREN          shift and go to state 120

  ! LPAREN          [ reduce using rule 82 (if -> IF sentencia_booleana .) ]
  ! LPAREN          [ reduce using rule 20 (instrucciones -> sentencia_booleana .) ]

    recur                          shift and go to state 119

state 87

    (85) do -> LPAREN DO instrucciones . RPAREN

    RPAREN          shift and go to state 128


state 88

    (85) do -> LPAREN . DO instrucciones RPAREN
    (65) recur -> LPAREN . RECUR LPAREN INC dato RPAREN RPAREN

    DO              shift and go to state 45
    RECUR           shift and go to state 56


state 89

    (86) if_do -> LPAREN if do . RPAREN

    RPAREN          shift and go to state 129


state 90

    (90) operacionesLogicas -> LPAREN if recur . VARIABLE RPAREN RPAREN

    VARIABLE        shift and go to state 130


state 91

    (87) when -> LPAREN WHEN sentencia_booleana . body RPAREN
    (64) body -> . instrucciones
    (1) instrucciones -> . asignacion
    (2) instrucciones -> . impresion
    (3) instrucciones -> . operacion_aritmetica
    (4) instrucciones -> . conjuntos
    (5) instrucciones -> . vector
    (6) instrucciones -> . mapa
    (7) instrucciones -> . if
    (8) instrucciones -> . do
    (9) instrucciones -> . if_do
    (10) instrucciones -> . when
    (11) instrucciones -> . defn
    (12) instrucciones -> . defn_with_return
    (13) instrucciones -> . operacionesLogicas
    (14) instrucciones -> . sentenciaLoopRecur
    (15) instrucciones -> . cond_
    (16) instrucciones -> . cond_else
    (17) instrucciones -> . doseq
    (18) instrucciones -> . case_expression
    (19) instrucciones -> . lista
    (20) instrucciones -> . sentencia_booleana
    (21) instrucciones -> . function
    (22) instrucciones -> . dotimes
    (23) instrucciones -> . ciclo
    (24) instrucciones -> . valor
    (25) instrucciones -> . recur
    (26) instrucciones -> . dato
    (46) asignacion -> . LPAREN DEFICION VARIABLE dato RPAREN
    (47) asignacion -> . LPAREN LET LCOR VARIABLE dato RCOR RPAREN
    (75) impresion -> . LPAREN IMPRIMIR info_imprimir RPAREN
    (91) operacion_aritmetica -> . LPAREN operador_aritmetico dato dato RPAREN
    (111) conjuntos -> . NUMERAL L_LLAVE expresionConjuntoEnteros R_LLAVE
    (112) conjuntos -> . NUMERAL L_LLAVE expresionConjuntoDouble R_LLAVE
    (113) conjuntos -> . NUMERAL L_LLAVE expresionConjuntoString R_LLAVE
    (78) vector -> . LCOR secuencia_v RCOR
    (81) mapa -> . L_LLAVE secuencia_mapa R_LLAVE
    (82) if -> . IF sentencia_booleana
    (83) if -> . IF sentencia_booleana recur
    (84) if -> . LPAREN IF instrucciones body RPAREN
    (85) do -> . LPAREN DO instrucciones RPAREN
    (86) if_do -> . LPAREN if do RPAREN
    (87) when -> . LPAREN WHEN sentencia_booleana body RPAREN
    (104) defn -> . LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN
    (105) defn -> . LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN
    (106) defn_with_return -> . LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN defn_return
    (107) defn_with_return -> . LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN defn_return
    (90) operacionesLogicas -> . LPAREN if recur VARIABLE RPAREN RPAREN
    (114) sentenciaLoopRecur -> . LPAREN LOOP argumments LPAREN if dato RPAREN RPAREN
    (50) cond_ -> . LPAREN COND linecondition linecondition RPAREN
    (51) cond_else -> . LPAREN COND linecondition linecondition DOSPUNTOS ELSE impresion RPAREN
    (102) doseq -> . LPAREN DOSEQ doseq_args impresion RPAREN
    (103) doseq -> . LPAREN DOSEQ doseq_args LPAREN doseq_prn RPAREN RPAREN
    (56) case_expression -> . LPAREN CASE dato case impresion RPAREN
    (57) case_expression -> . LPAREN CASE dato case DOSPUNTOS ELSE STRING RPAREN
    (60) lista -> . LPAREN LIST argumentos_lista RPAREN
    (48) sentencia_booleana -> . LPAREN operador_comparadores dato dato RPAREN
    (71) function -> . LPAREN DEFFUNCION nombre_funct internos RPAREN
    (72) function -> . LPAREN DEFFUNCION nombre_funct internos LPAREN if body RPAREN
    (89) dotimes -> . LPAREN DOTIMES ciclo body RPAREN
    (88) ciclo -> . LCOR VARIABLE ENTERO RCOR
    (33) valor -> . ENTERO
    (34) valor -> . FLOTANTE
    (35) valor -> . BOOLEAN
    (65) recur -> . LPAREN RECUR LPAREN INC dato RPAREN RPAREN
    (27) dato -> . STRING
    (28) dato -> . CHAR
    (29) dato -> . ENTERO
    (30) dato -> . FLOTANTE
    (31) dato -> . BOOLEAN
    (32) dato -> . VARIABLE

    LPAREN          shift and go to state 28
    NUMERAL         shift and go to state 31
    LCOR            shift and go to state 30
    L_LLAVE         shift and go to state 32
    IF              shift and go to state 33
    ENTERO          shift and go to state 35
    FLOTANTE        shift and go to state 36
    BOOLEAN         shift and go to state 37
    STRING          shift and go to state 34
    CHAR            shift and go to state 38
    VARIABLE        shift and go to state 29

    sentencia_booleana             shift and go to state 21
    body                           shift and go to state 131
    instrucciones                  shift and go to state 126
    asignacion                     shift and go to state 2
    impresion                      shift and go to state 3
    operacion_aritmetica           shift and go to state 4
    conjuntos                      shift and go to state 5
    vector                         shift and go to state 6
    mapa                           shift and go to state 7
    if                             shift and go to state 8
    do                             shift and go to state 9
    if_do                          shift and go to state 10
    when                           shift and go to state 11
    defn                           shift and go to state 12
    defn_with_return               shift and go to state 13
    operacionesLogicas             shift and go to state 14
    sentenciaLoopRecur             shift and go to state 15
    cond_                          shift and go to state 16
    cond_else                      shift and go to state 17
    doseq                          shift and go to state 18
    case_expression                shift and go to state 19
    lista                          shift and go to state 20
    function                       shift and go to state 22
    dotimes                        shift and go to state 23
    ciclo                          shift and go to state 24
    valor                          shift and go to state 25
    recur                          shift and go to state 26
    dato                           shift and go to state 27

state 92

    (104) defn -> LPAREN DEFFUNCION VARIABLE . LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN
    (106) defn_with_return -> LPAREN DEFFUNCION VARIABLE . LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN defn_return
    (63) nombre_funct -> VARIABLE .

  ! shift/reduce conflict for LCOR resolved as shift
    LCOR            shift and go to state 132
    STRING          reduce using rule 63 (nombre_funct -> VARIABLE .)
    LPAREN          reduce using rule 63 (nombre_funct -> VARIABLE .)
    NUMERAL         reduce using rule 63 (nombre_funct -> VARIABLE .)
    L_LLAVE         reduce using rule 63 (nombre_funct -> VARIABLE .)
    IF              reduce using rule 63 (nombre_funct -> VARIABLE .)
    ENTERO          reduce using rule 63 (nombre_funct -> VARIABLE .)
    FLOTANTE        reduce using rule 63 (nombre_funct -> VARIABLE .)
    BOOLEAN         reduce using rule 63 (nombre_funct -> VARIABLE .)
    CHAR            reduce using rule 63 (nombre_funct -> VARIABLE .)
    VARIABLE        reduce using rule 63 (nombre_funct -> VARIABLE .)

  ! LCOR            [ reduce using rule 63 (nombre_funct -> VARIABLE .) ]


state 93

    (105) defn -> LPAREN DEFFUNCION INCREASE . LCOR VARIABLE RCOR operacionesLogicas RPAREN
    (107) defn_with_return -> LPAREN DEFFUNCION INCREASE . LCOR VARIABLE RCOR operacionesLogicas RPAREN defn_return

    LCOR            shift and go to state 133


state 94

    (71) function -> LPAREN DEFFUNCION nombre_funct . internos RPAREN
    (72) function -> LPAREN DEFFUNCION nombre_funct . internos LPAREN if body RPAREN
    (66) internos -> . description
    (67) internos -> . argumments
    (68) internos -> . body
    (69) internos -> . argumments body
    (70) internos -> . description argumments body
    (62) description -> . STRING
    (61) argumments -> . LCOR argumentos_lista RCOR
    (64) body -> . instrucciones
    (1) instrucciones -> . asignacion
    (2) instrucciones -> . impresion
    (3) instrucciones -> . operacion_aritmetica
    (4) instrucciones -> . conjuntos
    (5) instrucciones -> . vector
    (6) instrucciones -> . mapa
    (7) instrucciones -> . if
    (8) instrucciones -> . do
    (9) instrucciones -> . if_do
    (10) instrucciones -> . when
    (11) instrucciones -> . defn
    (12) instrucciones -> . defn_with_return
    (13) instrucciones -> . operacionesLogicas
    (14) instrucciones -> . sentenciaLoopRecur
    (15) instrucciones -> . cond_
    (16) instrucciones -> . cond_else
    (17) instrucciones -> . doseq
    (18) instrucciones -> . case_expression
    (19) instrucciones -> . lista
    (20) instrucciones -> . sentencia_booleana
    (21) instrucciones -> . function
    (22) instrucciones -> . dotimes
    (23) instrucciones -> . ciclo
    (24) instrucciones -> . valor
    (25) instrucciones -> . recur
    (26) instrucciones -> . dato
    (46) asignacion -> . LPAREN DEFICION VARIABLE dato RPAREN
    (47) asignacion -> . LPAREN LET LCOR VARIABLE dato RCOR RPAREN
    (75) impresion -> . LPAREN IMPRIMIR info_imprimir RPAREN
    (91) operacion_aritmetica -> . LPAREN operador_aritmetico dato dato RPAREN
    (111) conjuntos -> . NUMERAL L_LLAVE expresionConjuntoEnteros R_LLAVE
    (112) conjuntos -> . NUMERAL L_LLAVE expresionConjuntoDouble R_LLAVE
    (113) conjuntos -> . NUMERAL L_LLAVE expresionConjuntoString R_LLAVE
    (78) vector -> . LCOR secuencia_v RCOR
    (81) mapa -> . L_LLAVE secuencia_mapa R_LLAVE
    (82) if -> . IF sentencia_booleana
    (83) if -> . IF sentencia_booleana recur
    (84) if -> . LPAREN IF instrucciones body RPAREN
    (85) do -> . LPAREN DO instrucciones RPAREN
    (86) if_do -> . LPAREN if do RPAREN
    (87) when -> . LPAREN WHEN sentencia_booleana body RPAREN
    (104) defn -> . LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN
    (105) defn -> . LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN
    (106) defn_with_return -> . LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN defn_return
    (107) defn_with_return -> . LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN defn_return
    (90) operacionesLogicas -> . LPAREN if recur VARIABLE RPAREN RPAREN
    (114) sentenciaLoopRecur -> . LPAREN LOOP argumments LPAREN if dato RPAREN RPAREN
    (50) cond_ -> . LPAREN COND linecondition linecondition RPAREN
    (51) cond_else -> . LPAREN COND linecondition linecondition DOSPUNTOS ELSE impresion RPAREN
    (102) doseq -> . LPAREN DOSEQ doseq_args impresion RPAREN
    (103) doseq -> . LPAREN DOSEQ doseq_args LPAREN doseq_prn RPAREN RPAREN
    (56) case_expression -> . LPAREN CASE dato case impresion RPAREN
    (57) case_expression -> . LPAREN CASE dato case DOSPUNTOS ELSE STRING RPAREN
    (60) lista -> . LPAREN LIST argumentos_lista RPAREN
    (48) sentencia_booleana -> . LPAREN operador_comparadores dato dato RPAREN
    (71) function -> . LPAREN DEFFUNCION nombre_funct internos RPAREN
    (72) function -> . LPAREN DEFFUNCION nombre_funct internos LPAREN if body RPAREN
    (89) dotimes -> . LPAREN DOTIMES ciclo body RPAREN
    (88) ciclo -> . LCOR VARIABLE ENTERO RCOR
    (33) valor -> . ENTERO
    (34) valor -> . FLOTANTE
    (35) valor -> . BOOLEAN
    (65) recur -> . LPAREN RECUR LPAREN INC dato RPAREN RPAREN
    (27) dato -> . STRING
    (28) dato -> . CHAR
    (29) dato -> . ENTERO
    (30) dato -> . FLOTANTE
    (31) dato -> . BOOLEAN
    (32) dato -> . VARIABLE

    STRING          shift and go to state 138
    LCOR            shift and go to state 139
    LPAREN          shift and go to state 28
    NUMERAL         shift and go to state 31
    L_LLAVE         shift and go to state 32
    IF              shift and go to state 33
    ENTERO          shift and go to state 35
    FLOTANTE        shift and go to state 36
    BOOLEAN         shift and go to state 37
    CHAR            shift and go to state 38
    VARIABLE        shift and go to state 29

    internos                       shift and go to state 134
    if                             shift and go to state 8
    body                           shift and go to state 135
    description                    shift and go to state 136
    argumments                     shift and go to state 137
    instrucciones                  shift and go to state 126
    asignacion                     shift and go to state 2
    impresion                      shift and go to state 3
    operacion_aritmetica           shift and go to state 4
    conjuntos                      shift and go to state 5
    vector                         shift and go to state 6
    mapa                           shift and go to state 7
    do                             shift and go to state 9
    if_do                          shift and go to state 10
    when                           shift and go to state 11
    defn                           shift and go to state 12
    defn_with_return               shift and go to state 13
    operacionesLogicas             shift and go to state 14
    sentenciaLoopRecur             shift and go to state 15
    cond_                          shift and go to state 16
    cond_else                      shift and go to state 17
    doseq                          shift and go to state 18
    case_expression                shift and go to state 19
    lista                          shift and go to state 20
    sentencia_booleana             shift and go to state 21
    function                       shift and go to state 22
    dotimes                        shift and go to state 23
    ciclo                          shift and go to state 24
    valor                          shift and go to state 25
    recur                          shift and go to state 26
    dato                           shift and go to state 27

state 95

    (114) sentenciaLoopRecur -> LPAREN LOOP argumments . LPAREN if dato RPAREN RPAREN

    LPAREN          shift and go to state 140


state 96

    (61) argumments -> LCOR . argumentos_lista RCOR
    (58) argumentos_lista -> . dato
    (59) argumentos_lista -> . dato argumentos_lista
    (27) dato -> . STRING
    (28) dato -> . CHAR
    (29) dato -> . ENTERO
    (30) dato -> . FLOTANTE
    (31) dato -> . BOOLEAN
    (32) dato -> . VARIABLE

    STRING          shift and go to state 34
    CHAR            shift and go to state 38
    ENTERO          shift and go to state 69
    FLOTANTE        shift and go to state 71
    BOOLEAN         shift and go to state 72
    VARIABLE        shift and go to state 29

    argumentos_lista               shift and go to state 141
    dato                           shift and go to state 103

state 97

    (50) cond_ -> LPAREN COND linecondition . linecondition RPAREN
    (51) cond_else -> LPAREN COND linecondition . linecondition DOSPUNTOS ELSE impresion RPAREN
    (49) linecondition -> . sentencia_booleana impresion
    (48) sentencia_booleana -> . LPAREN operador_comparadores dato dato RPAREN

    LPAREN          shift and go to state 77

    linecondition                  shift and go to state 142
    sentencia_booleana             shift and go to state 98

state 98

    (49) linecondition -> sentencia_booleana . impresion
    (75) impresion -> . LPAREN IMPRIMIR info_imprimir RPAREN

    LPAREN          shift and go to state 144

    impresion                      shift and go to state 143

state 99

    (102) doseq -> LPAREN DOSEQ doseq_args . impresion RPAREN
    (103) doseq -> LPAREN DOSEQ doseq_args . LPAREN doseq_prn RPAREN RPAREN
    (75) impresion -> . LPAREN IMPRIMIR info_imprimir RPAREN

    LPAREN          shift and go to state 145

    impresion                      shift and go to state 146

state 100

    (92) doseq_args -> LCOR . dato LPAREN RANGE dato RPAREN RCOR
    (93) doseq_args -> LCOR . dato conjuntos RCOR
    (94) doseq_args -> LCOR . dato vector dato vector RCOR
    (95) doseq_args -> LCOR . vector conjuntos RCOR
    (96) doseq_args -> LCOR . dato vector RCOR
    (27) dato -> . STRING
    (28) dato -> . CHAR
    (29) dato -> . ENTERO
    (30) dato -> . FLOTANTE
    (31) dato -> . BOOLEAN
    (32) dato -> . VARIABLE
    (78) vector -> . LCOR secuencia_v RCOR

    STRING          shift and go to state 34
    CHAR            shift and go to state 38
    ENTERO          shift and go to state 69
    FLOTANTE        shift and go to state 71
    BOOLEAN         shift and go to state 72
    VARIABLE        shift and go to state 29
    LCOR            shift and go to state 147

    dato                           shift and go to state 148
    vector                         shift and go to state 149

state 101

    (56) case_expression -> LPAREN CASE dato . case impresion RPAREN
    (57) case_expression -> LPAREN CASE dato . case DOSPUNTOS ELSE STRING RPAREN
    (52) case -> . dato impresion
    (53) case -> . dato STRING
    (54) case -> . dato impresion case
    (55) case -> . dato STRING case
    (27) dato -> . STRING
    (28) dato -> . CHAR
    (29) dato -> . ENTERO
    (30) dato -> . FLOTANTE
    (31) dato -> . BOOLEAN
    (32) dato -> . VARIABLE

    STRING          shift and go to state 34
    CHAR            shift and go to state 38
    ENTERO          shift and go to state 69
    FLOTANTE        shift and go to state 71
    BOOLEAN         shift and go to state 72
    VARIABLE        shift and go to state 29

    dato                           shift and go to state 150
    case                           shift and go to state 151

state 102

    (60) lista -> LPAREN LIST argumentos_lista . RPAREN

    RPAREN          shift and go to state 152


state 103

    (58) argumentos_lista -> dato .
    (59) argumentos_lista -> dato . argumentos_lista
    (58) argumentos_lista -> . dato
    (59) argumentos_lista -> . dato argumentos_lista
    (27) dato -> . STRING
    (28) dato -> . CHAR
    (29) dato -> . ENTERO
    (30) dato -> . FLOTANTE
    (31) dato -> . BOOLEAN
    (32) dato -> . VARIABLE

    RPAREN          reduce using rule 58 (argumentos_lista -> dato .)
    RCOR            reduce using rule 58 (argumentos_lista -> dato .)
    STRING          shift and go to state 34
    CHAR            shift and go to state 38
    ENTERO          shift and go to state 69
    FLOTANTE        shift and go to state 71
    BOOLEAN         shift and go to state 72
    VARIABLE        shift and go to state 29

    dato                           shift and go to state 103
    argumentos_lista               shift and go to state 153

state 104

    (48) sentencia_booleana -> LPAREN operador_comparadores dato . dato RPAREN
    (27) dato -> . STRING
    (28) dato -> . CHAR
    (29) dato -> . ENTERO
    (30) dato -> . FLOTANTE
    (31) dato -> . BOOLEAN
    (32) dato -> . VARIABLE

    STRING          shift and go to state 34
    CHAR            shift and go to state 38
    ENTERO          shift and go to state 69
    FLOTANTE        shift and go to state 71
    BOOLEAN         shift and go to state 72
    VARIABLE        shift and go to state 29

    dato                           shift and go to state 154

state 105

    (89) dotimes -> LPAREN DOTIMES ciclo . body RPAREN
    (64) body -> . instrucciones
    (1) instrucciones -> . asignacion
    (2) instrucciones -> . impresion
    (3) instrucciones -> . operacion_aritmetica
    (4) instrucciones -> . conjuntos
    (5) instrucciones -> . vector
    (6) instrucciones -> . mapa
    (7) instrucciones -> . if
    (8) instrucciones -> . do
    (9) instrucciones -> . if_do
    (10) instrucciones -> . when
    (11) instrucciones -> . defn
    (12) instrucciones -> . defn_with_return
    (13) instrucciones -> . operacionesLogicas
    (14) instrucciones -> . sentenciaLoopRecur
    (15) instrucciones -> . cond_
    (16) instrucciones -> . cond_else
    (17) instrucciones -> . doseq
    (18) instrucciones -> . case_expression
    (19) instrucciones -> . lista
    (20) instrucciones -> . sentencia_booleana
    (21) instrucciones -> . function
    (22) instrucciones -> . dotimes
    (23) instrucciones -> . ciclo
    (24) instrucciones -> . valor
    (25) instrucciones -> . recur
    (26) instrucciones -> . dato
    (46) asignacion -> . LPAREN DEFICION VARIABLE dato RPAREN
    (47) asignacion -> . LPAREN LET LCOR VARIABLE dato RCOR RPAREN
    (75) impresion -> . LPAREN IMPRIMIR info_imprimir RPAREN
    (91) operacion_aritmetica -> . LPAREN operador_aritmetico dato dato RPAREN
    (111) conjuntos -> . NUMERAL L_LLAVE expresionConjuntoEnteros R_LLAVE
    (112) conjuntos -> . NUMERAL L_LLAVE expresionConjuntoDouble R_LLAVE
    (113) conjuntos -> . NUMERAL L_LLAVE expresionConjuntoString R_LLAVE
    (78) vector -> . LCOR secuencia_v RCOR
    (81) mapa -> . L_LLAVE secuencia_mapa R_LLAVE
    (82) if -> . IF sentencia_booleana
    (83) if -> . IF sentencia_booleana recur
    (84) if -> . LPAREN IF instrucciones body RPAREN
    (85) do -> . LPAREN DO instrucciones RPAREN
    (86) if_do -> . LPAREN if do RPAREN
    (87) when -> . LPAREN WHEN sentencia_booleana body RPAREN
    (104) defn -> . LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN
    (105) defn -> . LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN
    (106) defn_with_return -> . LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN defn_return
    (107) defn_with_return -> . LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN defn_return
    (90) operacionesLogicas -> . LPAREN if recur VARIABLE RPAREN RPAREN
    (114) sentenciaLoopRecur -> . LPAREN LOOP argumments LPAREN if dato RPAREN RPAREN
    (50) cond_ -> . LPAREN COND linecondition linecondition RPAREN
    (51) cond_else -> . LPAREN COND linecondition linecondition DOSPUNTOS ELSE impresion RPAREN
    (102) doseq -> . LPAREN DOSEQ doseq_args impresion RPAREN
    (103) doseq -> . LPAREN DOSEQ doseq_args LPAREN doseq_prn RPAREN RPAREN
    (56) case_expression -> . LPAREN CASE dato case impresion RPAREN
    (57) case_expression -> . LPAREN CASE dato case DOSPUNTOS ELSE STRING RPAREN
    (60) lista -> . LPAREN LIST argumentos_lista RPAREN
    (48) sentencia_booleana -> . LPAREN operador_comparadores dato dato RPAREN
    (71) function -> . LPAREN DEFFUNCION nombre_funct internos RPAREN
    (72) function -> . LPAREN DEFFUNCION nombre_funct internos LPAREN if body RPAREN
    (89) dotimes -> . LPAREN DOTIMES ciclo body RPAREN
    (88) ciclo -> . LCOR VARIABLE ENTERO RCOR
    (33) valor -> . ENTERO
    (34) valor -> . FLOTANTE
    (35) valor -> . BOOLEAN
    (65) recur -> . LPAREN RECUR LPAREN INC dato RPAREN RPAREN
    (27) dato -> . STRING
    (28) dato -> . CHAR
    (29) dato -> . ENTERO
    (30) dato -> . FLOTANTE
    (31) dato -> . BOOLEAN
    (32) dato -> . VARIABLE

    LPAREN          shift and go to state 28
    NUMERAL         shift and go to state 31
    LCOR            shift and go to state 30
    L_LLAVE         shift and go to state 32
    IF              shift and go to state 33
    ENTERO          shift and go to state 35
    FLOTANTE        shift and go to state 36
    BOOLEAN         shift and go to state 37
    STRING          shift and go to state 34
    CHAR            shift and go to state 38
    VARIABLE        shift and go to state 29

    ciclo                          shift and go to state 24
    body                           shift and go to state 155
    instrucciones                  shift and go to state 126
    asignacion                     shift and go to state 2
    impresion                      shift and go to state 3
    operacion_aritmetica           shift and go to state 4
    conjuntos                      shift and go to state 5
    vector                         shift and go to state 6
    mapa                           shift and go to state 7
    if                             shift and go to state 8
    do                             shift and go to state 9
    if_do                          shift and go to state 10
    when                           shift and go to state 11
    defn                           shift and go to state 12
    defn_with_return               shift and go to state 13
    operacionesLogicas             shift and go to state 14
    sentenciaLoopRecur             shift and go to state 15
    cond_                          shift and go to state 16
    cond_else                      shift and go to state 17
    doseq                          shift and go to state 18
    case_expression                shift and go to state 19
    lista                          shift and go to state 20
    sentencia_booleana             shift and go to state 21
    function                       shift and go to state 22
    dotimes                        shift and go to state 23
    valor                          shift and go to state 25
    recur                          shift and go to state 26
    dato                           shift and go to state 27

state 106

    (88) ciclo -> LCOR . VARIABLE ENTERO RCOR

    VARIABLE        shift and go to state 156


state 107

    (65) recur -> LPAREN RECUR LPAREN . INC dato RPAREN RPAREN

    INC             shift and go to state 157


state 108

    (78) vector -> LCOR secuencia_v RCOR .

    $end            reduce using rule 78 (vector -> LCOR secuencia_v RCOR .)
    LPAREN          reduce using rule 78 (vector -> LCOR secuencia_v RCOR .)
    NUMERAL         reduce using rule 78 (vector -> LCOR secuencia_v RCOR .)
    LCOR            reduce using rule 78 (vector -> LCOR secuencia_v RCOR .)
    L_LLAVE         reduce using rule 78 (vector -> LCOR secuencia_v RCOR .)
    IF              reduce using rule 78 (vector -> LCOR secuencia_v RCOR .)
    ENTERO          reduce using rule 78 (vector -> LCOR secuencia_v RCOR .)
    FLOTANTE        reduce using rule 78 (vector -> LCOR secuencia_v RCOR .)
    BOOLEAN         reduce using rule 78 (vector -> LCOR secuencia_v RCOR .)
    STRING          reduce using rule 78 (vector -> LCOR secuencia_v RCOR .)
    CHAR            reduce using rule 78 (vector -> LCOR secuencia_v RCOR .)
    VARIABLE        reduce using rule 78 (vector -> LCOR secuencia_v RCOR .)
    RPAREN          reduce using rule 78 (vector -> LCOR secuencia_v RCOR .)
    RCOR            reduce using rule 78 (vector -> LCOR secuencia_v RCOR .)


state 109

    (88) ciclo -> LCOR VARIABLE ENTERO . RCOR

    RCOR            shift and go to state 158


state 110

    (77) secuencia_v -> dato secuencia_v .

    RCOR            reduce using rule 77 (secuencia_v -> dato secuencia_v .)


state 111

    (111) conjuntos -> NUMERAL L_LLAVE expresionConjuntoEnteros . R_LLAVE

    R_LLAVE         shift and go to state 159


state 112

    (112) conjuntos -> NUMERAL L_LLAVE expresionConjuntoDouble . R_LLAVE

    R_LLAVE         shift and go to state 160


state 113

    (113) conjuntos -> NUMERAL L_LLAVE expresionConjuntoString . R_LLAVE

    R_LLAVE         shift and go to state 161


state 114

    (115) expresionConjuntoEnteros -> ENTERO .
    (116) expresionConjuntoEnteros -> ENTERO . expresionConjuntoEnteros
    (115) expresionConjuntoEnteros -> . ENTERO
    (116) expresionConjuntoEnteros -> . ENTERO expresionConjuntoEnteros

    R_LLAVE         reduce using rule 115 (expresionConjuntoEnteros -> ENTERO .)
    ENTERO          shift and go to state 114

    expresionConjuntoEnteros       shift and go to state 162

state 115

    (117) expresionConjuntoDouble -> FLOTANTE .
    (118) expresionConjuntoDouble -> FLOTANTE . expresionConjuntoDouble
    (117) expresionConjuntoDouble -> . FLOTANTE
    (118) expresionConjuntoDouble -> . FLOTANTE expresionConjuntoDouble

    R_LLAVE         reduce using rule 117 (expresionConjuntoDouble -> FLOTANTE .)
    FLOTANTE        shift and go to state 115

    expresionConjuntoDouble        shift and go to state 163

state 116

    (119) expresionConjuntoString -> STRING .
    (120) expresionConjuntoString -> STRING . expresionConjuntoString
    (119) expresionConjuntoString -> . STRING
    (120) expresionConjuntoString -> . STRING expresionConjuntoString

    R_LLAVE         reduce using rule 119 (expresionConjuntoString -> STRING .)
    STRING          shift and go to state 116

    expresionConjuntoString        shift and go to state 164

state 117

    (81) mapa -> L_LLAVE secuencia_mapa R_LLAVE .

    $end            reduce using rule 81 (mapa -> L_LLAVE secuencia_mapa R_LLAVE .)
    LPAREN          reduce using rule 81 (mapa -> L_LLAVE secuencia_mapa R_LLAVE .)
    NUMERAL         reduce using rule 81 (mapa -> L_LLAVE secuencia_mapa R_LLAVE .)
    LCOR            reduce using rule 81 (mapa -> L_LLAVE secuencia_mapa R_LLAVE .)
    L_LLAVE         reduce using rule 81 (mapa -> L_LLAVE secuencia_mapa R_LLAVE .)
    IF              reduce using rule 81 (mapa -> L_LLAVE secuencia_mapa R_LLAVE .)
    ENTERO          reduce using rule 81 (mapa -> L_LLAVE secuencia_mapa R_LLAVE .)
    FLOTANTE        reduce using rule 81 (mapa -> L_LLAVE secuencia_mapa R_LLAVE .)
    BOOLEAN         reduce using rule 81 (mapa -> L_LLAVE secuencia_mapa R_LLAVE .)
    STRING          reduce using rule 81 (mapa -> L_LLAVE secuencia_mapa R_LLAVE .)
    CHAR            reduce using rule 81 (mapa -> L_LLAVE secuencia_mapa R_LLAVE .)
    VARIABLE        reduce using rule 81 (mapa -> L_LLAVE secuencia_mapa R_LLAVE .)
    RPAREN          reduce using rule 81 (mapa -> L_LLAVE secuencia_mapa R_LLAVE .)


state 118

    (79) secuencia_mapa -> DOSPUNTOS VARIABLE . dato
    (80) secuencia_mapa -> DOSPUNTOS VARIABLE . dato secuencia_mapa
    (27) dato -> . STRING
    (28) dato -> . CHAR
    (29) dato -> . ENTERO
    (30) dato -> . FLOTANTE
    (31) dato -> . BOOLEAN
    (32) dato -> . VARIABLE

    STRING          shift and go to state 34
    CHAR            shift and go to state 38
    ENTERO          shift and go to state 69
    FLOTANTE        shift and go to state 71
    BOOLEAN         shift and go to state 72
    VARIABLE        shift and go to state 29

    dato                           shift and go to state 165

state 119

    (83) if -> IF sentencia_booleana recur .

    $end            reduce using rule 83 (if -> IF sentencia_booleana recur .)
    LPAREN          reduce using rule 83 (if -> IF sentencia_booleana recur .)
    NUMERAL         reduce using rule 83 (if -> IF sentencia_booleana recur .)
    LCOR            reduce using rule 83 (if -> IF sentencia_booleana recur .)
    L_LLAVE         reduce using rule 83 (if -> IF sentencia_booleana recur .)
    IF              reduce using rule 83 (if -> IF sentencia_booleana recur .)
    ENTERO          reduce using rule 83 (if -> IF sentencia_booleana recur .)
    FLOTANTE        reduce using rule 83 (if -> IF sentencia_booleana recur .)
    BOOLEAN         reduce using rule 83 (if -> IF sentencia_booleana recur .)
    STRING          reduce using rule 83 (if -> IF sentencia_booleana recur .)
    CHAR            reduce using rule 83 (if -> IF sentencia_booleana recur .)
    VARIABLE        reduce using rule 83 (if -> IF sentencia_booleana recur .)
    RPAREN          reduce using rule 83 (if -> IF sentencia_booleana recur .)


state 120

    (65) recur -> LPAREN . RECUR LPAREN INC dato RPAREN RPAREN

    RECUR           shift and go to state 56


state 121

    (46) asignacion -> LPAREN DEFICION VARIABLE dato . RPAREN

    RPAREN          shift and go to state 166


state 122

    (47) asignacion -> LPAREN LET LCOR VARIABLE . dato RCOR RPAREN
    (27) dato -> . STRING
    (28) dato -> . CHAR
    (29) dato -> . ENTERO
    (30) dato -> . FLOTANTE
    (31) dato -> . BOOLEAN
    (32) dato -> . VARIABLE

    STRING          shift and go to state 34
    CHAR            shift and go to state 38
    ENTERO          shift and go to state 69
    FLOTANTE        shift and go to state 71
    BOOLEAN         shift and go to state 72
    VARIABLE        shift and go to state 29

    dato                           shift and go to state 167

state 123

    (75) impresion -> LPAREN IMPRIMIR info_imprimir RPAREN .

    $end            reduce using rule 75 (impresion -> LPAREN IMPRIMIR info_imprimir RPAREN .)
    LPAREN          reduce using rule 75 (impresion -> LPAREN IMPRIMIR info_imprimir RPAREN .)
    NUMERAL         reduce using rule 75 (impresion -> LPAREN IMPRIMIR info_imprimir RPAREN .)
    LCOR            reduce using rule 75 (impresion -> LPAREN IMPRIMIR info_imprimir RPAREN .)
    L_LLAVE         reduce using rule 75 (impresion -> LPAREN IMPRIMIR info_imprimir RPAREN .)
    IF              reduce using rule 75 (impresion -> LPAREN IMPRIMIR info_imprimir RPAREN .)
    ENTERO          reduce using rule 75 (impresion -> LPAREN IMPRIMIR info_imprimir RPAREN .)
    FLOTANTE        reduce using rule 75 (impresion -> LPAREN IMPRIMIR info_imprimir RPAREN .)
    BOOLEAN         reduce using rule 75 (impresion -> LPAREN IMPRIMIR info_imprimir RPAREN .)
    STRING          reduce using rule 75 (impresion -> LPAREN IMPRIMIR info_imprimir RPAREN .)
    CHAR            reduce using rule 75 (impresion -> LPAREN IMPRIMIR info_imprimir RPAREN .)
    VARIABLE        reduce using rule 75 (impresion -> LPAREN IMPRIMIR info_imprimir RPAREN .)
    RPAREN          reduce using rule 75 (impresion -> LPAREN IMPRIMIR info_imprimir RPAREN .)
    DOSPUNTOS       reduce using rule 75 (impresion -> LPAREN IMPRIMIR info_imprimir RPAREN .)


state 124

    (74) info_imprimir -> dato info_imprimir .

    RPAREN          reduce using rule 74 (info_imprimir -> dato info_imprimir .)


state 125

    (91) operacion_aritmetica -> LPAREN operador_aritmetico dato dato . RPAREN

    RPAREN          shift and go to state 168


state 126

    (64) body -> instrucciones .

    RPAREN          reduce using rule 64 (body -> instrucciones .)
    LPAREN          reduce using rule 64 (body -> instrucciones .)


state 127

    (84) if -> LPAREN IF instrucciones body . RPAREN

    RPAREN          shift and go to state 169


state 128

    (85) do -> LPAREN DO instrucciones RPAREN .

    $end            reduce using rule 85 (do -> LPAREN DO instrucciones RPAREN .)
    LPAREN          reduce using rule 85 (do -> LPAREN DO instrucciones RPAREN .)
    NUMERAL         reduce using rule 85 (do -> LPAREN DO instrucciones RPAREN .)
    LCOR            reduce using rule 85 (do -> LPAREN DO instrucciones RPAREN .)
    L_LLAVE         reduce using rule 85 (do -> LPAREN DO instrucciones RPAREN .)
    IF              reduce using rule 85 (do -> LPAREN DO instrucciones RPAREN .)
    ENTERO          reduce using rule 85 (do -> LPAREN DO instrucciones RPAREN .)
    FLOTANTE        reduce using rule 85 (do -> LPAREN DO instrucciones RPAREN .)
    BOOLEAN         reduce using rule 85 (do -> LPAREN DO instrucciones RPAREN .)
    STRING          reduce using rule 85 (do -> LPAREN DO instrucciones RPAREN .)
    CHAR            reduce using rule 85 (do -> LPAREN DO instrucciones RPAREN .)
    VARIABLE        reduce using rule 85 (do -> LPAREN DO instrucciones RPAREN .)
    RPAREN          reduce using rule 85 (do -> LPAREN DO instrucciones RPAREN .)


state 129

    (86) if_do -> LPAREN if do RPAREN .

    $end            reduce using rule 86 (if_do -> LPAREN if do RPAREN .)
    LPAREN          reduce using rule 86 (if_do -> LPAREN if do RPAREN .)
    NUMERAL         reduce using rule 86 (if_do -> LPAREN if do RPAREN .)
    LCOR            reduce using rule 86 (if_do -> LPAREN if do RPAREN .)
    L_LLAVE         reduce using rule 86 (if_do -> LPAREN if do RPAREN .)
    IF              reduce using rule 86 (if_do -> LPAREN if do RPAREN .)
    ENTERO          reduce using rule 86 (if_do -> LPAREN if do RPAREN .)
    FLOTANTE        reduce using rule 86 (if_do -> LPAREN if do RPAREN .)
    BOOLEAN         reduce using rule 86 (if_do -> LPAREN if do RPAREN .)
    STRING          reduce using rule 86 (if_do -> LPAREN if do RPAREN .)
    CHAR            reduce using rule 86 (if_do -> LPAREN if do RPAREN .)
    VARIABLE        reduce using rule 86 (if_do -> LPAREN if do RPAREN .)
    RPAREN          reduce using rule 86 (if_do -> LPAREN if do RPAREN .)


state 130

    (90) operacionesLogicas -> LPAREN if recur VARIABLE . RPAREN RPAREN

    RPAREN          shift and go to state 170


state 131

    (87) when -> LPAREN WHEN sentencia_booleana body . RPAREN

    RPAREN          shift and go to state 171


state 132

    (104) defn -> LPAREN DEFFUNCION VARIABLE LCOR . VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN
    (106) defn_with_return -> LPAREN DEFFUNCION VARIABLE LCOR . VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN defn_return

    VARIABLE        shift and go to state 172


state 133

    (105) defn -> LPAREN DEFFUNCION INCREASE LCOR . VARIABLE RCOR operacionesLogicas RPAREN
    (107) defn_with_return -> LPAREN DEFFUNCION INCREASE LCOR . VARIABLE RCOR operacionesLogicas RPAREN defn_return

    VARIABLE        shift and go to state 173


state 134

    (71) function -> LPAREN DEFFUNCION nombre_funct internos . RPAREN
    (72) function -> LPAREN DEFFUNCION nombre_funct internos . LPAREN if body RPAREN

    RPAREN          shift and go to state 175
    LPAREN          shift and go to state 174


state 135

    (68) internos -> body .

    RPAREN          reduce using rule 68 (internos -> body .)
    LPAREN          reduce using rule 68 (internos -> body .)


state 136

    (66) internos -> description .
    (70) internos -> description . argumments body
    (61) argumments -> . LCOR argumentos_lista RCOR

    RPAREN          reduce using rule 66 (internos -> description .)
    LPAREN          reduce using rule 66 (internos -> description .)
    LCOR            shift and go to state 96

    argumments                     shift and go to state 176

state 137

    (67) internos -> argumments .
    (69) internos -> argumments . body
    (64) body -> . instrucciones
    (1) instrucciones -> . asignacion
    (2) instrucciones -> . impresion
    (3) instrucciones -> . operacion_aritmetica
    (4) instrucciones -> . conjuntos
    (5) instrucciones -> . vector
    (6) instrucciones -> . mapa
    (7) instrucciones -> . if
    (8) instrucciones -> . do
    (9) instrucciones -> . if_do
    (10) instrucciones -> . when
    (11) instrucciones -> . defn
    (12) instrucciones -> . defn_with_return
    (13) instrucciones -> . operacionesLogicas
    (14) instrucciones -> . sentenciaLoopRecur
    (15) instrucciones -> . cond_
    (16) instrucciones -> . cond_else
    (17) instrucciones -> . doseq
    (18) instrucciones -> . case_expression
    (19) instrucciones -> . lista
    (20) instrucciones -> . sentencia_booleana
    (21) instrucciones -> . function
    (22) instrucciones -> . dotimes
    (23) instrucciones -> . ciclo
    (24) instrucciones -> . valor
    (25) instrucciones -> . recur
    (26) instrucciones -> . dato
    (46) asignacion -> . LPAREN DEFICION VARIABLE dato RPAREN
    (47) asignacion -> . LPAREN LET LCOR VARIABLE dato RCOR RPAREN
    (75) impresion -> . LPAREN IMPRIMIR info_imprimir RPAREN
    (91) operacion_aritmetica -> . LPAREN operador_aritmetico dato dato RPAREN
    (111) conjuntos -> . NUMERAL L_LLAVE expresionConjuntoEnteros R_LLAVE
    (112) conjuntos -> . NUMERAL L_LLAVE expresionConjuntoDouble R_LLAVE
    (113) conjuntos -> . NUMERAL L_LLAVE expresionConjuntoString R_LLAVE
    (78) vector -> . LCOR secuencia_v RCOR
    (81) mapa -> . L_LLAVE secuencia_mapa R_LLAVE
    (82) if -> . IF sentencia_booleana
    (83) if -> . IF sentencia_booleana recur
    (84) if -> . LPAREN IF instrucciones body RPAREN
    (85) do -> . LPAREN DO instrucciones RPAREN
    (86) if_do -> . LPAREN if do RPAREN
    (87) when -> . LPAREN WHEN sentencia_booleana body RPAREN
    (104) defn -> . LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN
    (105) defn -> . LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN
    (106) defn_with_return -> . LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN defn_return
    (107) defn_with_return -> . LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN defn_return
    (90) operacionesLogicas -> . LPAREN if recur VARIABLE RPAREN RPAREN
    (114) sentenciaLoopRecur -> . LPAREN LOOP argumments LPAREN if dato RPAREN RPAREN
    (50) cond_ -> . LPAREN COND linecondition linecondition RPAREN
    (51) cond_else -> . LPAREN COND linecondition linecondition DOSPUNTOS ELSE impresion RPAREN
    (102) doseq -> . LPAREN DOSEQ doseq_args impresion RPAREN
    (103) doseq -> . LPAREN DOSEQ doseq_args LPAREN doseq_prn RPAREN RPAREN
    (56) case_expression -> . LPAREN CASE dato case impresion RPAREN
    (57) case_expression -> . LPAREN CASE dato case DOSPUNTOS ELSE STRING RPAREN
    (60) lista -> . LPAREN LIST argumentos_lista RPAREN
    (48) sentencia_booleana -> . LPAREN operador_comparadores dato dato RPAREN
    (71) function -> . LPAREN DEFFUNCION nombre_funct internos RPAREN
    (72) function -> . LPAREN DEFFUNCION nombre_funct internos LPAREN if body RPAREN
    (89) dotimes -> . LPAREN DOTIMES ciclo body RPAREN
    (88) ciclo -> . LCOR VARIABLE ENTERO RCOR
    (33) valor -> . ENTERO
    (34) valor -> . FLOTANTE
    (35) valor -> . BOOLEAN
    (65) recur -> . LPAREN RECUR LPAREN INC dato RPAREN RPAREN
    (27) dato -> . STRING
    (28) dato -> . CHAR
    (29) dato -> . ENTERO
    (30) dato -> . FLOTANTE
    (31) dato -> . BOOLEAN
    (32) dato -> . VARIABLE

  ! shift/reduce conflict for LPAREN resolved as shift
    RPAREN          reduce using rule 67 (internos -> argumments .)
    LPAREN          shift and go to state 28
    NUMERAL         shift and go to state 31
    LCOR            shift and go to state 30
    L_LLAVE         shift and go to state 32
    IF              shift and go to state 33
    ENTERO          shift and go to state 35
    FLOTANTE        shift and go to state 36
    BOOLEAN         shift and go to state 37
    STRING          shift and go to state 34
    CHAR            shift and go to state 38
    VARIABLE        shift and go to state 29

  ! LPAREN          [ reduce using rule 67 (internos -> argumments .) ]

    body                           shift and go to state 177
    instrucciones                  shift and go to state 126
    asignacion                     shift and go to state 2
    impresion                      shift and go to state 3
    operacion_aritmetica           shift and go to state 4
    conjuntos                      shift and go to state 5
    vector                         shift and go to state 6
    mapa                           shift and go to state 7
    if                             shift and go to state 8
    do                             shift and go to state 9
    if_do                          shift and go to state 10
    when                           shift and go to state 11
    defn                           shift and go to state 12
    defn_with_return               shift and go to state 13
    operacionesLogicas             shift and go to state 14
    sentenciaLoopRecur             shift and go to state 15
    cond_                          shift and go to state 16
    cond_else                      shift and go to state 17
    doseq                          shift and go to state 18
    case_expression                shift and go to state 19
    lista                          shift and go to state 20
    sentencia_booleana             shift and go to state 21
    function                       shift and go to state 22
    dotimes                        shift and go to state 23
    ciclo                          shift and go to state 24
    valor                          shift and go to state 25
    recur                          shift and go to state 26
    dato                           shift and go to state 27

state 138

    (62) description -> STRING .
    (27) dato -> STRING .

  ! reduce/reduce conflict for RPAREN resolved using rule 27 (dato -> STRING .)
  ! reduce/reduce conflict for LPAREN resolved using rule 27 (dato -> STRING .)
    LCOR            reduce using rule 62 (description -> STRING .)
    RPAREN          reduce using rule 27 (dato -> STRING .)
    LPAREN          reduce using rule 27 (dato -> STRING .)

  ! RPAREN          [ reduce using rule 62 (description -> STRING .) ]
  ! LPAREN          [ reduce using rule 62 (description -> STRING .) ]


state 139

    (61) argumments -> LCOR . argumentos_lista RCOR
    (78) vector -> LCOR . secuencia_v RCOR
    (88) ciclo -> LCOR . VARIABLE ENTERO RCOR
    (58) argumentos_lista -> . dato
    (59) argumentos_lista -> . dato argumentos_lista
    (76) secuencia_v -> . dato
    (77) secuencia_v -> . dato secuencia_v
    (27) dato -> . STRING
    (28) dato -> . CHAR
    (29) dato -> . ENTERO
    (30) dato -> . FLOTANTE
    (31) dato -> . BOOLEAN
    (32) dato -> . VARIABLE

    VARIABLE        shift and go to state 68
    STRING          shift and go to state 34
    CHAR            shift and go to state 38
    ENTERO          shift and go to state 69
    FLOTANTE        shift and go to state 71
    BOOLEAN         shift and go to state 72

    argumentos_lista               shift and go to state 141
    secuencia_v                    shift and go to state 67
    dato                           shift and go to state 178

state 140

    (114) sentenciaLoopRecur -> LPAREN LOOP argumments LPAREN . if dato RPAREN RPAREN
    (82) if -> . IF sentencia_booleana
    (83) if -> . IF sentencia_booleana recur
    (84) if -> . LPAREN IF instrucciones body RPAREN

    IF              shift and go to state 33
    LPAREN          shift and go to state 39

    if                             shift and go to state 179

state 141

    (61) argumments -> LCOR argumentos_lista . RCOR

    RCOR            shift and go to state 180


state 142

    (50) cond_ -> LPAREN COND linecondition linecondition . RPAREN
    (51) cond_else -> LPAREN COND linecondition linecondition . DOSPUNTOS ELSE impresion RPAREN

    RPAREN          shift and go to state 181
    DOSPUNTOS       shift and go to state 182


state 143

    (49) linecondition -> sentencia_booleana impresion .

    LPAREN          reduce using rule 49 (linecondition -> sentencia_booleana impresion .)
    RPAREN          reduce using rule 49 (linecondition -> sentencia_booleana impresion .)
    DOSPUNTOS       reduce using rule 49 (linecondition -> sentencia_booleana impresion .)


state 144

    (75) impresion -> LPAREN . IMPRIMIR info_imprimir RPAREN

    IMPRIMIR        shift and go to state 42


state 145

    (103) doseq -> LPAREN DOSEQ doseq_args LPAREN . doseq_prn RPAREN RPAREN
    (75) impresion -> LPAREN . IMPRIMIR info_imprimir RPAREN
    (99) doseq_prn -> . PRN LPAREN dato RPAREN
    (100) doseq_prn -> . PRN pnr_dato
    (101) doseq_prn -> . PRN operacion_aritmetica

    IMPRIMIR        shift and go to state 42
    PRN             shift and go to state 184

    doseq_prn                      shift and go to state 183

state 146

    (102) doseq -> LPAREN DOSEQ doseq_args impresion . RPAREN

    RPAREN          shift and go to state 185


state 147

    (78) vector -> LCOR . secuencia_v RCOR
    (76) secuencia_v -> . dato
    (77) secuencia_v -> . dato secuencia_v
    (27) dato -> . STRING
    (28) dato -> . CHAR
    (29) dato -> . ENTERO
    (30) dato -> . FLOTANTE
    (31) dato -> . BOOLEAN
    (32) dato -> . VARIABLE

    STRING          shift and go to state 34
    CHAR            shift and go to state 38
    ENTERO          shift and go to state 69
    FLOTANTE        shift and go to state 71
    BOOLEAN         shift and go to state 72
    VARIABLE        shift and go to state 29

    secuencia_v                    shift and go to state 67
    dato                           shift and go to state 70

state 148

    (92) doseq_args -> LCOR dato . LPAREN RANGE dato RPAREN RCOR
    (93) doseq_args -> LCOR dato . conjuntos RCOR
    (94) doseq_args -> LCOR dato . vector dato vector RCOR
    (96) doseq_args -> LCOR dato . vector RCOR
    (111) conjuntos -> . NUMERAL L_LLAVE expresionConjuntoEnteros R_LLAVE
    (112) conjuntos -> . NUMERAL L_LLAVE expresionConjuntoDouble R_LLAVE
    (113) conjuntos -> . NUMERAL L_LLAVE expresionConjuntoString R_LLAVE
    (78) vector -> . LCOR secuencia_v RCOR

    LPAREN          shift and go to state 186
    NUMERAL         shift and go to state 31
    LCOR            shift and go to state 147

    conjuntos                      shift and go to state 187
    vector                         shift and go to state 188

state 149

    (95) doseq_args -> LCOR vector . conjuntos RCOR
    (111) conjuntos -> . NUMERAL L_LLAVE expresionConjuntoEnteros R_LLAVE
    (112) conjuntos -> . NUMERAL L_LLAVE expresionConjuntoDouble R_LLAVE
    (113) conjuntos -> . NUMERAL L_LLAVE expresionConjuntoString R_LLAVE

    NUMERAL         shift and go to state 31

    conjuntos                      shift and go to state 189

state 150

    (52) case -> dato . impresion
    (53) case -> dato . STRING
    (54) case -> dato . impresion case
    (55) case -> dato . STRING case
    (75) impresion -> . LPAREN IMPRIMIR info_imprimir RPAREN

    STRING          shift and go to state 191
    LPAREN          shift and go to state 144

    impresion                      shift and go to state 190

state 151

    (56) case_expression -> LPAREN CASE dato case . impresion RPAREN
    (57) case_expression -> LPAREN CASE dato case . DOSPUNTOS ELSE STRING RPAREN
    (75) impresion -> . LPAREN IMPRIMIR info_imprimir RPAREN

    DOSPUNTOS       shift and go to state 193
    LPAREN          shift and go to state 144

    impresion                      shift and go to state 192

state 152

    (60) lista -> LPAREN LIST argumentos_lista RPAREN .

    $end            reduce using rule 60 (lista -> LPAREN LIST argumentos_lista RPAREN .)
    LPAREN          reduce using rule 60 (lista -> LPAREN LIST argumentos_lista RPAREN .)
    NUMERAL         reduce using rule 60 (lista -> LPAREN LIST argumentos_lista RPAREN .)
    LCOR            reduce using rule 60 (lista -> LPAREN LIST argumentos_lista RPAREN .)
    L_LLAVE         reduce using rule 60 (lista -> LPAREN LIST argumentos_lista RPAREN .)
    IF              reduce using rule 60 (lista -> LPAREN LIST argumentos_lista RPAREN .)
    ENTERO          reduce using rule 60 (lista -> LPAREN LIST argumentos_lista RPAREN .)
    FLOTANTE        reduce using rule 60 (lista -> LPAREN LIST argumentos_lista RPAREN .)
    BOOLEAN         reduce using rule 60 (lista -> LPAREN LIST argumentos_lista RPAREN .)
    STRING          reduce using rule 60 (lista -> LPAREN LIST argumentos_lista RPAREN .)
    CHAR            reduce using rule 60 (lista -> LPAREN LIST argumentos_lista RPAREN .)
    VARIABLE        reduce using rule 60 (lista -> LPAREN LIST argumentos_lista RPAREN .)
    RPAREN          reduce using rule 60 (lista -> LPAREN LIST argumentos_lista RPAREN .)


state 153

    (59) argumentos_lista -> dato argumentos_lista .

    RPAREN          reduce using rule 59 (argumentos_lista -> dato argumentos_lista .)
    RCOR            reduce using rule 59 (argumentos_lista -> dato argumentos_lista .)


state 154

    (48) sentencia_booleana -> LPAREN operador_comparadores dato dato . RPAREN

    RPAREN          shift and go to state 194


state 155

    (89) dotimes -> LPAREN DOTIMES ciclo body . RPAREN

    RPAREN          shift and go to state 195


state 156

    (88) ciclo -> LCOR VARIABLE . ENTERO RCOR

    ENTERO          shift and go to state 109


state 157

    (65) recur -> LPAREN RECUR LPAREN INC . dato RPAREN RPAREN
    (27) dato -> . STRING
    (28) dato -> . CHAR
    (29) dato -> . ENTERO
    (30) dato -> . FLOTANTE
    (31) dato -> . BOOLEAN
    (32) dato -> . VARIABLE

    STRING          shift and go to state 34
    CHAR            shift and go to state 38
    ENTERO          shift and go to state 69
    FLOTANTE        shift and go to state 71
    BOOLEAN         shift and go to state 72
    VARIABLE        shift and go to state 29

    dato                           shift and go to state 196

state 158

    (88) ciclo -> LCOR VARIABLE ENTERO RCOR .

    $end            reduce using rule 88 (ciclo -> LCOR VARIABLE ENTERO RCOR .)
    LPAREN          reduce using rule 88 (ciclo -> LCOR VARIABLE ENTERO RCOR .)
    NUMERAL         reduce using rule 88 (ciclo -> LCOR VARIABLE ENTERO RCOR .)
    LCOR            reduce using rule 88 (ciclo -> LCOR VARIABLE ENTERO RCOR .)
    L_LLAVE         reduce using rule 88 (ciclo -> LCOR VARIABLE ENTERO RCOR .)
    IF              reduce using rule 88 (ciclo -> LCOR VARIABLE ENTERO RCOR .)
    ENTERO          reduce using rule 88 (ciclo -> LCOR VARIABLE ENTERO RCOR .)
    FLOTANTE        reduce using rule 88 (ciclo -> LCOR VARIABLE ENTERO RCOR .)
    BOOLEAN         reduce using rule 88 (ciclo -> LCOR VARIABLE ENTERO RCOR .)
    STRING          reduce using rule 88 (ciclo -> LCOR VARIABLE ENTERO RCOR .)
    CHAR            reduce using rule 88 (ciclo -> LCOR VARIABLE ENTERO RCOR .)
    VARIABLE        reduce using rule 88 (ciclo -> LCOR VARIABLE ENTERO RCOR .)
    RPAREN          reduce using rule 88 (ciclo -> LCOR VARIABLE ENTERO RCOR .)


state 159

    (111) conjuntos -> NUMERAL L_LLAVE expresionConjuntoEnteros R_LLAVE .

    $end            reduce using rule 111 (conjuntos -> NUMERAL L_LLAVE expresionConjuntoEnteros R_LLAVE .)
    LPAREN          reduce using rule 111 (conjuntos -> NUMERAL L_LLAVE expresionConjuntoEnteros R_LLAVE .)
    NUMERAL         reduce using rule 111 (conjuntos -> NUMERAL L_LLAVE expresionConjuntoEnteros R_LLAVE .)
    LCOR            reduce using rule 111 (conjuntos -> NUMERAL L_LLAVE expresionConjuntoEnteros R_LLAVE .)
    L_LLAVE         reduce using rule 111 (conjuntos -> NUMERAL L_LLAVE expresionConjuntoEnteros R_LLAVE .)
    IF              reduce using rule 111 (conjuntos -> NUMERAL L_LLAVE expresionConjuntoEnteros R_LLAVE .)
    ENTERO          reduce using rule 111 (conjuntos -> NUMERAL L_LLAVE expresionConjuntoEnteros R_LLAVE .)
    FLOTANTE        reduce using rule 111 (conjuntos -> NUMERAL L_LLAVE expresionConjuntoEnteros R_LLAVE .)
    BOOLEAN         reduce using rule 111 (conjuntos -> NUMERAL L_LLAVE expresionConjuntoEnteros R_LLAVE .)
    STRING          reduce using rule 111 (conjuntos -> NUMERAL L_LLAVE expresionConjuntoEnteros R_LLAVE .)
    CHAR            reduce using rule 111 (conjuntos -> NUMERAL L_LLAVE expresionConjuntoEnteros R_LLAVE .)
    VARIABLE        reduce using rule 111 (conjuntos -> NUMERAL L_LLAVE expresionConjuntoEnteros R_LLAVE .)
    RPAREN          reduce using rule 111 (conjuntos -> NUMERAL L_LLAVE expresionConjuntoEnteros R_LLAVE .)
    RCOR            reduce using rule 111 (conjuntos -> NUMERAL L_LLAVE expresionConjuntoEnteros R_LLAVE .)


state 160

    (112) conjuntos -> NUMERAL L_LLAVE expresionConjuntoDouble R_LLAVE .

    $end            reduce using rule 112 (conjuntos -> NUMERAL L_LLAVE expresionConjuntoDouble R_LLAVE .)
    LPAREN          reduce using rule 112 (conjuntos -> NUMERAL L_LLAVE expresionConjuntoDouble R_LLAVE .)
    NUMERAL         reduce using rule 112 (conjuntos -> NUMERAL L_LLAVE expresionConjuntoDouble R_LLAVE .)
    LCOR            reduce using rule 112 (conjuntos -> NUMERAL L_LLAVE expresionConjuntoDouble R_LLAVE .)
    L_LLAVE         reduce using rule 112 (conjuntos -> NUMERAL L_LLAVE expresionConjuntoDouble R_LLAVE .)
    IF              reduce using rule 112 (conjuntos -> NUMERAL L_LLAVE expresionConjuntoDouble R_LLAVE .)
    ENTERO          reduce using rule 112 (conjuntos -> NUMERAL L_LLAVE expresionConjuntoDouble R_LLAVE .)
    FLOTANTE        reduce using rule 112 (conjuntos -> NUMERAL L_LLAVE expresionConjuntoDouble R_LLAVE .)
    BOOLEAN         reduce using rule 112 (conjuntos -> NUMERAL L_LLAVE expresionConjuntoDouble R_LLAVE .)
    STRING          reduce using rule 112 (conjuntos -> NUMERAL L_LLAVE expresionConjuntoDouble R_LLAVE .)
    CHAR            reduce using rule 112 (conjuntos -> NUMERAL L_LLAVE expresionConjuntoDouble R_LLAVE .)
    VARIABLE        reduce using rule 112 (conjuntos -> NUMERAL L_LLAVE expresionConjuntoDouble R_LLAVE .)
    RPAREN          reduce using rule 112 (conjuntos -> NUMERAL L_LLAVE expresionConjuntoDouble R_LLAVE .)
    RCOR            reduce using rule 112 (conjuntos -> NUMERAL L_LLAVE expresionConjuntoDouble R_LLAVE .)


state 161

    (113) conjuntos -> NUMERAL L_LLAVE expresionConjuntoString R_LLAVE .

    $end            reduce using rule 113 (conjuntos -> NUMERAL L_LLAVE expresionConjuntoString R_LLAVE .)
    LPAREN          reduce using rule 113 (conjuntos -> NUMERAL L_LLAVE expresionConjuntoString R_LLAVE .)
    NUMERAL         reduce using rule 113 (conjuntos -> NUMERAL L_LLAVE expresionConjuntoString R_LLAVE .)
    LCOR            reduce using rule 113 (conjuntos -> NUMERAL L_LLAVE expresionConjuntoString R_LLAVE .)
    L_LLAVE         reduce using rule 113 (conjuntos -> NUMERAL L_LLAVE expresionConjuntoString R_LLAVE .)
    IF              reduce using rule 113 (conjuntos -> NUMERAL L_LLAVE expresionConjuntoString R_LLAVE .)
    ENTERO          reduce using rule 113 (conjuntos -> NUMERAL L_LLAVE expresionConjuntoString R_LLAVE .)
    FLOTANTE        reduce using rule 113 (conjuntos -> NUMERAL L_LLAVE expresionConjuntoString R_LLAVE .)
    BOOLEAN         reduce using rule 113 (conjuntos -> NUMERAL L_LLAVE expresionConjuntoString R_LLAVE .)
    STRING          reduce using rule 113 (conjuntos -> NUMERAL L_LLAVE expresionConjuntoString R_LLAVE .)
    CHAR            reduce using rule 113 (conjuntos -> NUMERAL L_LLAVE expresionConjuntoString R_LLAVE .)
    VARIABLE        reduce using rule 113 (conjuntos -> NUMERAL L_LLAVE expresionConjuntoString R_LLAVE .)
    RPAREN          reduce using rule 113 (conjuntos -> NUMERAL L_LLAVE expresionConjuntoString R_LLAVE .)
    RCOR            reduce using rule 113 (conjuntos -> NUMERAL L_LLAVE expresionConjuntoString R_LLAVE .)


state 162

    (116) expresionConjuntoEnteros -> ENTERO expresionConjuntoEnteros .

    R_LLAVE         reduce using rule 116 (expresionConjuntoEnteros -> ENTERO expresionConjuntoEnteros .)


state 163

    (118) expresionConjuntoDouble -> FLOTANTE expresionConjuntoDouble .

    R_LLAVE         reduce using rule 118 (expresionConjuntoDouble -> FLOTANTE expresionConjuntoDouble .)


state 164

    (120) expresionConjuntoString -> STRING expresionConjuntoString .

    R_LLAVE         reduce using rule 120 (expresionConjuntoString -> STRING expresionConjuntoString .)


state 165

    (79) secuencia_mapa -> DOSPUNTOS VARIABLE dato .
    (80) secuencia_mapa -> DOSPUNTOS VARIABLE dato . secuencia_mapa
    (79) secuencia_mapa -> . DOSPUNTOS VARIABLE dato
    (80) secuencia_mapa -> . DOSPUNTOS VARIABLE dato secuencia_mapa

    R_LLAVE         reduce using rule 79 (secuencia_mapa -> DOSPUNTOS VARIABLE dato .)
    DOSPUNTOS       shift and go to state 75

    secuencia_mapa                 shift and go to state 197

state 166

    (46) asignacion -> LPAREN DEFICION VARIABLE dato RPAREN .

    $end            reduce using rule 46 (asignacion -> LPAREN DEFICION VARIABLE dato RPAREN .)
    LPAREN          reduce using rule 46 (asignacion -> LPAREN DEFICION VARIABLE dato RPAREN .)
    NUMERAL         reduce using rule 46 (asignacion -> LPAREN DEFICION VARIABLE dato RPAREN .)
    LCOR            reduce using rule 46 (asignacion -> LPAREN DEFICION VARIABLE dato RPAREN .)
    L_LLAVE         reduce using rule 46 (asignacion -> LPAREN DEFICION VARIABLE dato RPAREN .)
    IF              reduce using rule 46 (asignacion -> LPAREN DEFICION VARIABLE dato RPAREN .)
    ENTERO          reduce using rule 46 (asignacion -> LPAREN DEFICION VARIABLE dato RPAREN .)
    FLOTANTE        reduce using rule 46 (asignacion -> LPAREN DEFICION VARIABLE dato RPAREN .)
    BOOLEAN         reduce using rule 46 (asignacion -> LPAREN DEFICION VARIABLE dato RPAREN .)
    STRING          reduce using rule 46 (asignacion -> LPAREN DEFICION VARIABLE dato RPAREN .)
    CHAR            reduce using rule 46 (asignacion -> LPAREN DEFICION VARIABLE dato RPAREN .)
    VARIABLE        reduce using rule 46 (asignacion -> LPAREN DEFICION VARIABLE dato RPAREN .)
    RPAREN          reduce using rule 46 (asignacion -> LPAREN DEFICION VARIABLE dato RPAREN .)


state 167

    (47) asignacion -> LPAREN LET LCOR VARIABLE dato . RCOR RPAREN

    RCOR            shift and go to state 198


state 168

    (91) operacion_aritmetica -> LPAREN operador_aritmetico dato dato RPAREN .

    $end            reduce using rule 91 (operacion_aritmetica -> LPAREN operador_aritmetico dato dato RPAREN .)
    LPAREN          reduce using rule 91 (operacion_aritmetica -> LPAREN operador_aritmetico dato dato RPAREN .)
    NUMERAL         reduce using rule 91 (operacion_aritmetica -> LPAREN operador_aritmetico dato dato RPAREN .)
    LCOR            reduce using rule 91 (operacion_aritmetica -> LPAREN operador_aritmetico dato dato RPAREN .)
    L_LLAVE         reduce using rule 91 (operacion_aritmetica -> LPAREN operador_aritmetico dato dato RPAREN .)
    IF              reduce using rule 91 (operacion_aritmetica -> LPAREN operador_aritmetico dato dato RPAREN .)
    ENTERO          reduce using rule 91 (operacion_aritmetica -> LPAREN operador_aritmetico dato dato RPAREN .)
    FLOTANTE        reduce using rule 91 (operacion_aritmetica -> LPAREN operador_aritmetico dato dato RPAREN .)
    BOOLEAN         reduce using rule 91 (operacion_aritmetica -> LPAREN operador_aritmetico dato dato RPAREN .)
    STRING          reduce using rule 91 (operacion_aritmetica -> LPAREN operador_aritmetico dato dato RPAREN .)
    CHAR            reduce using rule 91 (operacion_aritmetica -> LPAREN operador_aritmetico dato dato RPAREN .)
    VARIABLE        reduce using rule 91 (operacion_aritmetica -> LPAREN operador_aritmetico dato dato RPAREN .)
    RPAREN          reduce using rule 91 (operacion_aritmetica -> LPAREN operador_aritmetico dato dato RPAREN .)


state 169

    (84) if -> LPAREN IF instrucciones body RPAREN .

    $end            reduce using rule 84 (if -> LPAREN IF instrucciones body RPAREN .)
    LPAREN          reduce using rule 84 (if -> LPAREN IF instrucciones body RPAREN .)
    NUMERAL         reduce using rule 84 (if -> LPAREN IF instrucciones body RPAREN .)
    LCOR            reduce using rule 84 (if -> LPAREN IF instrucciones body RPAREN .)
    L_LLAVE         reduce using rule 84 (if -> LPAREN IF instrucciones body RPAREN .)
    IF              reduce using rule 84 (if -> LPAREN IF instrucciones body RPAREN .)
    ENTERO          reduce using rule 84 (if -> LPAREN IF instrucciones body RPAREN .)
    FLOTANTE        reduce using rule 84 (if -> LPAREN IF instrucciones body RPAREN .)
    BOOLEAN         reduce using rule 84 (if -> LPAREN IF instrucciones body RPAREN .)
    STRING          reduce using rule 84 (if -> LPAREN IF instrucciones body RPAREN .)
    CHAR            reduce using rule 84 (if -> LPAREN IF instrucciones body RPAREN .)
    VARIABLE        reduce using rule 84 (if -> LPAREN IF instrucciones body RPAREN .)
    RPAREN          reduce using rule 84 (if -> LPAREN IF instrucciones body RPAREN .)


state 170

    (90) operacionesLogicas -> LPAREN if recur VARIABLE RPAREN . RPAREN

    RPAREN          shift and go to state 199


state 171

    (87) when -> LPAREN WHEN sentencia_booleana body RPAREN .

    $end            reduce using rule 87 (when -> LPAREN WHEN sentencia_booleana body RPAREN .)
    LPAREN          reduce using rule 87 (when -> LPAREN WHEN sentencia_booleana body RPAREN .)
    NUMERAL         reduce using rule 87 (when -> LPAREN WHEN sentencia_booleana body RPAREN .)
    LCOR            reduce using rule 87 (when -> LPAREN WHEN sentencia_booleana body RPAREN .)
    L_LLAVE         reduce using rule 87 (when -> LPAREN WHEN sentencia_booleana body RPAREN .)
    IF              reduce using rule 87 (when -> LPAREN WHEN sentencia_booleana body RPAREN .)
    ENTERO          reduce using rule 87 (when -> LPAREN WHEN sentencia_booleana body RPAREN .)
    FLOTANTE        reduce using rule 87 (when -> LPAREN WHEN sentencia_booleana body RPAREN .)
    BOOLEAN         reduce using rule 87 (when -> LPAREN WHEN sentencia_booleana body RPAREN .)
    STRING          reduce using rule 87 (when -> LPAREN WHEN sentencia_booleana body RPAREN .)
    CHAR            reduce using rule 87 (when -> LPAREN WHEN sentencia_booleana body RPAREN .)
    VARIABLE        reduce using rule 87 (when -> LPAREN WHEN sentencia_booleana body RPAREN .)
    RPAREN          reduce using rule 87 (when -> LPAREN WHEN sentencia_booleana body RPAREN .)


state 172

    (104) defn -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE . RCOR LPAREN expresionDefnElse RPAREN RPAREN
    (106) defn_with_return -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE . RCOR LPAREN expresionDefnElse RPAREN RPAREN defn_return

    RCOR            shift and go to state 200


state 173

    (105) defn -> LPAREN DEFFUNCION INCREASE LCOR VARIABLE . RCOR operacionesLogicas RPAREN
    (107) defn_with_return -> LPAREN DEFFUNCION INCREASE LCOR VARIABLE . RCOR operacionesLogicas RPAREN defn_return

    RCOR            shift and go to state 201


state 174

    (72) function -> LPAREN DEFFUNCION nombre_funct internos LPAREN . if body RPAREN
    (82) if -> . IF sentencia_booleana
    (83) if -> . IF sentencia_booleana recur
    (84) if -> . LPAREN IF instrucciones body RPAREN

    IF              shift and go to state 33
    LPAREN          shift and go to state 39

    if                             shift and go to state 202

state 175

    (71) function -> LPAREN DEFFUNCION nombre_funct internos RPAREN .

    $end            reduce using rule 71 (function -> LPAREN DEFFUNCION nombre_funct internos RPAREN .)
    LPAREN          reduce using rule 71 (function -> LPAREN DEFFUNCION nombre_funct internos RPAREN .)
    NUMERAL         reduce using rule 71 (function -> LPAREN DEFFUNCION nombre_funct internos RPAREN .)
    LCOR            reduce using rule 71 (function -> LPAREN DEFFUNCION nombre_funct internos RPAREN .)
    L_LLAVE         reduce using rule 71 (function -> LPAREN DEFFUNCION nombre_funct internos RPAREN .)
    IF              reduce using rule 71 (function -> LPAREN DEFFUNCION nombre_funct internos RPAREN .)
    ENTERO          reduce using rule 71 (function -> LPAREN DEFFUNCION nombre_funct internos RPAREN .)
    FLOTANTE        reduce using rule 71 (function -> LPAREN DEFFUNCION nombre_funct internos RPAREN .)
    BOOLEAN         reduce using rule 71 (function -> LPAREN DEFFUNCION nombre_funct internos RPAREN .)
    STRING          reduce using rule 71 (function -> LPAREN DEFFUNCION nombre_funct internos RPAREN .)
    CHAR            reduce using rule 71 (function -> LPAREN DEFFUNCION nombre_funct internos RPAREN .)
    VARIABLE        reduce using rule 71 (function -> LPAREN DEFFUNCION nombre_funct internos RPAREN .)
    RPAREN          reduce using rule 71 (function -> LPAREN DEFFUNCION nombre_funct internos RPAREN .)


state 176

    (70) internos -> description argumments . body
    (64) body -> . instrucciones
    (1) instrucciones -> . asignacion
    (2) instrucciones -> . impresion
    (3) instrucciones -> . operacion_aritmetica
    (4) instrucciones -> . conjuntos
    (5) instrucciones -> . vector
    (6) instrucciones -> . mapa
    (7) instrucciones -> . if
    (8) instrucciones -> . do
    (9) instrucciones -> . if_do
    (10) instrucciones -> . when
    (11) instrucciones -> . defn
    (12) instrucciones -> . defn_with_return
    (13) instrucciones -> . operacionesLogicas
    (14) instrucciones -> . sentenciaLoopRecur
    (15) instrucciones -> . cond_
    (16) instrucciones -> . cond_else
    (17) instrucciones -> . doseq
    (18) instrucciones -> . case_expression
    (19) instrucciones -> . lista
    (20) instrucciones -> . sentencia_booleana
    (21) instrucciones -> . function
    (22) instrucciones -> . dotimes
    (23) instrucciones -> . ciclo
    (24) instrucciones -> . valor
    (25) instrucciones -> . recur
    (26) instrucciones -> . dato
    (46) asignacion -> . LPAREN DEFICION VARIABLE dato RPAREN
    (47) asignacion -> . LPAREN LET LCOR VARIABLE dato RCOR RPAREN
    (75) impresion -> . LPAREN IMPRIMIR info_imprimir RPAREN
    (91) operacion_aritmetica -> . LPAREN operador_aritmetico dato dato RPAREN
    (111) conjuntos -> . NUMERAL L_LLAVE expresionConjuntoEnteros R_LLAVE
    (112) conjuntos -> . NUMERAL L_LLAVE expresionConjuntoDouble R_LLAVE
    (113) conjuntos -> . NUMERAL L_LLAVE expresionConjuntoString R_LLAVE
    (78) vector -> . LCOR secuencia_v RCOR
    (81) mapa -> . L_LLAVE secuencia_mapa R_LLAVE
    (82) if -> . IF sentencia_booleana
    (83) if -> . IF sentencia_booleana recur
    (84) if -> . LPAREN IF instrucciones body RPAREN
    (85) do -> . LPAREN DO instrucciones RPAREN
    (86) if_do -> . LPAREN if do RPAREN
    (87) when -> . LPAREN WHEN sentencia_booleana body RPAREN
    (104) defn -> . LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN
    (105) defn -> . LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN
    (106) defn_with_return -> . LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN defn_return
    (107) defn_with_return -> . LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN defn_return
    (90) operacionesLogicas -> . LPAREN if recur VARIABLE RPAREN RPAREN
    (114) sentenciaLoopRecur -> . LPAREN LOOP argumments LPAREN if dato RPAREN RPAREN
    (50) cond_ -> . LPAREN COND linecondition linecondition RPAREN
    (51) cond_else -> . LPAREN COND linecondition linecondition DOSPUNTOS ELSE impresion RPAREN
    (102) doseq -> . LPAREN DOSEQ doseq_args impresion RPAREN
    (103) doseq -> . LPAREN DOSEQ doseq_args LPAREN doseq_prn RPAREN RPAREN
    (56) case_expression -> . LPAREN CASE dato case impresion RPAREN
    (57) case_expression -> . LPAREN CASE dato case DOSPUNTOS ELSE STRING RPAREN
    (60) lista -> . LPAREN LIST argumentos_lista RPAREN
    (48) sentencia_booleana -> . LPAREN operador_comparadores dato dato RPAREN
    (71) function -> . LPAREN DEFFUNCION nombre_funct internos RPAREN
    (72) function -> . LPAREN DEFFUNCION nombre_funct internos LPAREN if body RPAREN
    (89) dotimes -> . LPAREN DOTIMES ciclo body RPAREN
    (88) ciclo -> . LCOR VARIABLE ENTERO RCOR
    (33) valor -> . ENTERO
    (34) valor -> . FLOTANTE
    (35) valor -> . BOOLEAN
    (65) recur -> . LPAREN RECUR LPAREN INC dato RPAREN RPAREN
    (27) dato -> . STRING
    (28) dato -> . CHAR
    (29) dato -> . ENTERO
    (30) dato -> . FLOTANTE
    (31) dato -> . BOOLEAN
    (32) dato -> . VARIABLE

    LPAREN          shift and go to state 28
    NUMERAL         shift and go to state 31
    LCOR            shift and go to state 30
    L_LLAVE         shift and go to state 32
    IF              shift and go to state 33
    ENTERO          shift and go to state 35
    FLOTANTE        shift and go to state 36
    BOOLEAN         shift and go to state 37
    STRING          shift and go to state 34
    CHAR            shift and go to state 38
    VARIABLE        shift and go to state 29

    body                           shift and go to state 203
    instrucciones                  shift and go to state 126
    asignacion                     shift and go to state 2
    impresion                      shift and go to state 3
    operacion_aritmetica           shift and go to state 4
    conjuntos                      shift and go to state 5
    vector                         shift and go to state 6
    mapa                           shift and go to state 7
    if                             shift and go to state 8
    do                             shift and go to state 9
    if_do                          shift and go to state 10
    when                           shift and go to state 11
    defn                           shift and go to state 12
    defn_with_return               shift and go to state 13
    operacionesLogicas             shift and go to state 14
    sentenciaLoopRecur             shift and go to state 15
    cond_                          shift and go to state 16
    cond_else                      shift and go to state 17
    doseq                          shift and go to state 18
    case_expression                shift and go to state 19
    lista                          shift and go to state 20
    sentencia_booleana             shift and go to state 21
    function                       shift and go to state 22
    dotimes                        shift and go to state 23
    ciclo                          shift and go to state 24
    valor                          shift and go to state 25
    recur                          shift and go to state 26
    dato                           shift and go to state 27

state 177

    (69) internos -> argumments body .

    RPAREN          reduce using rule 69 (internos -> argumments body .)
    LPAREN          reduce using rule 69 (internos -> argumments body .)


state 178

    (58) argumentos_lista -> dato .
    (59) argumentos_lista -> dato . argumentos_lista
    (76) secuencia_v -> dato .
    (77) secuencia_v -> dato . secuencia_v
    (58) argumentos_lista -> . dato
    (59) argumentos_lista -> . dato argumentos_lista
    (76) secuencia_v -> . dato
    (77) secuencia_v -> . dato secuencia_v
    (27) dato -> . STRING
    (28) dato -> . CHAR
    (29) dato -> . ENTERO
    (30) dato -> . FLOTANTE
    (31) dato -> . BOOLEAN
    (32) dato -> . VARIABLE

  ! reduce/reduce conflict for RCOR resolved using rule 58 (argumentos_lista -> dato .)
    RCOR            reduce using rule 58 (argumentos_lista -> dato .)
    STRING          shift and go to state 34
    CHAR            shift and go to state 38
    ENTERO          shift and go to state 69
    FLOTANTE        shift and go to state 71
    BOOLEAN         shift and go to state 72
    VARIABLE        shift and go to state 29

  ! RCOR            [ reduce using rule 76 (secuencia_v -> dato .) ]

    dato                           shift and go to state 178
    argumentos_lista               shift and go to state 153
    secuencia_v                    shift and go to state 110

state 179

    (114) sentenciaLoopRecur -> LPAREN LOOP argumments LPAREN if . dato RPAREN RPAREN
    (27) dato -> . STRING
    (28) dato -> . CHAR
    (29) dato -> . ENTERO
    (30) dato -> . FLOTANTE
    (31) dato -> . BOOLEAN
    (32) dato -> . VARIABLE

    STRING          shift and go to state 34
    CHAR            shift and go to state 38
    ENTERO          shift and go to state 69
    FLOTANTE        shift and go to state 71
    BOOLEAN         shift and go to state 72
    VARIABLE        shift and go to state 29

    dato                           shift and go to state 204

state 180

    (61) argumments -> LCOR argumentos_lista RCOR .

    LPAREN          reduce using rule 61 (argumments -> LCOR argumentos_lista RCOR .)
    NUMERAL         reduce using rule 61 (argumments -> LCOR argumentos_lista RCOR .)
    LCOR            reduce using rule 61 (argumments -> LCOR argumentos_lista RCOR .)
    L_LLAVE         reduce using rule 61 (argumments -> LCOR argumentos_lista RCOR .)
    IF              reduce using rule 61 (argumments -> LCOR argumentos_lista RCOR .)
    ENTERO          reduce using rule 61 (argumments -> LCOR argumentos_lista RCOR .)
    FLOTANTE        reduce using rule 61 (argumments -> LCOR argumentos_lista RCOR .)
    BOOLEAN         reduce using rule 61 (argumments -> LCOR argumentos_lista RCOR .)
    STRING          reduce using rule 61 (argumments -> LCOR argumentos_lista RCOR .)
    CHAR            reduce using rule 61 (argumments -> LCOR argumentos_lista RCOR .)
    VARIABLE        reduce using rule 61 (argumments -> LCOR argumentos_lista RCOR .)
    RPAREN          reduce using rule 61 (argumments -> LCOR argumentos_lista RCOR .)


state 181

    (50) cond_ -> LPAREN COND linecondition linecondition RPAREN .

    $end            reduce using rule 50 (cond_ -> LPAREN COND linecondition linecondition RPAREN .)
    LPAREN          reduce using rule 50 (cond_ -> LPAREN COND linecondition linecondition RPAREN .)
    NUMERAL         reduce using rule 50 (cond_ -> LPAREN COND linecondition linecondition RPAREN .)
    LCOR            reduce using rule 50 (cond_ -> LPAREN COND linecondition linecondition RPAREN .)
    L_LLAVE         reduce using rule 50 (cond_ -> LPAREN COND linecondition linecondition RPAREN .)
    IF              reduce using rule 50 (cond_ -> LPAREN COND linecondition linecondition RPAREN .)
    ENTERO          reduce using rule 50 (cond_ -> LPAREN COND linecondition linecondition RPAREN .)
    FLOTANTE        reduce using rule 50 (cond_ -> LPAREN COND linecondition linecondition RPAREN .)
    BOOLEAN         reduce using rule 50 (cond_ -> LPAREN COND linecondition linecondition RPAREN .)
    STRING          reduce using rule 50 (cond_ -> LPAREN COND linecondition linecondition RPAREN .)
    CHAR            reduce using rule 50 (cond_ -> LPAREN COND linecondition linecondition RPAREN .)
    VARIABLE        reduce using rule 50 (cond_ -> LPAREN COND linecondition linecondition RPAREN .)
    RPAREN          reduce using rule 50 (cond_ -> LPAREN COND linecondition linecondition RPAREN .)


state 182

    (51) cond_else -> LPAREN COND linecondition linecondition DOSPUNTOS . ELSE impresion RPAREN

    ELSE            shift and go to state 205


state 183

    (103) doseq -> LPAREN DOSEQ doseq_args LPAREN doseq_prn . RPAREN RPAREN

    RPAREN          shift and go to state 206


state 184

    (99) doseq_prn -> PRN . LPAREN dato RPAREN
    (100) doseq_prn -> PRN . pnr_dato
    (101) doseq_prn -> PRN . operacion_aritmetica
    (97) pnr_dato -> . dato
    (98) pnr_dato -> . dato pnr_dato
    (91) operacion_aritmetica -> . LPAREN operador_aritmetico dato dato RPAREN
    (27) dato -> . STRING
    (28) dato -> . CHAR
    (29) dato -> . ENTERO
    (30) dato -> . FLOTANTE
    (31) dato -> . BOOLEAN
    (32) dato -> . VARIABLE

    LPAREN          shift and go to state 207
    STRING          shift and go to state 34
    CHAR            shift and go to state 38
    ENTERO          shift and go to state 69
    FLOTANTE        shift and go to state 71
    BOOLEAN         shift and go to state 72
    VARIABLE        shift and go to state 29

    dato                           shift and go to state 208
    pnr_dato                       shift and go to state 209
    operacion_aritmetica           shift and go to state 210

state 185

    (102) doseq -> LPAREN DOSEQ doseq_args impresion RPAREN .

    $end            reduce using rule 102 (doseq -> LPAREN DOSEQ doseq_args impresion RPAREN .)
    LPAREN          reduce using rule 102 (doseq -> LPAREN DOSEQ doseq_args impresion RPAREN .)
    NUMERAL         reduce using rule 102 (doseq -> LPAREN DOSEQ doseq_args impresion RPAREN .)
    LCOR            reduce using rule 102 (doseq -> LPAREN DOSEQ doseq_args impresion RPAREN .)
    L_LLAVE         reduce using rule 102 (doseq -> LPAREN DOSEQ doseq_args impresion RPAREN .)
    IF              reduce using rule 102 (doseq -> LPAREN DOSEQ doseq_args impresion RPAREN .)
    ENTERO          reduce using rule 102 (doseq -> LPAREN DOSEQ doseq_args impresion RPAREN .)
    FLOTANTE        reduce using rule 102 (doseq -> LPAREN DOSEQ doseq_args impresion RPAREN .)
    BOOLEAN         reduce using rule 102 (doseq -> LPAREN DOSEQ doseq_args impresion RPAREN .)
    STRING          reduce using rule 102 (doseq -> LPAREN DOSEQ doseq_args impresion RPAREN .)
    CHAR            reduce using rule 102 (doseq -> LPAREN DOSEQ doseq_args impresion RPAREN .)
    VARIABLE        reduce using rule 102 (doseq -> LPAREN DOSEQ doseq_args impresion RPAREN .)
    RPAREN          reduce using rule 102 (doseq -> LPAREN DOSEQ doseq_args impresion RPAREN .)


state 186

    (92) doseq_args -> LCOR dato LPAREN . RANGE dato RPAREN RCOR

    RANGE           shift and go to state 211


state 187

    (93) doseq_args -> LCOR dato conjuntos . RCOR

    RCOR            shift and go to state 212


state 188

    (94) doseq_args -> LCOR dato vector . dato vector RCOR
    (96) doseq_args -> LCOR dato vector . RCOR
    (27) dato -> . STRING
    (28) dato -> . CHAR
    (29) dato -> . ENTERO
    (30) dato -> . FLOTANTE
    (31) dato -> . BOOLEAN
    (32) dato -> . VARIABLE

    RCOR            shift and go to state 214
    STRING          shift and go to state 34
    CHAR            shift and go to state 38
    ENTERO          shift and go to state 69
    FLOTANTE        shift and go to state 71
    BOOLEAN         shift and go to state 72
    VARIABLE        shift and go to state 29

    dato                           shift and go to state 213

state 189

    (95) doseq_args -> LCOR vector conjuntos . RCOR

    RCOR            shift and go to state 215


state 190

    (52) case -> dato impresion .
    (54) case -> dato impresion . case
    (52) case -> . dato impresion
    (53) case -> . dato STRING
    (54) case -> . dato impresion case
    (55) case -> . dato STRING case
    (27) dato -> . STRING
    (28) dato -> . CHAR
    (29) dato -> . ENTERO
    (30) dato -> . FLOTANTE
    (31) dato -> . BOOLEAN
    (32) dato -> . VARIABLE

    DOSPUNTOS       reduce using rule 52 (case -> dato impresion .)
    LPAREN          reduce using rule 52 (case -> dato impresion .)
    STRING          shift and go to state 34
    CHAR            shift and go to state 38
    ENTERO          shift and go to state 69
    FLOTANTE        shift and go to state 71
    BOOLEAN         shift and go to state 72
    VARIABLE        shift and go to state 29

    dato                           shift and go to state 150
    case                           shift and go to state 216

state 191

    (53) case -> dato STRING .
    (55) case -> dato STRING . case
    (52) case -> . dato impresion
    (53) case -> . dato STRING
    (54) case -> . dato impresion case
    (55) case -> . dato STRING case
    (27) dato -> . STRING
    (28) dato -> . CHAR
    (29) dato -> . ENTERO
    (30) dato -> . FLOTANTE
    (31) dato -> . BOOLEAN
    (32) dato -> . VARIABLE

    DOSPUNTOS       reduce using rule 53 (case -> dato STRING .)
    LPAREN          reduce using rule 53 (case -> dato STRING .)
    STRING          shift and go to state 34
    CHAR            shift and go to state 38
    ENTERO          shift and go to state 69
    FLOTANTE        shift and go to state 71
    BOOLEAN         shift and go to state 72
    VARIABLE        shift and go to state 29

    dato                           shift and go to state 150
    case                           shift and go to state 217

state 192

    (56) case_expression -> LPAREN CASE dato case impresion . RPAREN

    RPAREN          shift and go to state 218


state 193

    (57) case_expression -> LPAREN CASE dato case DOSPUNTOS . ELSE STRING RPAREN

    ELSE            shift and go to state 219


state 194

    (48) sentencia_booleana -> LPAREN operador_comparadores dato dato RPAREN .

    $end            reduce using rule 48 (sentencia_booleana -> LPAREN operador_comparadores dato dato RPAREN .)
    LPAREN          reduce using rule 48 (sentencia_booleana -> LPAREN operador_comparadores dato dato RPAREN .)
    NUMERAL         reduce using rule 48 (sentencia_booleana -> LPAREN operador_comparadores dato dato RPAREN .)
    LCOR            reduce using rule 48 (sentencia_booleana -> LPAREN operador_comparadores dato dato RPAREN .)
    L_LLAVE         reduce using rule 48 (sentencia_booleana -> LPAREN operador_comparadores dato dato RPAREN .)
    IF              reduce using rule 48 (sentencia_booleana -> LPAREN operador_comparadores dato dato RPAREN .)
    ENTERO          reduce using rule 48 (sentencia_booleana -> LPAREN operador_comparadores dato dato RPAREN .)
    FLOTANTE        reduce using rule 48 (sentencia_booleana -> LPAREN operador_comparadores dato dato RPAREN .)
    BOOLEAN         reduce using rule 48 (sentencia_booleana -> LPAREN operador_comparadores dato dato RPAREN .)
    STRING          reduce using rule 48 (sentencia_booleana -> LPAREN operador_comparadores dato dato RPAREN .)
    CHAR            reduce using rule 48 (sentencia_booleana -> LPAREN operador_comparadores dato dato RPAREN .)
    VARIABLE        reduce using rule 48 (sentencia_booleana -> LPAREN operador_comparadores dato dato RPAREN .)
    RPAREN          reduce using rule 48 (sentencia_booleana -> LPAREN operador_comparadores dato dato RPAREN .)


state 195

    (89) dotimes -> LPAREN DOTIMES ciclo body RPAREN .

    $end            reduce using rule 89 (dotimes -> LPAREN DOTIMES ciclo body RPAREN .)
    LPAREN          reduce using rule 89 (dotimes -> LPAREN DOTIMES ciclo body RPAREN .)
    NUMERAL         reduce using rule 89 (dotimes -> LPAREN DOTIMES ciclo body RPAREN .)
    LCOR            reduce using rule 89 (dotimes -> LPAREN DOTIMES ciclo body RPAREN .)
    L_LLAVE         reduce using rule 89 (dotimes -> LPAREN DOTIMES ciclo body RPAREN .)
    IF              reduce using rule 89 (dotimes -> LPAREN DOTIMES ciclo body RPAREN .)
    ENTERO          reduce using rule 89 (dotimes -> LPAREN DOTIMES ciclo body RPAREN .)
    FLOTANTE        reduce using rule 89 (dotimes -> LPAREN DOTIMES ciclo body RPAREN .)
    BOOLEAN         reduce using rule 89 (dotimes -> LPAREN DOTIMES ciclo body RPAREN .)
    STRING          reduce using rule 89 (dotimes -> LPAREN DOTIMES ciclo body RPAREN .)
    CHAR            reduce using rule 89 (dotimes -> LPAREN DOTIMES ciclo body RPAREN .)
    VARIABLE        reduce using rule 89 (dotimes -> LPAREN DOTIMES ciclo body RPAREN .)
    RPAREN          reduce using rule 89 (dotimes -> LPAREN DOTIMES ciclo body RPAREN .)


state 196

    (65) recur -> LPAREN RECUR LPAREN INC dato . RPAREN RPAREN

    RPAREN          shift and go to state 220


state 197

    (80) secuencia_mapa -> DOSPUNTOS VARIABLE dato secuencia_mapa .

    R_LLAVE         reduce using rule 80 (secuencia_mapa -> DOSPUNTOS VARIABLE dato secuencia_mapa .)


state 198

    (47) asignacion -> LPAREN LET LCOR VARIABLE dato RCOR . RPAREN

    RPAREN          shift and go to state 221


state 199

    (90) operacionesLogicas -> LPAREN if recur VARIABLE RPAREN RPAREN .

    $end            reduce using rule 90 (operacionesLogicas -> LPAREN if recur VARIABLE RPAREN RPAREN .)
    LPAREN          reduce using rule 90 (operacionesLogicas -> LPAREN if recur VARIABLE RPAREN RPAREN .)
    NUMERAL         reduce using rule 90 (operacionesLogicas -> LPAREN if recur VARIABLE RPAREN RPAREN .)
    LCOR            reduce using rule 90 (operacionesLogicas -> LPAREN if recur VARIABLE RPAREN RPAREN .)
    L_LLAVE         reduce using rule 90 (operacionesLogicas -> LPAREN if recur VARIABLE RPAREN RPAREN .)
    IF              reduce using rule 90 (operacionesLogicas -> LPAREN if recur VARIABLE RPAREN RPAREN .)
    ENTERO          reduce using rule 90 (operacionesLogicas -> LPAREN if recur VARIABLE RPAREN RPAREN .)
    FLOTANTE        reduce using rule 90 (operacionesLogicas -> LPAREN if recur VARIABLE RPAREN RPAREN .)
    BOOLEAN         reduce using rule 90 (operacionesLogicas -> LPAREN if recur VARIABLE RPAREN RPAREN .)
    STRING          reduce using rule 90 (operacionesLogicas -> LPAREN if recur VARIABLE RPAREN RPAREN .)
    CHAR            reduce using rule 90 (operacionesLogicas -> LPAREN if recur VARIABLE RPAREN RPAREN .)
    VARIABLE        reduce using rule 90 (operacionesLogicas -> LPAREN if recur VARIABLE RPAREN RPAREN .)
    RPAREN          reduce using rule 90 (operacionesLogicas -> LPAREN if recur VARIABLE RPAREN RPAREN .)


state 200

    (104) defn -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR . LPAREN expresionDefnElse RPAREN RPAREN
    (106) defn_with_return -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR . LPAREN expresionDefnElse RPAREN RPAREN defn_return

    LPAREN          shift and go to state 222


state 201

    (105) defn -> LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR . operacionesLogicas RPAREN
    (107) defn_with_return -> LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR . operacionesLogicas RPAREN defn_return
    (90) operacionesLogicas -> . LPAREN if recur VARIABLE RPAREN RPAREN

    LPAREN          shift and go to state 223

    operacionesLogicas             shift and go to state 224

state 202

    (72) function -> LPAREN DEFFUNCION nombre_funct internos LPAREN if . body RPAREN
    (64) body -> . instrucciones
    (1) instrucciones -> . asignacion
    (2) instrucciones -> . impresion
    (3) instrucciones -> . operacion_aritmetica
    (4) instrucciones -> . conjuntos
    (5) instrucciones -> . vector
    (6) instrucciones -> . mapa
    (7) instrucciones -> . if
    (8) instrucciones -> . do
    (9) instrucciones -> . if_do
    (10) instrucciones -> . when
    (11) instrucciones -> . defn
    (12) instrucciones -> . defn_with_return
    (13) instrucciones -> . operacionesLogicas
    (14) instrucciones -> . sentenciaLoopRecur
    (15) instrucciones -> . cond_
    (16) instrucciones -> . cond_else
    (17) instrucciones -> . doseq
    (18) instrucciones -> . case_expression
    (19) instrucciones -> . lista
    (20) instrucciones -> . sentencia_booleana
    (21) instrucciones -> . function
    (22) instrucciones -> . dotimes
    (23) instrucciones -> . ciclo
    (24) instrucciones -> . valor
    (25) instrucciones -> . recur
    (26) instrucciones -> . dato
    (46) asignacion -> . LPAREN DEFICION VARIABLE dato RPAREN
    (47) asignacion -> . LPAREN LET LCOR VARIABLE dato RCOR RPAREN
    (75) impresion -> . LPAREN IMPRIMIR info_imprimir RPAREN
    (91) operacion_aritmetica -> . LPAREN operador_aritmetico dato dato RPAREN
    (111) conjuntos -> . NUMERAL L_LLAVE expresionConjuntoEnteros R_LLAVE
    (112) conjuntos -> . NUMERAL L_LLAVE expresionConjuntoDouble R_LLAVE
    (113) conjuntos -> . NUMERAL L_LLAVE expresionConjuntoString R_LLAVE
    (78) vector -> . LCOR secuencia_v RCOR
    (81) mapa -> . L_LLAVE secuencia_mapa R_LLAVE
    (82) if -> . IF sentencia_booleana
    (83) if -> . IF sentencia_booleana recur
    (84) if -> . LPAREN IF instrucciones body RPAREN
    (85) do -> . LPAREN DO instrucciones RPAREN
    (86) if_do -> . LPAREN if do RPAREN
    (87) when -> . LPAREN WHEN sentencia_booleana body RPAREN
    (104) defn -> . LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN
    (105) defn -> . LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN
    (106) defn_with_return -> . LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN defn_return
    (107) defn_with_return -> . LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN defn_return
    (90) operacionesLogicas -> . LPAREN if recur VARIABLE RPAREN RPAREN
    (114) sentenciaLoopRecur -> . LPAREN LOOP argumments LPAREN if dato RPAREN RPAREN
    (50) cond_ -> . LPAREN COND linecondition linecondition RPAREN
    (51) cond_else -> . LPAREN COND linecondition linecondition DOSPUNTOS ELSE impresion RPAREN
    (102) doseq -> . LPAREN DOSEQ doseq_args impresion RPAREN
    (103) doseq -> . LPAREN DOSEQ doseq_args LPAREN doseq_prn RPAREN RPAREN
    (56) case_expression -> . LPAREN CASE dato case impresion RPAREN
    (57) case_expression -> . LPAREN CASE dato case DOSPUNTOS ELSE STRING RPAREN
    (60) lista -> . LPAREN LIST argumentos_lista RPAREN
    (48) sentencia_booleana -> . LPAREN operador_comparadores dato dato RPAREN
    (71) function -> . LPAREN DEFFUNCION nombre_funct internos RPAREN
    (72) function -> . LPAREN DEFFUNCION nombre_funct internos LPAREN if body RPAREN
    (89) dotimes -> . LPAREN DOTIMES ciclo body RPAREN
    (88) ciclo -> . LCOR VARIABLE ENTERO RCOR
    (33) valor -> . ENTERO
    (34) valor -> . FLOTANTE
    (35) valor -> . BOOLEAN
    (65) recur -> . LPAREN RECUR LPAREN INC dato RPAREN RPAREN
    (27) dato -> . STRING
    (28) dato -> . CHAR
    (29) dato -> . ENTERO
    (30) dato -> . FLOTANTE
    (31) dato -> . BOOLEAN
    (32) dato -> . VARIABLE

    LPAREN          shift and go to state 28
    NUMERAL         shift and go to state 31
    LCOR            shift and go to state 30
    L_LLAVE         shift and go to state 32
    IF              shift and go to state 33
    ENTERO          shift and go to state 35
    FLOTANTE        shift and go to state 36
    BOOLEAN         shift and go to state 37
    STRING          shift and go to state 34
    CHAR            shift and go to state 38
    VARIABLE        shift and go to state 29

    if                             shift and go to state 8
    body                           shift and go to state 225
    instrucciones                  shift and go to state 126
    asignacion                     shift and go to state 2
    impresion                      shift and go to state 3
    operacion_aritmetica           shift and go to state 4
    conjuntos                      shift and go to state 5
    vector                         shift and go to state 6
    mapa                           shift and go to state 7
    do                             shift and go to state 9
    if_do                          shift and go to state 10
    when                           shift and go to state 11
    defn                           shift and go to state 12
    defn_with_return               shift and go to state 13
    operacionesLogicas             shift and go to state 14
    sentenciaLoopRecur             shift and go to state 15
    cond_                          shift and go to state 16
    cond_else                      shift and go to state 17
    doseq                          shift and go to state 18
    case_expression                shift and go to state 19
    lista                          shift and go to state 20
    sentencia_booleana             shift and go to state 21
    function                       shift and go to state 22
    dotimes                        shift and go to state 23
    ciclo                          shift and go to state 24
    valor                          shift and go to state 25
    recur                          shift and go to state 26
    dato                           shift and go to state 27

state 203

    (70) internos -> description argumments body .

    RPAREN          reduce using rule 70 (internos -> description argumments body .)
    LPAREN          reduce using rule 70 (internos -> description argumments body .)


state 204

    (114) sentenciaLoopRecur -> LPAREN LOOP argumments LPAREN if dato . RPAREN RPAREN

    RPAREN          shift and go to state 226


state 205

    (51) cond_else -> LPAREN COND linecondition linecondition DOSPUNTOS ELSE . impresion RPAREN
    (75) impresion -> . LPAREN IMPRIMIR info_imprimir RPAREN

    LPAREN          shift and go to state 144

    impresion                      shift and go to state 227

state 206

    (103) doseq -> LPAREN DOSEQ doseq_args LPAREN doseq_prn RPAREN . RPAREN

    RPAREN          shift and go to state 228


state 207

    (99) doseq_prn -> PRN LPAREN . dato RPAREN
    (91) operacion_aritmetica -> LPAREN . operador_aritmetico dato dato RPAREN
    (27) dato -> . STRING
    (28) dato -> . CHAR
    (29) dato -> . ENTERO
    (30) dato -> . FLOTANTE
    (31) dato -> . BOOLEAN
    (32) dato -> . VARIABLE
    (42) operador_aritmetico -> . MAS
    (43) operador_aritmetico -> . MENOS
    (44) operador_aritmetico -> . PRODUCTO
    (45) operador_aritmetico -> . DIVISION

    STRING          shift and go to state 34
    CHAR            shift and go to state 38
    ENTERO          shift and go to state 69
    FLOTANTE        shift and go to state 71
    BOOLEAN         shift and go to state 72
    VARIABLE        shift and go to state 29
    MAS             shift and go to state 57
    MENOS           shift and go to state 58
    PRODUCTO        shift and go to state 59
    DIVISION        shift and go to state 60

    dato                           shift and go to state 229
    operador_aritmetico            shift and go to state 43

state 208

    (97) pnr_dato -> dato .
    (98) pnr_dato -> dato . pnr_dato
    (97) pnr_dato -> . dato
    (98) pnr_dato -> . dato pnr_dato
    (27) dato -> . STRING
    (28) dato -> . CHAR
    (29) dato -> . ENTERO
    (30) dato -> . FLOTANTE
    (31) dato -> . BOOLEAN
    (32) dato -> . VARIABLE

    RPAREN          reduce using rule 97 (pnr_dato -> dato .)
    STRING          shift and go to state 34
    CHAR            shift and go to state 38
    ENTERO          shift and go to state 69
    FLOTANTE        shift and go to state 71
    BOOLEAN         shift and go to state 72
    VARIABLE        shift and go to state 29

    dato                           shift and go to state 208
    pnr_dato                       shift and go to state 230

state 209

    (100) doseq_prn -> PRN pnr_dato .

    RPAREN          reduce using rule 100 (doseq_prn -> PRN pnr_dato .)


state 210

    (101) doseq_prn -> PRN operacion_aritmetica .

    RPAREN          reduce using rule 101 (doseq_prn -> PRN operacion_aritmetica .)


state 211

    (92) doseq_args -> LCOR dato LPAREN RANGE . dato RPAREN RCOR
    (27) dato -> . STRING
    (28) dato -> . CHAR
    (29) dato -> . ENTERO
    (30) dato -> . FLOTANTE
    (31) dato -> . BOOLEAN
    (32) dato -> . VARIABLE

    STRING          shift and go to state 34
    CHAR            shift and go to state 38
    ENTERO          shift and go to state 69
    FLOTANTE        shift and go to state 71
    BOOLEAN         shift and go to state 72
    VARIABLE        shift and go to state 29

    dato                           shift and go to state 231

state 212

    (93) doseq_args -> LCOR dato conjuntos RCOR .

    LPAREN          reduce using rule 93 (doseq_args -> LCOR dato conjuntos RCOR .)


state 213

    (94) doseq_args -> LCOR dato vector dato . vector RCOR
    (78) vector -> . LCOR secuencia_v RCOR

    LCOR            shift and go to state 147

    vector                         shift and go to state 232

state 214

    (96) doseq_args -> LCOR dato vector RCOR .

    LPAREN          reduce using rule 96 (doseq_args -> LCOR dato vector RCOR .)


state 215

    (95) doseq_args -> LCOR vector conjuntos RCOR .

    LPAREN          reduce using rule 95 (doseq_args -> LCOR vector conjuntos RCOR .)


state 216

    (54) case -> dato impresion case .

    DOSPUNTOS       reduce using rule 54 (case -> dato impresion case .)
    LPAREN          reduce using rule 54 (case -> dato impresion case .)


state 217

    (55) case -> dato STRING case .

    DOSPUNTOS       reduce using rule 55 (case -> dato STRING case .)
    LPAREN          reduce using rule 55 (case -> dato STRING case .)


state 218

    (56) case_expression -> LPAREN CASE dato case impresion RPAREN .

    $end            reduce using rule 56 (case_expression -> LPAREN CASE dato case impresion RPAREN .)
    LPAREN          reduce using rule 56 (case_expression -> LPAREN CASE dato case impresion RPAREN .)
    NUMERAL         reduce using rule 56 (case_expression -> LPAREN CASE dato case impresion RPAREN .)
    LCOR            reduce using rule 56 (case_expression -> LPAREN CASE dato case impresion RPAREN .)
    L_LLAVE         reduce using rule 56 (case_expression -> LPAREN CASE dato case impresion RPAREN .)
    IF              reduce using rule 56 (case_expression -> LPAREN CASE dato case impresion RPAREN .)
    ENTERO          reduce using rule 56 (case_expression -> LPAREN CASE dato case impresion RPAREN .)
    FLOTANTE        reduce using rule 56 (case_expression -> LPAREN CASE dato case impresion RPAREN .)
    BOOLEAN         reduce using rule 56 (case_expression -> LPAREN CASE dato case impresion RPAREN .)
    STRING          reduce using rule 56 (case_expression -> LPAREN CASE dato case impresion RPAREN .)
    CHAR            reduce using rule 56 (case_expression -> LPAREN CASE dato case impresion RPAREN .)
    VARIABLE        reduce using rule 56 (case_expression -> LPAREN CASE dato case impresion RPAREN .)
    RPAREN          reduce using rule 56 (case_expression -> LPAREN CASE dato case impresion RPAREN .)


state 219

    (57) case_expression -> LPAREN CASE dato case DOSPUNTOS ELSE . STRING RPAREN

    STRING          shift and go to state 233


state 220

    (65) recur -> LPAREN RECUR LPAREN INC dato RPAREN . RPAREN

    RPAREN          shift and go to state 234


state 221

    (47) asignacion -> LPAREN LET LCOR VARIABLE dato RCOR RPAREN .

    $end            reduce using rule 47 (asignacion -> LPAREN LET LCOR VARIABLE dato RCOR RPAREN .)
    LPAREN          reduce using rule 47 (asignacion -> LPAREN LET LCOR VARIABLE dato RCOR RPAREN .)
    NUMERAL         reduce using rule 47 (asignacion -> LPAREN LET LCOR VARIABLE dato RCOR RPAREN .)
    LCOR            reduce using rule 47 (asignacion -> LPAREN LET LCOR VARIABLE dato RCOR RPAREN .)
    L_LLAVE         reduce using rule 47 (asignacion -> LPAREN LET LCOR VARIABLE dato RCOR RPAREN .)
    IF              reduce using rule 47 (asignacion -> LPAREN LET LCOR VARIABLE dato RCOR RPAREN .)
    ENTERO          reduce using rule 47 (asignacion -> LPAREN LET LCOR VARIABLE dato RCOR RPAREN .)
    FLOTANTE        reduce using rule 47 (asignacion -> LPAREN LET LCOR VARIABLE dato RCOR RPAREN .)
    BOOLEAN         reduce using rule 47 (asignacion -> LPAREN LET LCOR VARIABLE dato RCOR RPAREN .)
    STRING          reduce using rule 47 (asignacion -> LPAREN LET LCOR VARIABLE dato RCOR RPAREN .)
    CHAR            reduce using rule 47 (asignacion -> LPAREN LET LCOR VARIABLE dato RCOR RPAREN .)
    VARIABLE        reduce using rule 47 (asignacion -> LPAREN LET LCOR VARIABLE dato RCOR RPAREN .)
    RPAREN          reduce using rule 47 (asignacion -> LPAREN LET LCOR VARIABLE dato RCOR RPAREN .)


state 222

    (104) defn -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN . expresionDefnElse RPAREN RPAREN
    (106) defn_with_return -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN . expresionDefnElse RPAREN RPAREN defn_return
    (108) expresionDefnElse -> . CASE VARIABLE expresionCase DOSPUNTOS ELSE STRING

    CASE            shift and go to state 236

    expresionDefnElse              shift and go to state 235

state 223

    (90) operacionesLogicas -> LPAREN . if recur VARIABLE RPAREN RPAREN
    (82) if -> . IF sentencia_booleana
    (83) if -> . IF sentencia_booleana recur
    (84) if -> . LPAREN IF instrucciones body RPAREN

    IF              shift and go to state 33
    LPAREN          shift and go to state 39

    if                             shift and go to state 237

state 224

    (105) defn -> LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas . RPAREN
    (107) defn_with_return -> LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas . RPAREN defn_return

    RPAREN          shift and go to state 238


state 225

    (72) function -> LPAREN DEFFUNCION nombre_funct internos LPAREN if body . RPAREN

    RPAREN          shift and go to state 239


state 226

    (114) sentenciaLoopRecur -> LPAREN LOOP argumments LPAREN if dato RPAREN . RPAREN

    RPAREN          shift and go to state 240


state 227

    (51) cond_else -> LPAREN COND linecondition linecondition DOSPUNTOS ELSE impresion . RPAREN

    RPAREN          shift and go to state 241


state 228

    (103) doseq -> LPAREN DOSEQ doseq_args LPAREN doseq_prn RPAREN RPAREN .

    $end            reduce using rule 103 (doseq -> LPAREN DOSEQ doseq_args LPAREN doseq_prn RPAREN RPAREN .)
    LPAREN          reduce using rule 103 (doseq -> LPAREN DOSEQ doseq_args LPAREN doseq_prn RPAREN RPAREN .)
    NUMERAL         reduce using rule 103 (doseq -> LPAREN DOSEQ doseq_args LPAREN doseq_prn RPAREN RPAREN .)
    LCOR            reduce using rule 103 (doseq -> LPAREN DOSEQ doseq_args LPAREN doseq_prn RPAREN RPAREN .)
    L_LLAVE         reduce using rule 103 (doseq -> LPAREN DOSEQ doseq_args LPAREN doseq_prn RPAREN RPAREN .)
    IF              reduce using rule 103 (doseq -> LPAREN DOSEQ doseq_args LPAREN doseq_prn RPAREN RPAREN .)
    ENTERO          reduce using rule 103 (doseq -> LPAREN DOSEQ doseq_args LPAREN doseq_prn RPAREN RPAREN .)
    FLOTANTE        reduce using rule 103 (doseq -> LPAREN DOSEQ doseq_args LPAREN doseq_prn RPAREN RPAREN .)
    BOOLEAN         reduce using rule 103 (doseq -> LPAREN DOSEQ doseq_args LPAREN doseq_prn RPAREN RPAREN .)
    STRING          reduce using rule 103 (doseq -> LPAREN DOSEQ doseq_args LPAREN doseq_prn RPAREN RPAREN .)
    CHAR            reduce using rule 103 (doseq -> LPAREN DOSEQ doseq_args LPAREN doseq_prn RPAREN RPAREN .)
    VARIABLE        reduce using rule 103 (doseq -> LPAREN DOSEQ doseq_args LPAREN doseq_prn RPAREN RPAREN .)
    RPAREN          reduce using rule 103 (doseq -> LPAREN DOSEQ doseq_args LPAREN doseq_prn RPAREN RPAREN .)


state 229

    (99) doseq_prn -> PRN LPAREN dato . RPAREN

    RPAREN          shift and go to state 242


state 230

    (98) pnr_dato -> dato pnr_dato .

    RPAREN          reduce using rule 98 (pnr_dato -> dato pnr_dato .)


state 231

    (92) doseq_args -> LCOR dato LPAREN RANGE dato . RPAREN RCOR

    RPAREN          shift and go to state 243


state 232

    (94) doseq_args -> LCOR dato vector dato vector . RCOR

    RCOR            shift and go to state 244


state 233

    (57) case_expression -> LPAREN CASE dato case DOSPUNTOS ELSE STRING . RPAREN

    RPAREN          shift and go to state 245


state 234

    (65) recur -> LPAREN RECUR LPAREN INC dato RPAREN RPAREN .

    $end            reduce using rule 65 (recur -> LPAREN RECUR LPAREN INC dato RPAREN RPAREN .)
    LPAREN          reduce using rule 65 (recur -> LPAREN RECUR LPAREN INC dato RPAREN RPAREN .)
    NUMERAL         reduce using rule 65 (recur -> LPAREN RECUR LPAREN INC dato RPAREN RPAREN .)
    LCOR            reduce using rule 65 (recur -> LPAREN RECUR LPAREN INC dato RPAREN RPAREN .)
    L_LLAVE         reduce using rule 65 (recur -> LPAREN RECUR LPAREN INC dato RPAREN RPAREN .)
    IF              reduce using rule 65 (recur -> LPAREN RECUR LPAREN INC dato RPAREN RPAREN .)
    ENTERO          reduce using rule 65 (recur -> LPAREN RECUR LPAREN INC dato RPAREN RPAREN .)
    FLOTANTE        reduce using rule 65 (recur -> LPAREN RECUR LPAREN INC dato RPAREN RPAREN .)
    BOOLEAN         reduce using rule 65 (recur -> LPAREN RECUR LPAREN INC dato RPAREN RPAREN .)
    STRING          reduce using rule 65 (recur -> LPAREN RECUR LPAREN INC dato RPAREN RPAREN .)
    CHAR            reduce using rule 65 (recur -> LPAREN RECUR LPAREN INC dato RPAREN RPAREN .)
    VARIABLE        reduce using rule 65 (recur -> LPAREN RECUR LPAREN INC dato RPAREN RPAREN .)
    RPAREN          reduce using rule 65 (recur -> LPAREN RECUR LPAREN INC dato RPAREN RPAREN .)


state 235

    (104) defn -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse . RPAREN RPAREN
    (106) defn_with_return -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse . RPAREN RPAREN defn_return

    RPAREN          shift and go to state 246


state 236

    (108) expresionDefnElse -> CASE . VARIABLE expresionCase DOSPUNTOS ELSE STRING

    VARIABLE        shift and go to state 247


state 237

    (90) operacionesLogicas -> LPAREN if . recur VARIABLE RPAREN RPAREN
    (65) recur -> . LPAREN RECUR LPAREN INC dato RPAREN RPAREN

    LPAREN          shift and go to state 120

    recur                          shift and go to state 90

state 238

    (105) defn -> LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN .
    (107) defn_with_return -> LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN . defn_return
    (109) defn_return -> . LPAREN dato dato RPAREN

  ! shift/reduce conflict for LPAREN resolved as shift
    $end            reduce using rule 105 (defn -> LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN .)
    NUMERAL         reduce using rule 105 (defn -> LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN .)
    LCOR            reduce using rule 105 (defn -> LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN .)
    L_LLAVE         reduce using rule 105 (defn -> LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN .)
    IF              reduce using rule 105 (defn -> LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN .)
    ENTERO          reduce using rule 105 (defn -> LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN .)
    FLOTANTE        reduce using rule 105 (defn -> LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN .)
    BOOLEAN         reduce using rule 105 (defn -> LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN .)
    STRING          reduce using rule 105 (defn -> LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN .)
    CHAR            reduce using rule 105 (defn -> LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN .)
    VARIABLE        reduce using rule 105 (defn -> LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN .)
    RPAREN          reduce using rule 105 (defn -> LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN .)
    LPAREN          shift and go to state 248

  ! LPAREN          [ reduce using rule 105 (defn -> LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN .) ]

    defn_return                    shift and go to state 249

state 239

    (72) function -> LPAREN DEFFUNCION nombre_funct internos LPAREN if body RPAREN .

    $end            reduce using rule 72 (function -> LPAREN DEFFUNCION nombre_funct internos LPAREN if body RPAREN .)
    LPAREN          reduce using rule 72 (function -> LPAREN DEFFUNCION nombre_funct internos LPAREN if body RPAREN .)
    NUMERAL         reduce using rule 72 (function -> LPAREN DEFFUNCION nombre_funct internos LPAREN if body RPAREN .)
    LCOR            reduce using rule 72 (function -> LPAREN DEFFUNCION nombre_funct internos LPAREN if body RPAREN .)
    L_LLAVE         reduce using rule 72 (function -> LPAREN DEFFUNCION nombre_funct internos LPAREN if body RPAREN .)
    IF              reduce using rule 72 (function -> LPAREN DEFFUNCION nombre_funct internos LPAREN if body RPAREN .)
    ENTERO          reduce using rule 72 (function -> LPAREN DEFFUNCION nombre_funct internos LPAREN if body RPAREN .)
    FLOTANTE        reduce using rule 72 (function -> LPAREN DEFFUNCION nombre_funct internos LPAREN if body RPAREN .)
    BOOLEAN         reduce using rule 72 (function -> LPAREN DEFFUNCION nombre_funct internos LPAREN if body RPAREN .)
    STRING          reduce using rule 72 (function -> LPAREN DEFFUNCION nombre_funct internos LPAREN if body RPAREN .)
    CHAR            reduce using rule 72 (function -> LPAREN DEFFUNCION nombre_funct internos LPAREN if body RPAREN .)
    VARIABLE        reduce using rule 72 (function -> LPAREN DEFFUNCION nombre_funct internos LPAREN if body RPAREN .)
    RPAREN          reduce using rule 72 (function -> LPAREN DEFFUNCION nombre_funct internos LPAREN if body RPAREN .)


state 240

    (114) sentenciaLoopRecur -> LPAREN LOOP argumments LPAREN if dato RPAREN RPAREN .

    $end            reduce using rule 114 (sentenciaLoopRecur -> LPAREN LOOP argumments LPAREN if dato RPAREN RPAREN .)
    LPAREN          reduce using rule 114 (sentenciaLoopRecur -> LPAREN LOOP argumments LPAREN if dato RPAREN RPAREN .)
    NUMERAL         reduce using rule 114 (sentenciaLoopRecur -> LPAREN LOOP argumments LPAREN if dato RPAREN RPAREN .)
    LCOR            reduce using rule 114 (sentenciaLoopRecur -> LPAREN LOOP argumments LPAREN if dato RPAREN RPAREN .)
    L_LLAVE         reduce using rule 114 (sentenciaLoopRecur -> LPAREN LOOP argumments LPAREN if dato RPAREN RPAREN .)
    IF              reduce using rule 114 (sentenciaLoopRecur -> LPAREN LOOP argumments LPAREN if dato RPAREN RPAREN .)
    ENTERO          reduce using rule 114 (sentenciaLoopRecur -> LPAREN LOOP argumments LPAREN if dato RPAREN RPAREN .)
    FLOTANTE        reduce using rule 114 (sentenciaLoopRecur -> LPAREN LOOP argumments LPAREN if dato RPAREN RPAREN .)
    BOOLEAN         reduce using rule 114 (sentenciaLoopRecur -> LPAREN LOOP argumments LPAREN if dato RPAREN RPAREN .)
    STRING          reduce using rule 114 (sentenciaLoopRecur -> LPAREN LOOP argumments LPAREN if dato RPAREN RPAREN .)
    CHAR            reduce using rule 114 (sentenciaLoopRecur -> LPAREN LOOP argumments LPAREN if dato RPAREN RPAREN .)
    VARIABLE        reduce using rule 114 (sentenciaLoopRecur -> LPAREN LOOP argumments LPAREN if dato RPAREN RPAREN .)
    RPAREN          reduce using rule 114 (sentenciaLoopRecur -> LPAREN LOOP argumments LPAREN if dato RPAREN RPAREN .)


state 241

    (51) cond_else -> LPAREN COND linecondition linecondition DOSPUNTOS ELSE impresion RPAREN .

    $end            reduce using rule 51 (cond_else -> LPAREN COND linecondition linecondition DOSPUNTOS ELSE impresion RPAREN .)
    LPAREN          reduce using rule 51 (cond_else -> LPAREN COND linecondition linecondition DOSPUNTOS ELSE impresion RPAREN .)
    NUMERAL         reduce using rule 51 (cond_else -> LPAREN COND linecondition linecondition DOSPUNTOS ELSE impresion RPAREN .)
    LCOR            reduce using rule 51 (cond_else -> LPAREN COND linecondition linecondition DOSPUNTOS ELSE impresion RPAREN .)
    L_LLAVE         reduce using rule 51 (cond_else -> LPAREN COND linecondition linecondition DOSPUNTOS ELSE impresion RPAREN .)
    IF              reduce using rule 51 (cond_else -> LPAREN COND linecondition linecondition DOSPUNTOS ELSE impresion RPAREN .)
    ENTERO          reduce using rule 51 (cond_else -> LPAREN COND linecondition linecondition DOSPUNTOS ELSE impresion RPAREN .)
    FLOTANTE        reduce using rule 51 (cond_else -> LPAREN COND linecondition linecondition DOSPUNTOS ELSE impresion RPAREN .)
    BOOLEAN         reduce using rule 51 (cond_else -> LPAREN COND linecondition linecondition DOSPUNTOS ELSE impresion RPAREN .)
    STRING          reduce using rule 51 (cond_else -> LPAREN COND linecondition linecondition DOSPUNTOS ELSE impresion RPAREN .)
    CHAR            reduce using rule 51 (cond_else -> LPAREN COND linecondition linecondition DOSPUNTOS ELSE impresion RPAREN .)
    VARIABLE        reduce using rule 51 (cond_else -> LPAREN COND linecondition linecondition DOSPUNTOS ELSE impresion RPAREN .)
    RPAREN          reduce using rule 51 (cond_else -> LPAREN COND linecondition linecondition DOSPUNTOS ELSE impresion RPAREN .)


state 242

    (99) doseq_prn -> PRN LPAREN dato RPAREN .

    RPAREN          reduce using rule 99 (doseq_prn -> PRN LPAREN dato RPAREN .)


state 243

    (92) doseq_args -> LCOR dato LPAREN RANGE dato RPAREN . RCOR

    RCOR            shift and go to state 250


state 244

    (94) doseq_args -> LCOR dato vector dato vector RCOR .

    LPAREN          reduce using rule 94 (doseq_args -> LCOR dato vector dato vector RCOR .)


state 245

    (57) case_expression -> LPAREN CASE dato case DOSPUNTOS ELSE STRING RPAREN .

    $end            reduce using rule 57 (case_expression -> LPAREN CASE dato case DOSPUNTOS ELSE STRING RPAREN .)
    LPAREN          reduce using rule 57 (case_expression -> LPAREN CASE dato case DOSPUNTOS ELSE STRING RPAREN .)
    NUMERAL         reduce using rule 57 (case_expression -> LPAREN CASE dato case DOSPUNTOS ELSE STRING RPAREN .)
    LCOR            reduce using rule 57 (case_expression -> LPAREN CASE dato case DOSPUNTOS ELSE STRING RPAREN .)
    L_LLAVE         reduce using rule 57 (case_expression -> LPAREN CASE dato case DOSPUNTOS ELSE STRING RPAREN .)
    IF              reduce using rule 57 (case_expression -> LPAREN CASE dato case DOSPUNTOS ELSE STRING RPAREN .)
    ENTERO          reduce using rule 57 (case_expression -> LPAREN CASE dato case DOSPUNTOS ELSE STRING RPAREN .)
    FLOTANTE        reduce using rule 57 (case_expression -> LPAREN CASE dato case DOSPUNTOS ELSE STRING RPAREN .)
    BOOLEAN         reduce using rule 57 (case_expression -> LPAREN CASE dato case DOSPUNTOS ELSE STRING RPAREN .)
    STRING          reduce using rule 57 (case_expression -> LPAREN CASE dato case DOSPUNTOS ELSE STRING RPAREN .)
    CHAR            reduce using rule 57 (case_expression -> LPAREN CASE dato case DOSPUNTOS ELSE STRING RPAREN .)
    VARIABLE        reduce using rule 57 (case_expression -> LPAREN CASE dato case DOSPUNTOS ELSE STRING RPAREN .)
    RPAREN          reduce using rule 57 (case_expression -> LPAREN CASE dato case DOSPUNTOS ELSE STRING RPAREN .)


state 246

    (104) defn -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN . RPAREN
    (106) defn_with_return -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN . RPAREN defn_return

    RPAREN          shift and go to state 251


state 247

    (108) expresionDefnElse -> CASE VARIABLE . expresionCase DOSPUNTOS ELSE STRING
    (110) expresionCase -> . dato STRING
    (27) dato -> . STRING
    (28) dato -> . CHAR
    (29) dato -> . ENTERO
    (30) dato -> . FLOTANTE
    (31) dato -> . BOOLEAN
    (32) dato -> . VARIABLE

    STRING          shift and go to state 34
    CHAR            shift and go to state 38
    ENTERO          shift and go to state 69
    FLOTANTE        shift and go to state 71
    BOOLEAN         shift and go to state 72
    VARIABLE        shift and go to state 29

    expresionCase                  shift and go to state 252
    dato                           shift and go to state 253

state 248

    (109) defn_return -> LPAREN . dato dato RPAREN
    (27) dato -> . STRING
    (28) dato -> . CHAR
    (29) dato -> . ENTERO
    (30) dato -> . FLOTANTE
    (31) dato -> . BOOLEAN
    (32) dato -> . VARIABLE

    STRING          shift and go to state 34
    CHAR            shift and go to state 38
    ENTERO          shift and go to state 69
    FLOTANTE        shift and go to state 71
    BOOLEAN         shift and go to state 72
    VARIABLE        shift and go to state 29

    dato                           shift and go to state 254

state 249

    (107) defn_with_return -> LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN defn_return .

    $end            reduce using rule 107 (defn_with_return -> LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN defn_return .)
    LPAREN          reduce using rule 107 (defn_with_return -> LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN defn_return .)
    NUMERAL         reduce using rule 107 (defn_with_return -> LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN defn_return .)
    LCOR            reduce using rule 107 (defn_with_return -> LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN defn_return .)
    L_LLAVE         reduce using rule 107 (defn_with_return -> LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN defn_return .)
    IF              reduce using rule 107 (defn_with_return -> LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN defn_return .)
    ENTERO          reduce using rule 107 (defn_with_return -> LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN defn_return .)
    FLOTANTE        reduce using rule 107 (defn_with_return -> LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN defn_return .)
    BOOLEAN         reduce using rule 107 (defn_with_return -> LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN defn_return .)
    STRING          reduce using rule 107 (defn_with_return -> LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN defn_return .)
    CHAR            reduce using rule 107 (defn_with_return -> LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN defn_return .)
    VARIABLE        reduce using rule 107 (defn_with_return -> LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN defn_return .)
    RPAREN          reduce using rule 107 (defn_with_return -> LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN defn_return .)


state 250

    (92) doseq_args -> LCOR dato LPAREN RANGE dato RPAREN RCOR .

    LPAREN          reduce using rule 92 (doseq_args -> LCOR dato LPAREN RANGE dato RPAREN RCOR .)


state 251

    (104) defn -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN .
    (106) defn_with_return -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN . defn_return
    (109) defn_return -> . LPAREN dato dato RPAREN

  ! shift/reduce conflict for LPAREN resolved as shift
    $end            reduce using rule 104 (defn -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN .)
    NUMERAL         reduce using rule 104 (defn -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN .)
    LCOR            reduce using rule 104 (defn -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN .)
    L_LLAVE         reduce using rule 104 (defn -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN .)
    IF              reduce using rule 104 (defn -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN .)
    ENTERO          reduce using rule 104 (defn -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN .)
    FLOTANTE        reduce using rule 104 (defn -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN .)
    BOOLEAN         reduce using rule 104 (defn -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN .)
    STRING          reduce using rule 104 (defn -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN .)
    CHAR            reduce using rule 104 (defn -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN .)
    VARIABLE        reduce using rule 104 (defn -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN .)
    RPAREN          reduce using rule 104 (defn -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN .)
    LPAREN          shift and go to state 248

  ! LPAREN          [ reduce using rule 104 (defn -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN .) ]

    defn_return                    shift and go to state 255

state 252

    (108) expresionDefnElse -> CASE VARIABLE expresionCase . DOSPUNTOS ELSE STRING

    DOSPUNTOS       shift and go to state 256


state 253

    (110) expresionCase -> dato . STRING

    STRING          shift and go to state 257


state 254

    (109) defn_return -> LPAREN dato . dato RPAREN
    (27) dato -> . STRING
    (28) dato -> . CHAR
    (29) dato -> . ENTERO
    (30) dato -> . FLOTANTE
    (31) dato -> . BOOLEAN
    (32) dato -> . VARIABLE

    STRING          shift and go to state 34
    CHAR            shift and go to state 38
    ENTERO          shift and go to state 69
    FLOTANTE        shift and go to state 71
    BOOLEAN         shift and go to state 72
    VARIABLE        shift and go to state 29

    dato                           shift and go to state 258

state 255

    (106) defn_with_return -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN defn_return .

    $end            reduce using rule 106 (defn_with_return -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN defn_return .)
    LPAREN          reduce using rule 106 (defn_with_return -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN defn_return .)
    NUMERAL         reduce using rule 106 (defn_with_return -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN defn_return .)
    LCOR            reduce using rule 106 (defn_with_return -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN defn_return .)
    L_LLAVE         reduce using rule 106 (defn_with_return -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN defn_return .)
    IF              reduce using rule 106 (defn_with_return -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN defn_return .)
    ENTERO          reduce using rule 106 (defn_with_return -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN defn_return .)
    FLOTANTE        reduce using rule 106 (defn_with_return -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN defn_return .)
    BOOLEAN         reduce using rule 106 (defn_with_return -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN defn_return .)
    STRING          reduce using rule 106 (defn_with_return -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN defn_return .)
    CHAR            reduce using rule 106 (defn_with_return -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN defn_return .)
    VARIABLE        reduce using rule 106 (defn_with_return -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN defn_return .)
    RPAREN          reduce using rule 106 (defn_with_return -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN defn_return .)


state 256

    (108) expresionDefnElse -> CASE VARIABLE expresionCase DOSPUNTOS . ELSE STRING

    ELSE            shift and go to state 259


state 257

    (110) expresionCase -> dato STRING .

    DOSPUNTOS       reduce using rule 110 (expresionCase -> dato STRING .)


state 258

    (109) defn_return -> LPAREN dato dato . RPAREN

    RPAREN          shift and go to state 260


state 259

    (108) expresionDefnElse -> CASE VARIABLE expresionCase DOSPUNTOS ELSE . STRING

    STRING          shift and go to state 261


state 260

    (109) defn_return -> LPAREN dato dato RPAREN .

    $end            reduce using rule 109 (defn_return -> LPAREN dato dato RPAREN .)
    LPAREN          reduce using rule 109 (defn_return -> LPAREN dato dato RPAREN .)
    NUMERAL         reduce using rule 109 (defn_return -> LPAREN dato dato RPAREN .)
    LCOR            reduce using rule 109 (defn_return -> LPAREN dato dato RPAREN .)
    L_LLAVE         reduce using rule 109 (defn_return -> LPAREN dato dato RPAREN .)
    IF              reduce using rule 109 (defn_return -> LPAREN dato dato RPAREN .)
    ENTERO          reduce using rule 109 (defn_return -> LPAREN dato dato RPAREN .)
    FLOTANTE        reduce using rule 109 (defn_return -> LPAREN dato dato RPAREN .)
    BOOLEAN         reduce using rule 109 (defn_return -> LPAREN dato dato RPAREN .)
    STRING          reduce using rule 109 (defn_return -> LPAREN dato dato RPAREN .)
    CHAR            reduce using rule 109 (defn_return -> LPAREN dato dato RPAREN .)
    VARIABLE        reduce using rule 109 (defn_return -> LPAREN dato dato RPAREN .)
    RPAREN          reduce using rule 109 (defn_return -> LPAREN dato dato RPAREN .)


state 261

    (108) expresionDefnElse -> CASE VARIABLE expresionCase DOSPUNTOS ELSE STRING .

    RPAREN          reduce using rule 108 (expresionDefnElse -> CASE VARIABLE expresionCase DOSPUNTOS ELSE STRING .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ENTERO in state 68 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 76 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 86 resolved as shift
WARNING: shift/reduce conflict for LCOR in state 92 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 137 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 238 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 251 resolved as shift
WARNING: reduce/reduce conflict in state 35 resolved using rule (dato -> ENTERO)
WARNING: rejected rule (valor -> ENTERO) in state 35
WARNING: reduce/reduce conflict in state 36 resolved using rule (dato -> FLOTANTE)
WARNING: rejected rule (valor -> FLOTANTE) in state 36
WARNING: reduce/reduce conflict in state 37 resolved using rule (dato -> BOOLEAN)
WARNING: rejected rule (valor -> BOOLEAN) in state 37
WARNING: reduce/reduce conflict in state 86 resolved using rule (instrucciones -> sentencia_booleana)
WARNING: rejected rule (if -> IF sentencia_booleana) in state 86
WARNING: reduce/reduce conflict in state 138 resolved using rule (dato -> STRING)
WARNING: rejected rule (description -> STRING) in state 138
WARNING: reduce/reduce conflict in state 178 resolved using rule (argumentos_lista -> dato)
WARNING: rejected rule (secuencia_v -> dato) in state 178
WARNING: Rule (valor -> ENTERO) is never reduced
WARNING: Rule (valor -> FLOTANTE) is never reduced
WARNING: Rule (valor -> BOOLEAN) is never reduced
