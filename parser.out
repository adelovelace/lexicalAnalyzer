Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    CLASE
    CONJUNTOS
    DOTIMES
    FUNCION
    FUTURE
    IGUAL
    INPUT
    LISTA
    NOT
    NS
    NUEVO
    STR
    WHEN

Grammar

Rule 0     S' -> instrucciones
Rule 1     instrucciones -> asignacion
Rule 2     instrucciones -> impresion
Rule 3     instrucciones -> operacion_aritmetica1
Rule 4     instrucciones -> condicional
Rule 5     instrucciones -> conjuntos
Rule 6     instrucciones -> vector_entero
Rule 7     instrucciones -> vector_flotante
Rule 8     instrucciones -> mapa_entero
Rule 9     instrucciones -> mapa_flotante
Rule 10    instrucciones -> if
Rule 11    instrucciones -> if_do
Rule 12    instrucciones -> defn
Rule 13    instrucciones -> defn_with_return
Rule 14    instrucciones -> operacionesLogicas
Rule 15    instrucciones -> sentenciaLoopRecur
Rule 16    instrucciones -> cond_
Rule 17    instrucciones -> cond_else
Rule 18    instrucciones -> doseq
Rule 19    instrucciones -> case_expression
Rule 20    instrucciones -> lista
Rule 21    instrucciones -> sentencia_booleana
Rule 22    instrucciones -> definition
Rule 23    dato -> STRING
Rule 24    dato -> CHAR
Rule 25    dato -> ENTERO
Rule 26    dato -> FLOTANTE
Rule 27    dato -> BOOLEAN
Rule 28    dato -> VARIABLE
Rule 29    valor -> ENTERO
Rule 30    valor -> FLOTANTE
Rule 31    valor -> BOOLEAN
Rule 32    operador_comparadores -> COMPARA_IGUAL
Rule 33    operador_comparadores -> MENORQUE
Rule 34    operador_comparadores -> MAYORQUE
Rule 35    operador_comparadores -> MAYORIGUALQUE
Rule 36    operador_comparadores -> MENORIGUALQUE
Rule 37    operador_comparadores -> DIFERENTE
Rule 38    asignacion -> LPAREN DEFICION VARIABLE dato RPAREN
Rule 39    asignacion -> LPAREN LET LCOR VARIABLE dato RCOR RPAREN
Rule 40    sentencia_booleana -> LPAREN operador_comparadores dato dato RPAREN
Rule 41    linecondition -> sentencia_booleana impresion
Rule 42    cond_ -> LPAREN COND linecondition linecondition RPAREN
Rule 43    cond_else -> LPAREN COND linecondition linecondition DOSPUNTOS ELSE impresion RPAREN
Rule 44    case -> dato impresion
Rule 45    case -> dato dato STRING
Rule 46    case_else -> DOSPUNTOS ELSE STRING
Rule 47    case_expression -> LPAREN CASE dato case case impresion RPAREN
Rule 48    case_expression -> LPAREN CASE dato case case case_else RPAREN
Rule 49    lista -> LPAREN LIST dato dato RPAREN
Rule 50    description -> STRING
Rule 51    increase -> INCREASE LCOR dato RCOR
Rule 52    argumments -> LCOR dato dato dato RCOR
Rule 53    argumments -> LCOR dato dato RCOR
Rule 54    argumments -> LCOR dato RCOR
Rule 55    body -> instrucciones
Rule 56    recur -> LPAREN RECUR LPAREN INC dato RPAREN RPAREN
Rule 57    internos -> description
Rule 58    internos -> argumments
Rule 59    internos -> body
Rule 60    internos -> increase
Rule 61    internos -> argumments body
Rule 62    internos -> description argumments body
Rule 63    definition -> LPAREN DEFFUNCION VARIABLE internos RPAREN
Rule 64    definition -> LPAREN DEFFUNCION internos if dato RPAREN
Rule 65    impresion -> LPAREN IMPRIMIR dato RPAREN
Rule 66    valor -> VARIABLE
Rule 67    vector_entero -> VECTOR_ENTERO
Rule 68    vector_flotante -> VECTOR_FLOTANTE
Rule 69    mapa_entero -> MAPA_ENTERO
Rule 70    mapa_flotante -> MAPA_FLOTANTE
Rule 71    if -> IF LPAREN operador_comparadores dato dato RPAREN
Rule 72    if -> IF sentencia_booleana
Rule 73    if -> IF sentencia_booleana recur
Rule 74    if_do -> LPAREN IF LPAREN operador_comparadores dato dato RPAREN LPAREN DO LPAREN dato RPAREN BOOLEAN RPAREN RPAREN
Rule 75    operacion -> MAS
Rule 76    operacion -> MENOS
Rule 77    operacion -> PRODUCTO
Rule 78    operacion -> DIVISION
Rule 79    operacionesLogicas -> LPAREN IF LPAREN MENORQUE VARIABLE ENTERO RPAREN LPAREN RECUR LPAREN INC LPAREN VARIABLE RPAREN RPAREN VARIABLE RPAREN RPAREN
Rule 80    operacion_aritmetica1 -> LPAREN operacion valor valor RPAREN
Rule 81    condicional -> LPAREN operacion valor valor RPAREN
Rule 82    doseq_args -> LCOR dato LPAREN RANGE dato RPAREN RCOR
Rule 83    doseq_args -> LCOR dato conjuntos RCOR
Rule 84    doseq_args -> LCOR dato vector_entero dato vector_entero RCOR
Rule 85    doseq_args -> LCOR vector_entero conjuntos RCOR
Rule 86    doseq_prn -> PRN LPAREN dato RPAREN
Rule 87    doseq_prn -> PRN LPAREN dato dato RPAREN
Rule 88    doseq_prn -> PRN LPAREN dato dato dato RPAREN
Rule 89    doseq -> LPAREN DOSEQ doseq_args LPAREN impresion RPAREN RPAREN
Rule 90    doseq -> LPAREN DOSEQ doseq_args LPAREN doseq_prn RPAREN RPAREN
Rule 91    defn -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN
Rule 92    defn -> LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN
Rule 93    defn_with_return -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN defn_return
Rule 94    defn_with_return -> LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN defn_return
Rule 95    expresionDefnElse -> CASE VARIABLE expresionCase DOSPUNTOS ELSE STRING
Rule 96    defn_return -> LPAREN dato dato RPAREN
Rule 97    expresionCase -> dato STRING
Rule 98    conjuntos -> NUMERAL L_LLAVE expresionConjuntoEnteros R_LLAVE
Rule 99    conjuntos -> NUMERAL L_LLAVE expresionConjuntoDouble R_LLAVE
Rule 100   conjuntos -> NUMERAL L_LLAVE expresionConjuntoString R_LLAVE
Rule 101   sentenciaLoopRecur -> LPAREN LOOP argumments LPAREN if dato RPAREN RPAREN
Rule 102   expresionConjuntoEnteros -> ENTERO
Rule 103   expresionConjuntoEnteros -> ENTERO expresionConjuntoEnteros
Rule 104   expresionConjuntoDouble -> FLOTANTE
Rule 105   expresionConjuntoDouble -> FLOTANTE expresionConjuntoDouble
Rule 106   expresionConjuntoString -> STRING
Rule 107   expresionConjuntoString -> STRING expresionConjuntoString

Terminals, with rules where they appear

BOOLEAN              : 27 31 74
CASE                 : 47 48 95
CHAR                 : 24
CLASE                : 
COMPARA_IGUAL        : 32
COND                 : 42 43
CONJUNTOS            : 
DEFFUNCION           : 63 64 91 92 93 94
DEFICION             : 38
DIFERENTE            : 37
DIVISION             : 78
DO                   : 74
DOSEQ                : 89 90
DOSPUNTOS            : 43 46 95
DOTIMES              : 
ELSE                 : 43 46 95
ENTERO               : 25 29 79 102 103
FLOTANTE             : 26 30 104 105
FUNCION              : 
FUTURE               : 
IF                   : 71 72 73 74 79
IGUAL                : 
IMPRIMIR             : 65
INC                  : 56 79
INCREASE             : 51 92 94
INPUT                : 
LCOR                 : 39 51 52 53 54 82 83 84 85 91 92 93 94
LET                  : 39
LIST                 : 49
LISTA                : 
LOOP                 : 101
LPAREN               : 38 39 40 42 43 47 48 49 56 56 63 64 65 71 74 74 74 74 79 79 79 79 79 80 81 82 86 87 88 89 89 90 90 91 91 92 93 93 94 96 101 101
L_LLAVE              : 98 99 100
MAPA_ENTERO          : 69
MAPA_FLOTANTE        : 70
MAS                  : 75
MAYORIGUALQUE        : 35
MAYORQUE             : 34
MENORIGUALQUE        : 36
MENORQUE             : 33 79
MENOS                : 76
NOT                  : 
NS                   : 
NUEVO                : 
NUMERAL              : 98 99 100
PRN                  : 86 87 88
PRODUCTO             : 77
RANGE                : 82
RCOR                 : 39 51 52 53 54 82 83 84 85 91 92 93 94
RECUR                : 56 79
RPAREN               : 38 39 40 42 43 47 48 49 56 56 63 64 65 71 74 74 74 74 79 79 79 79 79 80 81 82 86 87 88 89 89 90 90 91 91 92 93 93 94 96 101 101
R_LLAVE              : 98 99 100
STR                  : 
STRING               : 23 45 46 50 95 97 106 107
VARIABLE             : 28 38 39 63 66 79 79 79 91 91 92 93 93 94 95
VECTOR_ENTERO        : 67
VECTOR_FLOTANTE      : 68
WHEN                 : 
error                : 

Nonterminals, with rules where they appear

argumments           : 58 61 62 101
asignacion           : 1
body                 : 59 61 62
case                 : 47 47 48 48
case_else            : 48
case_expression      : 19
cond_                : 16
cond_else            : 17
condicional          : 4
conjuntos            : 5 83 85
dato                 : 38 39 40 40 44 45 45 47 48 49 49 51 52 52 52 53 53 54 56 64 65 71 71 74 74 74 82 82 83 84 84 86 87 87 88 88 88 96 96 97 101
definition           : 22
defn                 : 12
defn_return          : 93 94
defn_with_return     : 13
description          : 57 62
doseq                : 18
doseq_args           : 89 90
doseq_prn            : 90
expresionCase        : 95
expresionConjuntoDouble : 99 105
expresionConjuntoEnteros : 98 103
expresionConjuntoString : 100 107
expresionDefnElse    : 91 93
if                   : 10 64 101
if_do                : 11
impresion            : 2 41 43 44 47 89
increase             : 60
instrucciones        : 55 0
internos             : 63 64
linecondition        : 42 42 43 43
lista                : 20
mapa_entero          : 8
mapa_flotante        : 9
operacion            : 80 81
operacion_aritmetica1 : 3
operacionesLogicas   : 14 92 94
operador_comparadores : 40 71 74
recur                : 73
sentenciaLoopRecur   : 15
sentencia_booleana   : 21 41 72 73
valor                : 80 80 81 81
vector_entero        : 6 84 84 85
vector_flotante      : 7

Parsing method: LALR

state 0

    (0) S' -> . instrucciones
    (1) instrucciones -> . asignacion
    (2) instrucciones -> . impresion
    (3) instrucciones -> . operacion_aritmetica1
    (4) instrucciones -> . condicional
    (5) instrucciones -> . conjuntos
    (6) instrucciones -> . vector_entero
    (7) instrucciones -> . vector_flotante
    (8) instrucciones -> . mapa_entero
    (9) instrucciones -> . mapa_flotante
    (10) instrucciones -> . if
    (11) instrucciones -> . if_do
    (12) instrucciones -> . defn
    (13) instrucciones -> . defn_with_return
    (14) instrucciones -> . operacionesLogicas
    (15) instrucciones -> . sentenciaLoopRecur
    (16) instrucciones -> . cond_
    (17) instrucciones -> . cond_else
    (18) instrucciones -> . doseq
    (19) instrucciones -> . case_expression
    (20) instrucciones -> . lista
    (21) instrucciones -> . sentencia_booleana
    (22) instrucciones -> . definition
    (38) asignacion -> . LPAREN DEFICION VARIABLE dato RPAREN
    (39) asignacion -> . LPAREN LET LCOR VARIABLE dato RCOR RPAREN
    (65) impresion -> . LPAREN IMPRIMIR dato RPAREN
    (80) operacion_aritmetica1 -> . LPAREN operacion valor valor RPAREN
    (81) condicional -> . LPAREN operacion valor valor RPAREN
    (98) conjuntos -> . NUMERAL L_LLAVE expresionConjuntoEnteros R_LLAVE
    (99) conjuntos -> . NUMERAL L_LLAVE expresionConjuntoDouble R_LLAVE
    (100) conjuntos -> . NUMERAL L_LLAVE expresionConjuntoString R_LLAVE
    (67) vector_entero -> . VECTOR_ENTERO
    (68) vector_flotante -> . VECTOR_FLOTANTE
    (69) mapa_entero -> . MAPA_ENTERO
    (70) mapa_flotante -> . MAPA_FLOTANTE
    (71) if -> . IF LPAREN operador_comparadores dato dato RPAREN
    (72) if -> . IF sentencia_booleana
    (73) if -> . IF sentencia_booleana recur
    (74) if_do -> . LPAREN IF LPAREN operador_comparadores dato dato RPAREN LPAREN DO LPAREN dato RPAREN BOOLEAN RPAREN RPAREN
    (91) defn -> . LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN
    (92) defn -> . LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN
    (93) defn_with_return -> . LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN defn_return
    (94) defn_with_return -> . LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN defn_return
    (79) operacionesLogicas -> . LPAREN IF LPAREN MENORQUE VARIABLE ENTERO RPAREN LPAREN RECUR LPAREN INC LPAREN VARIABLE RPAREN RPAREN VARIABLE RPAREN RPAREN
    (101) sentenciaLoopRecur -> . LPAREN LOOP argumments LPAREN if dato RPAREN RPAREN
    (42) cond_ -> . LPAREN COND linecondition linecondition RPAREN
    (43) cond_else -> . LPAREN COND linecondition linecondition DOSPUNTOS ELSE impresion RPAREN
    (89) doseq -> . LPAREN DOSEQ doseq_args LPAREN impresion RPAREN RPAREN
    (90) doseq -> . LPAREN DOSEQ doseq_args LPAREN doseq_prn RPAREN RPAREN
    (47) case_expression -> . LPAREN CASE dato case case impresion RPAREN
    (48) case_expression -> . LPAREN CASE dato case case case_else RPAREN
    (49) lista -> . LPAREN LIST dato dato RPAREN
    (40) sentencia_booleana -> . LPAREN operador_comparadores dato dato RPAREN
    (63) definition -> . LPAREN DEFFUNCION VARIABLE internos RPAREN
    (64) definition -> . LPAREN DEFFUNCION internos if dato RPAREN

    LPAREN          shift and go to state 24
    NUMERAL         shift and go to state 25
    VECTOR_ENTERO   shift and go to state 26
    VECTOR_FLOTANTE shift and go to state 27
    MAPA_ENTERO     shift and go to state 28
    MAPA_FLOTANTE   shift and go to state 29
    IF              shift and go to state 30

    instrucciones                  shift and go to state 1
    asignacion                     shift and go to state 2
    impresion                      shift and go to state 3
    operacion_aritmetica1          shift and go to state 4
    condicional                    shift and go to state 5
    conjuntos                      shift and go to state 6
    vector_entero                  shift and go to state 7
    vector_flotante                shift and go to state 8
    mapa_entero                    shift and go to state 9
    mapa_flotante                  shift and go to state 10
    if                             shift and go to state 11
    if_do                          shift and go to state 12
    defn                           shift and go to state 13
    defn_with_return               shift and go to state 14
    operacionesLogicas             shift and go to state 15
    sentenciaLoopRecur             shift and go to state 16
    cond_                          shift and go to state 17
    cond_else                      shift and go to state 18
    doseq                          shift and go to state 19
    case_expression                shift and go to state 20
    lista                          shift and go to state 21
    sentencia_booleana             shift and go to state 22
    definition                     shift and go to state 23

state 1

    (0) S' -> instrucciones .



state 2

    (1) instrucciones -> asignacion .

    $end            reduce using rule 1 (instrucciones -> asignacion .)
    IF              reduce using rule 1 (instrucciones -> asignacion .)
    RPAREN          reduce using rule 1 (instrucciones -> asignacion .)


state 3

    (2) instrucciones -> impresion .

    $end            reduce using rule 2 (instrucciones -> impresion .)
    IF              reduce using rule 2 (instrucciones -> impresion .)
    RPAREN          reduce using rule 2 (instrucciones -> impresion .)


state 4

    (3) instrucciones -> operacion_aritmetica1 .

    $end            reduce using rule 3 (instrucciones -> operacion_aritmetica1 .)
    IF              reduce using rule 3 (instrucciones -> operacion_aritmetica1 .)
    RPAREN          reduce using rule 3 (instrucciones -> operacion_aritmetica1 .)


state 5

    (4) instrucciones -> condicional .

    $end            reduce using rule 4 (instrucciones -> condicional .)
    IF              reduce using rule 4 (instrucciones -> condicional .)
    RPAREN          reduce using rule 4 (instrucciones -> condicional .)


state 6

    (5) instrucciones -> conjuntos .

    $end            reduce using rule 5 (instrucciones -> conjuntos .)
    IF              reduce using rule 5 (instrucciones -> conjuntos .)
    RPAREN          reduce using rule 5 (instrucciones -> conjuntos .)


state 7

    (6) instrucciones -> vector_entero .

    $end            reduce using rule 6 (instrucciones -> vector_entero .)
    IF              reduce using rule 6 (instrucciones -> vector_entero .)
    RPAREN          reduce using rule 6 (instrucciones -> vector_entero .)


state 8

    (7) instrucciones -> vector_flotante .

    $end            reduce using rule 7 (instrucciones -> vector_flotante .)
    IF              reduce using rule 7 (instrucciones -> vector_flotante .)
    RPAREN          reduce using rule 7 (instrucciones -> vector_flotante .)


state 9

    (8) instrucciones -> mapa_entero .

    $end            reduce using rule 8 (instrucciones -> mapa_entero .)
    IF              reduce using rule 8 (instrucciones -> mapa_entero .)
    RPAREN          reduce using rule 8 (instrucciones -> mapa_entero .)


state 10

    (9) instrucciones -> mapa_flotante .

    $end            reduce using rule 9 (instrucciones -> mapa_flotante .)
    IF              reduce using rule 9 (instrucciones -> mapa_flotante .)
    RPAREN          reduce using rule 9 (instrucciones -> mapa_flotante .)


state 11

    (10) instrucciones -> if .

    $end            reduce using rule 10 (instrucciones -> if .)
    IF              reduce using rule 10 (instrucciones -> if .)
    RPAREN          reduce using rule 10 (instrucciones -> if .)


state 12

    (11) instrucciones -> if_do .

    $end            reduce using rule 11 (instrucciones -> if_do .)
    IF              reduce using rule 11 (instrucciones -> if_do .)
    RPAREN          reduce using rule 11 (instrucciones -> if_do .)


state 13

    (12) instrucciones -> defn .

    $end            reduce using rule 12 (instrucciones -> defn .)
    IF              reduce using rule 12 (instrucciones -> defn .)
    RPAREN          reduce using rule 12 (instrucciones -> defn .)


state 14

    (13) instrucciones -> defn_with_return .

    $end            reduce using rule 13 (instrucciones -> defn_with_return .)
    IF              reduce using rule 13 (instrucciones -> defn_with_return .)
    RPAREN          reduce using rule 13 (instrucciones -> defn_with_return .)


state 15

    (14) instrucciones -> operacionesLogicas .

    $end            reduce using rule 14 (instrucciones -> operacionesLogicas .)
    IF              reduce using rule 14 (instrucciones -> operacionesLogicas .)
    RPAREN          reduce using rule 14 (instrucciones -> operacionesLogicas .)


state 16

    (15) instrucciones -> sentenciaLoopRecur .

    $end            reduce using rule 15 (instrucciones -> sentenciaLoopRecur .)
    IF              reduce using rule 15 (instrucciones -> sentenciaLoopRecur .)
    RPAREN          reduce using rule 15 (instrucciones -> sentenciaLoopRecur .)


state 17

    (16) instrucciones -> cond_ .

    $end            reduce using rule 16 (instrucciones -> cond_ .)
    IF              reduce using rule 16 (instrucciones -> cond_ .)
    RPAREN          reduce using rule 16 (instrucciones -> cond_ .)


state 18

    (17) instrucciones -> cond_else .

    $end            reduce using rule 17 (instrucciones -> cond_else .)
    IF              reduce using rule 17 (instrucciones -> cond_else .)
    RPAREN          reduce using rule 17 (instrucciones -> cond_else .)


state 19

    (18) instrucciones -> doseq .

    $end            reduce using rule 18 (instrucciones -> doseq .)
    IF              reduce using rule 18 (instrucciones -> doseq .)
    RPAREN          reduce using rule 18 (instrucciones -> doseq .)


state 20

    (19) instrucciones -> case_expression .

    $end            reduce using rule 19 (instrucciones -> case_expression .)
    IF              reduce using rule 19 (instrucciones -> case_expression .)
    RPAREN          reduce using rule 19 (instrucciones -> case_expression .)


state 21

    (20) instrucciones -> lista .

    $end            reduce using rule 20 (instrucciones -> lista .)
    IF              reduce using rule 20 (instrucciones -> lista .)
    RPAREN          reduce using rule 20 (instrucciones -> lista .)


state 22

    (21) instrucciones -> sentencia_booleana .

    $end            reduce using rule 21 (instrucciones -> sentencia_booleana .)
    IF              reduce using rule 21 (instrucciones -> sentencia_booleana .)
    RPAREN          reduce using rule 21 (instrucciones -> sentencia_booleana .)


state 23

    (22) instrucciones -> definition .

    $end            reduce using rule 22 (instrucciones -> definition .)
    IF              reduce using rule 22 (instrucciones -> definition .)
    RPAREN          reduce using rule 22 (instrucciones -> definition .)


state 24

    (38) asignacion -> LPAREN . DEFICION VARIABLE dato RPAREN
    (39) asignacion -> LPAREN . LET LCOR VARIABLE dato RCOR RPAREN
    (65) impresion -> LPAREN . IMPRIMIR dato RPAREN
    (80) operacion_aritmetica1 -> LPAREN . operacion valor valor RPAREN
    (81) condicional -> LPAREN . operacion valor valor RPAREN
    (74) if_do -> LPAREN . IF LPAREN operador_comparadores dato dato RPAREN LPAREN DO LPAREN dato RPAREN BOOLEAN RPAREN RPAREN
    (91) defn -> LPAREN . DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN
    (92) defn -> LPAREN . DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN
    (93) defn_with_return -> LPAREN . DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN defn_return
    (94) defn_with_return -> LPAREN . DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN defn_return
    (79) operacionesLogicas -> LPAREN . IF LPAREN MENORQUE VARIABLE ENTERO RPAREN LPAREN RECUR LPAREN INC LPAREN VARIABLE RPAREN RPAREN VARIABLE RPAREN RPAREN
    (101) sentenciaLoopRecur -> LPAREN . LOOP argumments LPAREN if dato RPAREN RPAREN
    (42) cond_ -> LPAREN . COND linecondition linecondition RPAREN
    (43) cond_else -> LPAREN . COND linecondition linecondition DOSPUNTOS ELSE impresion RPAREN
    (89) doseq -> LPAREN . DOSEQ doseq_args LPAREN impresion RPAREN RPAREN
    (90) doseq -> LPAREN . DOSEQ doseq_args LPAREN doseq_prn RPAREN RPAREN
    (47) case_expression -> LPAREN . CASE dato case case impresion RPAREN
    (48) case_expression -> LPAREN . CASE dato case case case_else RPAREN
    (49) lista -> LPAREN . LIST dato dato RPAREN
    (40) sentencia_booleana -> LPAREN . operador_comparadores dato dato RPAREN
    (63) definition -> LPAREN . DEFFUNCION VARIABLE internos RPAREN
    (64) definition -> LPAREN . DEFFUNCION internos if dato RPAREN
    (75) operacion -> . MAS
    (76) operacion -> . MENOS
    (77) operacion -> . PRODUCTO
    (78) operacion -> . DIVISION
    (32) operador_comparadores -> . COMPARA_IGUAL
    (33) operador_comparadores -> . MENORQUE
    (34) operador_comparadores -> . MAYORQUE
    (35) operador_comparadores -> . MAYORIGUALQUE
    (36) operador_comparadores -> . MENORIGUALQUE
    (37) operador_comparadores -> . DIFERENTE

    DEFICION        shift and go to state 31
    LET             shift and go to state 32
    IMPRIMIR        shift and go to state 33
    IF              shift and go to state 35
    DEFFUNCION      shift and go to state 37
    LOOP            shift and go to state 39
    COND            shift and go to state 40
    DOSEQ           shift and go to state 41
    CASE            shift and go to state 42
    LIST            shift and go to state 43
    MAS             shift and go to state 44
    MENOS           shift and go to state 45
    PRODUCTO        shift and go to state 46
    DIVISION        shift and go to state 47
    COMPARA_IGUAL   shift and go to state 48
    MENORQUE        shift and go to state 38
    MAYORQUE        shift and go to state 49
    MAYORIGUALQUE   shift and go to state 50
    MENORIGUALQUE   shift and go to state 51
    DIFERENTE       shift and go to state 52

    operacion                      shift and go to state 34
    operador_comparadores          shift and go to state 36

state 25

    (98) conjuntos -> NUMERAL . L_LLAVE expresionConjuntoEnteros R_LLAVE
    (99) conjuntos -> NUMERAL . L_LLAVE expresionConjuntoDouble R_LLAVE
    (100) conjuntos -> NUMERAL . L_LLAVE expresionConjuntoString R_LLAVE

    L_LLAVE         shift and go to state 53


state 26

    (67) vector_entero -> VECTOR_ENTERO .

    $end            reduce using rule 67 (vector_entero -> VECTOR_ENTERO .)
    IF              reduce using rule 67 (vector_entero -> VECTOR_ENTERO .)
    RPAREN          reduce using rule 67 (vector_entero -> VECTOR_ENTERO .)
    NUMERAL         reduce using rule 67 (vector_entero -> VECTOR_ENTERO .)
    STRING          reduce using rule 67 (vector_entero -> VECTOR_ENTERO .)
    CHAR            reduce using rule 67 (vector_entero -> VECTOR_ENTERO .)
    ENTERO          reduce using rule 67 (vector_entero -> VECTOR_ENTERO .)
    FLOTANTE        reduce using rule 67 (vector_entero -> VECTOR_ENTERO .)
    BOOLEAN         reduce using rule 67 (vector_entero -> VECTOR_ENTERO .)
    VARIABLE        reduce using rule 67 (vector_entero -> VECTOR_ENTERO .)
    RCOR            reduce using rule 67 (vector_entero -> VECTOR_ENTERO .)


state 27

    (68) vector_flotante -> VECTOR_FLOTANTE .

    $end            reduce using rule 68 (vector_flotante -> VECTOR_FLOTANTE .)
    IF              reduce using rule 68 (vector_flotante -> VECTOR_FLOTANTE .)
    RPAREN          reduce using rule 68 (vector_flotante -> VECTOR_FLOTANTE .)


state 28

    (69) mapa_entero -> MAPA_ENTERO .

    $end            reduce using rule 69 (mapa_entero -> MAPA_ENTERO .)
    IF              reduce using rule 69 (mapa_entero -> MAPA_ENTERO .)
    RPAREN          reduce using rule 69 (mapa_entero -> MAPA_ENTERO .)


state 29

    (70) mapa_flotante -> MAPA_FLOTANTE .

    $end            reduce using rule 70 (mapa_flotante -> MAPA_FLOTANTE .)
    IF              reduce using rule 70 (mapa_flotante -> MAPA_FLOTANTE .)
    RPAREN          reduce using rule 70 (mapa_flotante -> MAPA_FLOTANTE .)


state 30

    (71) if -> IF . LPAREN operador_comparadores dato dato RPAREN
    (72) if -> IF . sentencia_booleana
    (73) if -> IF . sentencia_booleana recur
    (40) sentencia_booleana -> . LPAREN operador_comparadores dato dato RPAREN

    LPAREN          shift and go to state 54

    sentencia_booleana             shift and go to state 55

state 31

    (38) asignacion -> LPAREN DEFICION . VARIABLE dato RPAREN

    VARIABLE        shift and go to state 56


state 32

    (39) asignacion -> LPAREN LET . LCOR VARIABLE dato RCOR RPAREN

    LCOR            shift and go to state 57


state 33

    (65) impresion -> LPAREN IMPRIMIR . dato RPAREN
    (23) dato -> . STRING
    (24) dato -> . CHAR
    (25) dato -> . ENTERO
    (26) dato -> . FLOTANTE
    (27) dato -> . BOOLEAN
    (28) dato -> . VARIABLE

    STRING          shift and go to state 59
    CHAR            shift and go to state 60
    ENTERO          shift and go to state 61
    FLOTANTE        shift and go to state 62
    BOOLEAN         shift and go to state 63
    VARIABLE        shift and go to state 64

    dato                           shift and go to state 58

state 34

    (80) operacion_aritmetica1 -> LPAREN operacion . valor valor RPAREN
    (81) condicional -> LPAREN operacion . valor valor RPAREN
    (29) valor -> . ENTERO
    (30) valor -> . FLOTANTE
    (31) valor -> . BOOLEAN
    (66) valor -> . VARIABLE

    ENTERO          shift and go to state 66
    FLOTANTE        shift and go to state 67
    BOOLEAN         shift and go to state 68
    VARIABLE        shift and go to state 69

    valor                          shift and go to state 65

state 35

    (74) if_do -> LPAREN IF . LPAREN operador_comparadores dato dato RPAREN LPAREN DO LPAREN dato RPAREN BOOLEAN RPAREN RPAREN
    (79) operacionesLogicas -> LPAREN IF . LPAREN MENORQUE VARIABLE ENTERO RPAREN LPAREN RECUR LPAREN INC LPAREN VARIABLE RPAREN RPAREN VARIABLE RPAREN RPAREN

    LPAREN          shift and go to state 70


state 36

    (40) sentencia_booleana -> LPAREN operador_comparadores . dato dato RPAREN
    (23) dato -> . STRING
    (24) dato -> . CHAR
    (25) dato -> . ENTERO
    (26) dato -> . FLOTANTE
    (27) dato -> . BOOLEAN
    (28) dato -> . VARIABLE

    STRING          shift and go to state 59
    CHAR            shift and go to state 60
    ENTERO          shift and go to state 61
    FLOTANTE        shift and go to state 62
    BOOLEAN         shift and go to state 63
    VARIABLE        shift and go to state 64

    dato                           shift and go to state 71

state 37

    (91) defn -> LPAREN DEFFUNCION . VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN
    (92) defn -> LPAREN DEFFUNCION . INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN
    (93) defn_with_return -> LPAREN DEFFUNCION . VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN defn_return
    (94) defn_with_return -> LPAREN DEFFUNCION . INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN defn_return
    (63) definition -> LPAREN DEFFUNCION . VARIABLE internos RPAREN
    (64) definition -> LPAREN DEFFUNCION . internos if dato RPAREN
    (57) internos -> . description
    (58) internos -> . argumments
    (59) internos -> . body
    (60) internos -> . increase
    (61) internos -> . argumments body
    (62) internos -> . description argumments body
    (50) description -> . STRING
    (52) argumments -> . LCOR dato dato dato RCOR
    (53) argumments -> . LCOR dato dato RCOR
    (54) argumments -> . LCOR dato RCOR
    (55) body -> . instrucciones
    (51) increase -> . INCREASE LCOR dato RCOR
    (1) instrucciones -> . asignacion
    (2) instrucciones -> . impresion
    (3) instrucciones -> . operacion_aritmetica1
    (4) instrucciones -> . condicional
    (5) instrucciones -> . conjuntos
    (6) instrucciones -> . vector_entero
    (7) instrucciones -> . vector_flotante
    (8) instrucciones -> . mapa_entero
    (9) instrucciones -> . mapa_flotante
    (10) instrucciones -> . if
    (11) instrucciones -> . if_do
    (12) instrucciones -> . defn
    (13) instrucciones -> . defn_with_return
    (14) instrucciones -> . operacionesLogicas
    (15) instrucciones -> . sentenciaLoopRecur
    (16) instrucciones -> . cond_
    (17) instrucciones -> . cond_else
    (18) instrucciones -> . doseq
    (19) instrucciones -> . case_expression
    (20) instrucciones -> . lista
    (21) instrucciones -> . sentencia_booleana
    (22) instrucciones -> . definition
    (38) asignacion -> . LPAREN DEFICION VARIABLE dato RPAREN
    (39) asignacion -> . LPAREN LET LCOR VARIABLE dato RCOR RPAREN
    (65) impresion -> . LPAREN IMPRIMIR dato RPAREN
    (80) operacion_aritmetica1 -> . LPAREN operacion valor valor RPAREN
    (81) condicional -> . LPAREN operacion valor valor RPAREN
    (98) conjuntos -> . NUMERAL L_LLAVE expresionConjuntoEnteros R_LLAVE
    (99) conjuntos -> . NUMERAL L_LLAVE expresionConjuntoDouble R_LLAVE
    (100) conjuntos -> . NUMERAL L_LLAVE expresionConjuntoString R_LLAVE
    (67) vector_entero -> . VECTOR_ENTERO
    (68) vector_flotante -> . VECTOR_FLOTANTE
    (69) mapa_entero -> . MAPA_ENTERO
    (70) mapa_flotante -> . MAPA_FLOTANTE
    (71) if -> . IF LPAREN operador_comparadores dato dato RPAREN
    (72) if -> . IF sentencia_booleana
    (73) if -> . IF sentencia_booleana recur
    (74) if_do -> . LPAREN IF LPAREN operador_comparadores dato dato RPAREN LPAREN DO LPAREN dato RPAREN BOOLEAN RPAREN RPAREN
    (91) defn -> . LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN
    (92) defn -> . LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN
    (93) defn_with_return -> . LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN defn_return
    (94) defn_with_return -> . LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN defn_return
    (79) operacionesLogicas -> . LPAREN IF LPAREN MENORQUE VARIABLE ENTERO RPAREN LPAREN RECUR LPAREN INC LPAREN VARIABLE RPAREN RPAREN VARIABLE RPAREN RPAREN
    (101) sentenciaLoopRecur -> . LPAREN LOOP argumments LPAREN if dato RPAREN RPAREN
    (42) cond_ -> . LPAREN COND linecondition linecondition RPAREN
    (43) cond_else -> . LPAREN COND linecondition linecondition DOSPUNTOS ELSE impresion RPAREN
    (89) doseq -> . LPAREN DOSEQ doseq_args LPAREN impresion RPAREN RPAREN
    (90) doseq -> . LPAREN DOSEQ doseq_args LPAREN doseq_prn RPAREN RPAREN
    (47) case_expression -> . LPAREN CASE dato case case impresion RPAREN
    (48) case_expression -> . LPAREN CASE dato case case case_else RPAREN
    (49) lista -> . LPAREN LIST dato dato RPAREN
    (40) sentencia_booleana -> . LPAREN operador_comparadores dato dato RPAREN
    (63) definition -> . LPAREN DEFFUNCION VARIABLE internos RPAREN
    (64) definition -> . LPAREN DEFFUNCION internos if dato RPAREN

    VARIABLE        shift and go to state 72
    INCREASE        shift and go to state 74
    STRING          shift and go to state 80
    LCOR            shift and go to state 73
    LPAREN          shift and go to state 24
    NUMERAL         shift and go to state 25
    VECTOR_ENTERO   shift and go to state 26
    VECTOR_FLOTANTE shift and go to state 27
    MAPA_ENTERO     shift and go to state 28
    MAPA_FLOTANTE   shift and go to state 29
    IF              shift and go to state 30

    operacionesLogicas             shift and go to state 15
    internos                       shift and go to state 75
    if                             shift and go to state 11
    description                    shift and go to state 76
    argumments                     shift and go to state 77
    body                           shift and go to state 78
    increase                       shift and go to state 79
    instrucciones                  shift and go to state 81
    asignacion                     shift and go to state 2
    impresion                      shift and go to state 3
    operacion_aritmetica1          shift and go to state 4
    condicional                    shift and go to state 5
    conjuntos                      shift and go to state 6
    vector_entero                  shift and go to state 7
    vector_flotante                shift and go to state 8
    mapa_entero                    shift and go to state 9
    mapa_flotante                  shift and go to state 10
    if_do                          shift and go to state 12
    defn                           shift and go to state 13
    defn_with_return               shift and go to state 14
    sentenciaLoopRecur             shift and go to state 16
    cond_                          shift and go to state 17
    cond_else                      shift and go to state 18
    doseq                          shift and go to state 19
    case_expression                shift and go to state 20
    lista                          shift and go to state 21
    sentencia_booleana             shift and go to state 22
    definition                     shift and go to state 23

state 38

    (33) operador_comparadores -> MENORQUE .

    STRING          reduce using rule 33 (operador_comparadores -> MENORQUE .)
    CHAR            reduce using rule 33 (operador_comparadores -> MENORQUE .)
    ENTERO          reduce using rule 33 (operador_comparadores -> MENORQUE .)
    FLOTANTE        reduce using rule 33 (operador_comparadores -> MENORQUE .)
    BOOLEAN         reduce using rule 33 (operador_comparadores -> MENORQUE .)
    VARIABLE        reduce using rule 33 (operador_comparadores -> MENORQUE .)


state 39

    (101) sentenciaLoopRecur -> LPAREN LOOP . argumments LPAREN if dato RPAREN RPAREN
    (52) argumments -> . LCOR dato dato dato RCOR
    (53) argumments -> . LCOR dato dato RCOR
    (54) argumments -> . LCOR dato RCOR

    LCOR            shift and go to state 73

    argumments                     shift and go to state 82

state 40

    (42) cond_ -> LPAREN COND . linecondition linecondition RPAREN
    (43) cond_else -> LPAREN COND . linecondition linecondition DOSPUNTOS ELSE impresion RPAREN
    (41) linecondition -> . sentencia_booleana impresion
    (40) sentencia_booleana -> . LPAREN operador_comparadores dato dato RPAREN

    LPAREN          shift and go to state 83

    linecondition                  shift and go to state 84
    sentencia_booleana             shift and go to state 85

state 41

    (89) doseq -> LPAREN DOSEQ . doseq_args LPAREN impresion RPAREN RPAREN
    (90) doseq -> LPAREN DOSEQ . doseq_args LPAREN doseq_prn RPAREN RPAREN
    (82) doseq_args -> . LCOR dato LPAREN RANGE dato RPAREN RCOR
    (83) doseq_args -> . LCOR dato conjuntos RCOR
    (84) doseq_args -> . LCOR dato vector_entero dato vector_entero RCOR
    (85) doseq_args -> . LCOR vector_entero conjuntos RCOR

    LCOR            shift and go to state 87

    doseq_args                     shift and go to state 86

state 42

    (47) case_expression -> LPAREN CASE . dato case case impresion RPAREN
    (48) case_expression -> LPAREN CASE . dato case case case_else RPAREN
    (23) dato -> . STRING
    (24) dato -> . CHAR
    (25) dato -> . ENTERO
    (26) dato -> . FLOTANTE
    (27) dato -> . BOOLEAN
    (28) dato -> . VARIABLE

    STRING          shift and go to state 59
    CHAR            shift and go to state 60
    ENTERO          shift and go to state 61
    FLOTANTE        shift and go to state 62
    BOOLEAN         shift and go to state 63
    VARIABLE        shift and go to state 64

    dato                           shift and go to state 88

state 43

    (49) lista -> LPAREN LIST . dato dato RPAREN
    (23) dato -> . STRING
    (24) dato -> . CHAR
    (25) dato -> . ENTERO
    (26) dato -> . FLOTANTE
    (27) dato -> . BOOLEAN
    (28) dato -> . VARIABLE

    STRING          shift and go to state 59
    CHAR            shift and go to state 60
    ENTERO          shift and go to state 61
    FLOTANTE        shift and go to state 62
    BOOLEAN         shift and go to state 63
    VARIABLE        shift and go to state 64

    dato                           shift and go to state 89

state 44

    (75) operacion -> MAS .

    ENTERO          reduce using rule 75 (operacion -> MAS .)
    FLOTANTE        reduce using rule 75 (operacion -> MAS .)
    BOOLEAN         reduce using rule 75 (operacion -> MAS .)
    VARIABLE        reduce using rule 75 (operacion -> MAS .)


state 45

    (76) operacion -> MENOS .

    ENTERO          reduce using rule 76 (operacion -> MENOS .)
    FLOTANTE        reduce using rule 76 (operacion -> MENOS .)
    BOOLEAN         reduce using rule 76 (operacion -> MENOS .)
    VARIABLE        reduce using rule 76 (operacion -> MENOS .)


state 46

    (77) operacion -> PRODUCTO .

    ENTERO          reduce using rule 77 (operacion -> PRODUCTO .)
    FLOTANTE        reduce using rule 77 (operacion -> PRODUCTO .)
    BOOLEAN         reduce using rule 77 (operacion -> PRODUCTO .)
    VARIABLE        reduce using rule 77 (operacion -> PRODUCTO .)


state 47

    (78) operacion -> DIVISION .

    ENTERO          reduce using rule 78 (operacion -> DIVISION .)
    FLOTANTE        reduce using rule 78 (operacion -> DIVISION .)
    BOOLEAN         reduce using rule 78 (operacion -> DIVISION .)
    VARIABLE        reduce using rule 78 (operacion -> DIVISION .)


state 48

    (32) operador_comparadores -> COMPARA_IGUAL .

    STRING          reduce using rule 32 (operador_comparadores -> COMPARA_IGUAL .)
    CHAR            reduce using rule 32 (operador_comparadores -> COMPARA_IGUAL .)
    ENTERO          reduce using rule 32 (operador_comparadores -> COMPARA_IGUAL .)
    FLOTANTE        reduce using rule 32 (operador_comparadores -> COMPARA_IGUAL .)
    BOOLEAN         reduce using rule 32 (operador_comparadores -> COMPARA_IGUAL .)
    VARIABLE        reduce using rule 32 (operador_comparadores -> COMPARA_IGUAL .)


state 49

    (34) operador_comparadores -> MAYORQUE .

    STRING          reduce using rule 34 (operador_comparadores -> MAYORQUE .)
    CHAR            reduce using rule 34 (operador_comparadores -> MAYORQUE .)
    ENTERO          reduce using rule 34 (operador_comparadores -> MAYORQUE .)
    FLOTANTE        reduce using rule 34 (operador_comparadores -> MAYORQUE .)
    BOOLEAN         reduce using rule 34 (operador_comparadores -> MAYORQUE .)
    VARIABLE        reduce using rule 34 (operador_comparadores -> MAYORQUE .)


state 50

    (35) operador_comparadores -> MAYORIGUALQUE .

    STRING          reduce using rule 35 (operador_comparadores -> MAYORIGUALQUE .)
    CHAR            reduce using rule 35 (operador_comparadores -> MAYORIGUALQUE .)
    ENTERO          reduce using rule 35 (operador_comparadores -> MAYORIGUALQUE .)
    FLOTANTE        reduce using rule 35 (operador_comparadores -> MAYORIGUALQUE .)
    BOOLEAN         reduce using rule 35 (operador_comparadores -> MAYORIGUALQUE .)
    VARIABLE        reduce using rule 35 (operador_comparadores -> MAYORIGUALQUE .)


state 51

    (36) operador_comparadores -> MENORIGUALQUE .

    STRING          reduce using rule 36 (operador_comparadores -> MENORIGUALQUE .)
    CHAR            reduce using rule 36 (operador_comparadores -> MENORIGUALQUE .)
    ENTERO          reduce using rule 36 (operador_comparadores -> MENORIGUALQUE .)
    FLOTANTE        reduce using rule 36 (operador_comparadores -> MENORIGUALQUE .)
    BOOLEAN         reduce using rule 36 (operador_comparadores -> MENORIGUALQUE .)
    VARIABLE        reduce using rule 36 (operador_comparadores -> MENORIGUALQUE .)


state 52

    (37) operador_comparadores -> DIFERENTE .

    STRING          reduce using rule 37 (operador_comparadores -> DIFERENTE .)
    CHAR            reduce using rule 37 (operador_comparadores -> DIFERENTE .)
    ENTERO          reduce using rule 37 (operador_comparadores -> DIFERENTE .)
    FLOTANTE        reduce using rule 37 (operador_comparadores -> DIFERENTE .)
    BOOLEAN         reduce using rule 37 (operador_comparadores -> DIFERENTE .)
    VARIABLE        reduce using rule 37 (operador_comparadores -> DIFERENTE .)


state 53

    (98) conjuntos -> NUMERAL L_LLAVE . expresionConjuntoEnteros R_LLAVE
    (99) conjuntos -> NUMERAL L_LLAVE . expresionConjuntoDouble R_LLAVE
    (100) conjuntos -> NUMERAL L_LLAVE . expresionConjuntoString R_LLAVE
    (102) expresionConjuntoEnteros -> . ENTERO
    (103) expresionConjuntoEnteros -> . ENTERO expresionConjuntoEnteros
    (104) expresionConjuntoDouble -> . FLOTANTE
    (105) expresionConjuntoDouble -> . FLOTANTE expresionConjuntoDouble
    (106) expresionConjuntoString -> . STRING
    (107) expresionConjuntoString -> . STRING expresionConjuntoString

    ENTERO          shift and go to state 93
    FLOTANTE        shift and go to state 94
    STRING          shift and go to state 95

    expresionConjuntoEnteros       shift and go to state 90
    expresionConjuntoDouble        shift and go to state 91
    expresionConjuntoString        shift and go to state 92

state 54

    (71) if -> IF LPAREN . operador_comparadores dato dato RPAREN
    (40) sentencia_booleana -> LPAREN . operador_comparadores dato dato RPAREN
    (32) operador_comparadores -> . COMPARA_IGUAL
    (33) operador_comparadores -> . MENORQUE
    (34) operador_comparadores -> . MAYORQUE
    (35) operador_comparadores -> . MAYORIGUALQUE
    (36) operador_comparadores -> . MENORIGUALQUE
    (37) operador_comparadores -> . DIFERENTE

    COMPARA_IGUAL   shift and go to state 48
    MENORQUE        shift and go to state 38
    MAYORQUE        shift and go to state 49
    MAYORIGUALQUE   shift and go to state 50
    MENORIGUALQUE   shift and go to state 51
    DIFERENTE       shift and go to state 52

    operador_comparadores          shift and go to state 96

state 55

    (72) if -> IF sentencia_booleana .
    (73) if -> IF sentencia_booleana . recur
    (56) recur -> . LPAREN RECUR LPAREN INC dato RPAREN RPAREN

    $end            reduce using rule 72 (if -> IF sentencia_booleana .)
    IF              reduce using rule 72 (if -> IF sentencia_booleana .)
    RPAREN          reduce using rule 72 (if -> IF sentencia_booleana .)
    STRING          reduce using rule 72 (if -> IF sentencia_booleana .)
    CHAR            reduce using rule 72 (if -> IF sentencia_booleana .)
    ENTERO          reduce using rule 72 (if -> IF sentencia_booleana .)
    FLOTANTE        reduce using rule 72 (if -> IF sentencia_booleana .)
    BOOLEAN         reduce using rule 72 (if -> IF sentencia_booleana .)
    VARIABLE        reduce using rule 72 (if -> IF sentencia_booleana .)
    LPAREN          shift and go to state 98

    recur                          shift and go to state 97

state 56

    (38) asignacion -> LPAREN DEFICION VARIABLE . dato RPAREN
    (23) dato -> . STRING
    (24) dato -> . CHAR
    (25) dato -> . ENTERO
    (26) dato -> . FLOTANTE
    (27) dato -> . BOOLEAN
    (28) dato -> . VARIABLE

    STRING          shift and go to state 59
    CHAR            shift and go to state 60
    ENTERO          shift and go to state 61
    FLOTANTE        shift and go to state 62
    BOOLEAN         shift and go to state 63
    VARIABLE        shift and go to state 64

    dato                           shift and go to state 99

state 57

    (39) asignacion -> LPAREN LET LCOR . VARIABLE dato RCOR RPAREN

    VARIABLE        shift and go to state 100


state 58

    (65) impresion -> LPAREN IMPRIMIR dato . RPAREN

    RPAREN          shift and go to state 101


state 59

    (23) dato -> STRING .

    RPAREN          reduce using rule 23 (dato -> STRING .)
    STRING          reduce using rule 23 (dato -> STRING .)
    CHAR            reduce using rule 23 (dato -> STRING .)
    ENTERO          reduce using rule 23 (dato -> STRING .)
    FLOTANTE        reduce using rule 23 (dato -> STRING .)
    BOOLEAN         reduce using rule 23 (dato -> STRING .)
    VARIABLE        reduce using rule 23 (dato -> STRING .)
    RCOR            reduce using rule 23 (dato -> STRING .)
    LPAREN          reduce using rule 23 (dato -> STRING .)
    NUMERAL         reduce using rule 23 (dato -> STRING .)
    VECTOR_ENTERO   reduce using rule 23 (dato -> STRING .)


state 60

    (24) dato -> CHAR .

    RPAREN          reduce using rule 24 (dato -> CHAR .)
    STRING          reduce using rule 24 (dato -> CHAR .)
    CHAR            reduce using rule 24 (dato -> CHAR .)
    ENTERO          reduce using rule 24 (dato -> CHAR .)
    FLOTANTE        reduce using rule 24 (dato -> CHAR .)
    BOOLEAN         reduce using rule 24 (dato -> CHAR .)
    VARIABLE        reduce using rule 24 (dato -> CHAR .)
    RCOR            reduce using rule 24 (dato -> CHAR .)
    LPAREN          reduce using rule 24 (dato -> CHAR .)
    NUMERAL         reduce using rule 24 (dato -> CHAR .)
    VECTOR_ENTERO   reduce using rule 24 (dato -> CHAR .)


state 61

    (25) dato -> ENTERO .

    RPAREN          reduce using rule 25 (dato -> ENTERO .)
    STRING          reduce using rule 25 (dato -> ENTERO .)
    CHAR            reduce using rule 25 (dato -> ENTERO .)
    ENTERO          reduce using rule 25 (dato -> ENTERO .)
    FLOTANTE        reduce using rule 25 (dato -> ENTERO .)
    BOOLEAN         reduce using rule 25 (dato -> ENTERO .)
    VARIABLE        reduce using rule 25 (dato -> ENTERO .)
    RCOR            reduce using rule 25 (dato -> ENTERO .)
    LPAREN          reduce using rule 25 (dato -> ENTERO .)
    NUMERAL         reduce using rule 25 (dato -> ENTERO .)
    VECTOR_ENTERO   reduce using rule 25 (dato -> ENTERO .)


state 62

    (26) dato -> FLOTANTE .

    RPAREN          reduce using rule 26 (dato -> FLOTANTE .)
    STRING          reduce using rule 26 (dato -> FLOTANTE .)
    CHAR            reduce using rule 26 (dato -> FLOTANTE .)
    ENTERO          reduce using rule 26 (dato -> FLOTANTE .)
    FLOTANTE        reduce using rule 26 (dato -> FLOTANTE .)
    BOOLEAN         reduce using rule 26 (dato -> FLOTANTE .)
    VARIABLE        reduce using rule 26 (dato -> FLOTANTE .)
    RCOR            reduce using rule 26 (dato -> FLOTANTE .)
    LPAREN          reduce using rule 26 (dato -> FLOTANTE .)
    NUMERAL         reduce using rule 26 (dato -> FLOTANTE .)
    VECTOR_ENTERO   reduce using rule 26 (dato -> FLOTANTE .)


state 63

    (27) dato -> BOOLEAN .

    RPAREN          reduce using rule 27 (dato -> BOOLEAN .)
    STRING          reduce using rule 27 (dato -> BOOLEAN .)
    CHAR            reduce using rule 27 (dato -> BOOLEAN .)
    ENTERO          reduce using rule 27 (dato -> BOOLEAN .)
    FLOTANTE        reduce using rule 27 (dato -> BOOLEAN .)
    BOOLEAN         reduce using rule 27 (dato -> BOOLEAN .)
    VARIABLE        reduce using rule 27 (dato -> BOOLEAN .)
    RCOR            reduce using rule 27 (dato -> BOOLEAN .)
    LPAREN          reduce using rule 27 (dato -> BOOLEAN .)
    NUMERAL         reduce using rule 27 (dato -> BOOLEAN .)
    VECTOR_ENTERO   reduce using rule 27 (dato -> BOOLEAN .)


state 64

    (28) dato -> VARIABLE .

    RPAREN          reduce using rule 28 (dato -> VARIABLE .)
    STRING          reduce using rule 28 (dato -> VARIABLE .)
    CHAR            reduce using rule 28 (dato -> VARIABLE .)
    ENTERO          reduce using rule 28 (dato -> VARIABLE .)
    FLOTANTE        reduce using rule 28 (dato -> VARIABLE .)
    BOOLEAN         reduce using rule 28 (dato -> VARIABLE .)
    VARIABLE        reduce using rule 28 (dato -> VARIABLE .)
    RCOR            reduce using rule 28 (dato -> VARIABLE .)
    LPAREN          reduce using rule 28 (dato -> VARIABLE .)
    NUMERAL         reduce using rule 28 (dato -> VARIABLE .)
    VECTOR_ENTERO   reduce using rule 28 (dato -> VARIABLE .)


state 65

    (80) operacion_aritmetica1 -> LPAREN operacion valor . valor RPAREN
    (81) condicional -> LPAREN operacion valor . valor RPAREN
    (29) valor -> . ENTERO
    (30) valor -> . FLOTANTE
    (31) valor -> . BOOLEAN
    (66) valor -> . VARIABLE

    ENTERO          shift and go to state 66
    FLOTANTE        shift and go to state 67
    BOOLEAN         shift and go to state 68
    VARIABLE        shift and go to state 69

    valor                          shift and go to state 102

state 66

    (29) valor -> ENTERO .

    ENTERO          reduce using rule 29 (valor -> ENTERO .)
    FLOTANTE        reduce using rule 29 (valor -> ENTERO .)
    BOOLEAN         reduce using rule 29 (valor -> ENTERO .)
    VARIABLE        reduce using rule 29 (valor -> ENTERO .)
    RPAREN          reduce using rule 29 (valor -> ENTERO .)


state 67

    (30) valor -> FLOTANTE .

    ENTERO          reduce using rule 30 (valor -> FLOTANTE .)
    FLOTANTE        reduce using rule 30 (valor -> FLOTANTE .)
    BOOLEAN         reduce using rule 30 (valor -> FLOTANTE .)
    VARIABLE        reduce using rule 30 (valor -> FLOTANTE .)
    RPAREN          reduce using rule 30 (valor -> FLOTANTE .)


state 68

    (31) valor -> BOOLEAN .

    ENTERO          reduce using rule 31 (valor -> BOOLEAN .)
    FLOTANTE        reduce using rule 31 (valor -> BOOLEAN .)
    BOOLEAN         reduce using rule 31 (valor -> BOOLEAN .)
    VARIABLE        reduce using rule 31 (valor -> BOOLEAN .)
    RPAREN          reduce using rule 31 (valor -> BOOLEAN .)


state 69

    (66) valor -> VARIABLE .

    ENTERO          reduce using rule 66 (valor -> VARIABLE .)
    FLOTANTE        reduce using rule 66 (valor -> VARIABLE .)
    BOOLEAN         reduce using rule 66 (valor -> VARIABLE .)
    VARIABLE        reduce using rule 66 (valor -> VARIABLE .)
    RPAREN          reduce using rule 66 (valor -> VARIABLE .)


state 70

    (74) if_do -> LPAREN IF LPAREN . operador_comparadores dato dato RPAREN LPAREN DO LPAREN dato RPAREN BOOLEAN RPAREN RPAREN
    (79) operacionesLogicas -> LPAREN IF LPAREN . MENORQUE VARIABLE ENTERO RPAREN LPAREN RECUR LPAREN INC LPAREN VARIABLE RPAREN RPAREN VARIABLE RPAREN RPAREN
    (32) operador_comparadores -> . COMPARA_IGUAL
    (33) operador_comparadores -> . MENORQUE
    (34) operador_comparadores -> . MAYORQUE
    (35) operador_comparadores -> . MAYORIGUALQUE
    (36) operador_comparadores -> . MENORIGUALQUE
    (37) operador_comparadores -> . DIFERENTE

    MENORQUE        shift and go to state 104
    COMPARA_IGUAL   shift and go to state 48
    MAYORQUE        shift and go to state 49
    MAYORIGUALQUE   shift and go to state 50
    MENORIGUALQUE   shift and go to state 51
    DIFERENTE       shift and go to state 52

    operador_comparadores          shift and go to state 103

state 71

    (40) sentencia_booleana -> LPAREN operador_comparadores dato . dato RPAREN
    (23) dato -> . STRING
    (24) dato -> . CHAR
    (25) dato -> . ENTERO
    (26) dato -> . FLOTANTE
    (27) dato -> . BOOLEAN
    (28) dato -> . VARIABLE

    STRING          shift and go to state 59
    CHAR            shift and go to state 60
    ENTERO          shift and go to state 61
    FLOTANTE        shift and go to state 62
    BOOLEAN         shift and go to state 63
    VARIABLE        shift and go to state 64

    dato                           shift and go to state 105

state 72

    (91) defn -> LPAREN DEFFUNCION VARIABLE . LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN
    (93) defn_with_return -> LPAREN DEFFUNCION VARIABLE . LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN defn_return
    (63) definition -> LPAREN DEFFUNCION VARIABLE . internos RPAREN
    (57) internos -> . description
    (58) internos -> . argumments
    (59) internos -> . body
    (60) internos -> . increase
    (61) internos -> . argumments body
    (62) internos -> . description argumments body
    (50) description -> . STRING
    (52) argumments -> . LCOR dato dato dato RCOR
    (53) argumments -> . LCOR dato dato RCOR
    (54) argumments -> . LCOR dato RCOR
    (55) body -> . instrucciones
    (51) increase -> . INCREASE LCOR dato RCOR
    (1) instrucciones -> . asignacion
    (2) instrucciones -> . impresion
    (3) instrucciones -> . operacion_aritmetica1
    (4) instrucciones -> . condicional
    (5) instrucciones -> . conjuntos
    (6) instrucciones -> . vector_entero
    (7) instrucciones -> . vector_flotante
    (8) instrucciones -> . mapa_entero
    (9) instrucciones -> . mapa_flotante
    (10) instrucciones -> . if
    (11) instrucciones -> . if_do
    (12) instrucciones -> . defn
    (13) instrucciones -> . defn_with_return
    (14) instrucciones -> . operacionesLogicas
    (15) instrucciones -> . sentenciaLoopRecur
    (16) instrucciones -> . cond_
    (17) instrucciones -> . cond_else
    (18) instrucciones -> . doseq
    (19) instrucciones -> . case_expression
    (20) instrucciones -> . lista
    (21) instrucciones -> . sentencia_booleana
    (22) instrucciones -> . definition
    (38) asignacion -> . LPAREN DEFICION VARIABLE dato RPAREN
    (39) asignacion -> . LPAREN LET LCOR VARIABLE dato RCOR RPAREN
    (65) impresion -> . LPAREN IMPRIMIR dato RPAREN
    (80) operacion_aritmetica1 -> . LPAREN operacion valor valor RPAREN
    (81) condicional -> . LPAREN operacion valor valor RPAREN
    (98) conjuntos -> . NUMERAL L_LLAVE expresionConjuntoEnteros R_LLAVE
    (99) conjuntos -> . NUMERAL L_LLAVE expresionConjuntoDouble R_LLAVE
    (100) conjuntos -> . NUMERAL L_LLAVE expresionConjuntoString R_LLAVE
    (67) vector_entero -> . VECTOR_ENTERO
    (68) vector_flotante -> . VECTOR_FLOTANTE
    (69) mapa_entero -> . MAPA_ENTERO
    (70) mapa_flotante -> . MAPA_FLOTANTE
    (71) if -> . IF LPAREN operador_comparadores dato dato RPAREN
    (72) if -> . IF sentencia_booleana
    (73) if -> . IF sentencia_booleana recur
    (74) if_do -> . LPAREN IF LPAREN operador_comparadores dato dato RPAREN LPAREN DO LPAREN dato RPAREN BOOLEAN RPAREN RPAREN
    (91) defn -> . LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN
    (92) defn -> . LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN
    (93) defn_with_return -> . LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN defn_return
    (94) defn_with_return -> . LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN defn_return
    (79) operacionesLogicas -> . LPAREN IF LPAREN MENORQUE VARIABLE ENTERO RPAREN LPAREN RECUR LPAREN INC LPAREN VARIABLE RPAREN RPAREN VARIABLE RPAREN RPAREN
    (101) sentenciaLoopRecur -> . LPAREN LOOP argumments LPAREN if dato RPAREN RPAREN
    (42) cond_ -> . LPAREN COND linecondition linecondition RPAREN
    (43) cond_else -> . LPAREN COND linecondition linecondition DOSPUNTOS ELSE impresion RPAREN
    (89) doseq -> . LPAREN DOSEQ doseq_args LPAREN impresion RPAREN RPAREN
    (90) doseq -> . LPAREN DOSEQ doseq_args LPAREN doseq_prn RPAREN RPAREN
    (47) case_expression -> . LPAREN CASE dato case case impresion RPAREN
    (48) case_expression -> . LPAREN CASE dato case case case_else RPAREN
    (49) lista -> . LPAREN LIST dato dato RPAREN
    (40) sentencia_booleana -> . LPAREN operador_comparadores dato dato RPAREN
    (63) definition -> . LPAREN DEFFUNCION VARIABLE internos RPAREN
    (64) definition -> . LPAREN DEFFUNCION internos if dato RPAREN

    LCOR            shift and go to state 106
    STRING          shift and go to state 80
    INCREASE        shift and go to state 108
    LPAREN          shift and go to state 24
    NUMERAL         shift and go to state 25
    VECTOR_ENTERO   shift and go to state 26
    VECTOR_FLOTANTE shift and go to state 27
    MAPA_ENTERO     shift and go to state 28
    MAPA_FLOTANTE   shift and go to state 29
    IF              shift and go to state 30

    internos                       shift and go to state 107
    description                    shift and go to state 76
    argumments                     shift and go to state 77
    body                           shift and go to state 78
    increase                       shift and go to state 79
    instrucciones                  shift and go to state 81
    asignacion                     shift and go to state 2
    impresion                      shift and go to state 3
    operacion_aritmetica1          shift and go to state 4
    condicional                    shift and go to state 5
    conjuntos                      shift and go to state 6
    vector_entero                  shift and go to state 7
    vector_flotante                shift and go to state 8
    mapa_entero                    shift and go to state 9
    mapa_flotante                  shift and go to state 10
    if                             shift and go to state 11
    if_do                          shift and go to state 12
    defn                           shift and go to state 13
    defn_with_return               shift and go to state 14
    operacionesLogicas             shift and go to state 15
    sentenciaLoopRecur             shift and go to state 16
    cond_                          shift and go to state 17
    cond_else                      shift and go to state 18
    doseq                          shift and go to state 19
    case_expression                shift and go to state 20
    lista                          shift and go to state 21
    sentencia_booleana             shift and go to state 22
    definition                     shift and go to state 23

state 73

    (52) argumments -> LCOR . dato dato dato RCOR
    (53) argumments -> LCOR . dato dato RCOR
    (54) argumments -> LCOR . dato RCOR
    (23) dato -> . STRING
    (24) dato -> . CHAR
    (25) dato -> . ENTERO
    (26) dato -> . FLOTANTE
    (27) dato -> . BOOLEAN
    (28) dato -> . VARIABLE

    STRING          shift and go to state 59
    CHAR            shift and go to state 60
    ENTERO          shift and go to state 61
    FLOTANTE        shift and go to state 62
    BOOLEAN         shift and go to state 63
    VARIABLE        shift and go to state 64

    dato                           shift and go to state 109

state 74

    (92) defn -> LPAREN DEFFUNCION INCREASE . LCOR VARIABLE RCOR operacionesLogicas RPAREN
    (94) defn_with_return -> LPAREN DEFFUNCION INCREASE . LCOR VARIABLE RCOR operacionesLogicas RPAREN defn_return
    (51) increase -> INCREASE . LCOR dato RCOR

    LCOR            shift and go to state 110


state 75

    (64) definition -> LPAREN DEFFUNCION internos . if dato RPAREN
    (71) if -> . IF LPAREN operador_comparadores dato dato RPAREN
    (72) if -> . IF sentencia_booleana
    (73) if -> . IF sentencia_booleana recur

    IF              shift and go to state 30

    if                             shift and go to state 111

state 76

    (57) internos -> description .
    (62) internos -> description . argumments body
    (52) argumments -> . LCOR dato dato dato RCOR
    (53) argumments -> . LCOR dato dato RCOR
    (54) argumments -> . LCOR dato RCOR

    IF              reduce using rule 57 (internos -> description .)
    RPAREN          reduce using rule 57 (internos -> description .)
    LCOR            shift and go to state 73

    argumments                     shift and go to state 112

state 77

    (58) internos -> argumments .
    (61) internos -> argumments . body
    (55) body -> . instrucciones
    (1) instrucciones -> . asignacion
    (2) instrucciones -> . impresion
    (3) instrucciones -> . operacion_aritmetica1
    (4) instrucciones -> . condicional
    (5) instrucciones -> . conjuntos
    (6) instrucciones -> . vector_entero
    (7) instrucciones -> . vector_flotante
    (8) instrucciones -> . mapa_entero
    (9) instrucciones -> . mapa_flotante
    (10) instrucciones -> . if
    (11) instrucciones -> . if_do
    (12) instrucciones -> . defn
    (13) instrucciones -> . defn_with_return
    (14) instrucciones -> . operacionesLogicas
    (15) instrucciones -> . sentenciaLoopRecur
    (16) instrucciones -> . cond_
    (17) instrucciones -> . cond_else
    (18) instrucciones -> . doseq
    (19) instrucciones -> . case_expression
    (20) instrucciones -> . lista
    (21) instrucciones -> . sentencia_booleana
    (22) instrucciones -> . definition
    (38) asignacion -> . LPAREN DEFICION VARIABLE dato RPAREN
    (39) asignacion -> . LPAREN LET LCOR VARIABLE dato RCOR RPAREN
    (65) impresion -> . LPAREN IMPRIMIR dato RPAREN
    (80) operacion_aritmetica1 -> . LPAREN operacion valor valor RPAREN
    (81) condicional -> . LPAREN operacion valor valor RPAREN
    (98) conjuntos -> . NUMERAL L_LLAVE expresionConjuntoEnteros R_LLAVE
    (99) conjuntos -> . NUMERAL L_LLAVE expresionConjuntoDouble R_LLAVE
    (100) conjuntos -> . NUMERAL L_LLAVE expresionConjuntoString R_LLAVE
    (67) vector_entero -> . VECTOR_ENTERO
    (68) vector_flotante -> . VECTOR_FLOTANTE
    (69) mapa_entero -> . MAPA_ENTERO
    (70) mapa_flotante -> . MAPA_FLOTANTE
    (71) if -> . IF LPAREN operador_comparadores dato dato RPAREN
    (72) if -> . IF sentencia_booleana
    (73) if -> . IF sentencia_booleana recur
    (74) if_do -> . LPAREN IF LPAREN operador_comparadores dato dato RPAREN LPAREN DO LPAREN dato RPAREN BOOLEAN RPAREN RPAREN
    (91) defn -> . LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN
    (92) defn -> . LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN
    (93) defn_with_return -> . LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN defn_return
    (94) defn_with_return -> . LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN defn_return
    (79) operacionesLogicas -> . LPAREN IF LPAREN MENORQUE VARIABLE ENTERO RPAREN LPAREN RECUR LPAREN INC LPAREN VARIABLE RPAREN RPAREN VARIABLE RPAREN RPAREN
    (101) sentenciaLoopRecur -> . LPAREN LOOP argumments LPAREN if dato RPAREN RPAREN
    (42) cond_ -> . LPAREN COND linecondition linecondition RPAREN
    (43) cond_else -> . LPAREN COND linecondition linecondition DOSPUNTOS ELSE impresion RPAREN
    (89) doseq -> . LPAREN DOSEQ doseq_args LPAREN impresion RPAREN RPAREN
    (90) doseq -> . LPAREN DOSEQ doseq_args LPAREN doseq_prn RPAREN RPAREN
    (47) case_expression -> . LPAREN CASE dato case case impresion RPAREN
    (48) case_expression -> . LPAREN CASE dato case case case_else RPAREN
    (49) lista -> . LPAREN LIST dato dato RPAREN
    (40) sentencia_booleana -> . LPAREN operador_comparadores dato dato RPAREN
    (63) definition -> . LPAREN DEFFUNCION VARIABLE internos RPAREN
    (64) definition -> . LPAREN DEFFUNCION internos if dato RPAREN

  ! shift/reduce conflict for IF resolved as shift
    RPAREN          reduce using rule 58 (internos -> argumments .)
    LPAREN          shift and go to state 24
    NUMERAL         shift and go to state 25
    VECTOR_ENTERO   shift and go to state 26
    VECTOR_FLOTANTE shift and go to state 27
    MAPA_ENTERO     shift and go to state 28
    MAPA_FLOTANTE   shift and go to state 29
    IF              shift and go to state 30

  ! IF              [ reduce using rule 58 (internos -> argumments .) ]

    body                           shift and go to state 113
    instrucciones                  shift and go to state 81
    asignacion                     shift and go to state 2
    impresion                      shift and go to state 3
    operacion_aritmetica1          shift and go to state 4
    condicional                    shift and go to state 5
    conjuntos                      shift and go to state 6
    vector_entero                  shift and go to state 7
    vector_flotante                shift and go to state 8
    mapa_entero                    shift and go to state 9
    mapa_flotante                  shift and go to state 10
    if                             shift and go to state 11
    if_do                          shift and go to state 12
    defn                           shift and go to state 13
    defn_with_return               shift and go to state 14
    operacionesLogicas             shift and go to state 15
    sentenciaLoopRecur             shift and go to state 16
    cond_                          shift and go to state 17
    cond_else                      shift and go to state 18
    doseq                          shift and go to state 19
    case_expression                shift and go to state 20
    lista                          shift and go to state 21
    sentencia_booleana             shift and go to state 22
    definition                     shift and go to state 23

state 78

    (59) internos -> body .

    IF              reduce using rule 59 (internos -> body .)
    RPAREN          reduce using rule 59 (internos -> body .)


state 79

    (60) internos -> increase .

    IF              reduce using rule 60 (internos -> increase .)
    RPAREN          reduce using rule 60 (internos -> increase .)


state 80

    (50) description -> STRING .

    LCOR            reduce using rule 50 (description -> STRING .)
    IF              reduce using rule 50 (description -> STRING .)
    RPAREN          reduce using rule 50 (description -> STRING .)


state 81

    (55) body -> instrucciones .

    IF              reduce using rule 55 (body -> instrucciones .)
    RPAREN          reduce using rule 55 (body -> instrucciones .)


state 82

    (101) sentenciaLoopRecur -> LPAREN LOOP argumments . LPAREN if dato RPAREN RPAREN

    LPAREN          shift and go to state 114


state 83

    (40) sentencia_booleana -> LPAREN . operador_comparadores dato dato RPAREN
    (32) operador_comparadores -> . COMPARA_IGUAL
    (33) operador_comparadores -> . MENORQUE
    (34) operador_comparadores -> . MAYORQUE
    (35) operador_comparadores -> . MAYORIGUALQUE
    (36) operador_comparadores -> . MENORIGUALQUE
    (37) operador_comparadores -> . DIFERENTE

    COMPARA_IGUAL   shift and go to state 48
    MENORQUE        shift and go to state 38
    MAYORQUE        shift and go to state 49
    MAYORIGUALQUE   shift and go to state 50
    MENORIGUALQUE   shift and go to state 51
    DIFERENTE       shift and go to state 52

    operador_comparadores          shift and go to state 36

state 84

    (42) cond_ -> LPAREN COND linecondition . linecondition RPAREN
    (43) cond_else -> LPAREN COND linecondition . linecondition DOSPUNTOS ELSE impresion RPAREN
    (41) linecondition -> . sentencia_booleana impresion
    (40) sentencia_booleana -> . LPAREN operador_comparadores dato dato RPAREN

    LPAREN          shift and go to state 83

    linecondition                  shift and go to state 115
    sentencia_booleana             shift and go to state 85

state 85

    (41) linecondition -> sentencia_booleana . impresion
    (65) impresion -> . LPAREN IMPRIMIR dato RPAREN

    LPAREN          shift and go to state 117

    impresion                      shift and go to state 116

state 86

    (89) doseq -> LPAREN DOSEQ doseq_args . LPAREN impresion RPAREN RPAREN
    (90) doseq -> LPAREN DOSEQ doseq_args . LPAREN doseq_prn RPAREN RPAREN

    LPAREN          shift and go to state 118


state 87

    (82) doseq_args -> LCOR . dato LPAREN RANGE dato RPAREN RCOR
    (83) doseq_args -> LCOR . dato conjuntos RCOR
    (84) doseq_args -> LCOR . dato vector_entero dato vector_entero RCOR
    (85) doseq_args -> LCOR . vector_entero conjuntos RCOR
    (23) dato -> . STRING
    (24) dato -> . CHAR
    (25) dato -> . ENTERO
    (26) dato -> . FLOTANTE
    (27) dato -> . BOOLEAN
    (28) dato -> . VARIABLE
    (67) vector_entero -> . VECTOR_ENTERO

    STRING          shift and go to state 59
    CHAR            shift and go to state 60
    ENTERO          shift and go to state 61
    FLOTANTE        shift and go to state 62
    BOOLEAN         shift and go to state 63
    VARIABLE        shift and go to state 64
    VECTOR_ENTERO   shift and go to state 26

    dato                           shift and go to state 119
    vector_entero                  shift and go to state 120

state 88

    (47) case_expression -> LPAREN CASE dato . case case impresion RPAREN
    (48) case_expression -> LPAREN CASE dato . case case case_else RPAREN
    (44) case -> . dato impresion
    (45) case -> . dato dato STRING
    (23) dato -> . STRING
    (24) dato -> . CHAR
    (25) dato -> . ENTERO
    (26) dato -> . FLOTANTE
    (27) dato -> . BOOLEAN
    (28) dato -> . VARIABLE

    STRING          shift and go to state 59
    CHAR            shift and go to state 60
    ENTERO          shift and go to state 61
    FLOTANTE        shift and go to state 62
    BOOLEAN         shift and go to state 63
    VARIABLE        shift and go to state 64

    dato                           shift and go to state 121
    case                           shift and go to state 122

state 89

    (49) lista -> LPAREN LIST dato . dato RPAREN
    (23) dato -> . STRING
    (24) dato -> . CHAR
    (25) dato -> . ENTERO
    (26) dato -> . FLOTANTE
    (27) dato -> . BOOLEAN
    (28) dato -> . VARIABLE

    STRING          shift and go to state 59
    CHAR            shift and go to state 60
    ENTERO          shift and go to state 61
    FLOTANTE        shift and go to state 62
    BOOLEAN         shift and go to state 63
    VARIABLE        shift and go to state 64

    dato                           shift and go to state 123

state 90

    (98) conjuntos -> NUMERAL L_LLAVE expresionConjuntoEnteros . R_LLAVE

    R_LLAVE         shift and go to state 124


state 91

    (99) conjuntos -> NUMERAL L_LLAVE expresionConjuntoDouble . R_LLAVE

    R_LLAVE         shift and go to state 125


state 92

    (100) conjuntos -> NUMERAL L_LLAVE expresionConjuntoString . R_LLAVE

    R_LLAVE         shift and go to state 126


state 93

    (102) expresionConjuntoEnteros -> ENTERO .
    (103) expresionConjuntoEnteros -> ENTERO . expresionConjuntoEnteros
    (102) expresionConjuntoEnteros -> . ENTERO
    (103) expresionConjuntoEnteros -> . ENTERO expresionConjuntoEnteros

    R_LLAVE         reduce using rule 102 (expresionConjuntoEnteros -> ENTERO .)
    ENTERO          shift and go to state 93

    expresionConjuntoEnteros       shift and go to state 127

state 94

    (104) expresionConjuntoDouble -> FLOTANTE .
    (105) expresionConjuntoDouble -> FLOTANTE . expresionConjuntoDouble
    (104) expresionConjuntoDouble -> . FLOTANTE
    (105) expresionConjuntoDouble -> . FLOTANTE expresionConjuntoDouble

    R_LLAVE         reduce using rule 104 (expresionConjuntoDouble -> FLOTANTE .)
    FLOTANTE        shift and go to state 94

    expresionConjuntoDouble        shift and go to state 128

state 95

    (106) expresionConjuntoString -> STRING .
    (107) expresionConjuntoString -> STRING . expresionConjuntoString
    (106) expresionConjuntoString -> . STRING
    (107) expresionConjuntoString -> . STRING expresionConjuntoString

    R_LLAVE         reduce using rule 106 (expresionConjuntoString -> STRING .)
    STRING          shift and go to state 95

    expresionConjuntoString        shift and go to state 129

state 96

    (71) if -> IF LPAREN operador_comparadores . dato dato RPAREN
    (40) sentencia_booleana -> LPAREN operador_comparadores . dato dato RPAREN
    (23) dato -> . STRING
    (24) dato -> . CHAR
    (25) dato -> . ENTERO
    (26) dato -> . FLOTANTE
    (27) dato -> . BOOLEAN
    (28) dato -> . VARIABLE

    STRING          shift and go to state 59
    CHAR            shift and go to state 60
    ENTERO          shift and go to state 61
    FLOTANTE        shift and go to state 62
    BOOLEAN         shift and go to state 63
    VARIABLE        shift and go to state 64

    dato                           shift and go to state 130

state 97

    (73) if -> IF sentencia_booleana recur .

    $end            reduce using rule 73 (if -> IF sentencia_booleana recur .)
    IF              reduce using rule 73 (if -> IF sentencia_booleana recur .)
    RPAREN          reduce using rule 73 (if -> IF sentencia_booleana recur .)
    STRING          reduce using rule 73 (if -> IF sentencia_booleana recur .)
    CHAR            reduce using rule 73 (if -> IF sentencia_booleana recur .)
    ENTERO          reduce using rule 73 (if -> IF sentencia_booleana recur .)
    FLOTANTE        reduce using rule 73 (if -> IF sentencia_booleana recur .)
    BOOLEAN         reduce using rule 73 (if -> IF sentencia_booleana recur .)
    VARIABLE        reduce using rule 73 (if -> IF sentencia_booleana recur .)


state 98

    (56) recur -> LPAREN . RECUR LPAREN INC dato RPAREN RPAREN

    RECUR           shift and go to state 131


state 99

    (38) asignacion -> LPAREN DEFICION VARIABLE dato . RPAREN

    RPAREN          shift and go to state 132


state 100

    (39) asignacion -> LPAREN LET LCOR VARIABLE . dato RCOR RPAREN
    (23) dato -> . STRING
    (24) dato -> . CHAR
    (25) dato -> . ENTERO
    (26) dato -> . FLOTANTE
    (27) dato -> . BOOLEAN
    (28) dato -> . VARIABLE

    STRING          shift and go to state 59
    CHAR            shift and go to state 60
    ENTERO          shift and go to state 61
    FLOTANTE        shift and go to state 62
    BOOLEAN         shift and go to state 63
    VARIABLE        shift and go to state 64

    dato                           shift and go to state 133

state 101

    (65) impresion -> LPAREN IMPRIMIR dato RPAREN .

    $end            reduce using rule 65 (impresion -> LPAREN IMPRIMIR dato RPAREN .)
    IF              reduce using rule 65 (impresion -> LPAREN IMPRIMIR dato RPAREN .)
    RPAREN          reduce using rule 65 (impresion -> LPAREN IMPRIMIR dato RPAREN .)
    LPAREN          reduce using rule 65 (impresion -> LPAREN IMPRIMIR dato RPAREN .)
    DOSPUNTOS       reduce using rule 65 (impresion -> LPAREN IMPRIMIR dato RPAREN .)
    STRING          reduce using rule 65 (impresion -> LPAREN IMPRIMIR dato RPAREN .)
    CHAR            reduce using rule 65 (impresion -> LPAREN IMPRIMIR dato RPAREN .)
    ENTERO          reduce using rule 65 (impresion -> LPAREN IMPRIMIR dato RPAREN .)
    FLOTANTE        reduce using rule 65 (impresion -> LPAREN IMPRIMIR dato RPAREN .)
    BOOLEAN         reduce using rule 65 (impresion -> LPAREN IMPRIMIR dato RPAREN .)
    VARIABLE        reduce using rule 65 (impresion -> LPAREN IMPRIMIR dato RPAREN .)


state 102

    (80) operacion_aritmetica1 -> LPAREN operacion valor valor . RPAREN
    (81) condicional -> LPAREN operacion valor valor . RPAREN

    RPAREN          shift and go to state 134


state 103

    (74) if_do -> LPAREN IF LPAREN operador_comparadores . dato dato RPAREN LPAREN DO LPAREN dato RPAREN BOOLEAN RPAREN RPAREN
    (23) dato -> . STRING
    (24) dato -> . CHAR
    (25) dato -> . ENTERO
    (26) dato -> . FLOTANTE
    (27) dato -> . BOOLEAN
    (28) dato -> . VARIABLE

    STRING          shift and go to state 59
    CHAR            shift and go to state 60
    ENTERO          shift and go to state 61
    FLOTANTE        shift and go to state 62
    BOOLEAN         shift and go to state 63
    VARIABLE        shift and go to state 64

    dato                           shift and go to state 135

state 104

    (79) operacionesLogicas -> LPAREN IF LPAREN MENORQUE . VARIABLE ENTERO RPAREN LPAREN RECUR LPAREN INC LPAREN VARIABLE RPAREN RPAREN VARIABLE RPAREN RPAREN
    (33) operador_comparadores -> MENORQUE .

  ! shift/reduce conflict for VARIABLE resolved as shift
    VARIABLE        shift and go to state 136
    STRING          reduce using rule 33 (operador_comparadores -> MENORQUE .)
    CHAR            reduce using rule 33 (operador_comparadores -> MENORQUE .)
    ENTERO          reduce using rule 33 (operador_comparadores -> MENORQUE .)
    FLOTANTE        reduce using rule 33 (operador_comparadores -> MENORQUE .)
    BOOLEAN         reduce using rule 33 (operador_comparadores -> MENORQUE .)

  ! VARIABLE        [ reduce using rule 33 (operador_comparadores -> MENORQUE .) ]


state 105

    (40) sentencia_booleana -> LPAREN operador_comparadores dato dato . RPAREN

    RPAREN          shift and go to state 137


state 106

    (91) defn -> LPAREN DEFFUNCION VARIABLE LCOR . VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN
    (93) defn_with_return -> LPAREN DEFFUNCION VARIABLE LCOR . VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN defn_return
    (52) argumments -> LCOR . dato dato dato RCOR
    (53) argumments -> LCOR . dato dato RCOR
    (54) argumments -> LCOR . dato RCOR
    (23) dato -> . STRING
    (24) dato -> . CHAR
    (25) dato -> . ENTERO
    (26) dato -> . FLOTANTE
    (27) dato -> . BOOLEAN
    (28) dato -> . VARIABLE

    VARIABLE        shift and go to state 138
    STRING          shift and go to state 59
    CHAR            shift and go to state 60
    ENTERO          shift and go to state 61
    FLOTANTE        shift and go to state 62
    BOOLEAN         shift and go to state 63

    dato                           shift and go to state 109

state 107

    (63) definition -> LPAREN DEFFUNCION VARIABLE internos . RPAREN

    RPAREN          shift and go to state 139


state 108

    (51) increase -> INCREASE . LCOR dato RCOR

    LCOR            shift and go to state 140


state 109

    (52) argumments -> LCOR dato . dato dato RCOR
    (53) argumments -> LCOR dato . dato RCOR
    (54) argumments -> LCOR dato . RCOR
    (23) dato -> . STRING
    (24) dato -> . CHAR
    (25) dato -> . ENTERO
    (26) dato -> . FLOTANTE
    (27) dato -> . BOOLEAN
    (28) dato -> . VARIABLE

    RCOR            shift and go to state 142
    STRING          shift and go to state 59
    CHAR            shift and go to state 60
    ENTERO          shift and go to state 61
    FLOTANTE        shift and go to state 62
    BOOLEAN         shift and go to state 63
    VARIABLE        shift and go to state 64

    dato                           shift and go to state 141

state 110

    (92) defn -> LPAREN DEFFUNCION INCREASE LCOR . VARIABLE RCOR operacionesLogicas RPAREN
    (94) defn_with_return -> LPAREN DEFFUNCION INCREASE LCOR . VARIABLE RCOR operacionesLogicas RPAREN defn_return
    (51) increase -> INCREASE LCOR . dato RCOR
    (23) dato -> . STRING
    (24) dato -> . CHAR
    (25) dato -> . ENTERO
    (26) dato -> . FLOTANTE
    (27) dato -> . BOOLEAN
    (28) dato -> . VARIABLE

    VARIABLE        shift and go to state 143
    STRING          shift and go to state 59
    CHAR            shift and go to state 60
    ENTERO          shift and go to state 61
    FLOTANTE        shift and go to state 62
    BOOLEAN         shift and go to state 63

    dato                           shift and go to state 144

state 111

    (64) definition -> LPAREN DEFFUNCION internos if . dato RPAREN
    (23) dato -> . STRING
    (24) dato -> . CHAR
    (25) dato -> . ENTERO
    (26) dato -> . FLOTANTE
    (27) dato -> . BOOLEAN
    (28) dato -> . VARIABLE

    STRING          shift and go to state 59
    CHAR            shift and go to state 60
    ENTERO          shift and go to state 61
    FLOTANTE        shift and go to state 62
    BOOLEAN         shift and go to state 63
    VARIABLE        shift and go to state 64

    dato                           shift and go to state 145

state 112

    (62) internos -> description argumments . body
    (55) body -> . instrucciones
    (1) instrucciones -> . asignacion
    (2) instrucciones -> . impresion
    (3) instrucciones -> . operacion_aritmetica1
    (4) instrucciones -> . condicional
    (5) instrucciones -> . conjuntos
    (6) instrucciones -> . vector_entero
    (7) instrucciones -> . vector_flotante
    (8) instrucciones -> . mapa_entero
    (9) instrucciones -> . mapa_flotante
    (10) instrucciones -> . if
    (11) instrucciones -> . if_do
    (12) instrucciones -> . defn
    (13) instrucciones -> . defn_with_return
    (14) instrucciones -> . operacionesLogicas
    (15) instrucciones -> . sentenciaLoopRecur
    (16) instrucciones -> . cond_
    (17) instrucciones -> . cond_else
    (18) instrucciones -> . doseq
    (19) instrucciones -> . case_expression
    (20) instrucciones -> . lista
    (21) instrucciones -> . sentencia_booleana
    (22) instrucciones -> . definition
    (38) asignacion -> . LPAREN DEFICION VARIABLE dato RPAREN
    (39) asignacion -> . LPAREN LET LCOR VARIABLE dato RCOR RPAREN
    (65) impresion -> . LPAREN IMPRIMIR dato RPAREN
    (80) operacion_aritmetica1 -> . LPAREN operacion valor valor RPAREN
    (81) condicional -> . LPAREN operacion valor valor RPAREN
    (98) conjuntos -> . NUMERAL L_LLAVE expresionConjuntoEnteros R_LLAVE
    (99) conjuntos -> . NUMERAL L_LLAVE expresionConjuntoDouble R_LLAVE
    (100) conjuntos -> . NUMERAL L_LLAVE expresionConjuntoString R_LLAVE
    (67) vector_entero -> . VECTOR_ENTERO
    (68) vector_flotante -> . VECTOR_FLOTANTE
    (69) mapa_entero -> . MAPA_ENTERO
    (70) mapa_flotante -> . MAPA_FLOTANTE
    (71) if -> . IF LPAREN operador_comparadores dato dato RPAREN
    (72) if -> . IF sentencia_booleana
    (73) if -> . IF sentencia_booleana recur
    (74) if_do -> . LPAREN IF LPAREN operador_comparadores dato dato RPAREN LPAREN DO LPAREN dato RPAREN BOOLEAN RPAREN RPAREN
    (91) defn -> . LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN
    (92) defn -> . LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN
    (93) defn_with_return -> . LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN defn_return
    (94) defn_with_return -> . LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN defn_return
    (79) operacionesLogicas -> . LPAREN IF LPAREN MENORQUE VARIABLE ENTERO RPAREN LPAREN RECUR LPAREN INC LPAREN VARIABLE RPAREN RPAREN VARIABLE RPAREN RPAREN
    (101) sentenciaLoopRecur -> . LPAREN LOOP argumments LPAREN if dato RPAREN RPAREN
    (42) cond_ -> . LPAREN COND linecondition linecondition RPAREN
    (43) cond_else -> . LPAREN COND linecondition linecondition DOSPUNTOS ELSE impresion RPAREN
    (89) doseq -> . LPAREN DOSEQ doseq_args LPAREN impresion RPAREN RPAREN
    (90) doseq -> . LPAREN DOSEQ doseq_args LPAREN doseq_prn RPAREN RPAREN
    (47) case_expression -> . LPAREN CASE dato case case impresion RPAREN
    (48) case_expression -> . LPAREN CASE dato case case case_else RPAREN
    (49) lista -> . LPAREN LIST dato dato RPAREN
    (40) sentencia_booleana -> . LPAREN operador_comparadores dato dato RPAREN
    (63) definition -> . LPAREN DEFFUNCION VARIABLE internos RPAREN
    (64) definition -> . LPAREN DEFFUNCION internos if dato RPAREN

    LPAREN          shift and go to state 24
    NUMERAL         shift and go to state 25
    VECTOR_ENTERO   shift and go to state 26
    VECTOR_FLOTANTE shift and go to state 27
    MAPA_ENTERO     shift and go to state 28
    MAPA_FLOTANTE   shift and go to state 29
    IF              shift and go to state 30

    body                           shift and go to state 146
    instrucciones                  shift and go to state 81
    asignacion                     shift and go to state 2
    impresion                      shift and go to state 3
    operacion_aritmetica1          shift and go to state 4
    condicional                    shift and go to state 5
    conjuntos                      shift and go to state 6
    vector_entero                  shift and go to state 7
    vector_flotante                shift and go to state 8
    mapa_entero                    shift and go to state 9
    mapa_flotante                  shift and go to state 10
    if                             shift and go to state 11
    if_do                          shift and go to state 12
    defn                           shift and go to state 13
    defn_with_return               shift and go to state 14
    operacionesLogicas             shift and go to state 15
    sentenciaLoopRecur             shift and go to state 16
    cond_                          shift and go to state 17
    cond_else                      shift and go to state 18
    doseq                          shift and go to state 19
    case_expression                shift and go to state 20
    lista                          shift and go to state 21
    sentencia_booleana             shift and go to state 22
    definition                     shift and go to state 23

state 113

    (61) internos -> argumments body .

    IF              reduce using rule 61 (internos -> argumments body .)
    RPAREN          reduce using rule 61 (internos -> argumments body .)


state 114

    (101) sentenciaLoopRecur -> LPAREN LOOP argumments LPAREN . if dato RPAREN RPAREN
    (71) if -> . IF LPAREN operador_comparadores dato dato RPAREN
    (72) if -> . IF sentencia_booleana
    (73) if -> . IF sentencia_booleana recur

    IF              shift and go to state 30

    if                             shift and go to state 147

state 115

    (42) cond_ -> LPAREN COND linecondition linecondition . RPAREN
    (43) cond_else -> LPAREN COND linecondition linecondition . DOSPUNTOS ELSE impresion RPAREN

    RPAREN          shift and go to state 148
    DOSPUNTOS       shift and go to state 149


state 116

    (41) linecondition -> sentencia_booleana impresion .

    LPAREN          reduce using rule 41 (linecondition -> sentencia_booleana impresion .)
    RPAREN          reduce using rule 41 (linecondition -> sentencia_booleana impresion .)
    DOSPUNTOS       reduce using rule 41 (linecondition -> sentencia_booleana impresion .)


state 117

    (65) impresion -> LPAREN . IMPRIMIR dato RPAREN

    IMPRIMIR        shift and go to state 33


state 118

    (89) doseq -> LPAREN DOSEQ doseq_args LPAREN . impresion RPAREN RPAREN
    (90) doseq -> LPAREN DOSEQ doseq_args LPAREN . doseq_prn RPAREN RPAREN
    (65) impresion -> . LPAREN IMPRIMIR dato RPAREN
    (86) doseq_prn -> . PRN LPAREN dato RPAREN
    (87) doseq_prn -> . PRN LPAREN dato dato RPAREN
    (88) doseq_prn -> . PRN LPAREN dato dato dato RPAREN

    LPAREN          shift and go to state 117
    PRN             shift and go to state 152

    impresion                      shift and go to state 150
    doseq_prn                      shift and go to state 151

state 119

    (82) doseq_args -> LCOR dato . LPAREN RANGE dato RPAREN RCOR
    (83) doseq_args -> LCOR dato . conjuntos RCOR
    (84) doseq_args -> LCOR dato . vector_entero dato vector_entero RCOR
    (98) conjuntos -> . NUMERAL L_LLAVE expresionConjuntoEnteros R_LLAVE
    (99) conjuntos -> . NUMERAL L_LLAVE expresionConjuntoDouble R_LLAVE
    (100) conjuntos -> . NUMERAL L_LLAVE expresionConjuntoString R_LLAVE
    (67) vector_entero -> . VECTOR_ENTERO

    LPAREN          shift and go to state 153
    NUMERAL         shift and go to state 25
    VECTOR_ENTERO   shift and go to state 26

    conjuntos                      shift and go to state 154
    vector_entero                  shift and go to state 155

state 120

    (85) doseq_args -> LCOR vector_entero . conjuntos RCOR
    (98) conjuntos -> . NUMERAL L_LLAVE expresionConjuntoEnteros R_LLAVE
    (99) conjuntos -> . NUMERAL L_LLAVE expresionConjuntoDouble R_LLAVE
    (100) conjuntos -> . NUMERAL L_LLAVE expresionConjuntoString R_LLAVE

    NUMERAL         shift and go to state 25

    conjuntos                      shift and go to state 156

state 121

    (44) case -> dato . impresion
    (45) case -> dato . dato STRING
    (65) impresion -> . LPAREN IMPRIMIR dato RPAREN
    (23) dato -> . STRING
    (24) dato -> . CHAR
    (25) dato -> . ENTERO
    (26) dato -> . FLOTANTE
    (27) dato -> . BOOLEAN
    (28) dato -> . VARIABLE

    LPAREN          shift and go to state 117
    STRING          shift and go to state 59
    CHAR            shift and go to state 60
    ENTERO          shift and go to state 61
    FLOTANTE        shift and go to state 62
    BOOLEAN         shift and go to state 63
    VARIABLE        shift and go to state 64

    dato                           shift and go to state 157
    impresion                      shift and go to state 158

state 122

    (47) case_expression -> LPAREN CASE dato case . case impresion RPAREN
    (48) case_expression -> LPAREN CASE dato case . case case_else RPAREN
    (44) case -> . dato impresion
    (45) case -> . dato dato STRING
    (23) dato -> . STRING
    (24) dato -> . CHAR
    (25) dato -> . ENTERO
    (26) dato -> . FLOTANTE
    (27) dato -> . BOOLEAN
    (28) dato -> . VARIABLE

    STRING          shift and go to state 59
    CHAR            shift and go to state 60
    ENTERO          shift and go to state 61
    FLOTANTE        shift and go to state 62
    BOOLEAN         shift and go to state 63
    VARIABLE        shift and go to state 64

    dato                           shift and go to state 121
    case                           shift and go to state 159

state 123

    (49) lista -> LPAREN LIST dato dato . RPAREN

    RPAREN          shift and go to state 160


state 124

    (98) conjuntos -> NUMERAL L_LLAVE expresionConjuntoEnteros R_LLAVE .

    $end            reduce using rule 98 (conjuntos -> NUMERAL L_LLAVE expresionConjuntoEnteros R_LLAVE .)
    IF              reduce using rule 98 (conjuntos -> NUMERAL L_LLAVE expresionConjuntoEnteros R_LLAVE .)
    RPAREN          reduce using rule 98 (conjuntos -> NUMERAL L_LLAVE expresionConjuntoEnteros R_LLAVE .)
    RCOR            reduce using rule 98 (conjuntos -> NUMERAL L_LLAVE expresionConjuntoEnteros R_LLAVE .)


state 125

    (99) conjuntos -> NUMERAL L_LLAVE expresionConjuntoDouble R_LLAVE .

    $end            reduce using rule 99 (conjuntos -> NUMERAL L_LLAVE expresionConjuntoDouble R_LLAVE .)
    IF              reduce using rule 99 (conjuntos -> NUMERAL L_LLAVE expresionConjuntoDouble R_LLAVE .)
    RPAREN          reduce using rule 99 (conjuntos -> NUMERAL L_LLAVE expresionConjuntoDouble R_LLAVE .)
    RCOR            reduce using rule 99 (conjuntos -> NUMERAL L_LLAVE expresionConjuntoDouble R_LLAVE .)


state 126

    (100) conjuntos -> NUMERAL L_LLAVE expresionConjuntoString R_LLAVE .

    $end            reduce using rule 100 (conjuntos -> NUMERAL L_LLAVE expresionConjuntoString R_LLAVE .)
    IF              reduce using rule 100 (conjuntos -> NUMERAL L_LLAVE expresionConjuntoString R_LLAVE .)
    RPAREN          reduce using rule 100 (conjuntos -> NUMERAL L_LLAVE expresionConjuntoString R_LLAVE .)
    RCOR            reduce using rule 100 (conjuntos -> NUMERAL L_LLAVE expresionConjuntoString R_LLAVE .)


state 127

    (103) expresionConjuntoEnteros -> ENTERO expresionConjuntoEnteros .

    R_LLAVE         reduce using rule 103 (expresionConjuntoEnteros -> ENTERO expresionConjuntoEnteros .)


state 128

    (105) expresionConjuntoDouble -> FLOTANTE expresionConjuntoDouble .

    R_LLAVE         reduce using rule 105 (expresionConjuntoDouble -> FLOTANTE expresionConjuntoDouble .)


state 129

    (107) expresionConjuntoString -> STRING expresionConjuntoString .

    R_LLAVE         reduce using rule 107 (expresionConjuntoString -> STRING expresionConjuntoString .)


state 130

    (71) if -> IF LPAREN operador_comparadores dato . dato RPAREN
    (40) sentencia_booleana -> LPAREN operador_comparadores dato . dato RPAREN
    (23) dato -> . STRING
    (24) dato -> . CHAR
    (25) dato -> . ENTERO
    (26) dato -> . FLOTANTE
    (27) dato -> . BOOLEAN
    (28) dato -> . VARIABLE

    STRING          shift and go to state 59
    CHAR            shift and go to state 60
    ENTERO          shift and go to state 61
    FLOTANTE        shift and go to state 62
    BOOLEAN         shift and go to state 63
    VARIABLE        shift and go to state 64

    dato                           shift and go to state 161

state 131

    (56) recur -> LPAREN RECUR . LPAREN INC dato RPAREN RPAREN

    LPAREN          shift and go to state 162


state 132

    (38) asignacion -> LPAREN DEFICION VARIABLE dato RPAREN .

    $end            reduce using rule 38 (asignacion -> LPAREN DEFICION VARIABLE dato RPAREN .)
    IF              reduce using rule 38 (asignacion -> LPAREN DEFICION VARIABLE dato RPAREN .)
    RPAREN          reduce using rule 38 (asignacion -> LPAREN DEFICION VARIABLE dato RPAREN .)


state 133

    (39) asignacion -> LPAREN LET LCOR VARIABLE dato . RCOR RPAREN

    RCOR            shift and go to state 163


state 134

    (80) operacion_aritmetica1 -> LPAREN operacion valor valor RPAREN .
    (81) condicional -> LPAREN operacion valor valor RPAREN .

  ! reduce/reduce conflict for $end resolved using rule 80 (operacion_aritmetica1 -> LPAREN operacion valor valor RPAREN .)
  ! reduce/reduce conflict for IF resolved using rule 80 (operacion_aritmetica1 -> LPAREN operacion valor valor RPAREN .)
  ! reduce/reduce conflict for RPAREN resolved using rule 80 (operacion_aritmetica1 -> LPAREN operacion valor valor RPAREN .)
    $end            reduce using rule 80 (operacion_aritmetica1 -> LPAREN operacion valor valor RPAREN .)
    IF              reduce using rule 80 (operacion_aritmetica1 -> LPAREN operacion valor valor RPAREN .)
    RPAREN          reduce using rule 80 (operacion_aritmetica1 -> LPAREN operacion valor valor RPAREN .)

  ! $end            [ reduce using rule 81 (condicional -> LPAREN operacion valor valor RPAREN .) ]
  ! IF              [ reduce using rule 81 (condicional -> LPAREN operacion valor valor RPAREN .) ]
  ! RPAREN          [ reduce using rule 81 (condicional -> LPAREN operacion valor valor RPAREN .) ]


state 135

    (74) if_do -> LPAREN IF LPAREN operador_comparadores dato . dato RPAREN LPAREN DO LPAREN dato RPAREN BOOLEAN RPAREN RPAREN
    (23) dato -> . STRING
    (24) dato -> . CHAR
    (25) dato -> . ENTERO
    (26) dato -> . FLOTANTE
    (27) dato -> . BOOLEAN
    (28) dato -> . VARIABLE

    STRING          shift and go to state 59
    CHAR            shift and go to state 60
    ENTERO          shift and go to state 61
    FLOTANTE        shift and go to state 62
    BOOLEAN         shift and go to state 63
    VARIABLE        shift and go to state 64

    dato                           shift and go to state 164

state 136

    (79) operacionesLogicas -> LPAREN IF LPAREN MENORQUE VARIABLE . ENTERO RPAREN LPAREN RECUR LPAREN INC LPAREN VARIABLE RPAREN RPAREN VARIABLE RPAREN RPAREN

    ENTERO          shift and go to state 165


state 137

    (40) sentencia_booleana -> LPAREN operador_comparadores dato dato RPAREN .

    $end            reduce using rule 40 (sentencia_booleana -> LPAREN operador_comparadores dato dato RPAREN .)
    IF              reduce using rule 40 (sentencia_booleana -> LPAREN operador_comparadores dato dato RPAREN .)
    LPAREN          reduce using rule 40 (sentencia_booleana -> LPAREN operador_comparadores dato dato RPAREN .)
    RPAREN          reduce using rule 40 (sentencia_booleana -> LPAREN operador_comparadores dato dato RPAREN .)


state 138

    (91) defn -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE . RCOR LPAREN expresionDefnElse RPAREN RPAREN
    (93) defn_with_return -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE . RCOR LPAREN expresionDefnElse RPAREN RPAREN defn_return
    (28) dato -> VARIABLE .

  ! shift/reduce conflict for RCOR resolved as shift
    RCOR            shift and go to state 166
    STRING          reduce using rule 28 (dato -> VARIABLE .)
    CHAR            reduce using rule 28 (dato -> VARIABLE .)
    ENTERO          reduce using rule 28 (dato -> VARIABLE .)
    FLOTANTE        reduce using rule 28 (dato -> VARIABLE .)
    BOOLEAN         reduce using rule 28 (dato -> VARIABLE .)
    VARIABLE        reduce using rule 28 (dato -> VARIABLE .)

  ! RCOR            [ reduce using rule 28 (dato -> VARIABLE .) ]


state 139

    (63) definition -> LPAREN DEFFUNCION VARIABLE internos RPAREN .

    $end            reduce using rule 63 (definition -> LPAREN DEFFUNCION VARIABLE internos RPAREN .)
    IF              reduce using rule 63 (definition -> LPAREN DEFFUNCION VARIABLE internos RPAREN .)
    RPAREN          reduce using rule 63 (definition -> LPAREN DEFFUNCION VARIABLE internos RPAREN .)


state 140

    (51) increase -> INCREASE LCOR . dato RCOR
    (23) dato -> . STRING
    (24) dato -> . CHAR
    (25) dato -> . ENTERO
    (26) dato -> . FLOTANTE
    (27) dato -> . BOOLEAN
    (28) dato -> . VARIABLE

    STRING          shift and go to state 59
    CHAR            shift and go to state 60
    ENTERO          shift and go to state 61
    FLOTANTE        shift and go to state 62
    BOOLEAN         shift and go to state 63
    VARIABLE        shift and go to state 64

    dato                           shift and go to state 144

state 141

    (52) argumments -> LCOR dato dato . dato RCOR
    (53) argumments -> LCOR dato dato . RCOR
    (23) dato -> . STRING
    (24) dato -> . CHAR
    (25) dato -> . ENTERO
    (26) dato -> . FLOTANTE
    (27) dato -> . BOOLEAN
    (28) dato -> . VARIABLE

    RCOR            shift and go to state 168
    STRING          shift and go to state 59
    CHAR            shift and go to state 60
    ENTERO          shift and go to state 61
    FLOTANTE        shift and go to state 62
    BOOLEAN         shift and go to state 63
    VARIABLE        shift and go to state 64

    dato                           shift and go to state 167

state 142

    (54) argumments -> LCOR dato RCOR .

    LPAREN          reduce using rule 54 (argumments -> LCOR dato RCOR .)
    NUMERAL         reduce using rule 54 (argumments -> LCOR dato RCOR .)
    VECTOR_ENTERO   reduce using rule 54 (argumments -> LCOR dato RCOR .)
    VECTOR_FLOTANTE reduce using rule 54 (argumments -> LCOR dato RCOR .)
    MAPA_ENTERO     reduce using rule 54 (argumments -> LCOR dato RCOR .)
    MAPA_FLOTANTE   reduce using rule 54 (argumments -> LCOR dato RCOR .)
    IF              reduce using rule 54 (argumments -> LCOR dato RCOR .)
    RPAREN          reduce using rule 54 (argumments -> LCOR dato RCOR .)


state 143

    (92) defn -> LPAREN DEFFUNCION INCREASE LCOR VARIABLE . RCOR operacionesLogicas RPAREN
    (94) defn_with_return -> LPAREN DEFFUNCION INCREASE LCOR VARIABLE . RCOR operacionesLogicas RPAREN defn_return
    (28) dato -> VARIABLE .

  ! shift/reduce conflict for RCOR resolved as shift
    RCOR            shift and go to state 169

  ! RCOR            [ reduce using rule 28 (dato -> VARIABLE .) ]


state 144

    (51) increase -> INCREASE LCOR dato . RCOR

    RCOR            shift and go to state 170


state 145

    (64) definition -> LPAREN DEFFUNCION internos if dato . RPAREN

    RPAREN          shift and go to state 171


state 146

    (62) internos -> description argumments body .

    IF              reduce using rule 62 (internos -> description argumments body .)
    RPAREN          reduce using rule 62 (internos -> description argumments body .)


state 147

    (101) sentenciaLoopRecur -> LPAREN LOOP argumments LPAREN if . dato RPAREN RPAREN
    (23) dato -> . STRING
    (24) dato -> . CHAR
    (25) dato -> . ENTERO
    (26) dato -> . FLOTANTE
    (27) dato -> . BOOLEAN
    (28) dato -> . VARIABLE

    STRING          shift and go to state 59
    CHAR            shift and go to state 60
    ENTERO          shift and go to state 61
    FLOTANTE        shift and go to state 62
    BOOLEAN         shift and go to state 63
    VARIABLE        shift and go to state 64

    dato                           shift and go to state 172

state 148

    (42) cond_ -> LPAREN COND linecondition linecondition RPAREN .

    $end            reduce using rule 42 (cond_ -> LPAREN COND linecondition linecondition RPAREN .)
    IF              reduce using rule 42 (cond_ -> LPAREN COND linecondition linecondition RPAREN .)
    RPAREN          reduce using rule 42 (cond_ -> LPAREN COND linecondition linecondition RPAREN .)


state 149

    (43) cond_else -> LPAREN COND linecondition linecondition DOSPUNTOS . ELSE impresion RPAREN

    ELSE            shift and go to state 173


state 150

    (89) doseq -> LPAREN DOSEQ doseq_args LPAREN impresion . RPAREN RPAREN

    RPAREN          shift and go to state 174


state 151

    (90) doseq -> LPAREN DOSEQ doseq_args LPAREN doseq_prn . RPAREN RPAREN

    RPAREN          shift and go to state 175


state 152

    (86) doseq_prn -> PRN . LPAREN dato RPAREN
    (87) doseq_prn -> PRN . LPAREN dato dato RPAREN
    (88) doseq_prn -> PRN . LPAREN dato dato dato RPAREN

    LPAREN          shift and go to state 176


state 153

    (82) doseq_args -> LCOR dato LPAREN . RANGE dato RPAREN RCOR

    RANGE           shift and go to state 177


state 154

    (83) doseq_args -> LCOR dato conjuntos . RCOR

    RCOR            shift and go to state 178


state 155

    (84) doseq_args -> LCOR dato vector_entero . dato vector_entero RCOR
    (23) dato -> . STRING
    (24) dato -> . CHAR
    (25) dato -> . ENTERO
    (26) dato -> . FLOTANTE
    (27) dato -> . BOOLEAN
    (28) dato -> . VARIABLE

    STRING          shift and go to state 59
    CHAR            shift and go to state 60
    ENTERO          shift and go to state 61
    FLOTANTE        shift and go to state 62
    BOOLEAN         shift and go to state 63
    VARIABLE        shift and go to state 64

    dato                           shift and go to state 179

state 156

    (85) doseq_args -> LCOR vector_entero conjuntos . RCOR

    RCOR            shift and go to state 180


state 157

    (45) case -> dato dato . STRING

    STRING          shift and go to state 181


state 158

    (44) case -> dato impresion .

    STRING          reduce using rule 44 (case -> dato impresion .)
    CHAR            reduce using rule 44 (case -> dato impresion .)
    ENTERO          reduce using rule 44 (case -> dato impresion .)
    FLOTANTE        reduce using rule 44 (case -> dato impresion .)
    BOOLEAN         reduce using rule 44 (case -> dato impresion .)
    VARIABLE        reduce using rule 44 (case -> dato impresion .)
    LPAREN          reduce using rule 44 (case -> dato impresion .)
    DOSPUNTOS       reduce using rule 44 (case -> dato impresion .)


state 159

    (47) case_expression -> LPAREN CASE dato case case . impresion RPAREN
    (48) case_expression -> LPAREN CASE dato case case . case_else RPAREN
    (65) impresion -> . LPAREN IMPRIMIR dato RPAREN
    (46) case_else -> . DOSPUNTOS ELSE STRING

    LPAREN          shift and go to state 117
    DOSPUNTOS       shift and go to state 184

    impresion                      shift and go to state 182
    case_else                      shift and go to state 183

state 160

    (49) lista -> LPAREN LIST dato dato RPAREN .

    $end            reduce using rule 49 (lista -> LPAREN LIST dato dato RPAREN .)
    IF              reduce using rule 49 (lista -> LPAREN LIST dato dato RPAREN .)
    RPAREN          reduce using rule 49 (lista -> LPAREN LIST dato dato RPAREN .)


state 161

    (71) if -> IF LPAREN operador_comparadores dato dato . RPAREN
    (40) sentencia_booleana -> LPAREN operador_comparadores dato dato . RPAREN

    RPAREN          shift and go to state 185


state 162

    (56) recur -> LPAREN RECUR LPAREN . INC dato RPAREN RPAREN

    INC             shift and go to state 186


state 163

    (39) asignacion -> LPAREN LET LCOR VARIABLE dato RCOR . RPAREN

    RPAREN          shift and go to state 187


state 164

    (74) if_do -> LPAREN IF LPAREN operador_comparadores dato dato . RPAREN LPAREN DO LPAREN dato RPAREN BOOLEAN RPAREN RPAREN

    RPAREN          shift and go to state 188


state 165

    (79) operacionesLogicas -> LPAREN IF LPAREN MENORQUE VARIABLE ENTERO . RPAREN LPAREN RECUR LPAREN INC LPAREN VARIABLE RPAREN RPAREN VARIABLE RPAREN RPAREN

    RPAREN          shift and go to state 189


state 166

    (91) defn -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR . LPAREN expresionDefnElse RPAREN RPAREN
    (93) defn_with_return -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR . LPAREN expresionDefnElse RPAREN RPAREN defn_return

    LPAREN          shift and go to state 190


state 167

    (52) argumments -> LCOR dato dato dato . RCOR

    RCOR            shift and go to state 191


state 168

    (53) argumments -> LCOR dato dato RCOR .

    LPAREN          reduce using rule 53 (argumments -> LCOR dato dato RCOR .)
    NUMERAL         reduce using rule 53 (argumments -> LCOR dato dato RCOR .)
    VECTOR_ENTERO   reduce using rule 53 (argumments -> LCOR dato dato RCOR .)
    VECTOR_FLOTANTE reduce using rule 53 (argumments -> LCOR dato dato RCOR .)
    MAPA_ENTERO     reduce using rule 53 (argumments -> LCOR dato dato RCOR .)
    MAPA_FLOTANTE   reduce using rule 53 (argumments -> LCOR dato dato RCOR .)
    IF              reduce using rule 53 (argumments -> LCOR dato dato RCOR .)
    RPAREN          reduce using rule 53 (argumments -> LCOR dato dato RCOR .)


state 169

    (92) defn -> LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR . operacionesLogicas RPAREN
    (94) defn_with_return -> LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR . operacionesLogicas RPAREN defn_return
    (79) operacionesLogicas -> . LPAREN IF LPAREN MENORQUE VARIABLE ENTERO RPAREN LPAREN RECUR LPAREN INC LPAREN VARIABLE RPAREN RPAREN VARIABLE RPAREN RPAREN

    LPAREN          shift and go to state 192

    operacionesLogicas             shift and go to state 193

state 170

    (51) increase -> INCREASE LCOR dato RCOR .

    IF              reduce using rule 51 (increase -> INCREASE LCOR dato RCOR .)
    RPAREN          reduce using rule 51 (increase -> INCREASE LCOR dato RCOR .)


state 171

    (64) definition -> LPAREN DEFFUNCION internos if dato RPAREN .

    $end            reduce using rule 64 (definition -> LPAREN DEFFUNCION internos if dato RPAREN .)
    IF              reduce using rule 64 (definition -> LPAREN DEFFUNCION internos if dato RPAREN .)
    RPAREN          reduce using rule 64 (definition -> LPAREN DEFFUNCION internos if dato RPAREN .)


state 172

    (101) sentenciaLoopRecur -> LPAREN LOOP argumments LPAREN if dato . RPAREN RPAREN

    RPAREN          shift and go to state 194


state 173

    (43) cond_else -> LPAREN COND linecondition linecondition DOSPUNTOS ELSE . impresion RPAREN
    (65) impresion -> . LPAREN IMPRIMIR dato RPAREN

    LPAREN          shift and go to state 117

    impresion                      shift and go to state 195

state 174

    (89) doseq -> LPAREN DOSEQ doseq_args LPAREN impresion RPAREN . RPAREN

    RPAREN          shift and go to state 196


state 175

    (90) doseq -> LPAREN DOSEQ doseq_args LPAREN doseq_prn RPAREN . RPAREN

    RPAREN          shift and go to state 197


state 176

    (86) doseq_prn -> PRN LPAREN . dato RPAREN
    (87) doseq_prn -> PRN LPAREN . dato dato RPAREN
    (88) doseq_prn -> PRN LPAREN . dato dato dato RPAREN
    (23) dato -> . STRING
    (24) dato -> . CHAR
    (25) dato -> . ENTERO
    (26) dato -> . FLOTANTE
    (27) dato -> . BOOLEAN
    (28) dato -> . VARIABLE

    STRING          shift and go to state 59
    CHAR            shift and go to state 60
    ENTERO          shift and go to state 61
    FLOTANTE        shift and go to state 62
    BOOLEAN         shift and go to state 63
    VARIABLE        shift and go to state 64

    dato                           shift and go to state 198

state 177

    (82) doseq_args -> LCOR dato LPAREN RANGE . dato RPAREN RCOR
    (23) dato -> . STRING
    (24) dato -> . CHAR
    (25) dato -> . ENTERO
    (26) dato -> . FLOTANTE
    (27) dato -> . BOOLEAN
    (28) dato -> . VARIABLE

    STRING          shift and go to state 59
    CHAR            shift and go to state 60
    ENTERO          shift and go to state 61
    FLOTANTE        shift and go to state 62
    BOOLEAN         shift and go to state 63
    VARIABLE        shift and go to state 64

    dato                           shift and go to state 199

state 178

    (83) doseq_args -> LCOR dato conjuntos RCOR .

    LPAREN          reduce using rule 83 (doseq_args -> LCOR dato conjuntos RCOR .)


state 179

    (84) doseq_args -> LCOR dato vector_entero dato . vector_entero RCOR
    (67) vector_entero -> . VECTOR_ENTERO

    VECTOR_ENTERO   shift and go to state 26

    vector_entero                  shift and go to state 200

state 180

    (85) doseq_args -> LCOR vector_entero conjuntos RCOR .

    LPAREN          reduce using rule 85 (doseq_args -> LCOR vector_entero conjuntos RCOR .)


state 181

    (45) case -> dato dato STRING .

    STRING          reduce using rule 45 (case -> dato dato STRING .)
    CHAR            reduce using rule 45 (case -> dato dato STRING .)
    ENTERO          reduce using rule 45 (case -> dato dato STRING .)
    FLOTANTE        reduce using rule 45 (case -> dato dato STRING .)
    BOOLEAN         reduce using rule 45 (case -> dato dato STRING .)
    VARIABLE        reduce using rule 45 (case -> dato dato STRING .)
    LPAREN          reduce using rule 45 (case -> dato dato STRING .)
    DOSPUNTOS       reduce using rule 45 (case -> dato dato STRING .)


state 182

    (47) case_expression -> LPAREN CASE dato case case impresion . RPAREN

    RPAREN          shift and go to state 201


state 183

    (48) case_expression -> LPAREN CASE dato case case case_else . RPAREN

    RPAREN          shift and go to state 202


state 184

    (46) case_else -> DOSPUNTOS . ELSE STRING

    ELSE            shift and go to state 203


state 185

    (71) if -> IF LPAREN operador_comparadores dato dato RPAREN .
    (40) sentencia_booleana -> LPAREN operador_comparadores dato dato RPAREN .

  ! reduce/reduce conflict for $end resolved using rule 40 (sentencia_booleana -> LPAREN operador_comparadores dato dato RPAREN .)
  ! reduce/reduce conflict for IF resolved using rule 40 (sentencia_booleana -> LPAREN operador_comparadores dato dato RPAREN .)
  ! reduce/reduce conflict for RPAREN resolved using rule 40 (sentencia_booleana -> LPAREN operador_comparadores dato dato RPAREN .)
  ! reduce/reduce conflict for STRING resolved using rule 40 (sentencia_booleana -> LPAREN operador_comparadores dato dato RPAREN .)
  ! reduce/reduce conflict for CHAR resolved using rule 40 (sentencia_booleana -> LPAREN operador_comparadores dato dato RPAREN .)
  ! reduce/reduce conflict for ENTERO resolved using rule 40 (sentencia_booleana -> LPAREN operador_comparadores dato dato RPAREN .)
  ! reduce/reduce conflict for FLOTANTE resolved using rule 40 (sentencia_booleana -> LPAREN operador_comparadores dato dato RPAREN .)
  ! reduce/reduce conflict for BOOLEAN resolved using rule 40 (sentencia_booleana -> LPAREN operador_comparadores dato dato RPAREN .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 40 (sentencia_booleana -> LPAREN operador_comparadores dato dato RPAREN .)
    LPAREN          reduce using rule 40 (sentencia_booleana -> LPAREN operador_comparadores dato dato RPAREN .)
    $end            reduce using rule 40 (sentencia_booleana -> LPAREN operador_comparadores dato dato RPAREN .)
    IF              reduce using rule 40 (sentencia_booleana -> LPAREN operador_comparadores dato dato RPAREN .)
    RPAREN          reduce using rule 40 (sentencia_booleana -> LPAREN operador_comparadores dato dato RPAREN .)
    STRING          reduce using rule 40 (sentencia_booleana -> LPAREN operador_comparadores dato dato RPAREN .)
    CHAR            reduce using rule 40 (sentencia_booleana -> LPAREN operador_comparadores dato dato RPAREN .)
    ENTERO          reduce using rule 40 (sentencia_booleana -> LPAREN operador_comparadores dato dato RPAREN .)
    FLOTANTE        reduce using rule 40 (sentencia_booleana -> LPAREN operador_comparadores dato dato RPAREN .)
    BOOLEAN         reduce using rule 40 (sentencia_booleana -> LPAREN operador_comparadores dato dato RPAREN .)
    VARIABLE        reduce using rule 40 (sentencia_booleana -> LPAREN operador_comparadores dato dato RPAREN .)

  ! $end            [ reduce using rule 71 (if -> IF LPAREN operador_comparadores dato dato RPAREN .) ]
  ! IF              [ reduce using rule 71 (if -> IF LPAREN operador_comparadores dato dato RPAREN .) ]
  ! RPAREN          [ reduce using rule 71 (if -> IF LPAREN operador_comparadores dato dato RPAREN .) ]
  ! STRING          [ reduce using rule 71 (if -> IF LPAREN operador_comparadores dato dato RPAREN .) ]
  ! CHAR            [ reduce using rule 71 (if -> IF LPAREN operador_comparadores dato dato RPAREN .) ]
  ! ENTERO          [ reduce using rule 71 (if -> IF LPAREN operador_comparadores dato dato RPAREN .) ]
  ! FLOTANTE        [ reduce using rule 71 (if -> IF LPAREN operador_comparadores dato dato RPAREN .) ]
  ! BOOLEAN         [ reduce using rule 71 (if -> IF LPAREN operador_comparadores dato dato RPAREN .) ]
  ! VARIABLE        [ reduce using rule 71 (if -> IF LPAREN operador_comparadores dato dato RPAREN .) ]


state 186

    (56) recur -> LPAREN RECUR LPAREN INC . dato RPAREN RPAREN
    (23) dato -> . STRING
    (24) dato -> . CHAR
    (25) dato -> . ENTERO
    (26) dato -> . FLOTANTE
    (27) dato -> . BOOLEAN
    (28) dato -> . VARIABLE

    STRING          shift and go to state 59
    CHAR            shift and go to state 60
    ENTERO          shift and go to state 61
    FLOTANTE        shift and go to state 62
    BOOLEAN         shift and go to state 63
    VARIABLE        shift and go to state 64

    dato                           shift and go to state 204

state 187

    (39) asignacion -> LPAREN LET LCOR VARIABLE dato RCOR RPAREN .

    $end            reduce using rule 39 (asignacion -> LPAREN LET LCOR VARIABLE dato RCOR RPAREN .)
    IF              reduce using rule 39 (asignacion -> LPAREN LET LCOR VARIABLE dato RCOR RPAREN .)
    RPAREN          reduce using rule 39 (asignacion -> LPAREN LET LCOR VARIABLE dato RCOR RPAREN .)


state 188

    (74) if_do -> LPAREN IF LPAREN operador_comparadores dato dato RPAREN . LPAREN DO LPAREN dato RPAREN BOOLEAN RPAREN RPAREN

    LPAREN          shift and go to state 205


state 189

    (79) operacionesLogicas -> LPAREN IF LPAREN MENORQUE VARIABLE ENTERO RPAREN . LPAREN RECUR LPAREN INC LPAREN VARIABLE RPAREN RPAREN VARIABLE RPAREN RPAREN

    LPAREN          shift and go to state 206


state 190

    (91) defn -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN . expresionDefnElse RPAREN RPAREN
    (93) defn_with_return -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN . expresionDefnElse RPAREN RPAREN defn_return
    (95) expresionDefnElse -> . CASE VARIABLE expresionCase DOSPUNTOS ELSE STRING

    CASE            shift and go to state 208

    expresionDefnElse              shift and go to state 207

state 191

    (52) argumments -> LCOR dato dato dato RCOR .

    LPAREN          reduce using rule 52 (argumments -> LCOR dato dato dato RCOR .)
    NUMERAL         reduce using rule 52 (argumments -> LCOR dato dato dato RCOR .)
    VECTOR_ENTERO   reduce using rule 52 (argumments -> LCOR dato dato dato RCOR .)
    VECTOR_FLOTANTE reduce using rule 52 (argumments -> LCOR dato dato dato RCOR .)
    MAPA_ENTERO     reduce using rule 52 (argumments -> LCOR dato dato dato RCOR .)
    MAPA_FLOTANTE   reduce using rule 52 (argumments -> LCOR dato dato dato RCOR .)
    IF              reduce using rule 52 (argumments -> LCOR dato dato dato RCOR .)
    RPAREN          reduce using rule 52 (argumments -> LCOR dato dato dato RCOR .)


state 192

    (79) operacionesLogicas -> LPAREN . IF LPAREN MENORQUE VARIABLE ENTERO RPAREN LPAREN RECUR LPAREN INC LPAREN VARIABLE RPAREN RPAREN VARIABLE RPAREN RPAREN

    IF              shift and go to state 209


state 193

    (92) defn -> LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas . RPAREN
    (94) defn_with_return -> LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas . RPAREN defn_return

    RPAREN          shift and go to state 210


state 194

    (101) sentenciaLoopRecur -> LPAREN LOOP argumments LPAREN if dato RPAREN . RPAREN

    RPAREN          shift and go to state 211


state 195

    (43) cond_else -> LPAREN COND linecondition linecondition DOSPUNTOS ELSE impresion . RPAREN

    RPAREN          shift and go to state 212


state 196

    (89) doseq -> LPAREN DOSEQ doseq_args LPAREN impresion RPAREN RPAREN .

    $end            reduce using rule 89 (doseq -> LPAREN DOSEQ doseq_args LPAREN impresion RPAREN RPAREN .)
    IF              reduce using rule 89 (doseq -> LPAREN DOSEQ doseq_args LPAREN impresion RPAREN RPAREN .)
    RPAREN          reduce using rule 89 (doseq -> LPAREN DOSEQ doseq_args LPAREN impresion RPAREN RPAREN .)


state 197

    (90) doseq -> LPAREN DOSEQ doseq_args LPAREN doseq_prn RPAREN RPAREN .

    $end            reduce using rule 90 (doseq -> LPAREN DOSEQ doseq_args LPAREN doseq_prn RPAREN RPAREN .)
    IF              reduce using rule 90 (doseq -> LPAREN DOSEQ doseq_args LPAREN doseq_prn RPAREN RPAREN .)
    RPAREN          reduce using rule 90 (doseq -> LPAREN DOSEQ doseq_args LPAREN doseq_prn RPAREN RPAREN .)


state 198

    (86) doseq_prn -> PRN LPAREN dato . RPAREN
    (87) doseq_prn -> PRN LPAREN dato . dato RPAREN
    (88) doseq_prn -> PRN LPAREN dato . dato dato RPAREN
    (23) dato -> . STRING
    (24) dato -> . CHAR
    (25) dato -> . ENTERO
    (26) dato -> . FLOTANTE
    (27) dato -> . BOOLEAN
    (28) dato -> . VARIABLE

    RPAREN          shift and go to state 214
    STRING          shift and go to state 59
    CHAR            shift and go to state 60
    ENTERO          shift and go to state 61
    FLOTANTE        shift and go to state 62
    BOOLEAN         shift and go to state 63
    VARIABLE        shift and go to state 64

    dato                           shift and go to state 213

state 199

    (82) doseq_args -> LCOR dato LPAREN RANGE dato . RPAREN RCOR

    RPAREN          shift and go to state 215


state 200

    (84) doseq_args -> LCOR dato vector_entero dato vector_entero . RCOR

    RCOR            shift and go to state 216


state 201

    (47) case_expression -> LPAREN CASE dato case case impresion RPAREN .

    $end            reduce using rule 47 (case_expression -> LPAREN CASE dato case case impresion RPAREN .)
    IF              reduce using rule 47 (case_expression -> LPAREN CASE dato case case impresion RPAREN .)
    RPAREN          reduce using rule 47 (case_expression -> LPAREN CASE dato case case impresion RPAREN .)


state 202

    (48) case_expression -> LPAREN CASE dato case case case_else RPAREN .

    $end            reduce using rule 48 (case_expression -> LPAREN CASE dato case case case_else RPAREN .)
    IF              reduce using rule 48 (case_expression -> LPAREN CASE dato case case case_else RPAREN .)
    RPAREN          reduce using rule 48 (case_expression -> LPAREN CASE dato case case case_else RPAREN .)


state 203

    (46) case_else -> DOSPUNTOS ELSE . STRING

    STRING          shift and go to state 217


state 204

    (56) recur -> LPAREN RECUR LPAREN INC dato . RPAREN RPAREN

    RPAREN          shift and go to state 218


state 205

    (74) if_do -> LPAREN IF LPAREN operador_comparadores dato dato RPAREN LPAREN . DO LPAREN dato RPAREN BOOLEAN RPAREN RPAREN

    DO              shift and go to state 219


state 206

    (79) operacionesLogicas -> LPAREN IF LPAREN MENORQUE VARIABLE ENTERO RPAREN LPAREN . RECUR LPAREN INC LPAREN VARIABLE RPAREN RPAREN VARIABLE RPAREN RPAREN

    RECUR           shift and go to state 220


state 207

    (91) defn -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse . RPAREN RPAREN
    (93) defn_with_return -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse . RPAREN RPAREN defn_return

    RPAREN          shift and go to state 221


state 208

    (95) expresionDefnElse -> CASE . VARIABLE expresionCase DOSPUNTOS ELSE STRING

    VARIABLE        shift and go to state 222


state 209

    (79) operacionesLogicas -> LPAREN IF . LPAREN MENORQUE VARIABLE ENTERO RPAREN LPAREN RECUR LPAREN INC LPAREN VARIABLE RPAREN RPAREN VARIABLE RPAREN RPAREN

    LPAREN          shift and go to state 223


state 210

    (92) defn -> LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN .
    (94) defn_with_return -> LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN . defn_return
    (96) defn_return -> . LPAREN dato dato RPAREN

    $end            reduce using rule 92 (defn -> LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN .)
    IF              reduce using rule 92 (defn -> LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN .)
    RPAREN          reduce using rule 92 (defn -> LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN .)
    LPAREN          shift and go to state 224

    defn_return                    shift and go to state 225

state 211

    (101) sentenciaLoopRecur -> LPAREN LOOP argumments LPAREN if dato RPAREN RPAREN .

    $end            reduce using rule 101 (sentenciaLoopRecur -> LPAREN LOOP argumments LPAREN if dato RPAREN RPAREN .)
    IF              reduce using rule 101 (sentenciaLoopRecur -> LPAREN LOOP argumments LPAREN if dato RPAREN RPAREN .)
    RPAREN          reduce using rule 101 (sentenciaLoopRecur -> LPAREN LOOP argumments LPAREN if dato RPAREN RPAREN .)


state 212

    (43) cond_else -> LPAREN COND linecondition linecondition DOSPUNTOS ELSE impresion RPAREN .

    $end            reduce using rule 43 (cond_else -> LPAREN COND linecondition linecondition DOSPUNTOS ELSE impresion RPAREN .)
    IF              reduce using rule 43 (cond_else -> LPAREN COND linecondition linecondition DOSPUNTOS ELSE impresion RPAREN .)
    RPAREN          reduce using rule 43 (cond_else -> LPAREN COND linecondition linecondition DOSPUNTOS ELSE impresion RPAREN .)


state 213

    (87) doseq_prn -> PRN LPAREN dato dato . RPAREN
    (88) doseq_prn -> PRN LPAREN dato dato . dato RPAREN
    (23) dato -> . STRING
    (24) dato -> . CHAR
    (25) dato -> . ENTERO
    (26) dato -> . FLOTANTE
    (27) dato -> . BOOLEAN
    (28) dato -> . VARIABLE

    RPAREN          shift and go to state 227
    STRING          shift and go to state 59
    CHAR            shift and go to state 60
    ENTERO          shift and go to state 61
    FLOTANTE        shift and go to state 62
    BOOLEAN         shift and go to state 63
    VARIABLE        shift and go to state 64

    dato                           shift and go to state 226

state 214

    (86) doseq_prn -> PRN LPAREN dato RPAREN .

    RPAREN          reduce using rule 86 (doseq_prn -> PRN LPAREN dato RPAREN .)


state 215

    (82) doseq_args -> LCOR dato LPAREN RANGE dato RPAREN . RCOR

    RCOR            shift and go to state 228


state 216

    (84) doseq_args -> LCOR dato vector_entero dato vector_entero RCOR .

    LPAREN          reduce using rule 84 (doseq_args -> LCOR dato vector_entero dato vector_entero RCOR .)


state 217

    (46) case_else -> DOSPUNTOS ELSE STRING .

    RPAREN          reduce using rule 46 (case_else -> DOSPUNTOS ELSE STRING .)


state 218

    (56) recur -> LPAREN RECUR LPAREN INC dato RPAREN . RPAREN

    RPAREN          shift and go to state 229


state 219

    (74) if_do -> LPAREN IF LPAREN operador_comparadores dato dato RPAREN LPAREN DO . LPAREN dato RPAREN BOOLEAN RPAREN RPAREN

    LPAREN          shift and go to state 230


state 220

    (79) operacionesLogicas -> LPAREN IF LPAREN MENORQUE VARIABLE ENTERO RPAREN LPAREN RECUR . LPAREN INC LPAREN VARIABLE RPAREN RPAREN VARIABLE RPAREN RPAREN

    LPAREN          shift and go to state 231


state 221

    (91) defn -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN . RPAREN
    (93) defn_with_return -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN . RPAREN defn_return

    RPAREN          shift and go to state 232


state 222

    (95) expresionDefnElse -> CASE VARIABLE . expresionCase DOSPUNTOS ELSE STRING
    (97) expresionCase -> . dato STRING
    (23) dato -> . STRING
    (24) dato -> . CHAR
    (25) dato -> . ENTERO
    (26) dato -> . FLOTANTE
    (27) dato -> . BOOLEAN
    (28) dato -> . VARIABLE

    STRING          shift and go to state 59
    CHAR            shift and go to state 60
    ENTERO          shift and go to state 61
    FLOTANTE        shift and go to state 62
    BOOLEAN         shift and go to state 63
    VARIABLE        shift and go to state 64

    expresionCase                  shift and go to state 233
    dato                           shift and go to state 234

state 223

    (79) operacionesLogicas -> LPAREN IF LPAREN . MENORQUE VARIABLE ENTERO RPAREN LPAREN RECUR LPAREN INC LPAREN VARIABLE RPAREN RPAREN VARIABLE RPAREN RPAREN

    MENORQUE        shift and go to state 235


state 224

    (96) defn_return -> LPAREN . dato dato RPAREN
    (23) dato -> . STRING
    (24) dato -> . CHAR
    (25) dato -> . ENTERO
    (26) dato -> . FLOTANTE
    (27) dato -> . BOOLEAN
    (28) dato -> . VARIABLE

    STRING          shift and go to state 59
    CHAR            shift and go to state 60
    ENTERO          shift and go to state 61
    FLOTANTE        shift and go to state 62
    BOOLEAN         shift and go to state 63
    VARIABLE        shift and go to state 64

    dato                           shift and go to state 236

state 225

    (94) defn_with_return -> LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN defn_return .

    $end            reduce using rule 94 (defn_with_return -> LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN defn_return .)
    IF              reduce using rule 94 (defn_with_return -> LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN defn_return .)
    RPAREN          reduce using rule 94 (defn_with_return -> LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN defn_return .)


state 226

    (88) doseq_prn -> PRN LPAREN dato dato dato . RPAREN

    RPAREN          shift and go to state 237


state 227

    (87) doseq_prn -> PRN LPAREN dato dato RPAREN .

    RPAREN          reduce using rule 87 (doseq_prn -> PRN LPAREN dato dato RPAREN .)


state 228

    (82) doseq_args -> LCOR dato LPAREN RANGE dato RPAREN RCOR .

    LPAREN          reduce using rule 82 (doseq_args -> LCOR dato LPAREN RANGE dato RPAREN RCOR .)


state 229

    (56) recur -> LPAREN RECUR LPAREN INC dato RPAREN RPAREN .

    $end            reduce using rule 56 (recur -> LPAREN RECUR LPAREN INC dato RPAREN RPAREN .)
    IF              reduce using rule 56 (recur -> LPAREN RECUR LPAREN INC dato RPAREN RPAREN .)
    RPAREN          reduce using rule 56 (recur -> LPAREN RECUR LPAREN INC dato RPAREN RPAREN .)
    STRING          reduce using rule 56 (recur -> LPAREN RECUR LPAREN INC dato RPAREN RPAREN .)
    CHAR            reduce using rule 56 (recur -> LPAREN RECUR LPAREN INC dato RPAREN RPAREN .)
    ENTERO          reduce using rule 56 (recur -> LPAREN RECUR LPAREN INC dato RPAREN RPAREN .)
    FLOTANTE        reduce using rule 56 (recur -> LPAREN RECUR LPAREN INC dato RPAREN RPAREN .)
    BOOLEAN         reduce using rule 56 (recur -> LPAREN RECUR LPAREN INC dato RPAREN RPAREN .)
    VARIABLE        reduce using rule 56 (recur -> LPAREN RECUR LPAREN INC dato RPAREN RPAREN .)


state 230

    (74) if_do -> LPAREN IF LPAREN operador_comparadores dato dato RPAREN LPAREN DO LPAREN . dato RPAREN BOOLEAN RPAREN RPAREN
    (23) dato -> . STRING
    (24) dato -> . CHAR
    (25) dato -> . ENTERO
    (26) dato -> . FLOTANTE
    (27) dato -> . BOOLEAN
    (28) dato -> . VARIABLE

    STRING          shift and go to state 59
    CHAR            shift and go to state 60
    ENTERO          shift and go to state 61
    FLOTANTE        shift and go to state 62
    BOOLEAN         shift and go to state 63
    VARIABLE        shift and go to state 64

    dato                           shift and go to state 238

state 231

    (79) operacionesLogicas -> LPAREN IF LPAREN MENORQUE VARIABLE ENTERO RPAREN LPAREN RECUR LPAREN . INC LPAREN VARIABLE RPAREN RPAREN VARIABLE RPAREN RPAREN

    INC             shift and go to state 239


state 232

    (91) defn -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN .
    (93) defn_with_return -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN . defn_return
    (96) defn_return -> . LPAREN dato dato RPAREN

    $end            reduce using rule 91 (defn -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN .)
    IF              reduce using rule 91 (defn -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN .)
    RPAREN          reduce using rule 91 (defn -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN .)
    LPAREN          shift and go to state 224

    defn_return                    shift and go to state 240

state 233

    (95) expresionDefnElse -> CASE VARIABLE expresionCase . DOSPUNTOS ELSE STRING

    DOSPUNTOS       shift and go to state 241


state 234

    (97) expresionCase -> dato . STRING

    STRING          shift and go to state 242


state 235

    (79) operacionesLogicas -> LPAREN IF LPAREN MENORQUE . VARIABLE ENTERO RPAREN LPAREN RECUR LPAREN INC LPAREN VARIABLE RPAREN RPAREN VARIABLE RPAREN RPAREN

    VARIABLE        shift and go to state 136


state 236

    (96) defn_return -> LPAREN dato . dato RPAREN
    (23) dato -> . STRING
    (24) dato -> . CHAR
    (25) dato -> . ENTERO
    (26) dato -> . FLOTANTE
    (27) dato -> . BOOLEAN
    (28) dato -> . VARIABLE

    STRING          shift and go to state 59
    CHAR            shift and go to state 60
    ENTERO          shift and go to state 61
    FLOTANTE        shift and go to state 62
    BOOLEAN         shift and go to state 63
    VARIABLE        shift and go to state 64

    dato                           shift and go to state 243

state 237

    (88) doseq_prn -> PRN LPAREN dato dato dato RPAREN .

    RPAREN          reduce using rule 88 (doseq_prn -> PRN LPAREN dato dato dato RPAREN .)


state 238

    (74) if_do -> LPAREN IF LPAREN operador_comparadores dato dato RPAREN LPAREN DO LPAREN dato . RPAREN BOOLEAN RPAREN RPAREN

    RPAREN          shift and go to state 244


state 239

    (79) operacionesLogicas -> LPAREN IF LPAREN MENORQUE VARIABLE ENTERO RPAREN LPAREN RECUR LPAREN INC . LPAREN VARIABLE RPAREN RPAREN VARIABLE RPAREN RPAREN

    LPAREN          shift and go to state 245


state 240

    (93) defn_with_return -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN defn_return .

    $end            reduce using rule 93 (defn_with_return -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN defn_return .)
    IF              reduce using rule 93 (defn_with_return -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN defn_return .)
    RPAREN          reduce using rule 93 (defn_with_return -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN defn_return .)


state 241

    (95) expresionDefnElse -> CASE VARIABLE expresionCase DOSPUNTOS . ELSE STRING

    ELSE            shift and go to state 246


state 242

    (97) expresionCase -> dato STRING .

    DOSPUNTOS       reduce using rule 97 (expresionCase -> dato STRING .)


state 243

    (96) defn_return -> LPAREN dato dato . RPAREN

    RPAREN          shift and go to state 247


state 244

    (74) if_do -> LPAREN IF LPAREN operador_comparadores dato dato RPAREN LPAREN DO LPAREN dato RPAREN . BOOLEAN RPAREN RPAREN

    BOOLEAN         shift and go to state 248


state 245

    (79) operacionesLogicas -> LPAREN IF LPAREN MENORQUE VARIABLE ENTERO RPAREN LPAREN RECUR LPAREN INC LPAREN . VARIABLE RPAREN RPAREN VARIABLE RPAREN RPAREN

    VARIABLE        shift and go to state 249


state 246

    (95) expresionDefnElse -> CASE VARIABLE expresionCase DOSPUNTOS ELSE . STRING

    STRING          shift and go to state 250


state 247

    (96) defn_return -> LPAREN dato dato RPAREN .

    $end            reduce using rule 96 (defn_return -> LPAREN dato dato RPAREN .)
    IF              reduce using rule 96 (defn_return -> LPAREN dato dato RPAREN .)
    RPAREN          reduce using rule 96 (defn_return -> LPAREN dato dato RPAREN .)


state 248

    (74) if_do -> LPAREN IF LPAREN operador_comparadores dato dato RPAREN LPAREN DO LPAREN dato RPAREN BOOLEAN . RPAREN RPAREN

    RPAREN          shift and go to state 251


state 249

    (79) operacionesLogicas -> LPAREN IF LPAREN MENORQUE VARIABLE ENTERO RPAREN LPAREN RECUR LPAREN INC LPAREN VARIABLE . RPAREN RPAREN VARIABLE RPAREN RPAREN

    RPAREN          shift and go to state 252


state 250

    (95) expresionDefnElse -> CASE VARIABLE expresionCase DOSPUNTOS ELSE STRING .

    RPAREN          reduce using rule 95 (expresionDefnElse -> CASE VARIABLE expresionCase DOSPUNTOS ELSE STRING .)


state 251

    (74) if_do -> LPAREN IF LPAREN operador_comparadores dato dato RPAREN LPAREN DO LPAREN dato RPAREN BOOLEAN RPAREN . RPAREN

    RPAREN          shift and go to state 253


state 252

    (79) operacionesLogicas -> LPAREN IF LPAREN MENORQUE VARIABLE ENTERO RPAREN LPAREN RECUR LPAREN INC LPAREN VARIABLE RPAREN . RPAREN VARIABLE RPAREN RPAREN

    RPAREN          shift and go to state 254


state 253

    (74) if_do -> LPAREN IF LPAREN operador_comparadores dato dato RPAREN LPAREN DO LPAREN dato RPAREN BOOLEAN RPAREN RPAREN .

    $end            reduce using rule 74 (if_do -> LPAREN IF LPAREN operador_comparadores dato dato RPAREN LPAREN DO LPAREN dato RPAREN BOOLEAN RPAREN RPAREN .)
    IF              reduce using rule 74 (if_do -> LPAREN IF LPAREN operador_comparadores dato dato RPAREN LPAREN DO LPAREN dato RPAREN BOOLEAN RPAREN RPAREN .)
    RPAREN          reduce using rule 74 (if_do -> LPAREN IF LPAREN operador_comparadores dato dato RPAREN LPAREN DO LPAREN dato RPAREN BOOLEAN RPAREN RPAREN .)


state 254

    (79) operacionesLogicas -> LPAREN IF LPAREN MENORQUE VARIABLE ENTERO RPAREN LPAREN RECUR LPAREN INC LPAREN VARIABLE RPAREN RPAREN . VARIABLE RPAREN RPAREN

    VARIABLE        shift and go to state 255


state 255

    (79) operacionesLogicas -> LPAREN IF LPAREN MENORQUE VARIABLE ENTERO RPAREN LPAREN RECUR LPAREN INC LPAREN VARIABLE RPAREN RPAREN VARIABLE . RPAREN RPAREN

    RPAREN          shift and go to state 256


state 256

    (79) operacionesLogicas -> LPAREN IF LPAREN MENORQUE VARIABLE ENTERO RPAREN LPAREN RECUR LPAREN INC LPAREN VARIABLE RPAREN RPAREN VARIABLE RPAREN . RPAREN

    RPAREN          shift and go to state 257


state 257

    (79) operacionesLogicas -> LPAREN IF LPAREN MENORQUE VARIABLE ENTERO RPAREN LPAREN RECUR LPAREN INC LPAREN VARIABLE RPAREN RPAREN VARIABLE RPAREN RPAREN .

    $end            reduce using rule 79 (operacionesLogicas -> LPAREN IF LPAREN MENORQUE VARIABLE ENTERO RPAREN LPAREN RECUR LPAREN INC LPAREN VARIABLE RPAREN RPAREN VARIABLE RPAREN RPAREN .)
    IF              reduce using rule 79 (operacionesLogicas -> LPAREN IF LPAREN MENORQUE VARIABLE ENTERO RPAREN LPAREN RECUR LPAREN INC LPAREN VARIABLE RPAREN RPAREN VARIABLE RPAREN RPAREN .)
    RPAREN          reduce using rule 79 (operacionesLogicas -> LPAREN IF LPAREN MENORQUE VARIABLE ENTERO RPAREN LPAREN RECUR LPAREN INC LPAREN VARIABLE RPAREN RPAREN VARIABLE RPAREN RPAREN .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for IF in state 77 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 104 resolved as shift
WARNING: shift/reduce conflict for RCOR in state 138 resolved as shift
WARNING: shift/reduce conflict for RCOR in state 143 resolved as shift
WARNING: reduce/reduce conflict in state 134 resolved using rule (operacion_aritmetica1 -> LPAREN operacion valor valor RPAREN)
WARNING: rejected rule (condicional -> LPAREN operacion valor valor RPAREN) in state 134
WARNING: reduce/reduce conflict in state 185 resolved using rule (sentencia_booleana -> LPAREN operador_comparadores dato dato RPAREN)
WARNING: rejected rule (if -> IF LPAREN operador_comparadores dato dato RPAREN) in state 185
WARNING: Rule (condicional -> LPAREN operacion valor valor RPAREN) is never reduced
WARNING: Rule (if -> IF LPAREN operador_comparadores dato dato RPAREN) is never reduced
