
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'BOOLEAN CASE CHAR CLASE COMPARA_IGUAL COND CONJUNTOS DEFFUNCION DEFICION DIFERENTE DIVISION DO DOSEQ DOSPUNTOS DOTIMES ELSE ENTERO FLOTANTE FUNCION FUTURE IF IGUAL IMPRIMIR INC INCREASE INPUT LCOR LET LIST LISTA LOOP LPAREN L_LLAVE MAPA MAS MAYORIGUALQUE MAYORQUE MENORIGUALQUE MENORQUE MENOS NOT NS NUEVO NUMERAL PRN PRODUCTO RANGE RCOR RECUR RPAREN R_LLAVE STR STRING VARIABLE VECTOR WHENinstrucciones : asignacion\n                    | impresion\n                    | operacion_aritmetica\n                    | conjuntos\n                    | vector\n                    | mapa\n                    | if\n                    | do\n                    | if_do\n                    | when\n                    | defn\n                    | defn_with_return\n                    | operacionesLogicas\n                    | sentenciaLoopRecur\n                    | cond_\n                    | cond_else\n                    | doseq\n                    | case_expression\n                    | lista\n                    | sentencia_booleana\n                    | function\n                    | dotimes\n                    | ciclo\n                    | valordato : STRING\n            | CHAR\n            | ENTERO\n            | FLOTANTE\n            | BOOLEAN\n            | VARIABLE valor : ENTERO\n          | FLOTANTE\n          | BOOLEAN\n          operador_comparadores : COMPARA_IGUAL\n                | MENORQUE\n                | MAYORQUE\n                | MAYORIGUALQUE\n                | MENORIGUALQUE\n                | DIFERENTEoperador_aritmetico : MAS\n                  | MENOS\n                  | PRODUCTO\n                  | DIVISION asignacion : LPAREN DEFICION VARIABLE dato RPAREN\n                | LPAREN LET LCOR VARIABLE dato RCOR RPARENsentencia_booleana : LPAREN operador_comparadores dato dato RPARENlinecondition : sentencia_booleana impresioncond_ : LPAREN COND linecondition linecondition RPARENcond_else : LPAREN COND linecondition linecondition DOSPUNTOS ELSE impresion RPARENcase : dato impresion\n            | dato STRING\n            | dato impresion case\n            | dato STRING case\n    case_expression : LPAREN CASE dato case impresion RPAREN\n                        | LPAREN CASE dato case DOSPUNTOS ELSE STRING RPAREN\n    argumentos_lista : dato\n                        | dato argumentos_listalista : LPAREN LIST argumentos_lista RPARENdescription : STRINGincrease : INCREASE LCOR dato RCORargumments : LCOR argumentos_lista RCORbody : instruccionesrecur : LPAREN RECUR LPAREN INC dato RPAREN RPARENinternos : description\n                | argumments\n                | body\n                | increase\n                | argumments body\n                | description argumments bodyfunction : LPAREN DEFFUNCION VARIABLE internos RPAREN\n                | LPAREN DEFFUNCION internos if dato RPAREN\n    impresion : LPAREN IMPRIMIR dato RPARENvector : LCOR argumentos_lista RCORmapa : MAPAif : IF sentencia_booleana\n          | IF sentencia_booleana recur\n          | LPAREN IF instrucciones body RPAREN\n    do : LPAREN DO instrucciones RPARENif_do : LPAREN if do RPARENwhen : LPAREN WHEN sentencia_booleana body RPARENciclo : LCOR VARIABLE ENTERO RCORdotimes : LPAREN DOTIMES ciclo body RPARENoperacionesLogicas : LPAREN if recur VARIABLE RPAREN RPARENoperacion_aritmetica : LPAREN operador_aritmetico dato dato RPARENdoseq_args : LCOR dato LPAREN RANGE dato RPAREN RCOR\n                    | LCOR dato conjuntos RCOR\n                    | LCOR dato vector dato vector RCOR\n                    | LCOR vector conjuntos RCORdoseq_prn : PRN LPAREN dato RPAREN\n                    | PRN dato dato\n                    | PRN dato dato dato\n                    | PRN operacion_aritmetica\n      doseq : LPAREN DOSEQ doseq_args impresion RPAREN\n            | LPAREN DOSEQ doseq_args LPAREN doseq_prn RPAREN RPAREN\n    defn : LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN\n             | LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN\n    defn_with_return : LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN defn_return\n                        | LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN defn_return\n\n      expresionDefnElse : CASE VARIABLE expresionCase DOSPUNTOS ELSE STRINGdefn_return : LPAREN dato dato RPARENexpresionCase : dato STRINGconjuntos : NUMERAL L_LLAVE expresionConjuntoEnteros R_LLAVE\n                      | NUMERAL L_LLAVE expresionConjuntoDouble R_LLAVE\n                      | NUMERAL L_LLAVE expresionConjuntoString R_LLAVE\n      sentenciaLoopRecur : LPAREN LOOP argumments LPAREN if dato RPAREN RPARENexpresionConjuntoEnteros : ENTERO\n                                 | ENTERO expresionConjuntoEnteros\n    expresionConjuntoDouble : FLOTANTE\n                     | FLOTANTE expresionConjuntoDouble\n    expresionConjuntoString : STRING\n                                  | STRING expresionConjuntoString\n    '
    
_lr_action_items = {'LPAREN':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,29,30,31,32,33,39,40,41,42,43,45,63,65,66,67,68,70,72,76,78,79,80,85,86,89,90,91,92,93,94,95,96,98,99,100,105,107,116,120,123,124,125,134,135,136,139,144,146,147,148,152,153,154,155,159,161,162,165,167,169,173,175,176,179,180,185,186,189,190,193,194,195,196,197,199,205,207,208,209,210,212,215,219,228,229,230,231,235,236,237,241,242,243,247,252,],[26,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,34,-74,71,-31,-32,-33,78,26,82,71,26,71,-27,-25,-26,-28,-29,117,26,-30,34,26,117,26,26,34,-64,26,-66,-67,-59,-62,136,71,140,141,26,-73,-76,-72,-78,163,-79,26,-68,34,-47,181,140,140,-58,-81,-102,-103,-104,-44,-84,-77,-80,-70,-61,-69,-61,-48,201,-93,-50,-51,-46,-82,-83,214,215,-60,-71,140,-86,-88,-52,-53,-54,-45,34,-94,117,240,-105,-49,-87,-55,-63,-98,-85,240,-97,-100,]),'NUMERAL':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,29,31,32,33,39,40,43,63,65,66,67,68,70,72,76,79,80,85,86,91,105,107,116,120,123,125,134,144,145,148,152,153,154,155,159,161,162,165,167,169,175,176,180,189,190,193,197,210,212,219,229,230,231,236,237,241,243,247,252,],[28,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-74,-31,-32,-33,28,28,28,-27,-25,-26,-28,-29,-75,28,-30,28,-20,28,28,28,28,-73,-76,-72,-78,-79,28,28,28,-58,-81,-102,-103,-104,-44,-84,-77,-80,-70,-61,-61,-48,-93,-46,-82,-83,-71,-54,-45,-94,-96,-105,-49,-55,-63,-98,-95,-97,-100,]),'LCOR':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,29,31,32,33,36,39,40,43,44,46,50,63,65,66,67,68,70,72,76,79,80,85,86,88,90,91,94,101,105,107,116,120,123,125,130,134,144,148,152,153,154,155,159,161,162,165,167,169,175,176,180,189,190,193,197,206,210,212,219,229,230,231,236,237,241,243,247,252,],[27,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-74,-31,-32,-33,74,27,27,87,97,101,106,-27,-25,-26,-28,-29,-75,27,-30,27,-20,27,128,132,97,27,-59,143,27,-73,-76,-72,-78,-79,168,27,143,-58,-81,-102,-103,-104,-44,-84,-77,-80,-70,-61,-61,-48,-93,-46,-82,-83,-71,143,-54,-45,-94,-96,-105,-49,-55,-63,-98,-95,-97,-100,]),'MAPA':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,29,31,32,33,39,40,43,70,72,79,80,85,86,91,105,107,116,120,123,125,134,148,152,153,154,155,159,161,162,165,167,169,175,176,180,189,190,193,197,210,212,219,229,230,231,236,237,241,243,247,252,],[29,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-74,-31,-32,-33,29,29,29,-75,29,29,-20,29,29,29,29,-73,-76,-72,-78,-79,29,-58,-81,-102,-103,-104,-44,-84,-77,-80,-70,-61,-61,-48,-93,-46,-82,-83,-71,-54,-45,-94,-96,-105,-49,-55,-63,-98,-95,-97,-100,]),'IF':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,29,31,32,33,34,39,40,43,70,72,78,79,80,85,86,89,90,91,92,93,94,95,105,107,116,120,123,125,134,135,136,148,152,153,154,155,159,161,162,165,167,169,173,175,176,180,189,190,193,196,197,210,212,215,219,229,230,231,236,237,241,243,247,252,],[30,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,39,-74,-31,-32,-33,72,30,30,30,-75,30,39,30,-20,30,30,30,-64,30,-66,-67,-59,-62,30,-73,-76,-72,-78,-79,30,-68,30,-58,-81,-102,-103,-104,-44,-84,-77,-80,-70,-61,-69,-61,-48,-93,-46,-82,-83,-60,-71,-54,-45,30,-94,-96,-105,-49,-55,-63,-98,-95,-97,-100,]),'ENTERO':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,27,29,31,32,33,37,38,39,40,43,47,48,49,51,52,53,54,55,56,57,58,59,60,62,63,64,65,66,67,68,69,70,72,73,76,77,79,80,85,86,87,91,97,101,102,104,105,107,113,116,119,120,123,125,128,132,133,134,143,148,151,152,153,154,155,159,161,162,165,166,167,168,169,174,175,176,179,180,183,185,186,189,190,192,193,197,201,202,204,210,212,219,221,229,230,231,236,237,239,240,241,243,246,247,252,],[31,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,63,-74,-31,-32,-33,63,63,31,31,31,63,63,63,-40,-41,-42,-43,-34,-35,-36,-37,-38,-39,108,-27,63,-25,-26,-28,-29,113,-75,31,63,-30,63,31,-20,31,31,63,31,63,63,63,63,31,-73,113,-76,63,-72,-78,-79,63,63,63,31,63,-58,108,-81,-102,-103,-104,-44,-84,-77,-80,108,-70,63,-61,63,-61,-48,63,-93,63,63,63,-46,-82,63,-83,-71,63,63,63,-54,-45,-94,63,-96,-105,-49,-55,-63,63,63,-98,-95,63,-97,-100,]),'FLOTANTE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,27,29,31,32,33,37,38,39,40,43,47,48,49,51,52,53,54,55,56,57,58,59,60,62,63,64,65,66,67,68,69,70,72,73,76,77,79,80,85,86,87,91,97,101,102,104,105,107,114,116,119,120,123,125,128,132,133,134,143,148,152,153,154,155,159,161,162,165,166,167,168,169,174,175,176,179,180,183,185,186,189,190,192,193,197,201,202,204,210,212,219,221,229,230,231,236,237,239,240,241,243,246,247,252,],[32,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,67,-74,-31,-32,-33,67,67,32,32,32,67,67,67,-40,-41,-42,-43,-34,-35,-36,-37,-38,-39,-30,-27,67,-25,-26,-28,-29,114,-75,32,67,-30,67,32,-20,32,32,67,32,67,67,67,67,32,-73,114,-76,67,-72,-78,-79,67,67,67,32,67,-58,-81,-102,-103,-104,-44,-84,-77,-80,-30,-70,67,-61,67,-61,-48,67,-93,67,67,67,-46,-82,67,-83,-71,67,67,67,-54,-45,-94,67,-96,-105,-49,-55,-63,67,67,-98,-95,67,-97,-100,]),'BOOLEAN':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,27,29,31,32,33,37,38,39,40,43,47,48,49,51,52,53,54,55,56,57,58,59,60,62,63,64,65,66,67,68,70,72,73,76,77,79,80,85,86,87,91,97,101,102,104,105,107,116,119,120,123,125,128,132,133,134,143,148,152,153,154,155,159,161,162,165,166,167,168,169,174,175,176,179,180,183,185,186,189,190,192,193,197,201,202,204,210,212,219,221,229,230,231,236,237,239,240,241,243,246,247,252,],[33,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,68,-74,-31,-32,-33,68,68,33,33,33,68,68,68,-40,-41,-42,-43,-34,-35,-36,-37,-38,-39,-30,-27,68,-25,-26,-28,-29,-75,33,68,-30,68,33,-20,33,33,68,33,68,68,68,68,33,-73,-76,68,-72,-78,-79,68,68,68,33,68,-58,-81,-102,-103,-104,-44,-84,-77,-80,-30,-70,68,-61,68,-61,-48,68,-93,68,68,68,-46,-82,68,-83,-71,68,68,68,-54,-45,-94,68,-96,-105,-49,-55,-63,68,68,-98,-95,68,-97,-100,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,29,31,32,33,70,107,116,120,123,125,148,152,153,154,155,159,161,162,165,167,176,180,189,190,193,197,210,212,219,229,230,231,236,237,241,243,247,252,],[0,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-74,-31,-32,-33,-75,-73,-76,-72,-78,-79,-58,-81,-102,-103,-104,-44,-84,-77,-80,-70,-48,-93,-46,-82,-83,-71,-54,-45,-94,-96,-105,-49,-55,-63,-98,-95,-97,-100,]),'RPAREN':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,29,31,32,33,63,64,65,66,67,68,70,75,76,81,83,90,91,92,93,94,95,103,107,109,116,118,120,121,122,123,125,126,127,129,135,138,139,142,148,149,150,152,153,154,155,159,161,162,164,165,167,169,172,173,176,178,180,187,189,190,191,193,196,197,198,200,203,210,212,213,216,217,218,219,220,221,222,224,225,226,229,230,231,232,233,236,237,238,241,243,247,250,252,253,],[-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-74,-31,-32,-33,-27,-56,-25,-26,-28,-29,-75,120,-30,123,125,-64,-65,-66,-67,-59,-62,148,-73,-57,-76,159,-72,161,162,-78,-79,164,165,167,-68,176,-47,180,-58,189,190,-81,-102,-103,-104,-44,-84,-77,193,-80,-70,-61,197,-69,-48,200,-93,210,-46,-82,212,-83,-60,-71,217,219,-92,-54,-45,225,229,230,231,-94,232,-90,234,236,237,238,-96,-105,-49,-89,-91,-55,-63,243,-98,-95,-97,252,-100,-99,]),'DEFICION':([26,78,],[35,35,]),'LET':([26,78,],[36,36,]),'IMPRIMIR':([26,78,140,141,],[37,37,37,37,]),'DO':([26,78,82,],[40,40,40,]),'WHEN':([26,78,],[42,42,]),'DEFFUNCION':([26,78,],[43,43,]),'LOOP':([26,78,],[44,44,]),'COND':([26,78,],[45,45,]),'DOSEQ':([26,78,],[46,46,]),'CASE':([26,78,214,],[47,47,227,]),'LIST':([26,78,],[48,48,]),'DOTIMES':([26,78,],[50,50,]),'MAS':([26,78,201,],[51,51,51,]),'MENOS':([26,78,201,],[52,52,52,]),'PRODUCTO':([26,78,201,],[53,53,53,]),'DIVISION':([26,78,201,],[54,54,54,]),'COMPARA_IGUAL':([26,71,78,],[55,55,55,]),'MENORQUE':([26,71,78,],[56,56,56,]),'MAYORQUE':([26,71,78,],[57,57,57,]),'MAYORIGUALQUE':([26,71,78,],[58,58,58,]),'MENORIGUALQUE':([26,71,78,],[59,59,59,]),'DIFERENTE':([26,71,78,],[60,60,60,]),'VARIABLE':([27,35,37,38,43,47,48,49,51,52,53,54,55,56,57,58,59,60,62,63,64,65,66,67,68,70,73,74,76,77,84,87,97,101,102,104,106,107,116,119,120,128,132,133,143,162,166,168,174,179,183,185,186,189,192,201,202,204,221,227,237,239,240,246,],[62,73,76,76,86,76,76,76,-40,-41,-42,-43,-34,-35,-36,-37,-38,-39,-30,-27,76,-25,-26,-28,-29,-75,76,119,-30,76,126,62,76,76,76,76,151,-73,-76,76,-72,166,170,76,76,-77,-30,76,76,76,76,76,76,-46,76,76,76,76,76,239,-63,76,76,76,]),'STRING':([27,37,38,43,47,48,49,51,52,53,54,55,56,57,58,59,60,62,63,64,65,66,67,68,69,70,73,76,77,86,87,97,101,102,104,107,115,116,119,120,128,132,133,143,146,162,166,168,174,179,183,185,186,189,192,201,202,204,211,221,237,239,240,245,246,251,],[65,65,65,94,65,65,65,-40,-41,-42,-43,-34,-35,-36,-37,-38,-39,-30,-27,65,-25,-26,-28,-29,115,-75,65,-30,65,94,65,65,65,65,65,-73,115,-76,65,-72,65,65,65,65,186,-77,-30,65,65,65,65,65,65,-46,65,65,65,65,224,65,-63,65,65,249,65,253,]),'CHAR':([27,37,38,47,48,49,51,52,53,54,55,56,57,58,59,60,62,63,64,65,66,67,68,70,73,76,77,87,97,101,102,104,107,116,119,120,128,132,133,143,162,166,168,174,179,183,185,186,189,192,201,202,204,221,237,239,240,246,],[66,66,66,66,66,66,-40,-41,-42,-43,-34,-35,-36,-37,-38,-39,-30,-27,66,-25,-26,-28,-29,-75,66,-30,66,66,66,66,66,66,-73,-76,66,-72,66,66,66,66,-77,-30,66,66,66,66,66,66,-46,66,66,66,66,66,-63,66,66,66,]),'L_LLAVE':([28,],[69,]),'INCREASE':([43,86,],[88,130,]),'RCOR':([61,62,63,64,65,66,67,68,76,107,108,109,131,137,153,154,155,160,166,170,171,182,184,223,234,],[107,-30,-27,-56,-25,-26,-28,-29,-30,-73,152,-57,169,175,-102,-103,-104,191,194,195,196,205,207,235,242,]),'RECUR':([82,117,],[124,124,]),'R_LLAVE':([110,111,112,113,114,115,156,157,158,],[153,154,155,-106,-108,-110,-107,-109,-111,]),'DOSPUNTOS':([120,138,139,147,185,186,208,209,244,249,],[-72,177,-47,188,-50,-51,-52,-53,248,-101,]),'PRN':([141,],[179,]),'INC':([163,],[192,]),'ELSE':([177,188,248,],[199,211,251,]),'RANGE':([181,],[204,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'instrucciones':([0,39,40,43,72,79,85,86,91,105,134,],[1,79,81,95,79,95,95,95,95,95,95,]),'asignacion':([0,39,40,43,72,79,85,86,91,105,134,],[2,2,2,2,2,2,2,2,2,2,2,]),'impresion':([0,39,40,43,72,79,85,86,91,99,100,105,134,146,147,199,],[3,3,3,3,3,3,3,3,3,139,142,3,3,185,187,218,]),'operacion_aritmetica':([0,39,40,43,72,79,85,86,91,105,134,179,],[4,4,4,4,4,4,4,4,4,4,4,203,]),'conjuntos':([0,39,40,43,72,79,85,86,91,105,134,144,145,],[5,5,5,5,5,5,5,5,5,5,5,182,184,]),'vector':([0,39,40,43,72,79,85,86,91,101,105,134,144,206,],[6,6,6,6,6,6,6,6,6,145,6,6,183,223,]),'mapa':([0,39,40,43,72,79,85,86,91,105,134,],[7,7,7,7,7,7,7,7,7,7,7,]),'if':([0,26,39,40,43,72,78,79,85,86,89,91,105,134,136,215,],[8,41,8,8,8,8,41,8,8,8,133,8,8,8,174,228,]),'do':([0,39,40,41,43,72,79,85,86,91,105,134,],[9,9,9,83,9,9,9,9,9,9,9,9,]),'if_do':([0,39,40,43,72,79,85,86,91,105,134,],[10,10,10,10,10,10,10,10,10,10,10,]),'when':([0,39,40,43,72,79,85,86,91,105,134,],[11,11,11,11,11,11,11,11,11,11,11,]),'defn':([0,39,40,43,72,79,85,86,91,105,134,],[12,12,12,12,12,12,12,12,12,12,12,]),'defn_with_return':([0,39,40,43,72,79,85,86,91,105,134,],[13,13,13,13,13,13,13,13,13,13,13,]),'operacionesLogicas':([0,39,40,43,72,79,85,86,91,105,134,195,],[14,14,14,14,14,14,14,14,14,14,14,216,]),'sentenciaLoopRecur':([0,39,40,43,72,79,85,86,91,105,134,],[15,15,15,15,15,15,15,15,15,15,15,]),'cond_':([0,39,40,43,72,79,85,86,91,105,134,],[16,16,16,16,16,16,16,16,16,16,16,]),'cond_else':([0,39,40,43,72,79,85,86,91,105,134,],[17,17,17,17,17,17,17,17,17,17,17,]),'doseq':([0,39,40,43,72,79,85,86,91,105,134,],[18,18,18,18,18,18,18,18,18,18,18,]),'case_expression':([0,39,40,43,72,79,85,86,91,105,134,],[19,19,19,19,19,19,19,19,19,19,19,]),'lista':([0,39,40,43,72,79,85,86,91,105,134,],[20,20,20,20,20,20,20,20,20,20,20,]),'sentencia_booleana':([0,30,39,40,42,43,45,72,79,85,86,91,98,105,134,],[21,70,80,21,85,21,99,21,21,21,21,21,99,21,21,]),'function':([0,39,40,43,72,79,85,86,91,105,134,],[22,22,22,22,22,22,22,22,22,22,22,]),'dotimes':([0,39,40,43,72,79,85,86,91,105,134,],[23,23,23,23,23,23,23,23,23,23,23,]),'ciclo':([0,39,40,43,50,72,79,85,86,91,105,134,],[24,24,24,24,105,24,24,24,24,24,24,24,]),'valor':([0,39,40,43,72,79,85,86,91,105,134,],[25,25,25,25,25,25,25,25,25,25,25,]),'operador_aritmetico':([26,78,201,],[38,38,38,]),'operador_comparadores':([26,71,78,],[49,49,49,]),'argumentos_lista':([27,48,64,87,97,128,143,],[61,103,109,131,137,131,61,]),'dato':([27,37,38,47,48,49,64,73,77,87,97,101,102,104,119,128,132,133,143,168,174,179,183,185,186,192,201,202,204,221,239,240,246,],[64,75,77,102,64,104,64,118,121,64,64,144,146,149,160,64,171,172,64,171,198,202,206,146,146,213,220,221,222,233,245,246,250,]),'recur':([41,70,80,228,],[84,116,116,84,]),'internos':([43,86,],[89,129,]),'description':([43,86,],[90,90,]),'argumments':([43,44,86,90,],[91,96,91,134,]),'body':([43,79,85,86,91,105,134,],[92,122,127,92,135,150,173,]),'increase':([43,86,],[93,93,]),'linecondition':([45,98,],[98,138,]),'doseq_args':([46,],[100,]),'expresionConjuntoEnteros':([69,113,],[110,156,]),'expresionConjuntoDouble':([69,114,],[111,157,]),'expresionConjuntoString':([69,115,],[112,158,]),'case':([102,185,186,],[147,208,209,]),'doseq_prn':([141,],[178,]),'expresionDefnElse':([214,],[226,]),'defn_return':([229,243,],[241,247,]),'expresionCase':([239,],[244,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> instrucciones","S'",1,None,None,None),
  ('instrucciones -> asignacion','instrucciones',1,'p_instrucciones','clojure_sin.py',5),
  ('instrucciones -> impresion','instrucciones',1,'p_instrucciones','clojure_sin.py',6),
  ('instrucciones -> operacion_aritmetica','instrucciones',1,'p_instrucciones','clojure_sin.py',7),
  ('instrucciones -> conjuntos','instrucciones',1,'p_instrucciones','clojure_sin.py',8),
  ('instrucciones -> vector','instrucciones',1,'p_instrucciones','clojure_sin.py',9),
  ('instrucciones -> mapa','instrucciones',1,'p_instrucciones','clojure_sin.py',10),
  ('instrucciones -> if','instrucciones',1,'p_instrucciones','clojure_sin.py',11),
  ('instrucciones -> do','instrucciones',1,'p_instrucciones','clojure_sin.py',12),
  ('instrucciones -> if_do','instrucciones',1,'p_instrucciones','clojure_sin.py',13),
  ('instrucciones -> when','instrucciones',1,'p_instrucciones','clojure_sin.py',14),
  ('instrucciones -> defn','instrucciones',1,'p_instrucciones','clojure_sin.py',15),
  ('instrucciones -> defn_with_return','instrucciones',1,'p_instrucciones','clojure_sin.py',16),
  ('instrucciones -> operacionesLogicas','instrucciones',1,'p_instrucciones','clojure_sin.py',17),
  ('instrucciones -> sentenciaLoopRecur','instrucciones',1,'p_instrucciones','clojure_sin.py',18),
  ('instrucciones -> cond_','instrucciones',1,'p_instrucciones','clojure_sin.py',19),
  ('instrucciones -> cond_else','instrucciones',1,'p_instrucciones','clojure_sin.py',20),
  ('instrucciones -> doseq','instrucciones',1,'p_instrucciones','clojure_sin.py',21),
  ('instrucciones -> case_expression','instrucciones',1,'p_instrucciones','clojure_sin.py',22),
  ('instrucciones -> lista','instrucciones',1,'p_instrucciones','clojure_sin.py',23),
  ('instrucciones -> sentencia_booleana','instrucciones',1,'p_instrucciones','clojure_sin.py',24),
  ('instrucciones -> function','instrucciones',1,'p_instrucciones','clojure_sin.py',25),
  ('instrucciones -> dotimes','instrucciones',1,'p_instrucciones','clojure_sin.py',26),
  ('instrucciones -> ciclo','instrucciones',1,'p_instrucciones','clojure_sin.py',27),
  ('instrucciones -> valor','instrucciones',1,'p_instrucciones','clojure_sin.py',28),
  ('dato -> STRING','dato',1,'p_tipos_datos','clojure_sin.py',32),
  ('dato -> CHAR','dato',1,'p_tipos_datos','clojure_sin.py',33),
  ('dato -> ENTERO','dato',1,'p_tipos_datos','clojure_sin.py',34),
  ('dato -> FLOTANTE','dato',1,'p_tipos_datos','clojure_sin.py',35),
  ('dato -> BOOLEAN','dato',1,'p_tipos_datos','clojure_sin.py',36),
  ('dato -> VARIABLE','dato',1,'p_tipos_datos','clojure_sin.py',37),
  ('valor -> ENTERO','valor',1,'p_valor','clojure_sin.py',41),
  ('valor -> FLOTANTE','valor',1,'p_valor','clojure_sin.py',42),
  ('valor -> BOOLEAN','valor',1,'p_valor','clojure_sin.py',43),
  ('operador_comparadores -> COMPARA_IGUAL','operador_comparadores',1,'p_operadoresComparadores','clojure_sin.py',48),
  ('operador_comparadores -> MENORQUE','operador_comparadores',1,'p_operadoresComparadores','clojure_sin.py',49),
  ('operador_comparadores -> MAYORQUE','operador_comparadores',1,'p_operadoresComparadores','clojure_sin.py',50),
  ('operador_comparadores -> MAYORIGUALQUE','operador_comparadores',1,'p_operadoresComparadores','clojure_sin.py',51),
  ('operador_comparadores -> MENORIGUALQUE','operador_comparadores',1,'p_operadoresComparadores','clojure_sin.py',52),
  ('operador_comparadores -> DIFERENTE','operador_comparadores',1,'p_operadoresComparadores','clojure_sin.py',53),
  ('operador_aritmetico -> MAS','operador_aritmetico',1,'p_op_aritmetica1','clojure_sin.py',57),
  ('operador_aritmetico -> MENOS','operador_aritmetico',1,'p_op_aritmetica1','clojure_sin.py',58),
  ('operador_aritmetico -> PRODUCTO','operador_aritmetico',1,'p_op_aritmetica1','clojure_sin.py',59),
  ('operador_aritmetico -> DIVISION','operador_aritmetico',1,'p_op_aritmetica1','clojure_sin.py',60),
  ('asignacion -> LPAREN DEFICION VARIABLE dato RPAREN','asignacion',5,'p_asignacion','clojure_sin.py',64),
  ('asignacion -> LPAREN LET LCOR VARIABLE dato RCOR RPAREN','asignacion',7,'p_asignacion','clojure_sin.py',65),
  ('sentencia_booleana -> LPAREN operador_comparadores dato dato RPAREN','sentencia_booleana',5,'p_sentenciaBooleana','clojure_sin.py',75),
  ('linecondition -> sentencia_booleana impresion','linecondition',2,'p_linecondition','clojure_sin.py',80),
  ('cond_ -> LPAREN COND linecondition linecondition RPAREN','cond_',5,'p_cond','clojure_sin.py',86),
  ('cond_else -> LPAREN COND linecondition linecondition DOSPUNTOS ELSE impresion RPAREN','cond_else',8,'p_condElse','clojure_sin.py',91),
  ('case -> dato impresion','case',2,'p_case','clojure_sin.py',103),
  ('case -> dato STRING','case',2,'p_case','clojure_sin.py',104),
  ('case -> dato impresion case','case',3,'p_case','clojure_sin.py',105),
  ('case -> dato STRING case','case',3,'p_case','clojure_sin.py',106),
  ('case_expression -> LPAREN CASE dato case impresion RPAREN','case_expression',6,'p_case_expression','clojure_sin.py',116),
  ('case_expression -> LPAREN CASE dato case DOSPUNTOS ELSE STRING RPAREN','case_expression',8,'p_case_expression','clojure_sin.py',117),
  ('argumentos_lista -> dato','argumentos_lista',1,'p_argumentos_lista','clojure_sin.py',126),
  ('argumentos_lista -> dato argumentos_lista','argumentos_lista',2,'p_argumentos_lista','clojure_sin.py',127),
  ('lista -> LPAREN LIST argumentos_lista RPAREN','lista',4,'p_lista','clojure_sin.py',135),
  ('description -> STRING','description',1,'p_description','clojure_sin.py',146),
  ('increase -> INCREASE LCOR dato RCOR','increase',4,'p_increase','clojure_sin.py',151),
  ('argumments -> LCOR argumentos_lista RCOR','argumments',3,'p_argumments','clojure_sin.py',156),
  ('body -> instrucciones','body',1,'p_body','clojure_sin.py',160),
  ('recur -> LPAREN RECUR LPAREN INC dato RPAREN RPAREN','recur',7,'p_recur','clojure_sin.py',164),
  ('internos -> description','internos',1,'p_internos','clojure_sin.py',169),
  ('internos -> argumments','internos',1,'p_internos','clojure_sin.py',170),
  ('internos -> body','internos',1,'p_internos','clojure_sin.py',171),
  ('internos -> increase','internos',1,'p_internos','clojure_sin.py',172),
  ('internos -> argumments body','internos',2,'p_internos','clojure_sin.py',173),
  ('internos -> description argumments body','internos',3,'p_internos','clojure_sin.py',174),
  ('function -> LPAREN DEFFUNCION VARIABLE internos RPAREN','function',5,'p_function','clojure_sin.py',186),
  ('function -> LPAREN DEFFUNCION internos if dato RPAREN','function',6,'p_function','clojure_sin.py',187),
  ('impresion -> LPAREN IMPRIMIR dato RPAREN','impresion',4,'p_impresion','clojure_sin.py',195),
  ('vector -> LCOR argumentos_lista RCOR','vector',3,'p_vector','clojure_sin.py',200),
  ('mapa -> MAPA','mapa',1,'p_mapa','clojure_sin.py',205),
  ('if -> IF sentencia_booleana','if',2,'p_if','clojure_sin.py',209),
  ('if -> IF sentencia_booleana recur','if',3,'p_if','clojure_sin.py',210),
  ('if -> LPAREN IF instrucciones body RPAREN','if',5,'p_if','clojure_sin.py',211),
  ('do -> LPAREN DO instrucciones RPAREN','do',4,'p_do','clojure_sin.py',223),
  ('if_do -> LPAREN if do RPAREN','if_do',4,'p_if_do','clojure_sin.py',228),
  ('when -> LPAREN WHEN sentencia_booleana body RPAREN','when',5,'p_when','clojure_sin.py',232),
  ('ciclo -> LCOR VARIABLE ENTERO RCOR','ciclo',4,'p_ciclo','clojure_sin.py',236),
  ('dotimes -> LPAREN DOTIMES ciclo body RPAREN','dotimes',5,'p_dotimes','clojure_sin.py',240),
  ('operacionesLogicas -> LPAREN if recur VARIABLE RPAREN RPAREN','operacionesLogicas',6,'p_operacionesLogicas','clojure_sin.py',244),
  ('operacion_aritmetica -> LPAREN operador_aritmetico dato dato RPAREN','operacion_aritmetica',5,'p_operacion_aritmetica1','clojure_sin.py',248),
  ('doseq_args -> LCOR dato LPAREN RANGE dato RPAREN RCOR','doseq_args',7,'p_doseq_args','clojure_sin.py',254),
  ('doseq_args -> LCOR dato conjuntos RCOR','doseq_args',4,'p_doseq_args','clojure_sin.py',255),
  ('doseq_args -> LCOR dato vector dato vector RCOR','doseq_args',6,'p_doseq_args','clojure_sin.py',256),
  ('doseq_args -> LCOR vector conjuntos RCOR','doseq_args',4,'p_doseq_args','clojure_sin.py',257),
  ('doseq_prn -> PRN LPAREN dato RPAREN','doseq_prn',4,'p_doseq_prn','clojure_sin.py',270),
  ('doseq_prn -> PRN dato dato','doseq_prn',3,'p_doseq_prn','clojure_sin.py',271),
  ('doseq_prn -> PRN dato dato dato','doseq_prn',4,'p_doseq_prn','clojure_sin.py',272),
  ('doseq_prn -> PRN operacion_aritmetica','doseq_prn',2,'p_doseq_prn','clojure_sin.py',273),
  ('doseq -> LPAREN DOSEQ doseq_args impresion RPAREN','doseq',5,'p_doseq','clojure_sin.py',291),
  ('doseq -> LPAREN DOSEQ doseq_args LPAREN doseq_prn RPAREN RPAREN','doseq',7,'p_doseq','clojure_sin.py',292),
  ('defn -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN','defn',10,'p_defn','clojure_sin.py',300),
  ('defn -> LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN','defn',8,'p_defn','clojure_sin.py',301),
  ('defn_with_return -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN defn_return','defn_with_return',11,'p_defn_with_return','clojure_sin.py',310),
  ('defn_with_return -> LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN defn_return','defn_with_return',9,'p_defn_with_return','clojure_sin.py',311),
  ('expresionDefnElse -> CASE VARIABLE expresionCase DOSPUNTOS ELSE STRING','expresionDefnElse',6,'p_expresionDefnElse','clojure_sin.py',321),
  ('defn_return -> LPAREN dato dato RPAREN','defn_return',4,'p_defn_return','clojure_sin.py',325),
  ('expresionCase -> dato STRING','expresionCase',2,'p_expresionCase','clojure_sin.py',329),
  ('conjuntos -> NUMERAL L_LLAVE expresionConjuntoEnteros R_LLAVE','conjuntos',4,'p_conjuntos','clojure_sin.py',334),
  ('conjuntos -> NUMERAL L_LLAVE expresionConjuntoDouble R_LLAVE','conjuntos',4,'p_conjuntos','clojure_sin.py',335),
  ('conjuntos -> NUMERAL L_LLAVE expresionConjuntoString R_LLAVE','conjuntos',4,'p_conjuntos','clojure_sin.py',336),
  ('sentenciaLoopRecur -> LPAREN LOOP argumments LPAREN if dato RPAREN RPAREN','sentenciaLoopRecur',8,'p_sentenciaLoopRecur','clojure_sin.py',343),
  ('expresionConjuntoEnteros -> ENTERO','expresionConjuntoEnteros',1,'p_expresionConjuntoEnteros','clojure_sin.py',349),
  ('expresionConjuntoEnteros -> ENTERO expresionConjuntoEnteros','expresionConjuntoEnteros',2,'p_expresionConjuntoEnteros','clojure_sin.py',350),
  ('expresionConjuntoDouble -> FLOTANTE','expresionConjuntoDouble',1,'p_expresionConjuntoDouble','clojure_sin.py',359),
  ('expresionConjuntoDouble -> FLOTANTE expresionConjuntoDouble','expresionConjuntoDouble',2,'p_expresionConjuntoDouble','clojure_sin.py',360),
  ('expresionConjuntoString -> STRING','expresionConjuntoString',1,'p_expresionConjuntoString','clojure_sin.py',368),
  ('expresionConjuntoString -> STRING expresionConjuntoString','expresionConjuntoString',2,'p_expresionConjuntoString','clojure_sin.py',369),
]
