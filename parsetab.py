
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'BOOLEAN CASE CHAR CLASE COMPARA_IGUAL COND CONJUNTOS DEFFUNCION DEFICION DIFERENTE DIVISION DO DOSEQ DOSPUNTOS DOTIMES ELSE ENTERO FLOTANTE FUNCION FUTURE IF IGUAL IMPRIMIR INC INCREASE INPUT LCOR LET LIST LISTA LOOP LPAREN L_LLAVE MAPA MAS MAYORIGUALQUE MAYORQUE MENORIGUALQUE MENORQUE MENOS NOT NS NUEVO NUMERAL PRN PRODUCTO RANGE RCOR RECUR RPAREN R_LLAVE STR STRING VARIABLE VECTOR WHENinstrucciones : asignacion\n                    | impresion\n                    | operacion_aritmetica\n                    | conjuntos\n                    | vector\n                    | mapa\n                    | if\n                    | do\n                    | if_do\n                    | when\n                    | defn\n                    | defn_with_return\n                    | operacionesLogicas\n                    | sentenciaLoopRecur\n                    | cond_\n                    | cond_else\n                    | doseq\n                    | case_expression\n                    | lista\n                    | sentencia_booleana\n                    | function\n                    | dotimes\n                    | ciclo\n                    | valordato : STRING\n            | CHAR\n            | ENTERO\n            | FLOTANTE\n            | BOOLEAN\n            | VARIABLE valor : ENTERO\n          | FLOTANTE\n          | BOOLEAN\n          operador_comparadores : COMPARA_IGUAL\n                | MENORQUE\n                | MAYORQUE\n                | MAYORIGUALQUE\n                | MENORIGUALQUE\n                | DIFERENTEoperador_aritmetico : MAS\n                  | MENOS\n                  | PRODUCTO\n                  | DIVISION asignacion : LPAREN DEFICION VARIABLE dato RPAREN\n                | LPAREN LET LCOR VARIABLE dato RCOR RPARENsentencia_booleana : LPAREN operador_comparadores dato dato RPARENlinecondition : sentencia_booleana impresioncond_ : LPAREN COND linecondition linecondition RPARENcond_else : LPAREN COND linecondition linecondition DOSPUNTOS ELSE impresion RPARENcase : dato impresion\n            | dato STRING\n            | dato impresion case\n            | dato STRING case\n    case_expression : LPAREN CASE dato case impresion RPAREN\n                        | LPAREN CASE dato case DOSPUNTOS ELSE STRING RPAREN\n    argumentos_lista : dato\n                        | dato argumentos_listalista : LPAREN LIST argumentos_lista RPARENdescription : STRINGincrease : INCREASE LCOR dato RCORargumments : LCOR argumentos_lista RCORbody : instruccionesrecur : LPAREN RECUR LPAREN INC dato RPAREN RPARENinternos : description\n                | argumments\n                | body\n                | increase\n                | argumments body\n                | description argumments bodyfunction : LPAREN DEFFUNCION VARIABLE internos RPAREN\n                | LPAREN DEFFUNCION internos if dato RPAREN\n    impresion : LPAREN IMPRIMIR dato RPARENvector : LCOR argumentos_lista RCOR secuencia_mapa : DOSPUNTOS VARIABLE dato \n        | DOSPUNTOS VARIABLE secuencia_mapa\n    mapa : LPAREN secuencia_mapa RPARENif : IF sentencia_booleana\n          | IF sentencia_booleana recur\n          | LPAREN IF instrucciones body RPAREN\n    do : LPAREN DO instrucciones RPARENif_do : LPAREN if do RPARENwhen : LPAREN WHEN sentencia_booleana body RPARENciclo : LCOR VARIABLE ENTERO RCORdotimes : LPAREN DOTIMES ciclo body RPARENoperacionesLogicas : LPAREN if recur VARIABLE RPAREN RPARENoperacion_aritmetica : LPAREN operador_aritmetico dato dato RPARENdoseq_args : LCOR dato LPAREN RANGE dato RPAREN RCOR\n                    | LCOR dato conjuntos RCOR\n                    | LCOR dato vector dato vector RCOR\n                    | LCOR vector conjuntos RCORdoseq_prn : PRN LPAREN dato RPAREN\n                    | PRN dato dato\n                    | PRN dato dato dato\n                    | PRN operacion_aritmetica\n      doseq : LPAREN DOSEQ doseq_args impresion RPAREN\n            | LPAREN DOSEQ doseq_args LPAREN doseq_prn RPAREN RPAREN\n    defn : LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN\n             | LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN\n    defn_with_return : LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN defn_return\n                        | LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN defn_return\n\n      expresionDefnElse : CASE VARIABLE expresionCase DOSPUNTOS ELSE STRINGdefn_return : LPAREN dato dato RPARENexpresionCase : dato STRINGconjuntos : NUMERAL L_LLAVE expresionConjuntoEnteros R_LLAVE\n                      | NUMERAL L_LLAVE expresionConjuntoDouble R_LLAVE\n                      | NUMERAL L_LLAVE expresionConjuntoString R_LLAVE\n      sentenciaLoopRecur : LPAREN LOOP argumments LPAREN if dato RPAREN RPARENexpresionConjuntoEnteros : ENTERO\n                                 | ENTERO expresionConjuntoEnteros\n    expresionConjuntoDouble : FLOTANTE\n                     | FLOTANTE expresionConjuntoDouble\n    expresionConjuntoString : STRING\n                                  | STRING expresionConjuntoString\n    '
    
_lr_action_items = {'LPAREN':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,29,30,31,32,39,40,41,42,43,45,64,66,67,68,69,71,73,77,79,80,81,82,87,88,91,92,93,94,95,96,97,98,100,101,103,108,110,119,123,126,127,128,137,138,139,142,149,151,152,153,157,158,159,160,164,166,167,170,172,174,178,180,181,184,185,190,191,194,195,198,199,200,201,202,204,210,212,213,214,215,217,220,224,233,234,235,236,240,241,242,246,247,248,252,257,],[26,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,33,72,-31,-32,-33,80,26,84,72,26,72,-27,-25,-26,-28,-29,120,26,-30,-76,33,26,120,26,26,33,-64,26,-66,-67,-59,-62,139,72,143,146,26,-73,-78,-72,-80,168,-81,26,-68,33,-47,186,143,143,-58,-83,-104,-105,-106,-44,-86,-79,-82,-70,-61,-69,-61,-48,206,-95,-50,-51,-46,-84,-85,219,220,-60,-71,143,-88,-90,-52,-53,-54,-45,33,-96,120,245,-107,-49,-89,-55,-63,-100,-87,245,-99,-102,]),'NUMERAL':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,30,31,32,39,40,43,64,66,67,68,69,71,73,77,79,81,82,87,88,93,108,110,119,123,126,128,137,149,150,153,157,158,159,160,164,166,167,170,172,174,180,181,185,194,195,198,202,215,217,224,234,235,236,241,242,246,248,252,257,],[28,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-31,-32,-33,28,28,28,-27,-25,-26,-28,-29,-77,28,-30,-76,28,-20,28,28,28,28,-73,-78,-72,-80,-81,28,28,28,-58,-83,-104,-105,-106,-44,-86,-79,-82,-70,-61,-61,-48,-95,-46,-84,-85,-71,-54,-45,-96,-98,-107,-49,-55,-63,-100,-97,-99,-102,]),'LCOR':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,30,31,32,35,39,40,43,44,47,51,64,66,67,68,69,71,73,77,79,81,82,87,88,90,92,93,96,104,108,110,119,123,126,128,133,137,149,153,157,158,159,160,164,166,167,170,172,174,180,181,185,194,195,198,202,211,215,217,224,234,235,236,241,242,246,248,252,257,],[27,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-31,-32,-33,75,27,27,89,99,104,109,-27,-25,-26,-28,-29,-77,27,-30,-76,27,-20,27,131,135,99,27,-59,148,27,-73,-78,-72,-80,-81,173,27,148,-58,-83,-104,-105,-106,-44,-86,-79,-82,-70,-61,-61,-48,-95,-46,-84,-85,-71,148,-54,-45,-96,-98,-107,-49,-55,-63,-100,-97,-99,-102,]),'IF':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,30,31,32,33,39,40,43,71,73,79,80,81,82,87,88,91,92,93,94,95,96,97,108,110,119,123,126,128,137,138,139,153,157,158,159,160,164,166,167,170,172,174,178,180,181,185,194,195,198,201,202,215,217,220,224,234,235,236,241,242,246,248,252,257,],[29,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,39,-31,-32,-33,73,29,29,29,-77,29,-76,39,29,-20,29,29,29,-64,29,-66,-67,-59,-62,29,-73,-78,-72,-80,-81,29,-68,29,-58,-83,-104,-105,-106,-44,-86,-79,-82,-70,-61,-69,-61,-48,-95,-46,-84,-85,-60,-71,-54,-45,29,-96,-98,-107,-49,-55,-63,-100,-97,-99,-102,]),'ENTERO':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,27,30,31,32,36,37,39,40,43,48,49,50,52,53,54,55,56,57,58,59,60,61,63,64,65,66,67,68,69,70,71,73,74,77,78,79,81,82,87,88,89,93,99,102,104,105,107,108,110,116,119,122,123,126,128,131,135,136,137,148,153,156,157,158,159,160,164,166,167,170,171,172,173,174,179,180,181,184,185,188,190,191,194,195,197,198,202,206,207,209,215,217,224,226,234,235,236,241,242,244,245,246,248,251,252,257,],[30,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,64,-31,-32,-33,64,64,30,30,30,64,64,64,-40,-41,-42,-43,-34,-35,-36,-37,-38,-39,111,-27,64,-25,-26,-28,-29,116,-77,30,64,-30,64,-76,30,-20,30,30,64,30,64,64,64,64,64,30,-73,116,-78,64,-72,-80,-81,64,64,64,30,64,-58,111,-83,-104,-105,-106,-44,-86,-79,-82,111,-70,64,-61,64,-61,-48,64,-95,64,64,64,-46,-84,64,-85,-71,64,64,64,-54,-45,-96,64,-98,-107,-49,-55,-63,64,64,-100,-97,64,-99,-102,]),'FLOTANTE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,27,30,31,32,36,37,39,40,43,48,49,50,52,53,54,55,56,57,58,59,60,61,63,64,65,66,67,68,69,70,71,73,74,77,78,79,81,82,87,88,89,93,99,102,104,105,107,108,110,117,119,122,123,126,128,131,135,136,137,148,153,157,158,159,160,164,166,167,170,171,172,173,174,179,180,181,184,185,188,190,191,194,195,197,198,202,206,207,209,215,217,224,226,234,235,236,241,242,244,245,246,248,251,252,257,],[31,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,68,-31,-32,-33,68,68,31,31,31,68,68,68,-40,-41,-42,-43,-34,-35,-36,-37,-38,-39,-30,-27,68,-25,-26,-28,-29,117,-77,31,68,-30,68,-76,31,-20,31,31,68,31,68,68,68,68,68,31,-73,117,-78,68,-72,-80,-81,68,68,68,31,68,-58,-83,-104,-105,-106,-44,-86,-79,-82,-30,-70,68,-61,68,-61,-48,68,-95,68,68,68,-46,-84,68,-85,-71,68,68,68,-54,-45,-96,68,-98,-107,-49,-55,-63,68,68,-100,-97,68,-99,-102,]),'BOOLEAN':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,27,30,31,32,36,37,39,40,43,48,49,50,52,53,54,55,56,57,58,59,60,61,63,64,65,66,67,68,69,71,73,74,77,78,79,81,82,87,88,89,93,99,102,104,105,107,108,110,119,122,123,126,128,131,135,136,137,148,153,157,158,159,160,164,166,167,170,171,172,173,174,179,180,181,184,185,188,190,191,194,195,197,198,202,206,207,209,215,217,224,226,234,235,236,241,242,244,245,246,248,251,252,257,],[32,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,69,-31,-32,-33,69,69,32,32,32,69,69,69,-40,-41,-42,-43,-34,-35,-36,-37,-38,-39,-30,-27,69,-25,-26,-28,-29,-77,32,69,-30,69,-76,32,-20,32,32,69,32,69,69,69,69,69,32,-73,-78,69,-72,-80,-81,69,69,69,32,69,-58,-83,-104,-105,-106,-44,-86,-79,-82,-30,-70,69,-61,69,-61,-48,69,-95,69,69,69,-46,-84,69,-85,-71,69,69,69,-54,-45,-96,69,-98,-107,-49,-55,-63,69,69,-100,-97,69,-99,-102,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,30,31,32,71,79,110,119,123,126,128,153,157,158,159,160,164,166,167,170,172,181,185,194,195,198,202,215,217,224,234,235,236,241,242,246,248,252,257,],[0,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-31,-32,-33,-77,-76,-73,-78,-72,-80,-81,-58,-83,-104,-105,-106,-44,-86,-79,-82,-70,-48,-95,-46,-84,-85,-71,-54,-45,-96,-98,-107,-49,-55,-63,-100,-97,-99,-102,]),'RPAREN':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,30,31,32,38,64,65,66,67,68,69,71,76,77,79,83,85,92,93,94,95,96,97,106,110,112,119,121,123,124,125,126,128,129,130,132,138,141,142,144,145,147,153,154,155,157,158,159,160,164,166,167,169,170,172,174,177,178,181,183,185,192,194,195,196,198,201,202,203,205,208,215,217,218,221,222,223,224,225,226,227,229,230,231,234,235,236,237,238,241,242,243,246,248,252,255,257,258,],[-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-31,-32,-33,79,-27,-56,-25,-26,-28,-29,-77,123,-30,-76,126,128,-64,-65,-66,-67,-59,-62,153,-73,-57,-78,164,-72,166,167,-80,-81,169,170,172,-68,181,-47,-74,-75,185,-58,194,195,-83,-104,-105,-106,-44,-86,-79,198,-82,-70,-61,202,-69,-48,205,-95,215,-46,-84,217,-85,-60,-71,222,224,-94,-54,-45,230,234,235,236,-96,237,-92,239,241,242,243,-98,-107,-49,-91,-93,-55,-63,248,-100,-97,-99,257,-102,-101,]),'DEFICION':([26,80,],[34,34,]),'LET':([26,80,],[35,35,]),'IMPRIMIR':([26,80,143,146,],[36,36,36,36,]),'DO':([26,80,84,],[40,40,40,]),'WHEN':([26,80,],[42,42,]),'DEFFUNCION':([26,80,],[43,43,]),'LOOP':([26,80,],[44,44,]),'COND':([26,80,],[45,45,]),'DOSEQ':([26,80,],[47,47,]),'CASE':([26,80,219,],[48,48,232,]),'LIST':([26,80,],[49,49,]),'DOTIMES':([26,80,],[51,51,]),'MAS':([26,80,206,],[52,52,52,]),'MENOS':([26,80,206,],[53,53,53,]),'PRODUCTO':([26,80,206,],[54,54,54,]),'DIVISION':([26,80,206,],[55,55,55,]),'DOSPUNTOS':([26,80,102,123,141,142,152,190,191,213,214,249,254,],[46,46,46,-72,182,-47,193,-50,-51,-52,-53,253,-103,]),'COMPARA_IGUAL':([26,72,80,],[56,56,56,]),'MENORQUE':([26,72,80,],[57,57,57,]),'MAYORQUE':([26,72,80,],[58,58,58,]),'MAYORIGUALQUE':([26,72,80,],[59,59,59,]),'MENORIGUALQUE':([26,72,80,],[60,60,60,]),'DIFERENTE':([26,72,80,],[61,61,61,]),'VARIABLE':([27,34,36,37,43,46,48,49,50,52,53,54,55,56,57,58,59,60,61,63,64,65,66,67,68,69,71,74,75,77,78,86,89,99,102,104,105,107,109,110,119,122,123,131,135,136,148,167,171,173,179,184,188,190,191,194,197,206,207,209,226,232,242,244,245,251,],[63,74,77,77,88,102,77,77,77,-40,-41,-42,-43,-34,-35,-36,-37,-38,-39,-30,-27,77,-25,-26,-28,-29,-77,77,122,-30,77,129,63,77,77,77,77,77,156,-73,-78,77,-72,171,175,77,77,-79,-30,77,77,77,77,77,77,-46,77,77,77,77,77,244,-63,77,77,77,]),'STRING':([27,36,37,43,48,49,50,52,53,54,55,56,57,58,59,60,61,63,64,65,66,67,68,69,70,71,74,77,78,88,89,99,102,104,105,107,110,118,119,122,123,131,135,136,148,151,167,171,173,179,184,188,190,191,194,197,206,207,209,216,226,242,244,245,250,251,256,],[66,66,66,96,66,66,66,-40,-41,-42,-43,-34,-35,-36,-37,-38,-39,-30,-27,66,-25,-26,-28,-29,118,-77,66,-30,66,96,66,66,66,66,66,66,-73,118,-78,66,-72,66,66,66,66,191,-79,-30,66,66,66,66,66,66,-46,66,66,66,66,229,66,-63,66,66,254,66,258,]),'CHAR':([27,36,37,48,49,50,52,53,54,55,56,57,58,59,60,61,63,64,65,66,67,68,69,71,74,77,78,89,99,102,104,105,107,110,119,122,123,131,135,136,148,167,171,173,179,184,188,190,191,194,197,206,207,209,226,242,244,245,251,],[67,67,67,67,67,67,-40,-41,-42,-43,-34,-35,-36,-37,-38,-39,-30,-27,67,-25,-26,-28,-29,-77,67,-30,67,67,67,67,67,67,67,-73,-78,67,-72,67,67,67,67,-79,-30,67,67,67,67,67,67,-46,67,67,67,67,67,-63,67,67,67,]),'L_LLAVE':([28,],[70,]),'INCREASE':([43,88,],[90,133,]),'RCOR':([62,63,64,65,66,67,68,69,77,110,111,112,134,140,158,159,160,165,171,175,176,187,189,228,239,],[110,-30,-27,-56,-25,-26,-28,-29,-30,-73,157,-57,174,180,-104,-105,-106,196,199,200,201,210,212,240,247,]),'RECUR':([84,120,],[127,127,]),'R_LLAVE':([113,114,115,116,117,118,161,162,163,],[158,159,160,-108,-110,-112,-109,-111,-113,]),'PRN':([146,],[184,]),'INC':([168,],[197,]),'ELSE':([182,193,253,],[204,216,256,]),'RANGE':([186,],[209,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'instrucciones':([0,39,40,43,73,81,87,88,93,108,137,],[1,81,83,97,81,97,97,97,97,97,97,]),'asignacion':([0,39,40,43,73,81,87,88,93,108,137,],[2,2,2,2,2,2,2,2,2,2,2,]),'impresion':([0,39,40,43,73,81,87,88,93,101,103,108,137,151,152,204,],[3,3,3,3,3,3,3,3,3,142,147,3,3,190,192,223,]),'operacion_aritmetica':([0,39,40,43,73,81,87,88,93,108,137,184,],[4,4,4,4,4,4,4,4,4,4,4,208,]),'conjuntos':([0,39,40,43,73,81,87,88,93,108,137,149,150,],[5,5,5,5,5,5,5,5,5,5,5,187,189,]),'vector':([0,39,40,43,73,81,87,88,93,104,108,137,149,211,],[6,6,6,6,6,6,6,6,6,150,6,6,188,228,]),'mapa':([0,39,40,43,73,81,87,88,93,108,137,],[7,7,7,7,7,7,7,7,7,7,7,]),'if':([0,26,39,40,43,73,80,81,87,88,91,93,108,137,139,220,],[8,41,8,8,8,8,41,8,8,8,136,8,8,8,179,233,]),'do':([0,39,40,41,43,73,81,87,88,93,108,137,],[9,9,9,85,9,9,9,9,9,9,9,9,]),'if_do':([0,39,40,43,73,81,87,88,93,108,137,],[10,10,10,10,10,10,10,10,10,10,10,]),'when':([0,39,40,43,73,81,87,88,93,108,137,],[11,11,11,11,11,11,11,11,11,11,11,]),'defn':([0,39,40,43,73,81,87,88,93,108,137,],[12,12,12,12,12,12,12,12,12,12,12,]),'defn_with_return':([0,39,40,43,73,81,87,88,93,108,137,],[13,13,13,13,13,13,13,13,13,13,13,]),'operacionesLogicas':([0,39,40,43,73,81,87,88,93,108,137,200,],[14,14,14,14,14,14,14,14,14,14,14,221,]),'sentenciaLoopRecur':([0,39,40,43,73,81,87,88,93,108,137,],[15,15,15,15,15,15,15,15,15,15,15,]),'cond_':([0,39,40,43,73,81,87,88,93,108,137,],[16,16,16,16,16,16,16,16,16,16,16,]),'cond_else':([0,39,40,43,73,81,87,88,93,108,137,],[17,17,17,17,17,17,17,17,17,17,17,]),'doseq':([0,39,40,43,73,81,87,88,93,108,137,],[18,18,18,18,18,18,18,18,18,18,18,]),'case_expression':([0,39,40,43,73,81,87,88,93,108,137,],[19,19,19,19,19,19,19,19,19,19,19,]),'lista':([0,39,40,43,73,81,87,88,93,108,137,],[20,20,20,20,20,20,20,20,20,20,20,]),'sentencia_booleana':([0,29,39,40,42,43,45,73,81,87,88,93,100,108,137,],[21,71,82,21,87,21,101,21,21,21,21,21,101,21,21,]),'function':([0,39,40,43,73,81,87,88,93,108,137,],[22,22,22,22,22,22,22,22,22,22,22,]),'dotimes':([0,39,40,43,73,81,87,88,93,108,137,],[23,23,23,23,23,23,23,23,23,23,23,]),'ciclo':([0,39,40,43,51,73,81,87,88,93,108,137,],[24,24,24,24,108,24,24,24,24,24,24,24,]),'valor':([0,39,40,43,73,81,87,88,93,108,137,],[25,25,25,25,25,25,25,25,25,25,25,]),'operador_aritmetico':([26,80,206,],[37,37,37,]),'secuencia_mapa':([26,80,102,],[38,38,145,]),'operador_comparadores':([26,72,80,],[50,50,50,]),'argumentos_lista':([27,49,65,89,99,131,148,],[62,106,112,134,140,134,62,]),'dato':([27,36,37,48,49,50,65,74,78,89,99,102,104,105,107,122,131,135,136,148,173,179,184,188,190,191,197,206,207,209,226,244,245,251,],[65,76,78,105,65,107,65,121,124,65,65,144,149,151,154,165,65,176,177,65,176,203,207,211,151,151,218,225,226,227,238,250,251,255,]),'recur':([41,71,82,233,],[86,119,119,86,]),'internos':([43,88,],[91,132,]),'description':([43,88,],[92,92,]),'argumments':([43,44,88,92,],[93,98,93,137,]),'body':([43,81,87,88,93,108,137,],[94,125,130,94,138,155,178,]),'increase':([43,88,],[95,95,]),'linecondition':([45,100,],[100,141,]),'doseq_args':([47,],[103,]),'expresionConjuntoEnteros':([70,116,],[113,161,]),'expresionConjuntoDouble':([70,117,],[114,162,]),'expresionConjuntoString':([70,118,],[115,163,]),'case':([105,190,191,],[152,213,214,]),'doseq_prn':([146,],[183,]),'expresionDefnElse':([219,],[231,]),'defn_return':([234,248,],[246,252,]),'expresionCase':([244,],[249,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> instrucciones","S'",1,None,None,None),
  ('instrucciones -> asignacion','instrucciones',1,'p_instrucciones','clojure_sin.py',7),
  ('instrucciones -> impresion','instrucciones',1,'p_instrucciones','clojure_sin.py',8),
  ('instrucciones -> operacion_aritmetica','instrucciones',1,'p_instrucciones','clojure_sin.py',9),
  ('instrucciones -> conjuntos','instrucciones',1,'p_instrucciones','clojure_sin.py',10),
  ('instrucciones -> vector','instrucciones',1,'p_instrucciones','clojure_sin.py',11),
  ('instrucciones -> mapa','instrucciones',1,'p_instrucciones','clojure_sin.py',12),
  ('instrucciones -> if','instrucciones',1,'p_instrucciones','clojure_sin.py',13),
  ('instrucciones -> do','instrucciones',1,'p_instrucciones','clojure_sin.py',14),
  ('instrucciones -> if_do','instrucciones',1,'p_instrucciones','clojure_sin.py',15),
  ('instrucciones -> when','instrucciones',1,'p_instrucciones','clojure_sin.py',16),
  ('instrucciones -> defn','instrucciones',1,'p_instrucciones','clojure_sin.py',17),
  ('instrucciones -> defn_with_return','instrucciones',1,'p_instrucciones','clojure_sin.py',18),
  ('instrucciones -> operacionesLogicas','instrucciones',1,'p_instrucciones','clojure_sin.py',19),
  ('instrucciones -> sentenciaLoopRecur','instrucciones',1,'p_instrucciones','clojure_sin.py',20),
  ('instrucciones -> cond_','instrucciones',1,'p_instrucciones','clojure_sin.py',21),
  ('instrucciones -> cond_else','instrucciones',1,'p_instrucciones','clojure_sin.py',22),
  ('instrucciones -> doseq','instrucciones',1,'p_instrucciones','clojure_sin.py',23),
  ('instrucciones -> case_expression','instrucciones',1,'p_instrucciones','clojure_sin.py',24),
  ('instrucciones -> lista','instrucciones',1,'p_instrucciones','clojure_sin.py',25),
  ('instrucciones -> sentencia_booleana','instrucciones',1,'p_instrucciones','clojure_sin.py',26),
  ('instrucciones -> function','instrucciones',1,'p_instrucciones','clojure_sin.py',27),
  ('instrucciones -> dotimes','instrucciones',1,'p_instrucciones','clojure_sin.py',28),
  ('instrucciones -> ciclo','instrucciones',1,'p_instrucciones','clojure_sin.py',29),
  ('instrucciones -> valor','instrucciones',1,'p_instrucciones','clojure_sin.py',30),
  ('dato -> STRING','dato',1,'p_tipos_datos','clojure_sin.py',34),
  ('dato -> CHAR','dato',1,'p_tipos_datos','clojure_sin.py',35),
  ('dato -> ENTERO','dato',1,'p_tipos_datos','clojure_sin.py',36),
  ('dato -> FLOTANTE','dato',1,'p_tipos_datos','clojure_sin.py',37),
  ('dato -> BOOLEAN','dato',1,'p_tipos_datos','clojure_sin.py',38),
  ('dato -> VARIABLE','dato',1,'p_tipos_datos','clojure_sin.py',39),
  ('valor -> ENTERO','valor',1,'p_valor','clojure_sin.py',43),
  ('valor -> FLOTANTE','valor',1,'p_valor','clojure_sin.py',44),
  ('valor -> BOOLEAN','valor',1,'p_valor','clojure_sin.py',45),
  ('operador_comparadores -> COMPARA_IGUAL','operador_comparadores',1,'p_operadoresComparadores','clojure_sin.py',50),
  ('operador_comparadores -> MENORQUE','operador_comparadores',1,'p_operadoresComparadores','clojure_sin.py',51),
  ('operador_comparadores -> MAYORQUE','operador_comparadores',1,'p_operadoresComparadores','clojure_sin.py',52),
  ('operador_comparadores -> MAYORIGUALQUE','operador_comparadores',1,'p_operadoresComparadores','clojure_sin.py',53),
  ('operador_comparadores -> MENORIGUALQUE','operador_comparadores',1,'p_operadoresComparadores','clojure_sin.py',54),
  ('operador_comparadores -> DIFERENTE','operador_comparadores',1,'p_operadoresComparadores','clojure_sin.py',55),
  ('operador_aritmetico -> MAS','operador_aritmetico',1,'p_op_aritmetica1','clojure_sin.py',59),
  ('operador_aritmetico -> MENOS','operador_aritmetico',1,'p_op_aritmetica1','clojure_sin.py',60),
  ('operador_aritmetico -> PRODUCTO','operador_aritmetico',1,'p_op_aritmetica1','clojure_sin.py',61),
  ('operador_aritmetico -> DIVISION','operador_aritmetico',1,'p_op_aritmetica1','clojure_sin.py',62),
  ('asignacion -> LPAREN DEFICION VARIABLE dato RPAREN','asignacion',5,'p_asignacion','clojure_sin.py',66),
  ('asignacion -> LPAREN LET LCOR VARIABLE dato RCOR RPAREN','asignacion',7,'p_asignacion','clojure_sin.py',67),
  ('sentencia_booleana -> LPAREN operador_comparadores dato dato RPAREN','sentencia_booleana',5,'p_sentenciaBooleana','clojure_sin.py',77),
  ('linecondition -> sentencia_booleana impresion','linecondition',2,'p_linecondition','clojure_sin.py',87),
  ('cond_ -> LPAREN COND linecondition linecondition RPAREN','cond_',5,'p_cond','clojure_sin.py',93),
  ('cond_else -> LPAREN COND linecondition linecondition DOSPUNTOS ELSE impresion RPAREN','cond_else',8,'p_condElse','clojure_sin.py',98),
  ('case -> dato impresion','case',2,'p_case','clojure_sin.py',110),
  ('case -> dato STRING','case',2,'p_case','clojure_sin.py',111),
  ('case -> dato impresion case','case',3,'p_case','clojure_sin.py',112),
  ('case -> dato STRING case','case',3,'p_case','clojure_sin.py',113),
  ('case_expression -> LPAREN CASE dato case impresion RPAREN','case_expression',6,'p_case_expression','clojure_sin.py',123),
  ('case_expression -> LPAREN CASE dato case DOSPUNTOS ELSE STRING RPAREN','case_expression',8,'p_case_expression','clojure_sin.py',124),
  ('argumentos_lista -> dato','argumentos_lista',1,'p_argumentos_lista','clojure_sin.py',133),
  ('argumentos_lista -> dato argumentos_lista','argumentos_lista',2,'p_argumentos_lista','clojure_sin.py',134),
  ('lista -> LPAREN LIST argumentos_lista RPAREN','lista',4,'p_lista','clojure_sin.py',142),
  ('description -> STRING','description',1,'p_description','clojure_sin.py',153),
  ('increase -> INCREASE LCOR dato RCOR','increase',4,'p_increase','clojure_sin.py',158),
  ('argumments -> LCOR argumentos_lista RCOR','argumments',3,'p_argumments','clojure_sin.py',163),
  ('body -> instrucciones','body',1,'p_body','clojure_sin.py',167),
  ('recur -> LPAREN RECUR LPAREN INC dato RPAREN RPAREN','recur',7,'p_recur','clojure_sin.py',171),
  ('internos -> description','internos',1,'p_internos','clojure_sin.py',176),
  ('internos -> argumments','internos',1,'p_internos','clojure_sin.py',177),
  ('internos -> body','internos',1,'p_internos','clojure_sin.py',178),
  ('internos -> increase','internos',1,'p_internos','clojure_sin.py',179),
  ('internos -> argumments body','internos',2,'p_internos','clojure_sin.py',180),
  ('internos -> description argumments body','internos',3,'p_internos','clojure_sin.py',181),
  ('function -> LPAREN DEFFUNCION VARIABLE internos RPAREN','function',5,'p_function','clojure_sin.py',193),
  ('function -> LPAREN DEFFUNCION internos if dato RPAREN','function',6,'p_function','clojure_sin.py',194),
  ('impresion -> LPAREN IMPRIMIR dato RPAREN','impresion',4,'p_impresion','clojure_sin.py',202),
  ('vector -> LCOR argumentos_lista RCOR','vector',3,'p_vector','clojure_sin.py',209),
  ('secuencia_mapa -> DOSPUNTOS VARIABLE dato','secuencia_mapa',3,'p_secuencia_mapa','clojure_sin.py',217),
  ('secuencia_mapa -> DOSPUNTOS VARIABLE secuencia_mapa','secuencia_mapa',3,'p_secuencia_mapa','clojure_sin.py',218),
  ('mapa -> LPAREN secuencia_mapa RPAREN','mapa',3,'p_mapa','clojure_sin.py',223),
  ('if -> IF sentencia_booleana','if',2,'p_if','clojure_sin.py',227),
  ('if -> IF sentencia_booleana recur','if',3,'p_if','clojure_sin.py',228),
  ('if -> LPAREN IF instrucciones body RPAREN','if',5,'p_if','clojure_sin.py',229),
  ('do -> LPAREN DO instrucciones RPAREN','do',4,'p_do','clojure_sin.py',241),
  ('if_do -> LPAREN if do RPAREN','if_do',4,'p_if_do','clojure_sin.py',246),
  ('when -> LPAREN WHEN sentencia_booleana body RPAREN','when',5,'p_when','clojure_sin.py',250),
  ('ciclo -> LCOR VARIABLE ENTERO RCOR','ciclo',4,'p_ciclo','clojure_sin.py',254),
  ('dotimes -> LPAREN DOTIMES ciclo body RPAREN','dotimes',5,'p_dotimes','clojure_sin.py',258),
  ('operacionesLogicas -> LPAREN if recur VARIABLE RPAREN RPAREN','operacionesLogicas',6,'p_operacionesLogicas','clojure_sin.py',262),
  ('operacion_aritmetica -> LPAREN operador_aritmetico dato dato RPAREN','operacion_aritmetica',5,'p_operacion_aritmetica1','clojure_sin.py',266),
  ('doseq_args -> LCOR dato LPAREN RANGE dato RPAREN RCOR','doseq_args',7,'p_doseq_args','clojure_sin.py',272),
  ('doseq_args -> LCOR dato conjuntos RCOR','doseq_args',4,'p_doseq_args','clojure_sin.py',273),
  ('doseq_args -> LCOR dato vector dato vector RCOR','doseq_args',6,'p_doseq_args','clojure_sin.py',274),
  ('doseq_args -> LCOR vector conjuntos RCOR','doseq_args',4,'p_doseq_args','clojure_sin.py',275),
  ('doseq_prn -> PRN LPAREN dato RPAREN','doseq_prn',4,'p_doseq_prn','clojure_sin.py',287),
  ('doseq_prn -> PRN dato dato','doseq_prn',3,'p_doseq_prn','clojure_sin.py',288),
  ('doseq_prn -> PRN dato dato dato','doseq_prn',4,'p_doseq_prn','clojure_sin.py',289),
  ('doseq_prn -> PRN operacion_aritmetica','doseq_prn',2,'p_doseq_prn','clojure_sin.py',290),
  ('doseq -> LPAREN DOSEQ doseq_args impresion RPAREN','doseq',5,'p_doseq','clojure_sin.py',308),
  ('doseq -> LPAREN DOSEQ doseq_args LPAREN doseq_prn RPAREN RPAREN','doseq',7,'p_doseq','clojure_sin.py',309),
  ('defn -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN','defn',10,'p_defn','clojure_sin.py',317),
  ('defn -> LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN','defn',8,'p_defn','clojure_sin.py',318),
  ('defn_with_return -> LPAREN DEFFUNCION VARIABLE LCOR VARIABLE RCOR LPAREN expresionDefnElse RPAREN RPAREN defn_return','defn_with_return',11,'p_defn_with_return','clojure_sin.py',327),
  ('defn_with_return -> LPAREN DEFFUNCION INCREASE LCOR VARIABLE RCOR operacionesLogicas RPAREN defn_return','defn_with_return',9,'p_defn_with_return','clojure_sin.py',328),
  ('expresionDefnElse -> CASE VARIABLE expresionCase DOSPUNTOS ELSE STRING','expresionDefnElse',6,'p_expresionDefnElse','clojure_sin.py',338),
  ('defn_return -> LPAREN dato dato RPAREN','defn_return',4,'p_defn_return','clojure_sin.py',342),
  ('expresionCase -> dato STRING','expresionCase',2,'p_expresionCase','clojure_sin.py',346),
  ('conjuntos -> NUMERAL L_LLAVE expresionConjuntoEnteros R_LLAVE','conjuntos',4,'p_conjuntos','clojure_sin.py',351),
  ('conjuntos -> NUMERAL L_LLAVE expresionConjuntoDouble R_LLAVE','conjuntos',4,'p_conjuntos','clojure_sin.py',352),
  ('conjuntos -> NUMERAL L_LLAVE expresionConjuntoString R_LLAVE','conjuntos',4,'p_conjuntos','clojure_sin.py',353),
  ('sentenciaLoopRecur -> LPAREN LOOP argumments LPAREN if dato RPAREN RPAREN','sentenciaLoopRecur',8,'p_sentenciaLoopRecur','clojure_sin.py',360),
  ('expresionConjuntoEnteros -> ENTERO','expresionConjuntoEnteros',1,'p_expresionConjuntoEnteros','clojure_sin.py',366),
  ('expresionConjuntoEnteros -> ENTERO expresionConjuntoEnteros','expresionConjuntoEnteros',2,'p_expresionConjuntoEnteros','clojure_sin.py',367),
  ('expresionConjuntoDouble -> FLOTANTE','expresionConjuntoDouble',1,'p_expresionConjuntoDouble','clojure_sin.py',376),
  ('expresionConjuntoDouble -> FLOTANTE expresionConjuntoDouble','expresionConjuntoDouble',2,'p_expresionConjuntoDouble','clojure_sin.py',377),
  ('expresionConjuntoString -> STRING','expresionConjuntoString',1,'p_expresionConjuntoString','clojure_sin.py',385),
  ('expresionConjuntoString -> STRING expresionConjuntoString','expresionConjuntoString',2,'p_expresionConjuntoString','clojure_sin.py',386),
]
