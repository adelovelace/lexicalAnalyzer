Prueba: 20/11/2022 22:14:26
calc > (+ 1 3)
Prueba: 20/11/2022 22:14:32
calc > (- 2 4)
Prueba: 20/11/2022 22:14:22
Prueba: 20/11/2022 22:24:45
calc > (cond (< 2 2) (println "x") (< 2 10) (println "1"))
Prueba: 20/11/2022 22:24:56
calc > (cond (< 4 5) (println "3") (< 4 5) (println 3))
Prueba: 20/11/2022 22:25:14
calc > (cond (< 2 2) (println 1) (< 2 10) (println "1"))
Prueba: 20/11/2022 22:25:22
calc > (cond (< 4 5) (println "3") (< 4 5) (println 3) : else (println 9))
Prueba: 20/11/2022 22:25:33
calc > (println x)
Prueba: 20/11/2022 22:25:37
calc > (println "x")
Prueba: 20/11/2022 22:25:42
calc > (println 3234242)
Prueba: 20/11/2022 22:25:45
calc > (println 323.242342)
Prueba: 20/11/2022 23:04:19
calc > 
Prueba: 20/11/2022 23:04:57
calc > (case 2 1 (println "s") 1 (println "s") 1 (println "s")
Prueba: 20/11/2022 23:05:12
calc > (case x 1 (println "s") 1 (println "s") 1 (println "s")
Prueba: 20/11/2022 23:05:23
calc > (case x 1 (println "s") 1 (println "s") 1 (println 6)
Prueba: 20/11/2022 23:05:30
calc > (case x 1 (println "s") 1 (println 8) 1 (println 6)
Prueba: 20/11/2022 23:06:16
calc > (case x 1 (println "s") 1 (println 8) 1 (println 6) (println "6")) 
Prueba: 20/11/2022 23:06:29
calc > (case x 1 (println "s") 1 (println 8) 1 (println 6) (println 0)) 
Prueba: 20/11/2022 23:14:57
calc > (list 3 5 6 7)
Prueba: 20/11/2022 23:16:14
calc > (list 2 4 5)
Prueba: 20/11/2022 23:16:59
calc > (list 2 4 5)
Prueba: 20/11/2022 23:17:33
calc > (list 2)
Prueba: 20/11/2022 23:18:30
calc > (list 
Prueba: 20/11/2022 23:18:36
calc > 2
Prueba: 20/11/2022 23:18:56
calc > (list 2
Prueba: 20/11/2022 23:19:09
calc > (list 2 3 54 5
Prueba: 20/11/2022 23:19:32
calc > (list 2 3 54 5
Prueba: 20/11/2022 23:19:59
calc > (list 1
Prueba: 20/11/2022 23:21:02
calc > (list 2
Prueba: 20/11/2022 23:21:10
calc > (list 2 2 3 4
Prueba: 20/11/2022 23:22:37
calc > (list 1 2 3 4)
Prueba: 20/11/2022 23:22:41
calc > (list 1 2 3 )
Prueba: 20/11/2022 23:23:06
calc > (list 2
Prueba: 20/11/2022 23:23:25
calc > (list 2 3
Prueba: 20/11/2022 23:23:44
calc > (list 2 3)
Prueba: 20/11/2022 23:23:47
calc > (list 2 3
Prueba: 20/11/2022 23:23:57
calc > (list 2 3 )
Prueba: 20/11/2022 23:23:59
calc > (list 2 3)
Prueba: 20/11/2022 23:24:05
calc > (list 2 3))
Prueba: 20/11/2022 23:24:44
calc > (list 2 3
Prueba: 20/11/2022 23:24:55
calc > (list 2 3
Prueba: 20/11/2022 23:24:57
calc > (list 2 3)
Prueba: 20/11/2022 23:25:15
calc > (list 2 3)
Prueba: 20/11/2022 23:26:30
calc > (list 2 "3")
Prueba: 20/11/2022 23:36:50
calc > 
Prueba: 20/11/2022 23:37:41
calc > (defn "des" [ x ] (println 1))
Prueba: 20/11/2022 23:38:40
calc > (defn [ x ] (println 1))
Prueba: 20/11/2022 23:38:53
calc > (defn [ x ] (println "1"))
Prueba: 20/11/2022 23:39:37
calc > (list 2 "3")
Prueba: 20/11/2022 23:39:53
calc > (defn holi
Prueba: 20/11/2022 23:40:33
calc > 
Prueba: 20/11/2022 23:40:34
calc > (defn holi
Prueba: 20/11/2022 23:40:48
calc > (cond (< 4 5) (println "3") (< 4 5) (println 3))
Prueba: 20/11/2022 23:40:53
calc > (cond (< 2 2) (println 1) (< 2 10) (println "1"))
Prueba: 20/11/2022 23:40:58
calc > (cond (< 4 5) (println "3") (< 4 5) (println 3) : else (println 9))
Prueba: 20/11/2022 23:41:32
calc > (case x 5 (println "x is 5") 10 (println "x is 10") (println "x is neither 5 nor 10"))
Prueba: 20/11/2022 23:41:48
calc > (case x 5 (println "x is 5") 10 (println 10) (println "x"))
Prueba: 20/11/2022 23:42:55
calc > (case x 5 (println "x is 5") 10 (println 10) (println "x10"))
Prueba: 20/11/2022 23:43:20
calc > (case x 5 (println "x") 10 (println 10) (println 10))
Prueba: 20/11/2022 23:43:26
calc > (case x 5 (println "x") 10 (println 10) (println "10"))
Prueba: 20/11/2022 23:44:05
calc > (case x 5 (println "x") 1 (println 4) (println 1))
Prueba: 20/11/2022 23:44:14
calc > (list 2 "3")
Prueba: 20/11/2022 23:44:30
calc > (defn hol
Prueba: 20/11/2022 23:45:39
calc > (defn holi "sp"
Prueba: 20/11/2022 23:45:55
calc > (defn holi "sp" [ x ] (println 2))
Prueba: 20/11/2022 23:52:35
Prueba: 20/11/2022 23:55:41
calc > ( if ( = 2 2)(do ("H") true))
Prueba: 20/11/2022 23:55:56
calc > [1 2 3 4]
Prueba: 20/11/2022 23:56:13
calc > [1.0 2.0 3.0 4.0]
Prueba: 20/11/2022 23:56:38
calc > {a: 1 b:2 c:3 }
Prueba: 20/11/2022 23:56:44
calc > {a: 1.0 b:2.0 c:3.0 }
Prueba: 20/11/2022 23:56:45
calc > {a: 1.0 b:2.0 c:3.0 }
Prueba: 20/11/2022 23:56:54
calc > {a: 1 b:2 c:3 }
Prueba: 20/11/2022 23:54:36
Prueba: 26/11/2022 12:32:11
Prueba: 26/11/2022 12:32:32
Prueba: 26/11/2022 12:34:30
Prueba: 26/11/2022 19:15:20
calc > (case x 5 "sdsd" 10 "sdsd" :else "sdsd")
Prueba: 26/11/2022 19:14:39
Prueba: 26/11/2022 19:30:48
<<<<<<< HEAD
Prueba: 28/11/2022 01:45:11
Prueba: 28/11/2022 10:05:35
calc > ( def x 1)
Prueba: 28/11/2022 10:05:45
calc > 
Prueba: 28/11/2022 10:05:46
calc > 
Prueba: 28/11/2022 10:05:47
calc > 
Prueba: 28/11/2022 10:06:47
calc > (def x 1)
Prueba: 28/11/2022 10:08:03
calc > (def x 1)
Prueba: 28/11/2022 10:09:00
calc > (def x 1)
Prueba: 28/11/2022 10:17:21
calc > (cond (< 2 2) (println 1) (< 2 10) (println "1"))
Prueba: 28/11/2022 10:42:37
calc > (def x 1)
Prueba: 28/11/2022 12:06:57
calc > (def x 1)
Prueba: 28/11/2022 12:07:43
calc > (def x 1)
Prueba: 28/11/2022 12:08:04
calc > (def x 1)
Prueba: 28/11/2022 12:08:54
calc > (cond (< 4 5) (println "3") (< 4 5) (println 3))
Prueba: 29/11/2022 14:02:08
calc > (def x 1 )
=======
Prueba: 27/11/2022 21:32:28
calc > (case x 5 "sdsd" 10 "sdsd" :else "sdsd")
Prueba: 27/11/2022 21:32:27
Prueba: 27/11/2022 21:36:18
calc > (case x 1 (println "s") 1 (println "s") 1 (println 6)
Prueba: 27/11/2022 21:36:01
Prueba: 27/11/2022 21:37:28
calc > '''  
Prueba: 27/11/2022 21:37:28
calc > def t_CONJUNTOS(t):
Prueba: 27/11/2022 21:37:28
calc >       r'^\#[\{]{1}(([a-zA-Z]+[\s]{0,})+|([\d]+[\s]{0,})+){1,}[\}]{1}'
Prueba: 27/11/2022 21:37:28
calc >       t.type = reserved.get(t.value,'CONJUNTOS')
Prueba: 27/11/2022 21:37:28
calc >       return t
Prueba: 27/11/2022 21:37:28
calc > 
Prueba: 27/11/2022 21:37:28
calc > def t_MAPAS(t):
Prueba: 27/11/2022 21:37:28
calc >       r'^[\{](([\:]{1}[\w]+[\s][\w]+)[\s]{0,})+[\}]$'
Prueba: 27/11/2022 21:37:28
calc >       t.type = reserved.get(t.value,'MAPAS')
Prueba: 27/11/2022 21:37:28
calc >       return t
Prueba: 27/11/2022 21:37:41
calc > '''  (case x 1 (println "s") 1 (println "s") 1 (println 6)
Prueba: 27/11/2022 21:37:49
calc > 
Prueba: 27/11/2022 21:37:49
calc > 
Prueba: 27/11/2022 21:37:49
calc > 
Prueba: 27/11/2022 21:37:49
calc > 
Prueba: 27/11/2022 21:37:50
calc > 
Prueba: 27/11/2022 21:37:50
calc > 
Prueba: 27/11/2022 21:37:50
calc > 
Prueba: 27/11/2022 21:37:50
calc > 
Prueba: 27/11/2022 21:38:47
calc >  (case x 1 (println "s") 1 (println "s") 1 (println 6))
Prueba: 27/11/2022 21:37:27
Prueba: 27/11/2022 21:46:03
calc > (+ 3 4)
Prueba: 27/11/2022 21:43:21
<<<<<<< Updated upstream
Prueba: 27/11/2022 22:47:00
calc > ()[Dcase )[Dx 5 ""[Dsdsd" 10 "sdsd" :else "sdsd")
Prueba: 27/11/2022 22:52:01
calc > (case x 5 (println "x is 5") 10 (println "x is 10") (println "x is neither 5 nor 10"))
Prueba: 27/11/2022 22:46:08
Prueba: 27/11/2022 22:58:14
calc > (case x 5 "x is 5" 10 "x is 10" :else "sdsd")
Prueba: 27/11/2022 22:58:01
Prueba: 27/11/2022 23:21:17
calc > exit
Prueba: 27/11/2022 23:21:21
calc > exit
Prueba: 27/11/2022 23:16:11
Prueba: 27/11/2022 23:22:28
calc > exit
Prueba: 27/11/2022 23:22:30
calc > exit
Prueba: 27/11/2022 23:21:36
Prueba: 27/11/2022 23:22:36
Prueba: 27/11/2022 23:23:07
Prueba: 27/11/2022 23:26:37
Prueba: 27/11/2022 23:28:11
Prueba: 27/11/2022 23:29:27
calc > (case x 5 "x is 5" 10 "x is 10" :else "sdsd")
Prueba: 27/11/2022 23:30:01
calc > ()[(cond (< 4 5) (println "3") (< 4 5) (println 3))
Prueba: 27/11/2022 23:32:30
calc > (doseq [a [1 2] b [3 4]] (println a))
Prueba: 27/11/2022 23:28:40
Prueba: 27/11/2022 23:35:05
calc > (doseq [a [1 2] b [3 4]] (println "a"))
Prueba: 27/11/2022 23:34:08
Prueba: 27/11/2022 23:35:56
Prueba: 27/11/2022 23:36:33
Prueba: 27/11/2022 23:43:12
calc > (doseq [a [1 2] b [3 4]] (prn (* x y)) )
Prueba: 27/11/2022 23:44:53
calc > ()[D* x y)
Prueba: 27/11/2022 23:42:56
Prueba: 27/11/2022 23:45:30
Prueba: 27/11/2022 23:50:28
calc > (doseq [a [1 2] b [3 4]] (prn (* x y)) )
Prueba: 27/11/2022 23:50:16
Prueba: 27/11/2022 23:51:21
calc > (doseq [a [1 2] b [3 4]] (prn (* x y)) )
Prueba: 27/11/2022 23:52:04
calc > [A[B(doseq [a [1 2] b [3 4]] (prn (* x y)) )[D[D[D[C[[[C)[D[D[D[D[C[[D[D[C[[C[C
Prueba: 27/11/2022 23:52:11
calc > [A[B(doseq [a [1 2] b [3 4]] (prn (* x y)) )
Prueba: 27/11/2022 23:51:17
Prueba: 27/11/2022 23:52:32
calc > (doseq [a [1 2] b [3 4]] (prn (* x y)) )
Prueba: 27/11/2022 23:53:24
calc > ()[D[* x y)
Prueba: 27/11/2022 23:53:43
calc > ()[D+ x y)
Prueba: 27/11/2022 23:52:29
Prueba: 27/11/2022 23:53:56
calc > (+ x y)
Prueba: 27/11/2022 23:54:05
calc > (- x y)
Prueba: 27/11/2022 23:54:11
calc > (* x y)
Prueba: 27/11/2022 23:54:39
calc > (doseq [a [1 2] b [3 4]] (prn (* x y)))
Prueba: 27/11/2022 23:53:51
Prueba: 27/11/2022 23:55:47
calc > (doseq [a [1 2] b [3 4]] (prn (* x y)))
Prueba: 27/11/2022 23:55:42
Prueba: 27/11/2022 23:58:46
calc > (doseq [a [1 2] b [3 4]] (prn (* x y)))
Prueba: 27/11/2022 23:58:27
Prueba: 28/11/2022 00:00:55
calc > (doseq [a [1 2] b [3 4]] (prn x y z))
Prueba: 28/11/2022 00:01:11
calc > (doseq [a [1 2]] (prn x y))
Prueba: 28/11/2022 00:00:51
Prueba: 28/11/2022 00:02:35
calc > (doseq [a [1 2]] (prn x y))
Prueba: 28/11/2022 00:02:12
Prueba: 28/11/2022 00:04:28
calc > # (doseq [[1 2] #{1 2 3}] (prn x y))
Prueba: 28/11/2022 00:05:22
calc > #{}[D1 2 3}
Prueba: 28/11/2022 00:04:10
Prueba: 28/11/2022 00:05:42
calc > #{1 2 3}
Prueba: 28/11/2022 00:08:18
calc > (doseq [[1 2] #{1 2 3}] (prn x y))
Prueba: 28/11/2022 00:11:45
calc > (loop [i 0] (if (< i 10) (recur (inc i))))
Prueba: 28/11/2022 00:05:33
Prueba: 28/11/2022 00:13:16
calc > (loop [i 0] (if (< i 10) (recur (inc i))))
Prueba: 28/11/2022 00:14:32
calc > (loop [i 0] (if (< i 10) (recur (inc i))i))
Prueba: 28/11/2022 00:13:04
Prueba: 28/11/2022 00:45:30
calc > (defn increase [i] (if (< i 10) (recur (inc i)))i)
Prueba: 28/11/2022 00:45:26
Prueba: 28/11/2022 00:47:49
calc > (defn increase [i] (if (< i 10) (recur (inc i)))i)
Prueba: 28/11/2022 00:49:37
calc > (defn increase [i] (if (< i 10) (recur (inc i))i))
Prueba: 28/11/2022 00:47:29
Prueba: 28/11/2022 00:49:50
calc > (defn increase [i] (if (< i 10) (recur (inc i))i))
Prueba: 28/11/2022 00:49:45
Prueba: 28/11/2022 00:51:50
calc > (defn increase [i] (if (< i 10) (recur (inc i))i))
Prueba: 28/11/2022 00:51:32
=======
Prueba: 28/11/2022 05:26:49
Prueba: 28/11/2022 05:27:26
Prueba: 28/11/2022 05:28:58
calc > {:page-count 362}
Prueba: 28/11/2022 05:29:17
calc > {:page-count 362 :title "Oliver Twist" :author "Dickens" :published 1838}
Prueba: 28/11/2022 05:29:29
calc > {:a 2 :b 4}
Prueba: 28/11/2022 05:29:57
calc > {:page-count 362 :title "War & Peace"}
Prueba: 28/11/2022 05:30:28
calc > {:a 45 :b 4}
Prueba: 28/11/2022 05:30:46
calc > [1 2 3 4]
Prueba: 28/11/2022 05:31:07
calc > {:dbtype "derby" :dbname "books"}
Prueba: 28/11/2022 05:33:12
calc > [true 3 "four" 5]
Prueba: 28/11/2022 05:33:29
calc > ["Emma" "Coma" "War and Peace"]
Prueba: 28/11/2022 05:34:02
calc > {:a 1 :b 3 :c 4}
Prueba: 28/11/2022 05:34:28
calc > {:a 1}
Prueba: 28/11/2022 06:00:14
calc > (if preferred-customer (println "Welcome back to Blotts Books!"))
Prueba: 28/11/2022 06:00:48
calc > (if (x < 5) println("hola"))
Prueba: 28/11/2022 05:28:40
Prueba: 28/11/2022 06:15:59
calc > (if (even? 2) "even" "odd")
Prueba: 28/11/2022 06:16:37
calc > (if (5 < 2) "even" "odd")
Prueba: 28/11/2022 06:18:13
calc > (if (5 < 2) (do (println "even") true) (do (println "odd") false))
Prueba: 28/11/2022 06:21:35
calc > (print "Hola")
Prueba: 28/11/2022 06:21:45
calc > (if (5 < 2) (do (println "even") true) (do (p
Prueba: 28/11/2022 06:21:54
calc > (println "Hola")
Prueba: 28/11/2022 06:14:51
Prueba: 28/11/2022 06:23:49
calc > (if (5 < 2) (do (println "even") true) (do (println "odd") false))
Prueba: 28/11/2022 06:24:37
calc > (if (5 < 2) )
Prueba: 28/11/2022 06:24:45
calc > (5 < 2)
Prueba: 28/11/2022 06:24:52
calc > ( 5 < 2 )
Prueba: 28/11/2022 06:26:13
calc > (if (5 < 2) (hjkjjkh )
Prueba: 28/11/2022 06:23:48
Prueba: 28/11/2022 06:41:22
calc > (if (5 < 2) (do (println "even") true) (do (println "odd") false))
Prueba: 28/11/2022 06:42:05
calc > (if (5 < 2) (do (println "even")))
Prueba: 28/11/2022 06:41:13
Prueba: 28/11/2022 06:43:13
calc > (if (5 < 2) (do (println "even")))
Prueba: 28/11/2022 06:57:29
calc > exit
Prueba: 28/11/2022 06:42:39
Prueba: 28/11/2022 06:57:37
calc >  (if (5 < 2) (do (println "even")))
Prueba: 28/11/2022 06:57:34
Prueba: 28/11/2022 06:58:10
calc >  (if (5 < 2) (do ) )
Prueba: 28/11/2022 06:59:31
calc > (if (< 5 2) (do (println "even") true) (do (println "odd") false))
Prueba: 28/11/2022 06:59:59
calc > (if (< 5 2) (do ) )
Prueba: 28/11/2022 06:57:57
Prueba: 28/11/2022 07:01:03
calc > (if (< 5 2) (do (println "even") true) (do (println "odd") false))
Prueba: 28/11/2022 07:01:48
calc > (if (< 5 2) (do (println "even") true))
Prueba: 28/11/2022 07:02:04
calc >  (if (< 5 2) (do (println "even"))
Prueba: 28/11/2022 07:00:58
Prueba: 28/11/2022 07:05:45
calc > (if (< 5 2) (do (println "even"))
Prueba: 28/11/2022 07:05:27
Prueba: 28/11/2022 07:09:02
calc > (if (< 5 2) (do (println "even"))
Prueba: 28/11/2022 07:09:14
calc > (if (< 5 2) (do (println "even"))

Prueba: 29/11/2022 14:54:47
calc > def x 10)
Prueba: 29/11/2022 14:54:49
calc > (def x 10)
Prueba: 29/11/2022 14:55:22
calc > (< 2 2) 
Prueba: 29/11/2022 14:55:26
calc >  (< 2 2) (println 1) 
Prueba: 29/11/2022 14:55:33
calc > (< 2 2) (println 1) 
Prueba: 29/11/2022 14:56:01
calc > (cond (< 2 2) (println 1) (< 2 10) (println "1"))
Prueba: 29/11/2022 14:56:11
calc > (< 2 10) (println "1")
Prueba: 29/11/2022 14:56:27
calc > (cond (< 4 5) (println "3") (< 4 5) (println 3) : else (println 9))
Prueba: 29/11/2022 14:56:42
calc > (< 2 2)(println 1)
Prueba: 29/11/2022 14:57:33
calc > (< 2 2) (println 1)
Prueba: 29/11/2022 14:57:42
calc > (< 2 2) (println 1)
Prueba: 29/11/2022 14:59:28
calc > (defn saludar
Prueba: 29/11/2022 14:59:28
calc > 	“Retorna un saludo predeterminado con el nombre de la persona ingresada como parámetro”
Prueba: 29/11/2022 14:59:28
calc > 	[ name ]
Prueba: 29/11/2022 14:59:28
calc > 	( str “OH! Eres ” name “?! Que emoción verte nuevamente! :D” )
Prueba: 29/11/2022 14:59:49
calc > )(defn saludar “Retorna un saludo predeterminado con el nombre de la persona ingresada como parámetro” [ name ] ( str “OH! Eres ” name “?! Que emoción verte nuevamente! :D” ))
Prueba: 29/11/2022 15:01:53
calc > {2 4 5 6}
Prueba: 29/11/2022 15:02:05
calc > #{2 4 5 6}
Prueba: 29/11/2022 15:02:30
calc > #{2 5 7 9 4}
Prueba: 29/11/2022 15:05:05
calc > (list 2 "3")
Prueba: 29/11/2022 15:05:14
calc > (list 2 4 7 "p")
Prueba: 29/11/2022 16:44:44
calc > (doseq [n (range 3)](println n))
Prueba: 29/11/2022 16:45:11
calc > (doseq [n (range 3)](println n))
Prueba: 29/11/2022 16:45:36
calc > (doseq [n (range 3)](println n))
Prueba: 29/11/2022 16:45:59
calc > (def x 1)
Prueba: 29/11/2022 16:46:16
calc > (do (def x 1))
Prueba: 29/11/2022 17:33:33
calc > (doseq [n (range 3)](println n))
Prueba: 29/11/2022 17:34:03
calc > (doseq [n (range 3)](println n))
Prueba: 29/11/2022 17:34:29
calc > (doseq [n (range 3)](println n))
Prueba: 29/11/2022 17:34:52
calc > (doseq [n (range 3)](println n))
Prueba: 29/11/2022 17:35:39
calc >         print(p[4])
Prueba: 29/11/2022 17:35:50
calc > (doseq [n (range 3)](println n))
Prueba: 29/11/2022 18:35:30
calc > [1 2 3 4]
Prueba: 29/11/2022 18:38:46
calc > (def x 1)
Prueba: 29/11/2022 18:39:00
calc > (def x 1)
Prueba: 29/11/2022 18:39:07
calc > [1 2 3 4)
Prueba: 29/11/2022 18:39:13
calc > [1 2 3 4]
Prueba: 29/11/2022 18:39:42
calc > (< 2 2)
Prueba: 29/11/2022 18:39:52
calc > (< 2 2) (println 1)
Prueba: 29/11/2022 18:40:02
calc > ((< 2 2) (println 1))
Prueba: 29/11/2022 18:40:27
calc > /Users/elizabeth/Library/Mobile Documents/com~apple~CloudDocs/Tareas/ProyLP/lexicalAnalyzer/clojure_sin.py
Prueba: 29/11/2022 18:40:35
calc > (cond (< 4 5) (println "3") (< 4 5) (println 3) : else (println 9))
Prueba: 29/11/2022 18:40:41
calc > (cond (< 2 2) (println 1) (< 2 10) (println "1"))
Prueba: 29/11/2022 18:40:55
calc > (< 2 2) (println "1")
Prueba: 29/11/2022 18:41:42
calc > (list 2 "3")
Prueba: 29/11/2022 18:41:47
calc > (list 2 "3" 2 4 5)
Prueba: 29/11/2022 18:42:53
calc > [1 2 3 4]
Prueba: 29/11/2022 18:44:52
calc > [true 3 "four" 5]
Prueba: 29/11/2022 18:48:15
calc > (list 2 3)
Prueba: 29/11/2022 18:48:34
calc > (list 2 3)
Prueba: 29/11/2022 18:49:07
calc > (list 2 "3")
Prueba: 29/11/2022 18:49:22
calc > [1 2 4 4]
Prueba: 29/11/2022 18:50:05
calc > (list 2 3)
Prueba: 29/11/2022 18:50:17
calc > (list 2 "3")
Prueba: 29/11/2022 18:50:30
calc > (list 2 "3")
Prueba: 29/11/2022 18:51:00
calc > (list 2)
Prueba: 29/11/2022 18:51:22
calc > ("ARGUMENTO", p[1], p[2])
Prueba: 29/11/2022 18:51:31
calc > (list 1 "2")
Prueba: 29/11/2022 18:51:44
calc > ("ARGUMENTO", p[1], p[2])
Prueba: 29/11/2022 18:51:48
calc > (list 2 3 4)
Prueba: 29/11/2022 18:52:18
calc > (list 2 "3" 3)
Prueba: 29/11/2022 18:52:23
calc > (list 2)
Prueba: 29/11/2022 18:58:05
calc > [1 2 3 4]
Prueba: 29/11/2022 18:58:17
calc > ([1 2 3 4])
Prueba: 29/11/2022 18:59:44
calc > [1 2 3 4]
Prueba: 29/11/2022 19:00:59
calc > [1 2 3 4]
Prueba: 29/11/2022 19:01:18
calc > [1 2 3 4]
Prueba: 29/11/2022 19:02:46
calc > (list 1 2 4 4 45 7)
Prueba: 29/11/2022 20:46:10
calc > [1 2 3 4]
Prueba: 29/11/2022 20:47:28
calc > {:page-count 362 :title "Oliver Twist" :author "Dickens" :published 1838}
Prueba: 29/11/2022 20:49:40
calc > [1 2]
Prueba: 29/11/2022 20:50:52
calc > [1 2]
Prueba: 29/11/2022 20:51:24
calc > [1 2]
Prueba: 29/11/2022 20:52:23
calc > [1 2 3 4]
Prueba: 29/11/2022 20:52:41
calc > [true 3 "four" 5]
Prueba: 29/11/2022 20:53:05
calc > {:page-count 362 :title "Oliver Twist" :author "Dickens" :published 1838}
Prueba: 29/11/2022 20:54:52
calc > {:page-count 362 :title "Oliver Twist" :author "Dickens" :published 1838}
Prueba: 29/11/2022 20:54:59
calc > [true 3 "four" 5]
Prueba: 29/11/2022 20:55:11
calc > [1 2 3 4]
Prueba: 29/11/2022 20:55:54
calc > [true 3 "four" 5]
Prueba: 29/11/2022 21:00:05
calc > [1 2 3 4]
Prueba: 29/11/2022 21:01:30
calc > [1 2 3 4]
Prueba: 29/11/2022 21:02:00
calc > [1 2 3 4]
Prueba: 29/11/2022 21:02:22
calc > [true 3 "four" 5]
Prueba: 29/11/2022 22:40:02
calc > [1 2 3 4]
Prueba: 29/11/2022 22:40:24
calc > {:pagecount 362 :title "Oliver Twist" :author "Dickens" :published 1838}
Prueba: 29/11/2022 22:40:42
calc > [true 3 "four" 5]
Prueba: 29/11/2022 22:40:57
calc > {:a :b :c}
Prueba: 29/11/2022 22:41:13
calc > {:a 1 :b 2 :c 3}
Prueba: 29/11/2022 22:42:20
calc > (if (< 5 2) "true" "false") 
Prueba: 29/11/2022 22:42:32
calc > (if (< 5 2) (println “true”) (println “false”))
Prueba: 29/11/2022 22:42:59
calc > (if (< 5 2) (println "true") (println "false"))
Prueba: 29/11/2022 22:47:34
calc > {:pagecount 362 :title "Oliver Twist" :author "Dickens" :published 1838}
Prueba: 29/11/2022 22:47:41
calc > (if (< 5 2) "true" "false") 
Prueba: 29/11/2022 22:47:58
calc > (if (< 5 2) (println "true") (println "false"))
Prueba: 29/11/2022 22:50:00
calc > (if (< 5 2) "true" "false") 
Prueba: 29/11/2022 22:51:34
calc > (if (< 5 2) (println "true") (println "false"))
Prueba: 29/11/2022 22:51:51
calc > (if (< 5 2) 1 2)
Prueba: 29/11/2022 22:52:26
calc > (if (< 5 2) "true" "false") 
Prueba: 29/11/2022 22:52:31
calc > (if (< 5 2) (println "true") (println "false"))
Prueba: 29/11/2022 23:02:35
calc > (if (< 5 2) "true" "false") 
Prueba: 29/11/2022 23:03:03
calc > (if (< 5 2) "true" "false") 
Prueba: 29/11/2022 23:03:26
calc > (if (< 5 2) (println "true") (println "false"))
Prueba: 29/11/2022 23:04:43
calc > (if (< 5 2) "true" "false") 
Prueba: 29/11/2022 23:04:53
calc > (if (< 5 2) (println "true") (println "false"))
Prueba: 29/11/2022 23:05:17
calc > (if (< 5 2) (println "true") (println "false"))
Prueba: 29/11/2022 23:07:49
calc > (if (< 5 2) (do (println "even") true) (do (println "odd") false))
Prueba: 29/11/2022 23:09:11
calc > (if (< 5 2) (do (println "even") true) (do (println "odd") false))
Prueba: 29/11/2022 23:12:43
calc > (if (< 5 2) (do (println "even") true) (do (println "odd") false))
Prueba: 29/11/2022 23:13:06
calc > (if (< 5 2) (do (println "even")) (do (println "odd")))
